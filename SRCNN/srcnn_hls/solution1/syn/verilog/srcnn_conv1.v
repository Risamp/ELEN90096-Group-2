// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        input_ftmap,
        conv1_weights,
        conv1_biases,
        output_ftmap
);

parameter    ap_ST_fsm_state1 = 57'd1;
parameter    ap_ST_fsm_state2 = 57'd2;
parameter    ap_ST_fsm_state3 = 57'd4;
parameter    ap_ST_fsm_state4 = 57'd8;
parameter    ap_ST_fsm_state5 = 57'd16;
parameter    ap_ST_fsm_state6 = 57'd32;
parameter    ap_ST_fsm_state7 = 57'd64;
parameter    ap_ST_fsm_state8 = 57'd128;
parameter    ap_ST_fsm_state9 = 57'd256;
parameter    ap_ST_fsm_state10 = 57'd512;
parameter    ap_ST_fsm_state11 = 57'd1024;
parameter    ap_ST_fsm_state12 = 57'd2048;
parameter    ap_ST_fsm_state13 = 57'd4096;
parameter    ap_ST_fsm_state14 = 57'd8192;
parameter    ap_ST_fsm_state15 = 57'd16384;
parameter    ap_ST_fsm_state16 = 57'd32768;
parameter    ap_ST_fsm_state17 = 57'd65536;
parameter    ap_ST_fsm_state18 = 57'd131072;
parameter    ap_ST_fsm_state19 = 57'd262144;
parameter    ap_ST_fsm_state20 = 57'd524288;
parameter    ap_ST_fsm_state21 = 57'd1048576;
parameter    ap_ST_fsm_state22 = 57'd2097152;
parameter    ap_ST_fsm_state23 = 57'd4194304;
parameter    ap_ST_fsm_state24 = 57'd8388608;
parameter    ap_ST_fsm_state25 = 57'd16777216;
parameter    ap_ST_fsm_state26 = 57'd33554432;
parameter    ap_ST_fsm_state27 = 57'd67108864;
parameter    ap_ST_fsm_state28 = 57'd134217728;
parameter    ap_ST_fsm_state29 = 57'd268435456;
parameter    ap_ST_fsm_state30 = 57'd536870912;
parameter    ap_ST_fsm_state31 = 57'd1073741824;
parameter    ap_ST_fsm_state32 = 57'd2147483648;
parameter    ap_ST_fsm_state33 = 57'd4294967296;
parameter    ap_ST_fsm_state34 = 57'd8589934592;
parameter    ap_ST_fsm_state35 = 57'd17179869184;
parameter    ap_ST_fsm_state36 = 57'd34359738368;
parameter    ap_ST_fsm_state37 = 57'd68719476736;
parameter    ap_ST_fsm_state38 = 57'd137438953472;
parameter    ap_ST_fsm_state39 = 57'd274877906944;
parameter    ap_ST_fsm_state40 = 57'd549755813888;
parameter    ap_ST_fsm_state41 = 57'd1099511627776;
parameter    ap_ST_fsm_state42 = 57'd2199023255552;
parameter    ap_ST_fsm_state43 = 57'd4398046511104;
parameter    ap_ST_fsm_state44 = 57'd8796093022208;
parameter    ap_ST_fsm_state45 = 57'd17592186044416;
parameter    ap_ST_fsm_state46 = 57'd35184372088832;
parameter    ap_ST_fsm_state47 = 57'd70368744177664;
parameter    ap_ST_fsm_state48 = 57'd140737488355328;
parameter    ap_ST_fsm_state49 = 57'd281474976710656;
parameter    ap_ST_fsm_state50 = 57'd562949953421312;
parameter    ap_ST_fsm_state51 = 57'd1125899906842624;
parameter    ap_ST_fsm_state52 = 57'd2251799813685248;
parameter    ap_ST_fsm_state53 = 57'd4503599627370496;
parameter    ap_ST_fsm_state54 = 57'd9007199254740992;
parameter    ap_ST_fsm_state55 = 57'd18014398509481984;
parameter    ap_ST_fsm_state56 = 57'd36028797018963968;
parameter    ap_ST_fsm_state57 = 57'd72057594037927936;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] input_ftmap;
input  [63:0] conv1_weights;
input  [63:0] conv1_biases;
input  [63:0] output_ftmap;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [56:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] input_fm_buffer_2_0_address0;
reg    input_fm_buffer_2_0_ce0;
reg    input_fm_buffer_2_0_we0;
reg   [23:0] input_fm_buffer_2_0_d0;
wire  signed [23:0] input_fm_buffer_2_0_q0;
reg   [14:0] output_fm_buffer_1_address0;
reg    output_fm_buffer_1_ce0;
reg    output_fm_buffer_1_we0;
reg   [31:0] output_fm_buffer_1_d0;
wire   [31:0] output_fm_buffer_1_q0;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state7;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state45;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state48;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state51;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state56;
wire   [1:0] empty_fu_540_p1;
reg   [1:0] empty_reg_1571;
wire   [1:0] trunc_ln48_fu_544_p1;
reg   [1:0] trunc_ln48_reg_1576;
wire   [3:0] add_ln31_fu_562_p2;
reg   [3:0] add_ln31_reg_1584;
wire    ap_CS_fsm_state2;
wire   [7:0] tmp_fu_568_p3;
reg   [7:0] tmp_reg_1589;
wire   [0:0] icmp_ln31_fu_556_p2;
wire   [9:0] zext_ln32_fu_576_p1;
reg   [9:0] zext_ln32_reg_1594;
wire   [3:0] add_ln32_fu_586_p2;
reg   [3:0] add_ln32_reg_1602;
wire    ap_CS_fsm_state3;
wire   [8:0] empty_112_fu_602_p2;
wire    ap_CS_fsm_state4;
wire   [9:0] add_ln94_1_fu_613_p2;
reg   [9:0] add_ln94_1_reg_1615;
wire    ap_CS_fsm_state5;
wire   [4:0] add_ln94_fu_629_p2;
reg   [4:0] add_ln94_reg_1623;
wire  signed [63:0] sext_ln95_fu_720_p1;
reg  signed [63:0] sext_ln95_reg_1628;
wire   [0:0] icmp_ln94_fu_623_p2;
reg   [9:0] input_fm_buffer_2_0_addr_1_reg_1633;
wire    ap_CS_fsm_state6;
wire   [4:0] add_ln95_fu_749_p2;
reg   [4:0] add_ln95_reg_1641;
reg   [63:0] gmem_addr_reg_1646;
wire   [0:0] icmp_ln95_fu_743_p2;
wire   [23:0] trunc_ln102_fu_869_p1;
reg   [23:0] trunc_ln102_reg_1652;
wire   [13:0] add_ln45_1_fu_873_p2;
reg   [13:0] add_ln45_1_reg_1657;
wire    ap_CS_fsm_state17;
wire   [11:0] empty_114_fu_895_p2;
reg   [11:0] empty_114_reg_1662;
wire   [6:0] add_ln45_fu_907_p2;
reg   [6:0] add_ln45_reg_1670;
wire   [63:0] add_ln48_1_fu_921_p2;
reg   [63:0] add_ln48_1_reg_1675;
wire   [0:0] icmp_ln45_fu_901_p2;
wire   [1:0] add_ln62_7_fu_926_p2;
reg   [1:0] add_ln62_7_reg_1680;
wire   [14:0] empty_117_fu_956_p2;
reg   [14:0] empty_117_reg_1685;
wire    ap_CS_fsm_state18;
wire   [4:0] add_ln48_fu_968_p2;
reg   [4:0] add_ln48_reg_1693;
reg   [14:0] output_fm_buffer_1_addr_1_reg_1698;
wire    ap_CS_fsm_state19;
wire   [4:0] add_ln49_fu_994_p2;
reg   [4:0] add_ln49_reg_1706;
wire    ap_CS_fsm_state20;
wire   [4:0] zext_ln52_fu_1000_p1;
reg   [4:0] zext_ln52_reg_1716;
wire    ap_CS_fsm_state21;
wire   [3:0] add_ln52_fu_1010_p2;
reg   [3:0] add_ln52_reg_1724;
wire   [6:0] tmp_4_fu_1016_p3;
reg   [6:0] tmp_4_reg_1729;
wire   [0:0] icmp_ln52_4_fu_1004_p2;
wire   [9:0] mul_ln62_2_fu_1034_p2;
reg   [9:0] mul_ln62_2_reg_1734;
wire   [3:0] add_ln53_fu_1050_p2;
reg   [3:0] add_ln53_reg_1742;
wire    ap_CS_fsm_state22;
wire   [9:0] add_ln62_9_fu_1066_p2;
reg   [9:0] add_ln62_9_reg_1747;
wire   [0:0] icmp_ln53_fu_1044_p2;
reg   [63:0] gmem_addr_12_reg_1752;
wire   [1:0] add_ln62_6_fu_1134_p2;
reg   [1:0] add_ln62_6_reg_1758;
reg   [31:0] gmem_addr_12_read_reg_1768;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire   [24:0] zext_ln115_fu_1188_p1;
reg   [24:0] zext_ln115_reg_1793;
wire    ap_CS_fsm_state36;
wire   [23:0] add_ln115_5_fu_1192_p2;
reg   [23:0] add_ln115_5_reg_1798;
wire   [11:0] add_ln119_1_fu_1214_p2;
reg   [11:0] add_ln119_1_reg_1803;
wire   [6:0] add_ln115_fu_1226_p2;
reg   [6:0] add_ln115_reg_1811;
reg   [63:0] gmem_addr_10_reg_1816;
wire   [0:0] icmp_ln115_fu_1220_p2;
wire   [1:0] empty_123_fu_1279_p2;
reg   [1:0] empty_123_reg_1822;
reg   [31:0] gmem_addr_10_read_reg_1827;
wire   [31:0] shl_ln119_fu_1300_p2;
reg   [31:0] shl_ln119_reg_1832;
wire    ap_CS_fsm_state46;
wire   [30:0] trunc_ln_fu_1310_p3;
reg   [30:0] trunc_ln_reg_1837;
wire   [14:0] add_ln119_3_fu_1343_p2;
reg   [14:0] add_ln119_3_reg_1842;
wire    ap_CS_fsm_state47;
wire   [4:0] add_ln116_fu_1359_p2;
reg   [4:0] add_ln116_reg_1850;
reg   [63:0] gmem_addr_11_reg_1855;
wire   [0:0] icmp_ln116_fu_1353_p2;
wire    ap_CS_fsm_state49;
wire   [4:0] add_ln117_fu_1478_p2;
reg   [4:0] add_ln117_reg_1869;
wire   [30:0] select_ln120_fu_1506_p3;
reg   [30:0] select_ln120_reg_1874;
wire    ap_CS_fsm_state50;
wire   [14:0] empty_131_fu_1524_p2;
wire    ap_CS_fsm_state57;
reg   [3:0] ti_reg_337;
wire   [0:0] exitcond5412_fu_1518_p2;
reg   [8:0] empty_111_reg_349;
wire   [0:0] icmp_ln32_fu_580_p2;
wire   [0:0] exitcond1_fu_596_p2;
reg   [4:0] by_reg_360;
reg   [9:0] phi_mul_reg_371;
reg   [4:0] bx_reg_383;
wire    ap_CS_fsm_state16;
reg   [6:0] nout_reg_394;
wire   [0:0] icmp_ln48_fu_962_p2;
reg   [13:0] phi_mul48_reg_405;
reg   [4:0] ty_reg_416;
wire   [0:0] icmp_ln49_fu_988_p2;
reg   [4:0] tx_reg_428;
reg   [3:0] ky_reg_440;
reg   [31:0] conv_i_i_lcssa_lcssa11_reg_451;
reg   [3:0] kx_reg_462;
reg   [31:0] conv_i_i_lcssa10_reg_473;
reg   [6:0] nout_2_reg_485;
reg   [23:0] phi_mul50_reg_496;
reg   [4:0] ty_3_reg_507;
reg   [4:0] tx_3_reg_518;
reg   [14:0] empty_130_reg_529;
wire   [63:0] p_cast54_fu_608_p1;
wire   [63:0] zext_ln102_1_fu_734_p1;
wire   [63:0] p_cast61_fu_983_p1;
wire   [63:0] zext_ln62_9_fu_1139_p1;
wire   [63:0] zext_ln119_5_fu_1467_p1;
wire   [63:0] p_cast62_fu_1530_p1;
wire  signed [63:0] sext_ln102_1_fu_859_p1;
wire  signed [63:0] sext_ln62_5_fu_1124_p1;
wire  signed [63:0] p_cast21_cast_fu_1269_p1;
wire  signed [63:0] sext_ln117_fu_1448_p1;
reg   [3:0] tj_fu_198;
wire   [5:0] zext_ln94_fu_619_p1;
wire   [5:0] tmp1_fu_635_p2;
wire  signed [9:0] tmp1_cast_fu_641_p1;
wire   [9:0] empty_113_fu_645_p2;
wire   [0:0] tmp_10_fu_664_p3;
wire   [0:0] tmp_9_fu_650_p3;
wire   [0:0] icmp_ln52_fu_658_p2;
wire   [0:0] or_ln51_fu_680_p2;
wire   [9:0] select_ln51_fu_672_p3;
wire   [9:0] yClamped_fu_686_p3;
wire   [11:0] shl_ln102_1_fu_702_p3;
wire   [19:0] shl_ln_fu_694_p3;
wire  signed [19:0] sext_ln102_fu_710_p1;
wire   [19:0] sub_ln102_fu_714_p2;
wire   [9:0] zext_ln102_fu_724_p1;
wire   [9:0] add_ln102_2_fu_728_p2;
wire   [7:0] tmp4_fu_755_p3;
wire   [5:0] zext_ln95_fu_739_p1;
wire   [5:0] add_ln98_1_fu_767_p2;
wire  signed [9:0] sext_ln98_fu_773_p1;
wire   [9:0] zext_ln98_fu_763_p1;
wire   [9:0] add_ln98_fu_777_p2;
wire   [0:0] tmp_11_fu_783_p3;
wire   [0:0] icmp_ln52_3_fu_791_p2;
wire   [0:0] tmp_12_fu_797_p3;
wire   [0:0] or_ln51_2_fu_805_p2;
wire   [9:0] select_ln51_5_fu_811_p3;
wire   [9:0] select_ln51_6_fu_819_p3;
wire   [11:0] shl_ln102_2_fu_827_p3;
wire  signed [63:0] sext_ln102_2_fu_835_p1;
wire   [63:0] add_ln102_fu_839_p2;
wire   [63:0] add_ln102_1_fu_844_p2;
wire   [61:0] trunc_ln102_1_fu_849_p4;
wire   [10:0] tmp_s_fu_883_p3;
wire   [11:0] tmp_17_cast_fu_891_p1;
wire   [11:0] nout_cast_fu_879_p1;
wire   [63:0] zext_ln48_fu_913_p1;
wire   [1:0] trunc_ln48_1_fu_917_p1;
wire   [11:0] ty_cast_fu_931_p1;
wire   [11:0] empty_115_fu_935_p2;
wire   [10:0] empty_116_fu_944_p1;
wire   [14:0] p_shl1_fu_948_p3;
wire   [14:0] p_cast52_fu_940_p1;
wire   [14:0] tx_cast_fu_974_p1;
wire   [14:0] empty_118_fu_978_p2;
wire   [4:0] empty_119_fu_1024_p2;
wire   [4:0] mul_ln62_2_fu_1034_p0;
wire   [5:0] mul_ln62_2_fu_1034_p1;
wire   [4:0] zext_ln53_fu_1040_p1;
wire   [4:0] add_ln57_fu_1056_p2;
wire   [9:0] zext_ln62_8_fu_1062_p1;
wire   [4:0] add_ln62_8_fu_1071_p2;
wire   [6:0] zext_ln62_5_fu_1076_p1;
wire   [6:0] add_ln62_5_fu_1080_p2;
wire   [7:0] shl_ln6_fu_1085_p3;
wire   [0:0] trunc_ln62_fu_1097_p1;
wire   [63:0] zext_ln62_6_fu_1093_p1;
wire   [63:0] add_ln62_fu_1109_p2;
wire   [61:0] trunc_ln62_4_fu_1114_p4;
wire   [1:0] trunc_ln3_fu_1101_p3;
wire   [4:0] shl_ln62_1_fu_1143_p3;
wire   [31:0] zext_ln62_7_fu_1150_p1;
wire   [31:0] lshr_ln62_fu_1154_p2;
wire  signed [11:0] trunc_ln62_1_fu_1159_p1;
wire  signed [33:0] trunc_ln62_3_fu_1179_p1;
wire   [33:0] grp_fu_1535_p3;
wire   [10:0] tmp_2_fu_1202_p3;
wire   [11:0] zext_ln119_1_fu_1210_p1;
wire   [11:0] zext_ln119_fu_1198_p1;
wire   [6:0] empty_120_fu_1232_p2;
wire   [0:0] empty_121_fu_1242_p1;
wire   [63:0] p_cast37_fu_1238_p1;
wire   [63:0] empty_122_fu_1254_p2;
wire   [61:0] p_cast1_fu_1259_p4;
wire   [1:0] p_cast_fu_1246_p3;
wire   [4:0] tmp_3_fu_1284_p3;
wire   [31:0] p_cast38_fu_1291_p1;
wire   [31:0] empty_124_fu_1295_p2;
wire   [8:0] trunc_ln119_fu_1306_p1;
wire   [11:0] zext_ln119_2_fu_1318_p1;
wire   [11:0] add_ln119_2_fu_1322_p2;
wire   [10:0] trunc_ln119_1_fu_1331_p1;
wire   [14:0] p_shl3_fu_1335_p3;
wire   [14:0] zext_ln119_3_fu_1327_p1;
wire   [7:0] zext_ln116_fu_1349_p1;
wire   [7:0] empty_125_fu_1365_p2;
wire   [17:0] p_shl9_fu_1370_p3;
wire   [9:0] p_shl2_fu_1382_p3;
wire   [18:0] p_shl9_cast_fu_1378_p1;
wire   [18:0] p_shl10_cast_fu_1390_p1;
wire   [18:0] empty_126_fu_1394_p2;
wire   [9:0] tmp7_fu_1404_p4;
wire  signed [24:0] p_cast27_fu_1400_p1;
wire   [24:0] tmp12_fu_1418_p2;
wire  signed [63:0] tmp12_cast_fu_1423_p1;
wire   [63:0] tmp11_fu_1427_p2;
wire   [63:0] tmp10_cast_fu_1414_p1;
wire   [63:0] empty_127_fu_1432_p2;
wire   [61:0] trunc_ln2_fu_1438_p4;
wire   [14:0] zext_ln119_4_fu_1458_p1;
wire   [14:0] add_ln119_4_fu_1462_p2;
wire   [30:0] trunc_ln119_2_fu_1484_p1;
wire   [31:0] add_ln119_fu_1488_p2;
wire   [0:0] tmp_13_fu_1498_p3;
wire   [30:0] add_ln120_fu_1493_p2;
wire   [33:0] grp_fu_1535_p2;
wire   [0:0] icmp_ln117_fu_1472_p2;
reg   [56:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
reg    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
reg    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
reg    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
reg    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
reg    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
reg    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire   [9:0] mul_ln62_2_fu_1034_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 57'd1;
end

srcnn_conv1_input_fm_buffer_2_0_RAM_AUTO_1R1W #(
    .DataWidth( 24 ),
    .AddressRange( 625 ),
    .AddressWidth( 10 ))
input_fm_buffer_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_fm_buffer_2_0_address0),
    .ce0(input_fm_buffer_2_0_ce0),
    .we0(input_fm_buffer_2_0_we0),
    .d0(input_fm_buffer_2_0_d0),
    .q0(input_fm_buffer_2_0_q0)
);

srcnn_conv1_output_fm_buffer_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 18496 ),
    .AddressWidth( 15 ))
output_fm_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_fm_buffer_1_address0),
    .ce0(output_fm_buffer_1_ce0),
    .we0(output_fm_buffer_1_we0),
    .d0(output_fm_buffer_1_d0),
    .q0(output_fm_buffer_1_q0)
);

srcnn_mul_5ns_6ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 6 ),
    .dout_WIDTH( 10 ))
mul_5ns_6ns_10_1_1_U1(
    .din0(mul_ln62_2_fu_1034_p0),
    .din1(mul_ln62_2_fu_1034_p1),
    .dout(mul_ln62_2_fu_1034_p2)
);

srcnn_mac_muladd_24s_12s_34ns_34_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 34 ),
    .dout_WIDTH( 34 ))
mac_muladd_24s_12s_34ns_34_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(input_fm_buffer_2_0_q0),
    .din1(trunc_ln62_1_fu_1159_p1),
    .din2(grp_fu_1535_p2),
    .ce(1'b1),
    .dout(grp_fu_1535_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        bx_reg_383 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        bx_reg_383 <= add_ln95_reg_1641;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        by_reg_360 <= 5'd0;
    end else if (((icmp_ln95_fu_743_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        by_reg_360 <= add_ln94_reg_1623;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_4_fu_1004_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        conv_i_i_lcssa10_reg_473 <= conv_i_i_lcssa_lcssa11_reg_451;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        conv_i_i_lcssa10_reg_473 <= {{trunc_ln62_3_fu_1179_p1[33:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        conv_i_i_lcssa_lcssa11_reg_451 <= output_fm_buffer_1_q0;
    end else if (((icmp_ln53_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        conv_i_i_lcssa_lcssa11_reg_451 <= conv_i_i_lcssa10_reg_473;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        empty_111_reg_349 <= empty_112_fu_602_p2;
    end else if (((icmp_ln32_fu_580_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_111_reg_349 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        empty_130_reg_529 <= 15'd0;
    end else if (((exitcond5412_fu_1518_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57))) begin
        empty_130_reg_529 <= empty_131_fu_1524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_4_fu_1004_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        kx_reg_462 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        kx_reg_462 <= add_ln53_reg_1742;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ky_reg_440 <= 4'd0;
    end else if (((icmp_ln53_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        ky_reg_440 <= add_ln52_reg_1724;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_901_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        nout_2_reg_485 <= 7'd0;
    end else if (((icmp_ln116_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        nout_2_reg_485 <= add_ln115_reg_1811;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        nout_reg_394 <= 7'd0;
    end else if (((icmp_ln48_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        nout_reg_394 <= add_ln45_reg_1670;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul48_reg_405 <= 14'd0;
    end else if (((icmp_ln48_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        phi_mul48_reg_405 <= add_ln45_1_reg_1657;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_901_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
        phi_mul50_reg_496 <= 24'd0;
    end else if (((icmp_ln116_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        phi_mul50_reg_496 <= add_ln115_5_reg_1798;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul_reg_371 <= 10'd0;
    end else if (((icmp_ln95_fu_743_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul_reg_371 <= add_ln94_1_reg_1615;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond5412_fu_1518_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
        ti_reg_337 <= add_ln32_reg_1602;
    end else if (((icmp_ln31_fu_556_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ti_reg_337 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tj_fu_198 <= 4'd0;
    end else if (((icmp_ln32_fu_580_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tj_fu_198 <= add_ln31_reg_1584;
    end
end

always @ (posedge ap_clk) begin
    if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
        tx_3_reg_518 <= 5'd0;
    end else if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        tx_3_reg_518 <= add_ln117_reg_1869;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        tx_reg_428 <= 5'd0;
    end else if (((icmp_ln52_4_fu_1004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        tx_reg_428 <= add_ln49_reg_1706;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        ty_3_reg_507 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state56) & (m_axi_gmem_BVALID == 1'b1))) begin
        ty_3_reg_507 <= add_ln116_reg_1850;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        ty_reg_416 <= 5'd0;
    end else if (((icmp_ln49_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        ty_reg_416 <= add_ln48_reg_1693;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln115_5_reg_1798 <= add_ln115_5_fu_1192_p2;
        add_ln115_reg_1811 <= add_ln115_fu_1226_p2;
        add_ln119_1_reg_1803 <= add_ln119_1_fu_1214_p2;
        zext_ln115_reg_1793[23 : 0] <= zext_ln115_fu_1188_p1[23 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        add_ln116_reg_1850 <= add_ln116_fu_1359_p2;
        add_ln119_3_reg_1842 <= add_ln119_3_fu_1343_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        add_ln117_reg_1869 <= add_ln117_fu_1478_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln31_reg_1584 <= add_ln31_fu_562_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln32_reg_1602 <= add_ln32_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln45_1_reg_1657 <= add_ln45_1_fu_873_p2;
        add_ln45_reg_1670 <= add_ln45_fu_907_p2;
        empty_114_reg_1662 <= empty_114_fu_895_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_901_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state17))) begin
        add_ln48_1_reg_1675 <= add_ln48_1_fu_921_p2;
        add_ln62_7_reg_1680 <= add_ln62_7_fu_926_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln48_reg_1693 <= add_ln48_fu_968_p2;
        empty_117_reg_1685 <= empty_117_fu_956_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln49_reg_1706 <= add_ln49_fu_994_p2;
        output_fm_buffer_1_addr_1_reg_1698 <= p_cast61_fu_983_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln52_reg_1724 <= add_ln52_fu_1010_p2;
        zext_ln52_reg_1716[3 : 0] <= zext_ln52_fu_1000_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln53_reg_1742 <= add_ln53_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1044_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        add_ln62_6_reg_1758 <= add_ln62_6_fu_1134_p2;
        add_ln62_9_reg_1747 <= add_ln62_9_fu_1066_p2;
        gmem_addr_12_reg_1752 <= sext_ln62_5_fu_1124_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln94_1_reg_1615 <= add_ln94_1_fu_613_p2;
        add_ln94_reg_1623 <= add_ln94_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln95_reg_1641 <= add_ln95_fu_749_p2;
        input_fm_buffer_2_0_addr_1_reg_1633 <= zext_ln102_1_fu_734_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_fu_1220_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state36))) begin
        empty_123_reg_1822 <= empty_123_fu_1279_p2;
        gmem_addr_10_reg_1816 <= p_cast21_cast_fu_1269_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        empty_reg_1571 <= empty_fu_540_p1;
        trunc_ln48_reg_1576 <= trunc_ln48_fu_544_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        gmem_addr_10_read_reg_1827 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln116_fu_1353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        gmem_addr_11_reg_1855 <= sext_ln117_fu_1448_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        gmem_addr_12_read_reg_1768 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln95_fu_743_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        gmem_addr_reg_1646 <= sext_ln102_1_fu_859_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln52_4_fu_1004_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        mul_ln62_2_reg_1734 <= mul_ln62_2_fu_1034_p2;
        tmp_4_reg_1729[6 : 3] <= tmp_4_fu_1016_p3[6 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        select_ln120_reg_1874 <= select_ln120_fu_1506_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln94_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        sext_ln95_reg_1628[63 : 2] <= sext_ln95_fu_720_p1[63 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        shl_ln119_reg_1832[31 : 22] <= shl_ln119_fu_1300_p2[31 : 22];
        trunc_ln_reg_1837[30 : 22] <= trunc_ln_fu_1310_p3[30 : 22];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_556_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_reg_1589 <= tmp_fu_568_p3;
        zext_ln32_reg_1594[7 : 0] <= zext_ln32_fu_576_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        trunc_ln102_reg_1652 <= trunc_ln102_fu_869_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state31_blk = 1'b1;
    end else begin
        ap_ST_fsm_state31_blk = 1'b0;
    end
end

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state37_blk = 1'b1;
    end else begin
        ap_ST_fsm_state37_blk = 1'b0;
    end
end

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state45_blk = 1'b1;
    end else begin
        ap_ST_fsm_state45_blk = 1'b0;
    end
end

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state48_blk = 1'b1;
    end else begin
        ap_ST_fsm_state48_blk = 1'b0;
    end
end

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state51_blk = 1'b1;
    end else begin
        ap_ST_fsm_state51_blk = 1'b0;
    end
end

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state56_blk = 1'b1;
    end else begin
        ap_ST_fsm_state56_blk = 1'b0;
    end
end

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln31_fu_556_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_fu_556_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state7))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state15))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        input_fm_buffer_2_0_address0 = zext_ln62_9_fu_1139_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        input_fm_buffer_2_0_address0 = input_fm_buffer_2_0_addr_1_reg_1633;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_fm_buffer_2_0_address0 = p_cast54_fu_608_p1;
    end else begin
        input_fm_buffer_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state31) & (m_axi_gmem_RVALID == 1'b1)))) begin
        input_fm_buffer_2_0_ce0 = 1'b1;
    end else begin
        input_fm_buffer_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        input_fm_buffer_2_0_d0 = trunc_ln102_reg_1652;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_fm_buffer_2_0_d0 = 24'd0;
    end else begin
        input_fm_buffer_2_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((exitcond1_fu_596_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_fm_buffer_2_0_we0 = 1'b1;
    end else begin
        input_fm_buffer_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            m_axi_gmem_ARADDR = gmem_addr_10_reg_1816;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            m_axi_gmem_ARADDR = gmem_addr_12_reg_1752;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            m_axi_gmem_ARADDR = gmem_addr_reg_1646;
        end else begin
            m_axi_gmem_ARADDR = 'bx;
        end
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state37) & (m_axi_gmem_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state23) & (m_axi_gmem_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (m_axi_gmem_ARREADY == 1'b1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) & (m_axi_gmem_BVALID == 1'b1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state45) & (m_axi_gmem_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state31) & (m_axi_gmem_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state15) & (m_axi_gmem_RVALID == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        output_fm_buffer_1_address0 = p_cast62_fu_1530_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        output_fm_buffer_1_address0 = zext_ln119_5_fu_1467_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_fm_buffer_1_address0 = output_fm_buffer_1_addr_1_reg_1698;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        output_fm_buffer_1_address0 = p_cast61_fu_983_p1;
    end else begin
        output_fm_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19))) begin
        output_fm_buffer_1_ce0 = 1'b1;
    end else begin
        output_fm_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        output_fm_buffer_1_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        output_fm_buffer_1_d0 = conv_i_i_lcssa_lcssa11_reg_451;
    end else begin
        output_fm_buffer_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond5412_fu_1518_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state57)) | ((icmp_ln52_4_fu_1004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21)))) begin
        output_fm_buffer_1_we0 = 1'b1;
    end else begin
        output_fm_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln31_fu_556_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln32_fu_580_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond1_fu_596_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln94_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln95_fu_743_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (m_axi_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state17 : begin
            if (((icmp_ln45_fu_901_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln48_fu_962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln49_fu_988_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln52_4_fu_1004_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln53_fu_1044_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (m_axi_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b1 == ap_CS_fsm_state31) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln115_fu_1220_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            if (((1'b1 == ap_CS_fsm_state37) & (m_axi_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b1 == ap_CS_fsm_state45) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln116_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (icmp_ln117_fu_1472_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((m_axi_gmem_WREADY == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((1'b1 == ap_CS_fsm_state56) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state57 : begin
            if (((exitcond5412_fu_1518_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state57))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln102_1_fu_844_p2 = ($signed(add_ln102_fu_839_p2) + $signed(sext_ln95_reg_1628));

assign add_ln102_2_fu_728_p2 = (phi_mul_reg_371 + zext_ln102_fu_724_p1);

assign add_ln102_fu_839_p2 = ($signed(sext_ln102_2_fu_835_p1) + $signed(input_ftmap));

assign add_ln115_5_fu_1192_p2 = (phi_mul50_reg_496 + 24'd260100);

assign add_ln115_fu_1226_p2 = (nout_2_reg_485 + 7'd1);

assign add_ln116_fu_1359_p2 = (ty_3_reg_507 + 5'd1);

assign add_ln117_fu_1478_p2 = (tx_3_reg_518 + 5'd1);

assign add_ln119_1_fu_1214_p2 = (zext_ln119_1_fu_1210_p1 + zext_ln119_fu_1198_p1);

assign add_ln119_2_fu_1322_p2 = (add_ln119_1_reg_1803 + zext_ln119_2_fu_1318_p1);

assign add_ln119_3_fu_1343_p2 = (p_shl3_fu_1335_p3 + zext_ln119_3_fu_1327_p1);

assign add_ln119_4_fu_1462_p2 = (add_ln119_3_reg_1842 + zext_ln119_4_fu_1458_p1);

assign add_ln119_fu_1488_p2 = (output_fm_buffer_1_q0 + shl_ln119_reg_1832);

assign add_ln120_fu_1493_p2 = (trunc_ln119_2_fu_1484_p1 + trunc_ln_reg_1837);

assign add_ln31_fu_562_p2 = (tj_fu_198 + 4'd1);

assign add_ln32_fu_586_p2 = (ti_reg_337 + 4'd1);

assign add_ln45_1_fu_873_p2 = (phi_mul48_reg_405 + 14'd162);

assign add_ln45_fu_907_p2 = (nout_reg_394 + 7'd1);

assign add_ln48_1_fu_921_p2 = (zext_ln48_fu_913_p1 + conv1_weights);

assign add_ln48_fu_968_p2 = (ty_reg_416 + 5'd1);

assign add_ln49_fu_994_p2 = (tx_reg_428 + 5'd1);

assign add_ln52_fu_1010_p2 = (ky_reg_440 + 4'd1);

assign add_ln53_fu_1050_p2 = (kx_reg_462 + 4'd1);

assign add_ln57_fu_1056_p2 = (zext_ln53_fu_1040_p1 + tx_reg_428);

assign add_ln62_5_fu_1080_p2 = (zext_ln62_5_fu_1076_p1 + tmp_4_reg_1729);

assign add_ln62_6_fu_1134_p2 = (add_ln62_7_reg_1680 + trunc_ln3_fu_1101_p3);

assign add_ln62_7_fu_926_p2 = (trunc_ln48_1_fu_917_p1 + trunc_ln48_reg_1576);

assign add_ln62_8_fu_1071_p2 = (zext_ln52_reg_1716 + zext_ln53_fu_1040_p1);

assign add_ln62_9_fu_1066_p2 = (mul_ln62_2_reg_1734 + zext_ln62_8_fu_1062_p1);

assign add_ln62_fu_1109_p2 = (add_ln48_1_reg_1675 + zext_ln62_6_fu_1093_p1);

assign add_ln94_1_fu_613_p2 = (phi_mul_reg_371 + 10'd25);

assign add_ln94_fu_629_p2 = (by_reg_360 + 5'd1);

assign add_ln95_fu_749_p2 = (bx_reg_383 + 5'd1);

assign add_ln98_1_fu_767_p2 = ($signed(zext_ln95_fu_739_p1) + $signed(6'd60));

assign add_ln98_fu_777_p2 = ($signed(sext_ln98_fu_773_p1) + $signed(zext_ln98_fu_763_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign empty_112_fu_602_p2 = (empty_111_reg_349 + 9'd1);

assign empty_113_fu_645_p2 = ($signed(tmp1_cast_fu_641_p1) + $signed(zext_ln32_reg_1594));

assign empty_114_fu_895_p2 = (tmp_17_cast_fu_891_p1 + nout_cast_fu_879_p1);

assign empty_115_fu_935_p2 = (empty_114_reg_1662 + ty_cast_fu_931_p1);

assign empty_116_fu_944_p1 = empty_115_fu_935_p2[10:0];

assign empty_117_fu_956_p2 = (p_shl1_fu_948_p3 + p_cast52_fu_940_p1);

assign empty_118_fu_978_p2 = (empty_117_reg_1685 + tx_cast_fu_974_p1);

assign empty_119_fu_1024_p2 = (zext_ln52_fu_1000_p1 + ty_reg_416);

assign empty_120_fu_1232_p2 = nout_2_reg_485 << 7'd1;

assign empty_121_fu_1242_p1 = nout_2_reg_485[0:0];

assign empty_122_fu_1254_p2 = (p_cast37_fu_1238_p1 + conv1_biases);

assign empty_123_fu_1279_p2 = (p_cast_fu_1246_p3 + empty_reg_1571);

assign empty_124_fu_1295_p2 = gmem_addr_10_read_reg_1827 >> p_cast38_fu_1291_p1;

assign empty_125_fu_1365_p2 = (zext_ln116_fu_1349_p1 + tmp_reg_1589);

assign empty_126_fu_1394_p2 = (p_shl9_cast_fu_1378_p1 - p_shl10_cast_fu_1390_p1);

assign empty_127_fu_1432_p2 = (tmp11_fu_1427_p2 + tmp10_cast_fu_1414_p1);

assign empty_131_fu_1524_p2 = (empty_130_reg_529 + 15'd1);

assign empty_fu_540_p1 = conv1_biases[1:0];

assign exitcond1_fu_596_p2 = ((empty_111_reg_349 == 9'd312) ? 1'b1 : 1'b0);

assign exitcond5412_fu_1518_p2 = ((empty_130_reg_529 == 15'd18496) ? 1'b1 : 1'b0);

assign grp_fu_1535_p2 = {{conv_i_i_lcssa10_reg_473}, {2'd0}};

assign icmp_ln115_fu_1220_p2 = ((nout_2_reg_485 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_1353_p2 = ((ty_3_reg_507 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln117_fu_1472_p2 = ((tx_3_reg_518 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_556_p2 = ((tj_fu_198 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_580_p2 = ((ti_reg_337 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_901_p2 = ((nout_reg_394 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_962_p2 = ((ty_reg_416 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_988_p2 = ((tx_reg_428 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln52_3_fu_791_p2 = (($signed(add_ln98_fu_777_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln52_4_fu_1004_p2 = ((ky_reg_440 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_658_p2 = (($signed(empty_113_fu_645_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1044_p2 = ((kx_reg_462 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_623_p2 = ((by_reg_360 == 5'd25) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_743_p2 = ((bx_reg_383 == 5'd25) ? 1'b1 : 1'b0);

assign lshr_ln62_fu_1154_p2 = gmem_addr_12_read_reg_1768 >> zext_ln62_7_fu_1150_p1;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd1;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = gmem_addr_11_reg_1855;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd17;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = select_ln120_reg_1874;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign mul_ln62_2_fu_1034_p0 = mul_ln62_2_fu_1034_p00;

assign mul_ln62_2_fu_1034_p00 = empty_119_fu_1024_p2;

assign mul_ln62_2_fu_1034_p1 = 10'd25;

assign nout_cast_fu_879_p1 = nout_reg_394;

assign or_ln51_2_fu_805_p2 = (tmp_11_fu_783_p3 | icmp_ln52_3_fu_791_p2);

assign or_ln51_fu_680_p2 = (tmp_9_fu_650_p3 | icmp_ln52_fu_658_p2);

assign p_cast1_fu_1259_p4 = {{empty_122_fu_1254_p2[63:2]}};

assign p_cast21_cast_fu_1269_p1 = $signed(p_cast1_fu_1259_p4);

assign p_cast27_fu_1400_p1 = $signed(empty_126_fu_1394_p2);

assign p_cast37_fu_1238_p1 = empty_120_fu_1232_p2;

assign p_cast38_fu_1291_p1 = tmp_3_fu_1284_p3;

assign p_cast52_fu_940_p1 = empty_115_fu_935_p2;

assign p_cast54_fu_608_p1 = empty_111_reg_349;

assign p_cast61_fu_983_p1 = empty_118_fu_978_p2;

assign p_cast62_fu_1530_p1 = empty_130_reg_529;

assign p_cast_fu_1246_p3 = {{empty_121_fu_1242_p1}, {1'd0}};

assign p_shl10_cast_fu_1390_p1 = p_shl2_fu_1382_p3;

assign p_shl1_fu_948_p3 = {{empty_116_fu_944_p1}, {4'd0}};

assign p_shl2_fu_1382_p3 = {{empty_125_fu_1365_p2}, {2'd0}};

assign p_shl3_fu_1335_p3 = {{trunc_ln119_1_fu_1331_p1}, {4'd0}};

assign p_shl9_cast_fu_1378_p1 = p_shl9_fu_1370_p3;

assign p_shl9_fu_1370_p3 = {{empty_125_fu_1365_p2}, {10'd0}};

assign select_ln120_fu_1506_p3 = ((tmp_13_fu_1498_p3[0:0] == 1'b1) ? 31'd0 : add_ln120_fu_1493_p2);

assign select_ln51_5_fu_811_p3 = ((tmp_12_fu_797_p3[0:0] == 1'b1) ? 10'd0 : 10'd254);

assign select_ln51_6_fu_819_p3 = ((or_ln51_2_fu_805_p2[0:0] == 1'b1) ? select_ln51_5_fu_811_p3 : add_ln98_fu_777_p2);

assign select_ln51_fu_672_p3 = ((tmp_10_fu_664_p3[0:0] == 1'b1) ? 10'd0 : 10'd254);

assign sext_ln102_1_fu_859_p1 = $signed(trunc_ln102_1_fu_849_p4);

assign sext_ln102_2_fu_835_p1 = $signed(shl_ln102_2_fu_827_p3);

assign sext_ln102_fu_710_p1 = $signed(shl_ln102_1_fu_702_p3);

assign sext_ln117_fu_1448_p1 = $signed(trunc_ln2_fu_1438_p4);

assign sext_ln62_5_fu_1124_p1 = $signed(trunc_ln62_4_fu_1114_p4);

assign sext_ln95_fu_720_p1 = $signed(sub_ln102_fu_714_p2);

assign sext_ln98_fu_773_p1 = $signed(add_ln98_1_fu_767_p2);

assign shl_ln102_1_fu_702_p3 = {{yClamped_fu_686_p3}, {2'd0}};

assign shl_ln102_2_fu_827_p3 = {{select_ln51_6_fu_819_p3}, {2'd0}};

assign shl_ln119_fu_1300_p2 = empty_124_fu_1295_p2 << 32'd22;

assign shl_ln62_1_fu_1143_p3 = {{add_ln62_6_reg_1758}, {3'd0}};

assign shl_ln6_fu_1085_p3 = {{add_ln62_5_fu_1080_p2}, {1'd0}};

assign shl_ln_fu_694_p3 = {{yClamped_fu_686_p3}, {10'd0}};

assign sub_ln102_fu_714_p2 = ($signed(shl_ln_fu_694_p3) - $signed(sext_ln102_fu_710_p1));

assign tmp10_cast_fu_1414_p1 = tmp7_fu_1404_p4;

assign tmp11_fu_1427_p2 = ($signed(tmp12_cast_fu_1423_p1) + $signed(output_ftmap));

assign tmp12_cast_fu_1423_p1 = $signed(tmp12_fu_1418_p2);

assign tmp12_fu_1418_p2 = ($signed(zext_ln115_reg_1793) + $signed(p_cast27_fu_1400_p1));

assign tmp1_cast_fu_641_p1 = $signed(tmp1_fu_635_p2);

assign tmp1_fu_635_p2 = ($signed(zext_ln94_fu_619_p1) + $signed(6'd60));

assign tmp4_fu_755_p3 = {{ti_reg_337}, {ti_reg_337}};

assign tmp7_fu_1404_p4 = {{{ti_reg_337}, {ti_reg_337}}, {2'd0}};

assign tmp_10_fu_664_p3 = empty_113_fu_645_p2[32'd9];

assign tmp_11_fu_783_p3 = add_ln98_fu_777_p2[32'd9];

assign tmp_12_fu_797_p3 = add_ln98_fu_777_p2[32'd9];

assign tmp_13_fu_1498_p3 = add_ln119_fu_1488_p2[32'd31];

assign tmp_17_cast_fu_891_p1 = tmp_s_fu_883_p3;

assign tmp_2_fu_1202_p3 = {{nout_2_reg_485}, {4'd0}};

assign tmp_3_fu_1284_p3 = {{empty_123_reg_1822}, {3'd0}};

assign tmp_4_fu_1016_p3 = {{ky_reg_440}, {3'd0}};

assign tmp_9_fu_650_p3 = empty_113_fu_645_p2[32'd9];

assign tmp_fu_568_p3 = {{tj_fu_198}, {tj_fu_198}};

assign tmp_s_fu_883_p3 = {{nout_reg_394}, {4'd0}};

assign trunc_ln102_1_fu_849_p4 = {{add_ln102_1_fu_844_p2[63:2]}};

assign trunc_ln102_fu_869_p1 = m_axi_gmem_RDATA[23:0];

assign trunc_ln119_1_fu_1331_p1 = add_ln119_2_fu_1322_p2[10:0];

assign trunc_ln119_2_fu_1484_p1 = output_fm_buffer_1_q0[30:0];

assign trunc_ln119_fu_1306_p1 = empty_124_fu_1295_p2[8:0];

assign trunc_ln2_fu_1438_p4 = {{empty_127_fu_1432_p2[63:2]}};

assign trunc_ln3_fu_1101_p3 = {{trunc_ln62_fu_1097_p1}, {1'd0}};

assign trunc_ln48_1_fu_917_p1 = phi_mul48_reg_405[1:0];

assign trunc_ln48_fu_544_p1 = conv1_weights[1:0];

assign trunc_ln62_1_fu_1159_p1 = lshr_ln62_fu_1154_p2[11:0];

assign trunc_ln62_3_fu_1179_p1 = grp_fu_1535_p3;

assign trunc_ln62_4_fu_1114_p4 = {{add_ln62_fu_1109_p2[63:2]}};

assign trunc_ln62_fu_1097_p1 = add_ln62_5_fu_1080_p2[0:0];

assign trunc_ln_fu_1310_p3 = {{trunc_ln119_fu_1306_p1}, {22'd0}};

assign tx_cast_fu_974_p1 = tx_reg_428;

assign ty_cast_fu_931_p1 = ty_reg_416;

assign yClamped_fu_686_p3 = ((or_ln51_fu_680_p2[0:0] == 1'b1) ? select_ln51_fu_672_p3 : empty_113_fu_645_p2);

assign zext_ln102_1_fu_734_p1 = add_ln102_2_fu_728_p2;

assign zext_ln102_fu_724_p1 = bx_reg_383;

assign zext_ln115_fu_1188_p1 = phi_mul50_reg_496;

assign zext_ln116_fu_1349_p1 = ty_3_reg_507;

assign zext_ln119_1_fu_1210_p1 = tmp_2_fu_1202_p3;

assign zext_ln119_2_fu_1318_p1 = ty_3_reg_507;

assign zext_ln119_3_fu_1327_p1 = add_ln119_2_fu_1322_p2;

assign zext_ln119_4_fu_1458_p1 = tx_3_reg_518;

assign zext_ln119_5_fu_1467_p1 = add_ln119_4_fu_1462_p2;

assign zext_ln119_fu_1198_p1 = nout_2_reg_485;

assign zext_ln32_fu_576_p1 = tmp_fu_568_p3;

assign zext_ln48_fu_913_p1 = phi_mul48_reg_405;

assign zext_ln52_fu_1000_p1 = ky_reg_440;

assign zext_ln53_fu_1040_p1 = kx_reg_462;

assign zext_ln62_5_fu_1076_p1 = add_ln62_8_fu_1071_p2;

assign zext_ln62_6_fu_1093_p1 = shl_ln6_fu_1085_p3;

assign zext_ln62_7_fu_1150_p1 = shl_ln62_1_fu_1143_p3;

assign zext_ln62_8_fu_1062_p1 = add_ln57_fu_1056_p2;

assign zext_ln62_9_fu_1139_p1 = add_ln62_9_reg_1747;

assign zext_ln94_fu_619_p1 = by_reg_360;

assign zext_ln95_fu_739_p1 = bx_reg_383;

assign zext_ln98_fu_763_p1 = tmp4_fu_755_p3;

always @ (posedge ap_clk) begin
    zext_ln32_reg_1594[9:8] <= 2'b00;
    sext_ln95_reg_1628[1:0] <= 2'b00;
    zext_ln52_reg_1716[4] <= 1'b0;
    tmp_4_reg_1729[2:0] <= 3'b000;
    zext_ln115_reg_1793[24] <= 1'b0;
    shl_ln119_reg_1832[21:0] <= 22'b0000000000000000000000;
    trunc_ln_reg_1837[21:0] <= 22'b0000000000000000000000;
end

endmodule //srcnn_conv1
