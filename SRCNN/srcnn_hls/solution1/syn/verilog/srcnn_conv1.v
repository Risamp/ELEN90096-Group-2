// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_ftmap_address0,
        input_ftmap_ce0,
        input_ftmap_q0,
        conv1_weights_address0,
        conv1_weights_ce0,
        conv1_weights_q0,
        conv1_biases_address0,
        conv1_biases_ce0,
        conv1_biases_q0,
        conv1_output_ftmap_address0,
        conv1_output_ftmap_ce0,
        conv1_output_ftmap_we0,
        conv1_output_ftmap_d0,
        conv1_output_ftmap_q0,
        grp_fu_365_p_din0,
        grp_fu_365_p_din1,
        grp_fu_365_p_opcode,
        grp_fu_365_p_dout0,
        grp_fu_365_p_ce,
        grp_fu_373_p_din0,
        grp_fu_373_p_din1,
        grp_fu_373_p_dout0,
        grp_fu_373_p_ce,
        grp_fu_377_p_din0,
        grp_fu_377_p_din1,
        grp_fu_377_p_opcode,
        grp_fu_377_p_dout0,
        grp_fu_377_p_ce
);

parameter    ap_ST_fsm_state1 = 61'd1;
parameter    ap_ST_fsm_state2 = 61'd2;
parameter    ap_ST_fsm_state3 = 61'd4;
parameter    ap_ST_fsm_state4 = 61'd8;
parameter    ap_ST_fsm_state5 = 61'd16;
parameter    ap_ST_fsm_state6 = 61'd32;
parameter    ap_ST_fsm_state7 = 61'd64;
parameter    ap_ST_fsm_state8 = 61'd128;
parameter    ap_ST_fsm_state9 = 61'd256;
parameter    ap_ST_fsm_state10 = 61'd512;
parameter    ap_ST_fsm_state11 = 61'd1024;
parameter    ap_ST_fsm_state12 = 61'd2048;
parameter    ap_ST_fsm_state13 = 61'd4096;
parameter    ap_ST_fsm_state14 = 61'd8192;
parameter    ap_ST_fsm_state15 = 61'd16384;
parameter    ap_ST_fsm_state16 = 61'd32768;
parameter    ap_ST_fsm_state17 = 61'd65536;
parameter    ap_ST_fsm_state18 = 61'd131072;
parameter    ap_ST_fsm_state19 = 61'd262144;
parameter    ap_ST_fsm_state20 = 61'd524288;
parameter    ap_ST_fsm_state21 = 61'd1048576;
parameter    ap_ST_fsm_state22 = 61'd2097152;
parameter    ap_ST_fsm_state23 = 61'd4194304;
parameter    ap_ST_fsm_state24 = 61'd8388608;
parameter    ap_ST_fsm_state25 = 61'd16777216;
parameter    ap_ST_fsm_state26 = 61'd33554432;
parameter    ap_ST_fsm_state27 = 61'd67108864;
parameter    ap_ST_fsm_state28 = 61'd134217728;
parameter    ap_ST_fsm_state29 = 61'd268435456;
parameter    ap_ST_fsm_state30 = 61'd536870912;
parameter    ap_ST_fsm_state31 = 61'd1073741824;
parameter    ap_ST_fsm_state32 = 61'd2147483648;
parameter    ap_ST_fsm_state33 = 61'd4294967296;
parameter    ap_ST_fsm_state34 = 61'd8589934592;
parameter    ap_ST_fsm_state35 = 61'd17179869184;
parameter    ap_ST_fsm_state36 = 61'd34359738368;
parameter    ap_ST_fsm_state37 = 61'd68719476736;
parameter    ap_ST_fsm_state38 = 61'd137438953472;
parameter    ap_ST_fsm_state39 = 61'd274877906944;
parameter    ap_ST_fsm_state40 = 61'd549755813888;
parameter    ap_ST_fsm_state41 = 61'd1099511627776;
parameter    ap_ST_fsm_state42 = 61'd2199023255552;
parameter    ap_ST_fsm_state43 = 61'd4398046511104;
parameter    ap_ST_fsm_state44 = 61'd8796093022208;
parameter    ap_ST_fsm_state45 = 61'd17592186044416;
parameter    ap_ST_fsm_state46 = 61'd35184372088832;
parameter    ap_ST_fsm_state47 = 61'd70368744177664;
parameter    ap_ST_fsm_state48 = 61'd140737488355328;
parameter    ap_ST_fsm_state49 = 61'd281474976710656;
parameter    ap_ST_fsm_state50 = 61'd562949953421312;
parameter    ap_ST_fsm_state51 = 61'd1125899906842624;
parameter    ap_ST_fsm_state52 = 61'd2251799813685248;
parameter    ap_ST_fsm_state53 = 61'd4503599627370496;
parameter    ap_ST_fsm_state54 = 61'd9007199254740992;
parameter    ap_ST_fsm_state55 = 61'd18014398509481984;
parameter    ap_ST_fsm_state56 = 61'd36028797018963968;
parameter    ap_ST_fsm_state57 = 61'd72057594037927936;
parameter    ap_ST_fsm_state58 = 61'd144115188075855872;
parameter    ap_ST_fsm_state59 = 61'd288230376151711744;
parameter    ap_ST_fsm_state60 = 61'd576460752303423488;
parameter    ap_ST_fsm_state61 = 61'd1152921504606846976;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] input_ftmap_address0;
output   input_ftmap_ce0;
input  [31:0] input_ftmap_q0;
output  [12:0] conv1_weights_address0;
output   conv1_weights_ce0;
input  [31:0] conv1_weights_q0;
output  [5:0] conv1_biases_address0;
output   conv1_biases_ce0;
input  [31:0] conv1_biases_q0;
output  [21:0] conv1_output_ftmap_address0;
output   conv1_output_ftmap_ce0;
output   conv1_output_ftmap_we0;
output  [31:0] conv1_output_ftmap_d0;
input  [31:0] conv1_output_ftmap_q0;
output  [31:0] grp_fu_365_p_din0;
output  [31:0] grp_fu_365_p_din1;
output  [1:0] grp_fu_365_p_opcode;
input  [31:0] grp_fu_365_p_dout0;
output   grp_fu_365_p_ce;
output  [31:0] grp_fu_373_p_din0;
output  [31:0] grp_fu_373_p_din1;
input  [31:0] grp_fu_373_p_dout0;
output   grp_fu_373_p_ce;
output  [31:0] grp_fu_377_p_din0;
output  [31:0] grp_fu_377_p_din1;
output  [4:0] grp_fu_377_p_opcode;
input  [0:0] grp_fu_377_p_dout0;
output   grp_fu_377_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] input_ftmap_address0;
reg input_ftmap_ce0;
reg[12:0] conv1_weights_address0;
reg conv1_weights_ce0;
reg[5:0] conv1_biases_address0;
reg conv1_biases_ce0;
reg[21:0] conv1_output_ftmap_address0;
reg conv1_output_ftmap_ce0;
reg conv1_output_ftmap_we0;
reg[31:0] conv1_output_ftmap_d0;

(* fsm_encoding = "none" *) reg   [60:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_487;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state49;
reg   [31:0] reg_491;
reg   [31:0] reg_495;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state52;
reg   [31:0] reg_500;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state59;
reg   [7:0] h_4_reg_1949;
wire    ap_CS_fsm_state2;
wire   [8:0] zext_ln22_fu_513_p1;
reg   [8:0] zext_ln22_reg_1956;
wire   [8:0] zext_ln24_fu_523_p1;
reg   [8:0] zext_ln24_reg_1966;
wire    ap_CS_fsm_state3;
wire  signed [16:0] sext_ln41_fu_574_p1;
reg  signed [16:0] sext_ln41_reg_1976;
wire    ap_CS_fsm_state4;
wire   [10:0] add_ln41_fu_590_p2;
reg   [10:0] add_ln41_reg_1981;
wire   [5:0] trunc_ln28_fu_596_p1;
reg   [5:0] trunc_ln28_reg_1986;
wire   [0:0] tmp_13_fu_600_p3;
reg   [0:0] tmp_13_reg_1992;
wire   [7:0] tmp_2_fu_608_p3;
reg   [7:0] tmp_2_reg_2001;
wire    ap_CS_fsm_state5;
wire   [31:0] empty_31_fu_615_p1;
reg   [31:0] empty_31_reg_2007;
wire   [6:0] add_ln31_fu_629_p2;
reg   [6:0] add_ln31_reg_2015;
wire    ap_CS_fsm_state6;
wire   [21:0] empty_35_fu_669_p2;
reg   [21:0] empty_35_reg_2020;
wire   [0:0] icmp_ln31_fu_623_p2;
wire   [9:0] zext_ln32_fu_675_p1;
reg   [9:0] zext_ln32_reg_2025;
wire   [7:0] add_ln84_1_fu_679_p2;
reg   [7:0] add_ln84_1_reg_2030;
wire  signed [16:0] sext_ln41_1_fu_716_p1;
reg  signed [16:0] sext_ln41_1_reg_2035;
wire   [10:0] add_ln41_1_fu_732_p2;
reg   [10:0] add_ln41_1_reg_2040;
wire   [0:0] tmp_14_fu_738_p3;
wire   [7:0] add_ln24_fu_766_p2;
wire   [6:0] add_ln32_fu_782_p2;
reg   [6:0] add_ln32_reg_2061;
wire    ap_CS_fsm_state7;
wire   [8:0] empty_36_fu_788_p2;
reg   [8:0] empty_36_reg_2066;
wire   [0:0] icmp_ln32_fu_776_p2;
reg   [21:0] conv1_output_ftmap_addr_reg_2071;
wire   [9:0] p_cast20_fu_807_p1;
reg   [9:0] p_cast20_reg_2076;
wire    ap_CS_fsm_state8;
wire   [12:0] add_ln41_4_fu_835_p2;
reg   [12:0] add_ln41_4_reg_2086;
wire    ap_CS_fsm_state9;
wire   [3:0] add_ln34_fu_847_p2;
reg   [3:0] add_ln34_reg_2094;
wire   [15:0] sub_ln41_fu_925_p2;
reg   [15:0] sub_ln41_reg_2099;
wire   [0:0] icmp_ln34_fu_841_p2;
wire    ap_CS_fsm_state10;
wire   [3:0] add_ln35_fu_951_p2;
reg   [3:0] add_ln35_reg_2112;
wire   [0:0] icmp_ln35_fu_945_p2;
wire   [31:0] bitcast_ln41_fu_1030_p1;
wire    ap_CS_fsm_state12;
wire   [31:0] bitcast_ln41_1_fu_1035_p1;
wire    ap_CS_fsm_state18;
wire   [31:0] empty_41_fu_1091_p1;
reg   [31:0] empty_41_reg_2137;
wire    ap_CS_fsm_state24;
wire   [6:0] add_ln31_1_fu_1105_p2;
reg   [6:0] add_ln31_1_reg_2145;
wire    ap_CS_fsm_state25;
wire   [21:0] empty_45_fu_1145_p2;
reg   [21:0] empty_45_reg_2150;
wire   [0:0] icmp_ln31_1_fu_1099_p2;
wire   [9:0] zext_ln32_2_fu_1151_p1;
reg   [9:0] zext_ln32_2_reg_2155;
wire   [7:0] add_ln84_2_fu_1155_p2;
reg   [7:0] add_ln84_2_reg_2160;
wire   [6:0] add_ln32_1_fu_1190_p2;
reg   [6:0] add_ln32_1_reg_2173;
wire    ap_CS_fsm_state26;
wire   [8:0] empty_46_fu_1196_p2;
reg   [8:0] empty_46_reg_2178;
wire   [0:0] icmp_ln32_1_fu_1184_p2;
reg   [21:0] conv1_output_ftmap_addr_1_reg_2183;
wire   [9:0] p_cast27_fu_1215_p1;
reg   [9:0] p_cast27_reg_2188;
wire    ap_CS_fsm_state27;
wire   [12:0] add_ln41_7_fu_1243_p2;
reg   [12:0] add_ln41_7_reg_2198;
wire    ap_CS_fsm_state28;
wire   [3:0] add_ln34_1_fu_1255_p2;
reg   [3:0] add_ln34_1_reg_2206;
wire   [15:0] sub_ln41_1_fu_1333_p2;
reg   [15:0] sub_ln41_1_reg_2211;
wire   [0:0] icmp_ln34_1_fu_1249_p2;
wire    ap_CS_fsm_state29;
wire   [3:0] add_ln35_1_fu_1359_p2;
reg   [3:0] add_ln35_1_reg_2224;
wire   [0:0] icmp_ln35_1_fu_1353_p2;
wire   [31:0] bitcast_ln41_2_fu_1438_p1;
wire    ap_CS_fsm_state31;
wire   [31:0] bitcast_ln41_3_fu_1443_p1;
wire    ap_CS_fsm_state37;
wire  signed [15:0] sext_ln41_2_fu_1530_p1;
reg  signed [15:0] sext_ln41_2_reg_2249;
wire    ap_CS_fsm_state43;
wire   [9:0] add_ln41_2_fu_1546_p2;
reg   [9:0] add_ln41_2_reg_2254;
wire   [31:0] empty_51_fu_1552_p1;
reg   [31:0] empty_51_reg_2259;
wire   [6:0] add_ln31_2_fu_1566_p2;
reg   [6:0] add_ln31_2_reg_2267;
wire    ap_CS_fsm_state44;
wire   [21:0] empty_55_fu_1606_p2;
reg   [21:0] empty_55_reg_2272;
wire   [0:0] icmp_ln31_2_fu_1560_p2;
wire   [9:0] zext_ln32_4_fu_1612_p1;
reg   [9:0] zext_ln32_4_reg_2277;
wire   [7:0] add_ln84_5_fu_1616_p2;
reg   [7:0] add_ln84_5_reg_2282;
wire   [6:0] add_ln28_2_fu_1621_p2;
wire   [6:0] add_ln32_2_fu_1637_p2;
reg   [6:0] add_ln32_2_reg_2295;
wire    ap_CS_fsm_state45;
wire   [8:0] empty_56_fu_1643_p2;
reg   [8:0] empty_56_reg_2300;
wire   [0:0] icmp_ln32_2_fu_1631_p2;
reg   [21:0] conv1_output_ftmap_addr_2_reg_2305;
wire   [9:0] p_cast29_fu_1662_p1;
reg   [9:0] p_cast29_reg_2310;
wire    ap_CS_fsm_state46;
wire   [12:0] add_ln41_10_fu_1686_p2;
reg   [12:0] add_ln41_10_reg_2320;
wire    ap_CS_fsm_state47;
wire   [3:0] add_ln34_2_fu_1698_p2;
reg   [3:0] add_ln34_2_reg_2328;
wire   [15:0] sub_ln41_2_fu_1776_p2;
reg   [15:0] sub_ln41_2_reg_2333;
wire   [0:0] icmp_ln34_2_fu_1692_p2;
wire    ap_CS_fsm_state48;
wire   [3:0] add_ln35_2_fu_1802_p2;
reg   [3:0] add_ln35_2_reg_2346;
wire   [0:0] icmp_ln35_2_fu_1796_p2;
wire   [31:0] bitcast_ln41_4_fu_1881_p1;
wire    ap_CS_fsm_state50;
wire   [31:0] bitcast_ln41_5_fu_1886_p1;
wire    ap_CS_fsm_state56;
reg   [7:0] w_reg_246;
wire   [0:0] icmp_ln22_fu_517_p2;
reg   [6:0] n1_reg_258;
wire   [0:0] icmp_ln24_fu_527_p2;
reg   [6:0] th_reg_270;
reg   [6:0] tw_reg_281;
wire    ap_CS_fsm_state23;
reg   [3:0] f1h_reg_292;
reg   [31:0] add54_0_lcssa31_reg_303;
reg   [3:0] f1w_reg_313;
reg   [31:0] add54_029_reg_324;
reg   [6:0] th_1_reg_336;
reg   [6:0] tw_1_reg_347;
wire    ap_CS_fsm_state42;
reg   [3:0] f1h_1_reg_358;
reg   [31:0] add54_1_lcssa34_reg_369;
reg   [3:0] f1w_1_reg_379;
reg   [31:0] add54_132_reg_390;
reg   [6:0] th_2_reg_402;
reg   [6:0] tw_2_reg_413;
wire    ap_CS_fsm_state61;
reg   [3:0] f1h_2_reg_424;
reg   [31:0] add54_2_lcssa37_reg_435;
reg   [3:0] f1w_2_reg_445;
reg   [31:0] add54_235_reg_456;
wire   [63:0] zext_ln28_fu_543_p1;
wire   [63:0] p_cast34_fu_761_p1;
wire   [63:0] p_cast38_fu_802_p1;
wire   [63:0] zext_ln41_7_fu_940_p1;
wire   [63:0] zext_ln41_10_fu_1025_p1;
wire   [63:0] p_cast36_fu_1175_p1;
wire   [63:0] p_cast49_fu_1210_p1;
wire   [63:0] zext_ln41_15_fu_1348_p1;
wire   [63:0] zext_ln41_17_fu_1433_p1;
wire   [63:0] p_cast52_fu_1657_p1;
wire   [63:0] zext_ln41_19_fu_1791_p1;
wire   [63:0] zext_ln41_20_fu_1876_p1;
reg   [7:0] h_fu_126;
wire   [7:0] add_ln22_fu_533_p2;
wire   [31:0] select_ln47_fu_1082_p3;
wire   [31:0] select_ln47_1_fu_1490_p3;
wire   [31:0] select_ln47_2_fu_1933_p3;
reg   [31:0] grp_fu_468_p0;
reg   [31:0] grp_fu_468_p1;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state53;
reg   [31:0] grp_fu_478_p0;
reg   [31:0] grp_fu_478_p1;
wire   [14:0] tmp_s_fu_556_p3;
wire   [15:0] tmp_13_cast_fu_564_p1;
wire   [15:0] n1_cast_fu_552_p1;
wire   [15:0] empty_fu_568_p2;
wire   [9:0] tmp_1_fu_578_p3;
wire   [10:0] zext_ln41_fu_586_p1;
wire   [10:0] n1_cast15_fu_548_p1;
wire   [8:0] zext_ln31_fu_619_p1;
wire   [8:0] empty_32_fu_639_p2;
wire   [16:0] p_cast17_fu_644_p1;
wire  signed [16:0] empty_33_fu_648_p2;
wire   [13:0] empty_34_fu_657_p1;
wire   [21:0] p_shl2_fu_661_p3;
wire  signed [21:0] p_cast18_fu_653_p1;
wire   [7:0] th_cast19_fu_635_p1;
wire   [6:0] add_ln28_fu_684_p2;
wire   [14:0] tmp_9_fu_698_p3;
wire   [15:0] tmp_17_cast_fu_706_p1;
wire   [15:0] add_ln28_cast_fu_694_p1;
wire   [15:0] empty_39_fu_710_p2;
wire   [9:0] tmp_10_fu_720_p3;
wire   [10:0] zext_ln41_1_fu_728_p1;
wire   [10:0] add_ln28_cast16_fu_690_p1;
wire   [7:0] empty_40_fu_746_p2;
wire   [5:0] tmp_11_fu_751_p4;
wire   [8:0] zext_ln32_1_fu_772_p1;
wire   [21:0] p_cast19_fu_793_p1;
wire   [21:0] empty_37_fu_797_p2;
wire   [10:0] zext_ln41_3_fu_810_p1;
wire   [10:0] add_ln41_3_fu_814_p2;
wire   [9:0] trunc_ln41_fu_823_p1;
wire   [12:0] p_shl3_fu_827_p3;
wire   [12:0] zext_ln41_4_fu_819_p1;
wire  signed [3:0] tmp_fu_853_p2;
wire  signed [9:0] tmp_cast_fu_859_p1;
wire   [9:0] empty_38_fu_863_p2;
wire  signed [7:0] sext_ln84_fu_882_p1;
wire   [0:0] tmp_17_fu_868_p3;
wire   [0:0] icmp_ln84_fu_876_p2;
wire   [0:0] or_ln83_fu_899_p2;
wire   [7:0] select_ln83_fu_891_p3;
wire   [7:0] add_ln84_fu_886_p2;
wire   [7:0] yPixelClamped_fu_905_p3;
wire   [15:0] tmp_18_fu_917_p3;
wire   [15:0] zext_ln41_5_fu_913_p1;
wire   [12:0] zext_ln41_6_fu_931_p1;
wire   [12:0] add_ln41_5_fu_935_p2;
wire   [3:0] add_ln39_fu_957_p2;
wire  signed [9:0] sext_ln39_fu_963_p1;
wire   [9:0] add_ln39_1_fu_967_p2;
wire   [0:0] tmp_20_fu_986_p3;
wire   [0:0] tmp_19_fu_972_p3;
wire   [0:0] icmp_ln84_2_fu_980_p2;
wire   [0:0] or_ln83_2_fu_1002_p2;
wire   [9:0] select_ln83_5_fu_994_p3;
wire   [9:0] xPixelClamped_fu_1008_p3;
wire  signed [15:0] sext_ln41_3_fu_1016_p1;
wire   [15:0] add_ln41_8_fu_1020_p2;
wire   [31:0] bitcast_ln47_fu_1040_p1;
wire   [7:0] tmp_3_fu_1044_p4;
wire   [22:0] trunc_ln47_fu_1054_p1;
wire   [0:0] icmp_ln47_1_fu_1064_p2;
wire   [0:0] icmp_ln47_fu_1058_p2;
wire   [0:0] or_ln47_fu_1070_p2;
wire   [0:0] and_ln47_fu_1076_p2;
wire   [8:0] zext_ln31_1_fu_1095_p1;
wire   [8:0] empty_42_fu_1115_p2;
wire   [16:0] p_cast23_fu_1120_p1;
wire  signed [16:0] empty_43_fu_1124_p2;
wire   [13:0] empty_44_fu_1133_p1;
wire   [21:0] p_shl7_fu_1137_p3;
wire  signed [21:0] p_cast24_fu_1129_p1;
wire   [7:0] th_1_cast24_fu_1111_p1;
wire   [7:0] empty_50_fu_1160_p2;
wire   [5:0] tmp_16_fu_1165_p4;
wire   [8:0] zext_ln32_3_fu_1180_p1;
wire   [21:0] p_cast30_fu_1201_p1;
wire   [21:0] empty_47_fu_1205_p2;
wire   [10:0] zext_ln41_8_fu_1218_p1;
wire   [10:0] add_ln41_6_fu_1222_p2;
wire   [9:0] trunc_ln41_1_fu_1231_p1;
wire   [12:0] p_shl8_fu_1235_p3;
wire   [12:0] zext_ln41_9_fu_1227_p1;
wire  signed [3:0] tmp6_fu_1261_p2;
wire  signed [9:0] tmp6_cast_fu_1267_p1;
wire   [9:0] empty_48_fu_1271_p2;
wire  signed [7:0] sext_ln84_1_fu_1290_p1;
wire   [0:0] tmp_21_fu_1276_p3;
wire   [0:0] icmp_ln84_3_fu_1284_p2;
wire   [0:0] or_ln83_3_fu_1307_p2;
wire   [7:0] select_ln83_7_fu_1299_p3;
wire   [7:0] add_ln84_3_fu_1294_p2;
wire   [7:0] yPixelClamped_2_fu_1313_p3;
wire   [15:0] tmp_22_fu_1325_p3;
wire   [15:0] zext_ln41_11_fu_1321_p1;
wire   [12:0] zext_ln41_14_fu_1339_p1;
wire   [12:0] add_ln41_11_fu_1343_p2;
wire   [3:0] add_ln39_2_fu_1365_p2;
wire  signed [9:0] sext_ln39_1_fu_1371_p1;
wire   [9:0] add_ln39_3_fu_1375_p2;
wire   [0:0] tmp_26_fu_1394_p3;
wire   [0:0] tmp_25_fu_1380_p3;
wire   [0:0] icmp_ln84_5_fu_1388_p2;
wire   [0:0] or_ln83_5_fu_1410_p2;
wire   [9:0] select_ln83_11_fu_1402_p3;
wire   [9:0] xPixelClamped_2_fu_1416_p3;
wire  signed [15:0] sext_ln41_4_fu_1424_p1;
wire   [15:0] add_ln41_12_fu_1428_p2;
wire   [31:0] bitcast_ln47_1_fu_1448_p1;
wire   [7:0] tmp_5_fu_1452_p4;
wire   [22:0] trunc_ln47_1_fu_1462_p1;
wire   [0:0] icmp_ln47_3_fu_1472_p2;
wire   [0:0] icmp_ln47_2_fu_1466_p2;
wire   [0:0] or_ln47_1_fu_1478_p2;
wire   [0:0] and_ln47_1_fu_1484_p2;
wire   [5:0] add_ln28_1_fu_1499_p2;
wire   [13:0] tmp_12_fu_1512_p3;
wire   [14:0] tmp_21_cast_fu_1520_p1;
wire   [14:0] add_ln28_1_cast20_fu_1508_p1;
wire   [14:0] empty_49_fu_1524_p2;
wire   [8:0] tmp_15_fu_1534_p3;
wire   [9:0] zext_ln41_2_fu_1542_p1;
wire   [9:0] add_ln28_1_cast21_fu_1504_p1;
wire   [8:0] zext_ln31_2_fu_1556_p1;
wire   [8:0] empty_52_fu_1576_p2;
wire   [15:0] p_cast26_fu_1581_p1;
wire  signed [15:0] empty_53_fu_1585_p2;
wire   [13:0] empty_54_fu_1594_p1;
wire   [21:0] p_shl_fu_1598_p3;
wire  signed [21:0] p_cast28_fu_1590_p1;
wire   [7:0] th_2_cast26_fu_1572_p1;
wire   [8:0] zext_ln32_5_fu_1627_p1;
wire   [21:0] p_cast31_fu_1648_p1;
wire   [21:0] empty_57_fu_1652_p2;
wire   [9:0] zext_ln41_12_fu_1665_p1;
wire   [9:0] add_ln41_9_fu_1669_p2;
wire   [12:0] p_shl4_fu_1678_p3;
wire   [12:0] zext_ln41_13_fu_1674_p1;
wire  signed [3:0] tmp12_fu_1704_p2;
wire  signed [9:0] tmp12_cast_fu_1710_p1;
wire   [9:0] empty_58_fu_1714_p2;
wire  signed [7:0] sext_ln84_2_fu_1733_p1;
wire   [0:0] tmp_23_fu_1719_p3;
wire   [0:0] icmp_ln84_4_fu_1727_p2;
wire   [0:0] or_ln83_4_fu_1750_p2;
wire   [7:0] select_ln83_9_fu_1742_p3;
wire   [7:0] add_ln84_4_fu_1737_p2;
wire   [7:0] yPixelClamped_3_fu_1756_p3;
wire   [15:0] tmp_24_fu_1768_p3;
wire   [15:0] zext_ln41_16_fu_1764_p1;
wire   [12:0] zext_ln41_18_fu_1782_p1;
wire   [12:0] add_ln41_13_fu_1786_p2;
wire   [3:0] add_ln39_4_fu_1808_p2;
wire  signed [9:0] sext_ln39_2_fu_1814_p1;
wire   [9:0] add_ln39_5_fu_1818_p2;
wire   [0:0] tmp_28_fu_1837_p3;
wire   [0:0] tmp_27_fu_1823_p3;
wire   [0:0] icmp_ln84_6_fu_1831_p2;
wire   [0:0] or_ln83_6_fu_1853_p2;
wire   [9:0] select_ln83_13_fu_1845_p3;
wire   [9:0] xPixelClamped_3_fu_1859_p3;
wire  signed [15:0] sext_ln41_5_fu_1867_p1;
wire   [15:0] add_ln41_14_fu_1871_p2;
wire   [31:0] bitcast_ln47_2_fu_1891_p1;
wire   [7:0] tmp_7_fu_1895_p4;
wire   [22:0] trunc_ln47_2_fu_1905_p1;
wire   [0:0] icmp_ln47_5_fu_1915_p2;
wire   [0:0] icmp_ln47_4_fu_1909_p2;
wire   [0:0] or_ln47_2_fu_1921_p2;
wire   [0:0] and_ln47_2_fu_1927_p2;
reg   [60:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 61'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_841_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        add54_029_reg_324 <= add54_0_lcssa31_reg_303;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        add54_029_reg_324 <= grp_fu_365_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add54_0_lcssa31_reg_303 <= conv1_output_ftmap_q0;
    end else if (((icmp_ln35_fu_945_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        add54_0_lcssa31_reg_303 <= add54_029_reg_324;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_1_fu_1249_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        add54_132_reg_390 <= add54_1_lcssa34_reg_369;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        add54_132_reg_390 <= grp_fu_365_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        add54_1_lcssa34_reg_369 <= conv1_output_ftmap_q0;
    end else if (((icmp_ln35_1_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        add54_1_lcssa34_reg_369 <= add54_132_reg_390;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_2_fu_1692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        add54_235_reg_456 <= add54_2_lcssa37_reg_435;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        add54_235_reg_456 <= grp_fu_365_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        add54_2_lcssa37_reg_435 <= conv1_output_ftmap_q0;
    end else if (((icmp_ln35_2_fu_1796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        add54_2_lcssa37_reg_435 <= add54_235_reg_456;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        f1h_1_reg_358 <= 4'd0;
    end else if (((icmp_ln35_1_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        f1h_1_reg_358 <= add_ln34_1_reg_2206;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        f1h_2_reg_424 <= 4'd0;
    end else if (((icmp_ln35_2_fu_1796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        f1h_2_reg_424 <= add_ln34_2_reg_2328;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        f1h_reg_292 <= 4'd0;
    end else if (((icmp_ln35_fu_945_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        f1h_reg_292 <= add_ln34_reg_2094;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_1_fu_1249_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        f1w_1_reg_379 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        f1w_1_reg_379 <= add_ln35_1_reg_2224;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_2_fu_1692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        f1w_2_reg_445 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        f1w_2_reg_445 <= add_ln35_2_reg_2346;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_841_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        f1w_reg_313 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        f1w_reg_313 <= add_ln35_reg_2112;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        h_fu_126 <= 8'd0;
    end else if (((icmp_ln24_fu_527_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        h_fu_126 <= add_ln22_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_527_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        n1_reg_258 <= 7'd0;
    end else if (((icmp_ln31_2_fu_1560_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        n1_reg_258 <= add_ln28_2_fu_1621_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        th_1_reg_336 <= 7'd0;
    end else if (((icmp_ln32_1_fu_1184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        th_1_reg_336 <= add_ln31_1_reg_2145;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        th_2_reg_402 <= 7'd0;
    end else if (((icmp_ln32_2_fu_1631_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        th_2_reg_402 <= add_ln31_2_reg_2267;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        th_reg_270 <= 7'd0;
    end else if (((icmp_ln32_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        th_reg_270 <= add_ln31_reg_2015;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_1_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        tw_1_reg_347 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        tw_1_reg_347 <= add_ln32_1_reg_2173;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_2_fu_1560_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        tw_2_reg_413 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state61)) begin
        tw_2_reg_413 <= add_ln32_2_reg_2295;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_13_reg_1992 == 1'd0))) begin
        tw_reg_281 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        tw_reg_281 <= add_ln32_reg_2061;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_517_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        w_reg_246 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state6) & ((tmp_13_reg_1992 == 1'd1) | ((tmp_14_fu_738_p3 == 1'd1) & (icmp_ln31_fu_623_p2 == 1'd1))))) begin
        w_reg_246 <= add_ln24_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln31_1_reg_2145 <= add_ln31_1_fu_1105_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        add_ln31_2_reg_2267 <= add_ln31_2_fu_1566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (tmp_13_reg_1992 == 1'd0))) begin
        add_ln31_reg_2015 <= add_ln31_fu_629_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        add_ln32_1_reg_2173 <= add_ln32_1_fu_1190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        add_ln32_2_reg_2295 <= add_ln32_2_fu_1637_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln32_reg_2061 <= add_ln32_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln34_1_reg_2206 <= add_ln34_1_fu_1255_p2;
        add_ln41_7_reg_2198 <= add_ln41_7_fu_1243_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        add_ln34_2_reg_2328 <= add_ln34_2_fu_1698_p2;
        add_ln41_10_reg_2320 <= add_ln41_10_fu_1686_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln34_reg_2094 <= add_ln34_fu_847_p2;
        add_ln41_4_reg_2086 <= add_ln41_4_fu_835_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln35_1_reg_2224 <= add_ln35_1_fu_1359_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        add_ln35_2_reg_2346 <= add_ln35_2_fu_1802_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        add_ln35_reg_2112 <= add_ln35_fu_951_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_13_reg_1992 == 1'd0))) begin
        add_ln41_1_reg_2040 <= add_ln41_1_fu_732_p2;
        sext_ln41_1_reg_2035 <= sext_ln41_1_fu_716_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        add_ln41_2_reg_2254 <= add_ln41_2_fu_1546_p2;
        empty_51_reg_2259 <= empty_51_fu_1552_p1;
        sext_ln41_2_reg_2249 <= sext_ln41_2_fu_1530_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln41_reg_1981 <= add_ln41_fu_590_p2;
        sext_ln41_reg_1976 <= sext_ln41_fu_574_p1;
        tmp_13_reg_1992 <= n1_reg_258[32'd6];
        trunc_ln28_reg_1986 <= trunc_ln28_fu_596_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_13_reg_1992 == 1'd0))) begin
        add_ln84_1_reg_2030 <= add_ln84_1_fu_679_p2;
        empty_35_reg_2020 <= empty_35_fu_669_p2;
        zext_ln32_reg_2025[8 : 0] <= zext_ln32_fu_675_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_1_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        add_ln84_2_reg_2160 <= add_ln84_2_fu_1155_p2;
        empty_45_reg_2150 <= empty_45_fu_1145_p2;
        zext_ln32_2_reg_2155[8 : 0] <= zext_ln32_2_fu_1151_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_2_fu_1560_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state44))) begin
        add_ln84_5_reg_2282 <= add_ln84_5_fu_1616_p2;
        empty_55_reg_2272 <= empty_55_fu_1606_p2;
        zext_ln32_4_reg_2277[8 : 0] <= zext_ln32_4_fu_1612_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_1_fu_1184_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        conv1_output_ftmap_addr_1_reg_2183 <= p_cast49_fu_1210_p1;
        empty_46_reg_2178 <= empty_46_fu_1196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_2_fu_1631_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        conv1_output_ftmap_addr_2_reg_2305 <= p_cast52_fu_1657_p1;
        empty_56_reg_2300 <= empty_56_fu_1643_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_776_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        conv1_output_ftmap_addr_reg_2071 <= p_cast38_fu_802_p1;
        empty_36_reg_2066 <= empty_36_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_31_reg_2007 <= empty_31_fu_615_p1;
        tmp_2_reg_2001[7 : 2] <= tmp_2_fu_608_p3[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        empty_41_reg_2137 <= empty_41_fu_1091_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        h_4_reg_1949 <= h_fu_126;
        zext_ln22_reg_1956[7 : 0] <= zext_ln22_fu_513_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        p_cast20_reg_2076[8 : 0] <= p_cast20_fu_807_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        p_cast27_reg_2188[8 : 0] <= p_cast27_fu_1215_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        p_cast29_reg_2310[8 : 0] <= p_cast29_fu_1662_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state11))) begin
        reg_487 <= conv1_weights_q0;
        reg_491 <= input_ftmap_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state14))) begin
        reg_495 <= grp_fu_373_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_500 <= grp_fu_365_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_1_fu_1249_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        sub_ln41_1_reg_2211 <= sub_ln41_1_fu_1333_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_2_fu_1692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        sub_ln41_2_reg_2333 <= sub_ln41_2_fu_1776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln34_fu_841_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        sub_ln41_reg_2099 <= sub_ln41_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        zext_ln24_reg_1966[7 : 0] <= zext_ln24_fu_523_p1[7 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln22_fu_517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln22_fu_517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        conv1_biases_address0 = p_cast36_fu_1175_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        conv1_biases_address0 = p_cast34_fu_761_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        conv1_biases_address0 = zext_ln28_fu_543_p1;
    end else begin
        conv1_biases_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state4))) begin
        conv1_biases_ce0 = 1'b1;
    end else begin
        conv1_biases_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        conv1_output_ftmap_address0 = conv1_output_ftmap_addr_2_reg_2305;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        conv1_output_ftmap_address0 = p_cast52_fu_1657_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        conv1_output_ftmap_address0 = conv1_output_ftmap_addr_1_reg_2183;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        conv1_output_ftmap_address0 = p_cast49_fu_1210_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_ftmap_address0 = conv1_output_ftmap_addr_reg_2071;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        conv1_output_ftmap_address0 = p_cast38_fu_802_p1;
    end else begin
        conv1_output_ftmap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state7))) begin
        conv1_output_ftmap_ce0 = 1'b1;
    end else begin
        conv1_output_ftmap_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state61)) begin
        conv1_output_ftmap_d0 = select_ln47_2_fu_1933_p3;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        conv1_output_ftmap_d0 = select_ln47_1_fu_1490_p3;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        conv1_output_ftmap_d0 = select_ln47_fu_1082_p3;
    end else begin
        conv1_output_ftmap_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state23))) begin
        conv1_output_ftmap_we0 = 1'b1;
    end else begin
        conv1_output_ftmap_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        conv1_weights_address0 = zext_ln41_19_fu_1791_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        conv1_weights_address0 = zext_ln41_15_fu_1348_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        conv1_weights_address0 = zext_ln41_7_fu_940_p1;
    end else begin
        conv1_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        conv1_weights_ce0 = 1'b1;
    end else begin
        conv1_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_468_p0 = add54_235_reg_456;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_468_p0 = add54_2_lcssa37_reg_435;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_468_p0 = add54_132_reg_390;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_468_p0 = add54_1_lcssa34_reg_369;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_468_p0 = add54_029_reg_324;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_468_p0 = add54_0_lcssa31_reg_303;
    end else begin
        grp_fu_468_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_468_p1 = empty_51_reg_2259;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_fu_468_p1 = empty_41_reg_2137;
    end else if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state15))) begin
        grp_fu_468_p1 = reg_495;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_468_p1 = empty_31_reg_2007;
    end else begin
        grp_fu_468_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_478_p0 = bitcast_ln41_4_fu_1881_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_478_p0 = bitcast_ln41_2_fu_1438_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_478_p0 = bitcast_ln41_fu_1030_p1;
    end else begin
        grp_fu_478_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        grp_fu_478_p1 = bitcast_ln41_5_fu_1886_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        grp_fu_478_p1 = bitcast_ln41_3_fu_1443_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_fu_478_p1 = bitcast_ln41_1_fu_1035_p1;
    end else begin
        grp_fu_478_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        input_ftmap_address0 = zext_ln41_20_fu_1876_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        input_ftmap_address0 = zext_ln41_17_fu_1433_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        input_ftmap_address0 = zext_ln41_10_fu_1025_p1;
    end else begin
        input_ftmap_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state48) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state10))) begin
        input_ftmap_ce0 = 1'b1;
    end else begin
        input_ftmap_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln22_fu_517_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln24_fu_527_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_13_fu_600_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & ((tmp_13_reg_1992 == 1'd1) | ((tmp_14_fu_738_p3 == 1'd1) & (icmp_ln31_fu_623_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((tmp_14_fu_738_p3 == 1'd0) & (icmp_ln31_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_13_reg_1992 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln32_fu_776_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln34_fu_841_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((icmp_ln35_fu_945_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln31_1_fu_1099_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln32_1_fu_1184_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln34_1_fu_1249_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln35_1_fu_1353_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((icmp_ln31_2_fu_1560_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln32_2_fu_1631_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln34_2_fu_1692_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((icmp_ln35_2_fu_1796_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln22_fu_533_p2 = (h_fu_126 + 8'd85);

assign add_ln24_fu_766_p2 = (w_reg_246 + 8'd85);

assign add_ln28_1_cast20_fu_1508_p1 = add_ln28_1_fu_1499_p2;

assign add_ln28_1_cast21_fu_1504_p1 = add_ln28_1_fu_1499_p2;

assign add_ln28_1_fu_1499_p2 = (trunc_ln28_reg_1986 + 6'd2);

assign add_ln28_2_fu_1621_p2 = (n1_reg_258 + 7'd3);

assign add_ln28_cast16_fu_690_p1 = add_ln28_fu_684_p2;

assign add_ln28_cast_fu_694_p1 = add_ln28_fu_684_p2;

assign add_ln28_fu_684_p2 = (n1_reg_258 + 7'd1);

assign add_ln31_1_fu_1105_p2 = (th_1_reg_336 + 7'd1);

assign add_ln31_2_fu_1566_p2 = (th_2_reg_402 + 7'd1);

assign add_ln31_fu_629_p2 = (th_reg_270 + 7'd1);

assign add_ln32_1_fu_1190_p2 = (tw_1_reg_347 + 7'd1);

assign add_ln32_2_fu_1637_p2 = (tw_2_reg_413 + 7'd1);

assign add_ln32_fu_782_p2 = (tw_reg_281 + 7'd1);

assign add_ln34_1_fu_1255_p2 = (f1h_1_reg_358 + 4'd1);

assign add_ln34_2_fu_1698_p2 = (f1h_2_reg_424 + 4'd1);

assign add_ln34_fu_847_p2 = (f1h_reg_292 + 4'd1);

assign add_ln35_1_fu_1359_p2 = (f1w_1_reg_379 + 4'd1);

assign add_ln35_2_fu_1802_p2 = (f1w_2_reg_445 + 4'd1);

assign add_ln35_fu_951_p2 = (f1w_reg_313 + 4'd1);

assign add_ln39_1_fu_967_p2 = ($signed(sext_ln39_fu_963_p1) + $signed(p_cast20_reg_2076));

assign add_ln39_2_fu_1365_p2 = ($signed(f1w_1_reg_379) + $signed(4'd12));

assign add_ln39_3_fu_1375_p2 = ($signed(sext_ln39_1_fu_1371_p1) + $signed(p_cast27_reg_2188));

assign add_ln39_4_fu_1808_p2 = ($signed(f1w_2_reg_445) + $signed(4'd12));

assign add_ln39_5_fu_1818_p2 = ($signed(sext_ln39_2_fu_1814_p1) + $signed(p_cast29_reg_2310));

assign add_ln39_fu_957_p2 = ($signed(f1w_reg_313) + $signed(4'd12));

assign add_ln41_10_fu_1686_p2 = (p_shl4_fu_1678_p3 + zext_ln41_13_fu_1674_p1);

assign add_ln41_11_fu_1343_p2 = (add_ln41_7_reg_2198 + zext_ln41_14_fu_1339_p1);

assign add_ln41_12_fu_1428_p2 = ($signed(sub_ln41_1_reg_2211) + $signed(sext_ln41_4_fu_1424_p1));

assign add_ln41_13_fu_1786_p2 = (add_ln41_10_reg_2320 + zext_ln41_18_fu_1782_p1);

assign add_ln41_14_fu_1871_p2 = ($signed(sub_ln41_2_reg_2333) + $signed(sext_ln41_5_fu_1867_p1));

assign add_ln41_1_fu_732_p2 = (zext_ln41_1_fu_728_p1 + add_ln28_cast16_fu_690_p1);

assign add_ln41_2_fu_1546_p2 = (zext_ln41_2_fu_1542_p1 + add_ln28_1_cast21_fu_1504_p1);

assign add_ln41_3_fu_814_p2 = (add_ln41_reg_1981 + zext_ln41_3_fu_810_p1);

assign add_ln41_4_fu_835_p2 = (p_shl3_fu_827_p3 + zext_ln41_4_fu_819_p1);

assign add_ln41_5_fu_935_p2 = (add_ln41_4_reg_2086 + zext_ln41_6_fu_931_p1);

assign add_ln41_6_fu_1222_p2 = (add_ln41_1_reg_2040 + zext_ln41_8_fu_1218_p1);

assign add_ln41_7_fu_1243_p2 = (p_shl8_fu_1235_p3 + zext_ln41_9_fu_1227_p1);

assign add_ln41_8_fu_1020_p2 = ($signed(sub_ln41_reg_2099) + $signed(sext_ln41_3_fu_1016_p1));

assign add_ln41_9_fu_1669_p2 = (add_ln41_2_reg_2254 + zext_ln41_12_fu_1665_p1);

assign add_ln41_fu_590_p2 = (zext_ln41_fu_586_p1 + n1_cast15_fu_548_p1);

assign add_ln84_1_fu_679_p2 = (th_cast19_fu_635_p1 + h_4_reg_1949);

assign add_ln84_2_fu_1155_p2 = (th_1_cast24_fu_1111_p1 + h_4_reg_1949);

assign add_ln84_3_fu_1294_p2 = ($signed(sext_ln84_1_fu_1290_p1) + $signed(add_ln84_2_reg_2160));

assign add_ln84_4_fu_1737_p2 = ($signed(sext_ln84_2_fu_1733_p1) + $signed(add_ln84_5_reg_2282));

assign add_ln84_5_fu_1616_p2 = (th_2_cast26_fu_1572_p1 + h_4_reg_1949);

assign add_ln84_fu_886_p2 = ($signed(sext_ln84_fu_882_p1) + $signed(add_ln84_1_reg_2030));

assign and_ln47_1_fu_1484_p2 = (or_ln47_1_fu_1478_p2 & grp_fu_377_p_dout0);

assign and_ln47_2_fu_1927_p2 = (or_ln47_2_fu_1921_p2 & grp_fu_377_p_dout0);

assign and_ln47_fu_1076_p2 = (or_ln47_fu_1070_p2 & grp_fu_377_p_dout0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln41_1_fu_1035_p1 = reg_491;

assign bitcast_ln41_2_fu_1438_p1 = reg_487;

assign bitcast_ln41_3_fu_1443_p1 = reg_491;

assign bitcast_ln41_4_fu_1881_p1 = reg_487;

assign bitcast_ln41_5_fu_1886_p1 = reg_491;

assign bitcast_ln41_fu_1030_p1 = reg_487;

assign bitcast_ln47_1_fu_1448_p1 = reg_500;

assign bitcast_ln47_2_fu_1891_p1 = reg_500;

assign bitcast_ln47_fu_1040_p1 = reg_500;

assign empty_31_fu_615_p1 = conv1_biases_q0;

assign empty_32_fu_639_p2 = (zext_ln31_fu_619_p1 + zext_ln22_reg_1956);

assign empty_33_fu_648_p2 = ($signed(sext_ln41_reg_1976) + $signed(p_cast17_fu_644_p1));

assign empty_34_fu_657_p1 = empty_33_fu_648_p2[13:0];

assign empty_35_fu_669_p2 = ($signed(p_shl2_fu_661_p3) - $signed(p_cast18_fu_653_p1));

assign empty_36_fu_788_p2 = (zext_ln32_1_fu_772_p1 + zext_ln24_reg_1966);

assign empty_37_fu_797_p2 = (empty_35_reg_2020 + p_cast19_fu_793_p1);

assign empty_38_fu_863_p2 = ($signed(tmp_cast_fu_859_p1) + $signed(zext_ln32_reg_2025));

assign empty_39_fu_710_p2 = (tmp_17_cast_fu_706_p1 - add_ln28_cast_fu_694_p1);

assign empty_40_fu_746_p2 = (tmp_2_reg_2001 + 8'd4);

assign empty_41_fu_1091_p1 = conv1_biases_q0;

assign empty_42_fu_1115_p2 = (zext_ln31_1_fu_1095_p1 + zext_ln22_reg_1956);

assign empty_43_fu_1124_p2 = ($signed(sext_ln41_1_reg_2035) + $signed(p_cast23_fu_1120_p1));

assign empty_44_fu_1133_p1 = empty_43_fu_1124_p2[13:0];

assign empty_45_fu_1145_p2 = ($signed(p_shl7_fu_1137_p3) - $signed(p_cast24_fu_1129_p1));

assign empty_46_fu_1196_p2 = (zext_ln32_3_fu_1180_p1 + zext_ln24_reg_1966);

assign empty_47_fu_1205_p2 = (empty_45_reg_2150 + p_cast30_fu_1201_p1);

assign empty_48_fu_1271_p2 = ($signed(tmp6_cast_fu_1267_p1) + $signed(zext_ln32_2_reg_2155));

assign empty_49_fu_1524_p2 = (tmp_21_cast_fu_1520_p1 - add_ln28_1_cast20_fu_1508_p1);

assign empty_50_fu_1160_p2 = (tmp_2_reg_2001 + 8'd8);

assign empty_51_fu_1552_p1 = conv1_biases_q0;

assign empty_52_fu_1576_p2 = (zext_ln31_2_fu_1556_p1 + zext_ln22_reg_1956);

assign empty_53_fu_1585_p2 = ($signed(sext_ln41_2_reg_2249) + $signed(p_cast26_fu_1581_p1));

assign empty_54_fu_1594_p1 = empty_53_fu_1585_p2[13:0];

assign empty_55_fu_1606_p2 = ($signed(p_shl_fu_1598_p3) - $signed(p_cast28_fu_1590_p1));

assign empty_56_fu_1643_p2 = (zext_ln32_5_fu_1627_p1 + zext_ln24_reg_1966);

assign empty_57_fu_1652_p2 = (empty_55_reg_2272 + p_cast31_fu_1648_p1);

assign empty_58_fu_1714_p2 = ($signed(tmp12_cast_fu_1710_p1) + $signed(zext_ln32_4_reg_2277));

assign empty_fu_568_p2 = (tmp_13_cast_fu_564_p1 - n1_cast_fu_552_p1);

assign grp_fu_365_p_ce = 1'b1;

assign grp_fu_365_p_din0 = grp_fu_468_p0;

assign grp_fu_365_p_din1 = grp_fu_468_p1;

assign grp_fu_365_p_opcode = 2'd0;

assign grp_fu_373_p_ce = 1'b1;

assign grp_fu_373_p_din0 = grp_fu_478_p0;

assign grp_fu_373_p_din1 = grp_fu_478_p1;

assign grp_fu_377_p_ce = 1'b1;

assign grp_fu_377_p_din0 = reg_500;

assign grp_fu_377_p_din1 = 32'd0;

assign grp_fu_377_p_opcode = 5'd4;

assign icmp_ln22_fu_517_p2 = ((h_fu_126 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_527_p2 = ((w_reg_246 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln31_1_fu_1099_p2 = ((th_1_reg_336 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln31_2_fu_1560_p2 = ((th_2_reg_402 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_623_p2 = ((th_reg_270 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln32_1_fu_1184_p2 = ((tw_1_reg_347 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln32_2_fu_1631_p2 = ((tw_2_reg_413 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_776_p2 = ((tw_reg_281 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln34_1_fu_1249_p2 = ((f1h_1_reg_358 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln34_2_fu_1692_p2 = ((f1h_2_reg_424 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln34_fu_841_p2 = ((f1h_reg_292 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln35_1_fu_1353_p2 = ((f1w_1_reg_379 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln35_2_fu_1796_p2 = ((f1w_2_reg_445 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_945_p2 = ((f1w_reg_313 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln47_1_fu_1064_p2 = ((trunc_ln47_fu_1054_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_2_fu_1466_p2 = ((tmp_5_fu_1452_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_3_fu_1472_p2 = ((trunc_ln47_1_fu_1462_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_4_fu_1909_p2 = ((tmp_7_fu_1895_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln47_5_fu_1915_p2 = ((trunc_ln47_2_fu_1905_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_1058_p2 = ((tmp_3_fu_1044_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln84_2_fu_980_p2 = (($signed(add_ln39_1_fu_967_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln84_3_fu_1284_p2 = (($signed(empty_48_fu_1271_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln84_4_fu_1727_p2 = (($signed(empty_58_fu_1714_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln84_5_fu_1388_p2 = (($signed(add_ln39_3_fu_1375_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln84_6_fu_1831_p2 = (($signed(add_ln39_5_fu_1818_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_876_p2 = (($signed(empty_38_fu_863_p2) > $signed(10'd254)) ? 1'b1 : 1'b0);

assign n1_cast15_fu_548_p1 = n1_reg_258;

assign n1_cast_fu_552_p1 = n1_reg_258;

assign or_ln47_1_fu_1478_p2 = (icmp_ln47_3_fu_1472_p2 | icmp_ln47_2_fu_1466_p2);

assign or_ln47_2_fu_1921_p2 = (icmp_ln47_5_fu_1915_p2 | icmp_ln47_4_fu_1909_p2);

assign or_ln47_fu_1070_p2 = (icmp_ln47_fu_1058_p2 | icmp_ln47_1_fu_1064_p2);

assign or_ln83_2_fu_1002_p2 = (tmp_19_fu_972_p3 | icmp_ln84_2_fu_980_p2);

assign or_ln83_3_fu_1307_p2 = (tmp_21_fu_1276_p3 | icmp_ln84_3_fu_1284_p2);

assign or_ln83_4_fu_1750_p2 = (tmp_23_fu_1719_p3 | icmp_ln84_4_fu_1727_p2);

assign or_ln83_5_fu_1410_p2 = (tmp_25_fu_1380_p3 | icmp_ln84_5_fu_1388_p2);

assign or_ln83_6_fu_1853_p2 = (tmp_27_fu_1823_p3 | icmp_ln84_6_fu_1831_p2);

assign or_ln83_fu_899_p2 = (tmp_17_fu_868_p3 | icmp_ln84_fu_876_p2);

assign p_cast17_fu_644_p1 = empty_32_fu_639_p2;

assign p_cast18_fu_653_p1 = empty_33_fu_648_p2;

assign p_cast19_fu_793_p1 = empty_36_fu_788_p2;

assign p_cast20_fu_807_p1 = empty_36_reg_2066;

assign p_cast23_fu_1120_p1 = empty_42_fu_1115_p2;

assign p_cast24_fu_1129_p1 = empty_43_fu_1124_p2;

assign p_cast26_fu_1581_p1 = empty_52_fu_1576_p2;

assign p_cast27_fu_1215_p1 = empty_46_reg_2178;

assign p_cast28_fu_1590_p1 = empty_53_fu_1585_p2;

assign p_cast29_fu_1662_p1 = empty_56_reg_2300;

assign p_cast30_fu_1201_p1 = empty_46_fu_1196_p2;

assign p_cast31_fu_1648_p1 = empty_56_fu_1643_p2;

assign p_cast34_fu_761_p1 = tmp_11_fu_751_p4;

assign p_cast36_fu_1175_p1 = tmp_16_fu_1165_p4;

assign p_cast38_fu_802_p1 = empty_37_fu_797_p2;

assign p_cast49_fu_1210_p1 = empty_47_fu_1205_p2;

assign p_cast52_fu_1657_p1 = empty_57_fu_1652_p2;

assign p_shl2_fu_661_p3 = {{empty_34_fu_657_p1}, {8'd0}};

assign p_shl3_fu_827_p3 = {{trunc_ln41_fu_823_p1}, {3'd0}};

assign p_shl4_fu_1678_p3 = {{add_ln41_9_fu_1669_p2}, {3'd0}};

assign p_shl7_fu_1137_p3 = {{empty_44_fu_1133_p1}, {8'd0}};

assign p_shl8_fu_1235_p3 = {{trunc_ln41_1_fu_1231_p1}, {3'd0}};

assign p_shl_fu_1598_p3 = {{empty_54_fu_1594_p1}, {8'd0}};

assign select_ln47_1_fu_1490_p3 = ((and_ln47_1_fu_1484_p2[0:0] == 1'b1) ? 32'd0 : reg_500);

assign select_ln47_2_fu_1933_p3 = ((and_ln47_2_fu_1927_p2[0:0] == 1'b1) ? 32'd0 : reg_500);

assign select_ln47_fu_1082_p3 = ((and_ln47_fu_1076_p2[0:0] == 1'b1) ? 32'd0 : reg_500);

assign select_ln83_11_fu_1402_p3 = ((tmp_26_fu_1394_p3[0:0] == 1'b1) ? 10'd0 : 10'd254);

assign select_ln83_13_fu_1845_p3 = ((tmp_28_fu_1837_p3[0:0] == 1'b1) ? 10'd0 : 10'd254);

assign select_ln83_5_fu_994_p3 = ((tmp_20_fu_986_p3[0:0] == 1'b1) ? 10'd0 : 10'd254);

assign select_ln83_7_fu_1299_p3 = ((tmp_21_fu_1276_p3[0:0] == 1'b1) ? 8'd0 : 8'd254);

assign select_ln83_9_fu_1742_p3 = ((tmp_23_fu_1719_p3[0:0] == 1'b1) ? 8'd0 : 8'd254);

assign select_ln83_fu_891_p3 = ((tmp_17_fu_868_p3[0:0] == 1'b1) ? 8'd0 : 8'd254);

assign sext_ln39_1_fu_1371_p1 = $signed(add_ln39_2_fu_1365_p2);

assign sext_ln39_2_fu_1814_p1 = $signed(add_ln39_4_fu_1808_p2);

assign sext_ln39_fu_963_p1 = $signed(add_ln39_fu_957_p2);

assign sext_ln41_1_fu_716_p1 = $signed(empty_39_fu_710_p2);

assign sext_ln41_2_fu_1530_p1 = $signed(empty_49_fu_1524_p2);

assign sext_ln41_3_fu_1016_p1 = $signed(xPixelClamped_fu_1008_p3);

assign sext_ln41_4_fu_1424_p1 = $signed(xPixelClamped_2_fu_1416_p3);

assign sext_ln41_5_fu_1867_p1 = $signed(xPixelClamped_3_fu_1859_p3);

assign sext_ln41_fu_574_p1 = $signed(empty_fu_568_p2);

assign sext_ln84_1_fu_1290_p1 = tmp6_fu_1261_p2;

assign sext_ln84_2_fu_1733_p1 = tmp12_fu_1704_p2;

assign sext_ln84_fu_882_p1 = tmp_fu_853_p2;

assign sub_ln41_1_fu_1333_p2 = (tmp_22_fu_1325_p3 - zext_ln41_11_fu_1321_p1);

assign sub_ln41_2_fu_1776_p2 = (tmp_24_fu_1768_p3 - zext_ln41_16_fu_1764_p1);

assign sub_ln41_fu_925_p2 = (tmp_18_fu_917_p3 - zext_ln41_5_fu_913_p1);

assign th_1_cast24_fu_1111_p1 = th_1_reg_336;

assign th_2_cast26_fu_1572_p1 = th_2_reg_402;

assign th_cast19_fu_635_p1 = th_reg_270;

assign tmp12_cast_fu_1710_p1 = tmp12_fu_1704_p2;

assign tmp12_fu_1704_p2 = ($signed(f1h_2_reg_424) + $signed(4'd12));

assign tmp6_cast_fu_1267_p1 = tmp6_fu_1261_p2;

assign tmp6_fu_1261_p2 = ($signed(f1h_1_reg_358) + $signed(4'd12));

assign tmp_10_fu_720_p3 = {{add_ln28_fu_684_p2}, {3'd0}};

assign tmp_11_fu_751_p4 = {{empty_40_fu_746_p2[7:2]}};

assign tmp_12_fu_1512_p3 = {{add_ln28_1_fu_1499_p2}, {8'd0}};

assign tmp_13_cast_fu_564_p1 = tmp_s_fu_556_p3;

assign tmp_13_fu_600_p3 = n1_reg_258[32'd6];

assign tmp_14_fu_738_p3 = add_ln28_fu_684_p2[32'd6];

assign tmp_15_fu_1534_p3 = {{add_ln28_1_fu_1499_p2}, {3'd0}};

assign tmp_16_fu_1165_p4 = {{empty_50_fu_1160_p2[7:2]}};

assign tmp_17_cast_fu_706_p1 = tmp_9_fu_698_p3;

assign tmp_17_fu_868_p3 = empty_38_fu_863_p2[32'd9];

assign tmp_18_fu_917_p3 = {{yPixelClamped_fu_905_p3}, {8'd0}};

assign tmp_19_fu_972_p3 = add_ln39_1_fu_967_p2[32'd9];

assign tmp_1_fu_578_p3 = {{n1_reg_258}, {3'd0}};

assign tmp_20_fu_986_p3 = add_ln39_1_fu_967_p2[32'd9];

assign tmp_21_cast_fu_1520_p1 = tmp_12_fu_1512_p3;

assign tmp_21_fu_1276_p3 = empty_48_fu_1271_p2[32'd9];

assign tmp_22_fu_1325_p3 = {{yPixelClamped_2_fu_1313_p3}, {8'd0}};

assign tmp_23_fu_1719_p3 = empty_58_fu_1714_p2[32'd9];

assign tmp_24_fu_1768_p3 = {{yPixelClamped_3_fu_1756_p3}, {8'd0}};

assign tmp_25_fu_1380_p3 = add_ln39_3_fu_1375_p2[32'd9];

assign tmp_26_fu_1394_p3 = add_ln39_3_fu_1375_p2[32'd9];

assign tmp_27_fu_1823_p3 = add_ln39_5_fu_1818_p2[32'd9];

assign tmp_28_fu_1837_p3 = add_ln39_5_fu_1818_p2[32'd9];

assign tmp_2_fu_608_p3 = {{trunc_ln28_reg_1986}, {2'd0}};

assign tmp_3_fu_1044_p4 = {{bitcast_ln47_fu_1040_p1[30:23]}};

assign tmp_5_fu_1452_p4 = {{bitcast_ln47_1_fu_1448_p1[30:23]}};

assign tmp_7_fu_1895_p4 = {{bitcast_ln47_2_fu_1891_p1[30:23]}};

assign tmp_9_fu_698_p3 = {{add_ln28_fu_684_p2}, {8'd0}};

assign tmp_cast_fu_859_p1 = tmp_fu_853_p2;

assign tmp_fu_853_p2 = ($signed(f1h_reg_292) + $signed(4'd12));

assign tmp_s_fu_556_p3 = {{n1_reg_258}, {8'd0}};

assign trunc_ln28_fu_596_p1 = n1_reg_258[5:0];

assign trunc_ln41_1_fu_1231_p1 = add_ln41_6_fu_1222_p2[9:0];

assign trunc_ln41_fu_823_p1 = add_ln41_3_fu_814_p2[9:0];

assign trunc_ln47_1_fu_1462_p1 = bitcast_ln47_1_fu_1448_p1[22:0];

assign trunc_ln47_2_fu_1905_p1 = bitcast_ln47_2_fu_1891_p1[22:0];

assign trunc_ln47_fu_1054_p1 = bitcast_ln47_fu_1040_p1[22:0];

assign xPixelClamped_2_fu_1416_p3 = ((or_ln83_5_fu_1410_p2[0:0] == 1'b1) ? select_ln83_11_fu_1402_p3 : add_ln39_3_fu_1375_p2);

assign xPixelClamped_3_fu_1859_p3 = ((or_ln83_6_fu_1853_p2[0:0] == 1'b1) ? select_ln83_13_fu_1845_p3 : add_ln39_5_fu_1818_p2);

assign xPixelClamped_fu_1008_p3 = ((or_ln83_2_fu_1002_p2[0:0] == 1'b1) ? select_ln83_5_fu_994_p3 : add_ln39_1_fu_967_p2);

assign yPixelClamped_2_fu_1313_p3 = ((or_ln83_3_fu_1307_p2[0:0] == 1'b1) ? select_ln83_7_fu_1299_p3 : add_ln84_3_fu_1294_p2);

assign yPixelClamped_3_fu_1756_p3 = ((or_ln83_4_fu_1750_p2[0:0] == 1'b1) ? select_ln83_9_fu_1742_p3 : add_ln84_4_fu_1737_p2);

assign yPixelClamped_fu_905_p3 = ((or_ln83_fu_899_p2[0:0] == 1'b1) ? select_ln83_fu_891_p3 : add_ln84_fu_886_p2);

assign zext_ln22_fu_513_p1 = h_fu_126;

assign zext_ln24_fu_523_p1 = w_reg_246;

assign zext_ln28_fu_543_p1 = n1_reg_258;

assign zext_ln31_1_fu_1095_p1 = th_1_reg_336;

assign zext_ln31_2_fu_1556_p1 = th_2_reg_402;

assign zext_ln31_fu_619_p1 = th_reg_270;

assign zext_ln32_1_fu_772_p1 = tw_reg_281;

assign zext_ln32_2_fu_1151_p1 = empty_42_fu_1115_p2;

assign zext_ln32_3_fu_1180_p1 = tw_1_reg_347;

assign zext_ln32_4_fu_1612_p1 = empty_52_fu_1576_p2;

assign zext_ln32_5_fu_1627_p1 = tw_2_reg_413;

assign zext_ln32_fu_675_p1 = empty_32_fu_639_p2;

assign zext_ln41_10_fu_1025_p1 = add_ln41_8_fu_1020_p2;

assign zext_ln41_11_fu_1321_p1 = yPixelClamped_2_fu_1313_p3;

assign zext_ln41_12_fu_1665_p1 = f1h_2_reg_424;

assign zext_ln41_13_fu_1674_p1 = add_ln41_9_fu_1669_p2;

assign zext_ln41_14_fu_1339_p1 = f1w_1_reg_379;

assign zext_ln41_15_fu_1348_p1 = add_ln41_11_fu_1343_p2;

assign zext_ln41_16_fu_1764_p1 = yPixelClamped_3_fu_1756_p3;

assign zext_ln41_17_fu_1433_p1 = add_ln41_12_fu_1428_p2;

assign zext_ln41_18_fu_1782_p1 = f1w_2_reg_445;

assign zext_ln41_19_fu_1791_p1 = add_ln41_13_fu_1786_p2;

assign zext_ln41_1_fu_728_p1 = tmp_10_fu_720_p3;

assign zext_ln41_20_fu_1876_p1 = add_ln41_14_fu_1871_p2;

assign zext_ln41_2_fu_1542_p1 = tmp_15_fu_1534_p3;

assign zext_ln41_3_fu_810_p1 = f1h_reg_292;

assign zext_ln41_4_fu_819_p1 = add_ln41_3_fu_814_p2;

assign zext_ln41_5_fu_913_p1 = yPixelClamped_fu_905_p3;

assign zext_ln41_6_fu_931_p1 = f1w_reg_313;

assign zext_ln41_7_fu_940_p1 = add_ln41_5_fu_935_p2;

assign zext_ln41_8_fu_1218_p1 = f1h_1_reg_358;

assign zext_ln41_9_fu_1227_p1 = add_ln41_6_fu_1222_p2;

assign zext_ln41_fu_586_p1 = tmp_1_fu_578_p3;

always @ (posedge ap_clk) begin
    zext_ln22_reg_1956[8] <= 1'b0;
    zext_ln24_reg_1966[8] <= 1'b0;
    tmp_2_reg_2001[1:0] <= 2'b00;
    zext_ln32_reg_2025[9] <= 1'b0;
    p_cast20_reg_2076[9] <= 1'b0;
    zext_ln32_2_reg_2155[9] <= 1'b0;
    p_cast27_reg_2188[9] <= 1'b0;
    zext_ln32_4_reg_2277[9] <= 1'b0;
    p_cast29_reg_2310[9] <= 1'b0;
end

endmodule //srcnn_conv1
