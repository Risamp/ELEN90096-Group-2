// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv3_Pipeline_KR_KC (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_fm_buffer_0_load_1,
        zext_ln60_1,
        select_ln46_2,
        empty,
        zext_ln47,
        zext_ln63,
        p_out,
        p_out_ap_vld,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_q0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_q0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_q0,
        input_fm_buffer_address0,
        input_fm_buffer_ce0,
        input_fm_buffer_q0,
        input_fm_buffer_address1,
        input_fm_buffer_ce1,
        input_fm_buffer_q1,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_q0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_q0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0,
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_q0,
        grp_fu_1696_p_din0,
        grp_fu_1696_p_din1,
        grp_fu_1696_p_opcode,
        grp_fu_1696_p_dout0,
        grp_fu_1696_p_ce,
        grp_fu_1700_p_din0,
        grp_fu_1700_p_din1,
        grp_fu_1700_p_opcode,
        grp_fu_1700_p_dout0,
        grp_fu_1700_p_ce,
        grp_fu_1704_p_din0,
        grp_fu_1704_p_din1,
        grp_fu_1704_p_dout0,
        grp_fu_1704_p_ce,
        grp_fu_1708_p_din0,
        grp_fu_1708_p_din1,
        grp_fu_1708_p_dout0,
        grp_fu_1708_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] output_fm_buffer_0_load_1;
input  [6:0] zext_ln60_1;
input  [2:0] select_ln46_2;
input  [9:0] empty;
input  [7:0] zext_ln47;
input  [7:0] zext_ln63;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0;
output   p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0;
input  [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_q0;
output  [6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0;
output   p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0;
input  [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_q0;
output  [6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0;
output   p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0;
input  [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_q0;
output  [16:0] input_fm_buffer_address0;
output   input_fm_buffer_ce0;
input  [31:0] input_fm_buffer_q0;
output  [16:0] input_fm_buffer_address1;
output   input_fm_buffer_ce1;
input  [31:0] input_fm_buffer_q1;
output  [6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0;
output   p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0;
input  [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_q0;
output  [6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0;
output   p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0;
input  [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_q0;
output  [6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0;
output   p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0;
input  [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_q0;
output  [31:0] grp_fu_1696_p_din0;
output  [31:0] grp_fu_1696_p_din1;
output  [1:0] grp_fu_1696_p_opcode;
input  [31:0] grp_fu_1696_p_dout0;
output   grp_fu_1696_p_ce;
output  [31:0] grp_fu_1700_p_din0;
output  [31:0] grp_fu_1700_p_din1;
output  [1:0] grp_fu_1700_p_opcode;
input  [31:0] grp_fu_1700_p_dout0;
output   grp_fu_1700_p_ce;
output  [31:0] grp_fu_1704_p_din0;
output  [31:0] grp_fu_1704_p_din1;
input  [31:0] grp_fu_1704_p_dout0;
output   grp_fu_1704_p_ce;
output  [31:0] grp_fu_1708_p_din0;
output  [31:0] grp_fu_1708_p_din1;
input  [31:0] grp_fu_1708_p_dout0;
output   grp_fu_1708_p_ce;

reg ap_idle;
reg p_out_ap_vld;
reg[6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0;
reg p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0;
reg[6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0;
reg p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0;
reg[6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0;
reg p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0;
reg[16:0] input_fm_buffer_address0;
reg input_fm_buffer_ce0;
reg[16:0] input_fm_buffer_address1;
reg input_fm_buffer_ce1;
reg[6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0;
reg p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0;
reg[6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0;
reg p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0;
reg[6:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0;
reg p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state6_pp0_stage2_iter1;
wire    ap_block_state9_pp0_stage2_iter2;
wire    ap_block_state12_pp0_stage2_iter3;
wire    ap_block_state15_pp0_stage2_iter4;
wire    ap_block_state18_pp0_stage2_iter5;
wire    ap_block_state21_pp0_stage2_iter6;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln49_reg_777;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state7_pp0_stage0_iter2;
wire    ap_block_state10_pp0_stage0_iter3;
wire    ap_block_state13_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state19_pp0_stage0_iter6;
wire    ap_block_state22_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln46_2_cast_fu_341_p1;
reg   [3:0] select_ln46_2_cast_reg_750;
wire   [16:0] zext_ln63_cast_fu_345_p1;
reg   [16:0] zext_ln63_cast_reg_756;
wire   [16:0] zext_ln47_cast_fu_349_p1;
reg   [16:0] zext_ln47_cast_reg_762;
reg   [2:0] kr_1_reg_768;
wire   [0:0] icmp_ln49_fu_385_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_state8_pp0_stage1_iter2;
wire    ap_block_state11_pp0_stage1_iter3;
wire    ap_block_state14_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state20_pp0_stage1_iter6;
wire    ap_block_state23_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln49_reg_777_pp0_iter1_reg;
reg   [0:0] icmp_ln49_reg_777_pp0_iter2_reg;
reg   [0:0] icmp_ln49_reg_777_pp0_iter3_reg;
reg   [0:0] icmp_ln49_reg_777_pp0_iter4_reg;
reg   [0:0] icmp_ln49_reg_777_pp0_iter5_reg;
wire   [2:0] add_ln49_fu_397_p2;
reg   [2:0] add_ln49_reg_781;
wire   [0:0] icmp_ln50_fu_416_p2;
reg   [0:0] icmp_ln50_reg_789;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln50_reg_789_pp0_iter1_reg;
reg   [0:0] icmp_ln50_reg_789_pp0_iter2_reg;
reg   [0:0] icmp_ln50_reg_789_pp0_iter3_reg;
reg   [0:0] icmp_ln50_reg_789_pp0_iter4_reg;
reg   [0:0] icmp_ln50_reg_789_pp0_iter5_reg;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_load_reg_834;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_load_reg_839;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_load_reg_844;
reg   [31:0] input_fm_buffer_load_reg_849;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_load_reg_854;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_load_reg_859;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_load_reg_864;
reg   [31:0] input_fm_buffer_load_1_reg_869;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_load_1_reg_914;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_load_1_reg_919;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_load_1_reg_924;
reg   [31:0] input_fm_buffer_load_2_reg_929;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_load_1_reg_934;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_load_1_reg_939;
reg   [31:0] p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_load_1_reg_944;
reg   [31:0] input_fm_buffer_load_3_reg_949;
wire   [31:0] tmp_fu_650_p5;
reg   [31:0] tmp_reg_954;
wire   [31:0] tmp_4_fu_659_p5;
reg   [31:0] tmp_4_reg_959;
wire   [31:0] tmp_mid1_fu_672_p5;
reg   [31:0] tmp_mid1_reg_964;
wire   [31:0] tmp_4_mid1_fu_681_p5;
reg   [31:0] tmp_4_mid1_reg_969;
reg   [31:0] mul_reg_974;
reg   [31:0] mul_1_reg_979;
reg   [31:0] mul_1_reg_979_pp0_iter4_reg;
reg   [31:0] mul_mid1_reg_984;
reg   [31:0] mul_1_mid1_reg_989;
reg   [31:0] mul_1_mid1_reg_989_pp0_iter4_reg;
reg   [31:0] tmp_1_reg_994;
reg   [31:0] tmp_1_mid1_reg_999;
reg   [31:0] tmp_2_reg_1004;
wire   [31:0] select_ln49_fu_690_p3;
reg   [31:0] select_ln49_reg_1009;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_condition_exit_pp0_iter5_stage2;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln60_2_fu_495_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] p_cast6_fu_534_p1;
wire   [63:0] p_cast7_fu_544_p1;
wire   [63:0] zext_ln60_4_fu_592_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] p_cast9_fu_631_p1;
wire   [63:0] p_cast10_fu_641_p1;
reg   [1:0] kc0_fu_98;
wire   [1:0] kc0_1_fu_434_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage2;
reg   [31:0] empty_59_fu_102;
reg   [31:0] ap_sig_allocacmp_p_load;
reg   [2:0] kr_fu_106;
wire   [2:0] select_ln49_1_fu_422_p3;
reg   [2:0] ap_sig_allocacmp_kr_1;
reg   [3:0] indvar_flatten34_fu_110;
wire   [3:0] add_ln49_1_fu_391_p2;
wire    ap_block_pp0_stage1_01001;
reg   [31:0] grp_fu_324_p0;
reg   [31:0] grp_fu_324_p1;
reg   [31:0] grp_fu_329_p0;
reg   [31:0] grp_fu_329_p1;
reg   [31:0] grp_fu_333_p0;
reg   [31:0] grp_fu_333_p1;
reg   [31:0] grp_fu_337_p0;
reg   [31:0] grp_fu_337_p1;
wire   [2:0] grp_fu_402_p0;
wire   [1:0] add_ln50_fu_428_p2;
wire   [2:0] mul_ln49_fu_458_p0;
wire   [4:0] mul_ln49_fu_458_p1;
wire   [6:0] mul_ln49_fu_458_p2;
wire   [1:0] tmp_5_fu_464_p4;
wire   [5:0] trunc_ln60_fu_474_p1;
wire   [5:0] zext_ln60_fu_477_p1;
wire   [5:0] add_ln60_fu_481_p2;
wire   [6:0] tmp_s_fu_487_p3;
wire   [3:0] zext_ln49_fu_452_p1;
wire   [3:0] empty_60_fu_505_p2;
wire   [9:0] p_cast_fu_510_p1;
wire   [9:0] empty_61_fu_514_p2;
wire   [9:0] empty_62_fu_523_p0;
wire   [9:0] empty_62_fu_523_p1;
wire   [16:0] empty_62_fu_523_p2;
wire   [16:0] empty_63_fu_529_p2;
wire   [16:0] empty_64_fu_539_p2;
wire   [2:0] mul_ln49_1_fu_555_p0;
wire   [4:0] mul_ln49_1_fu_555_p1;
wire   [6:0] mul_ln49_1_fu_555_p2;
wire   [1:0] tmp_6_fu_561_p4;
wire   [5:0] trunc_ln60_1_fu_571_p1;
wire   [5:0] zext_ln60_3_fu_574_p1;
wire   [5:0] add_ln60_1_fu_578_p2;
wire   [6:0] tmp_7_fu_584_p3;
wire   [3:0] zext_ln49_2_fu_549_p1;
wire   [3:0] p_mid1_fu_602_p2;
wire   [9:0] p_mid1_cast_fu_607_p1;
wire   [9:0] empty_65_fu_611_p2;
wire   [9:0] empty_66_fu_620_p0;
wire   [9:0] empty_66_fu_620_p1;
wire   [16:0] empty_66_fu_620_p2;
wire   [16:0] empty_67_fu_626_p2;
wire   [16:0] empty_68_fu_636_p2;
wire   [1:0] grp_fu_376_p2;
wire   [1:0] trunc_ln49_fu_646_p1;
wire   [1:0] grp_fu_402_p2;
wire   [1:0] trunc_ln49_1_fu_668_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter6_stage1;
reg    ap_idle_pp0_0to5;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [2:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to7;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage0_00001;
wire   [16:0] empty_62_fu_523_p00;
wire   [16:0] empty_66_fu_620_p00;
wire   [6:0] mul_ln49_1_fu_555_p00;
wire   [6:0] mul_ln49_fu_458_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U1901(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(ap_sig_allocacmp_kr_1),
    .din1(3'd3),
    .ce(1'b1),
    .dout(grp_fu_376_p2)
);

srcnn_urem_3ns_3ns_2_7_1 #(
    .ID( 1 ),
    .NUM_STAGE( 7 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 2 ))
urem_3ns_3ns_2_7_1_U1902(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_402_p0),
    .din1(3'd3),
    .ce(1'b1),
    .dout(grp_fu_402_p2)
);

srcnn_mul_3ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_3ns_5ns_7_1_1_U1903(
    .din0(mul_ln49_fu_458_p0),
    .din1(mul_ln49_fu_458_p1),
    .dout(mul_ln49_fu_458_p2)
);

srcnn_mul_10ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_10ns_10ns_17_1_1_U1904(
    .din0(empty_62_fu_523_p0),
    .din1(empty_62_fu_523_p1),
    .dout(empty_62_fu_523_p2)
);

srcnn_mul_3ns_5ns_7_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 7 ))
mul_3ns_5ns_7_1_1_U1905(
    .din0(mul_ln49_1_fu_555_p0),
    .din1(mul_ln49_1_fu_555_p1),
    .dout(mul_ln49_1_fu_555_p2)
);

srcnn_mul_10ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_10ns_10ns_17_1_1_U1906(
    .din0(empty_66_fu_620_p0),
    .din1(empty_66_fu_620_p1),
    .dout(empty_66_fu_620_p2)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U1907(
    .din0(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_load_reg_834),
    .din1(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_load_reg_839),
    .din2(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_load_reg_844),
    .din3(trunc_ln49_fu_646_p1),
    .dout(tmp_fu_650_p5)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U1908(
    .din0(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_load_reg_854),
    .din1(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_load_reg_859),
    .din2(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_load_reg_864),
    .din3(trunc_ln49_fu_646_p1),
    .dout(tmp_4_fu_659_p5)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U1909(
    .din0(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_load_1_reg_914),
    .din1(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_load_1_reg_919),
    .din2(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_load_1_reg_924),
    .din3(trunc_ln49_1_fu_668_p1),
    .dout(tmp_mid1_fu_672_p5)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U1910(
    .din0(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_load_1_reg_934),
    .din1(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_load_1_reg_939),
    .din2(p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_load_1_reg_944),
    .din3(trunc_ln49_1_fu_668_p1),
    .dout(tmp_4_mid1_fu_681_p5)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter5_stage2)) begin
            ap_enable_reg_pp0_iter6 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_59_fu_102 <= output_fm_buffer_0_load_1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        empty_59_fu_102 <= grp_fu_1700_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten34_fu_110 <= 4'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln49_fu_385_p2 == 1'd0))) begin
        indvar_flatten34_fu_110 <= add_ln49_1_fu_391_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kc0_fu_98 <= 2'd0;
    end else if (((icmp_ln49_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        kc0_fu_98 <= kc0_1_fu_434_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kr_fu_106 <= 3'd0;
    end else if (((icmp_ln49_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        kr_fu_106 <= select_ln49_1_fu_422_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln49_fu_385_p2 == 1'd0))) begin
        add_ln49_reg_781 <= add_ln49_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln49_reg_777 <= icmp_ln49_fu_385_p2;
        icmp_ln49_reg_777_pp0_iter1_reg <= icmp_ln49_reg_777;
        icmp_ln49_reg_777_pp0_iter2_reg <= icmp_ln49_reg_777_pp0_iter1_reg;
        icmp_ln49_reg_777_pp0_iter3_reg <= icmp_ln49_reg_777_pp0_iter2_reg;
        icmp_ln49_reg_777_pp0_iter4_reg <= icmp_ln49_reg_777_pp0_iter3_reg;
        icmp_ln49_reg_777_pp0_iter5_reg <= icmp_ln49_reg_777_pp0_iter4_reg;
        mul_1_mid1_reg_989_pp0_iter4_reg <= mul_1_mid1_reg_989;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_reg_777 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln50_reg_789 <= icmp_ln50_fu_416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln50_reg_789_pp0_iter1_reg <= icmp_ln50_reg_789;
        icmp_ln50_reg_789_pp0_iter2_reg <= icmp_ln50_reg_789_pp0_iter1_reg;
        icmp_ln50_reg_789_pp0_iter3_reg <= icmp_ln50_reg_789_pp0_iter2_reg;
        icmp_ln50_reg_789_pp0_iter4_reg <= icmp_ln50_reg_789_pp0_iter3_reg;
        icmp_ln50_reg_789_pp0_iter5_reg <= icmp_ln50_reg_789_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln50_reg_789 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_fm_buffer_load_1_reg_869 <= input_fm_buffer_q0;
        input_fm_buffer_load_reg_849 <= input_fm_buffer_q1;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_load_reg_834 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_load_reg_854 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_load_reg_839 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_load_reg_859 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_load_reg_844 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_load_reg_864 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln50_reg_789 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln49_reg_777_pp0_iter1_reg == 1'd0))) begin
        input_fm_buffer_load_2_reg_929 <= input_fm_buffer_q1;
        input_fm_buffer_load_3_reg_949 <= input_fm_buffer_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_load_1_reg_914 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_load_1_reg_934 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_load_1_reg_919 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_load_1_reg_939 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_load_1_reg_924 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_q0;
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_load_1_reg_944 <= p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        kr_1_reg_768 <= ap_sig_allocacmp_kr_1;
        mul_1_reg_979_pp0_iter4_reg <= mul_1_reg_979;
        select_ln46_2_cast_reg_750[2 : 0] <= select_ln46_2_cast_fu_341_p1[2 : 0];
        select_ln49_reg_1009 <= select_ln49_fu_690_p3;
        zext_ln47_cast_reg_762[7 : 0] <= zext_ln47_cast_fu_349_p1[7 : 0];
        zext_ln63_cast_reg_756[7 : 0] <= zext_ln63_cast_fu_345_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln50_reg_789_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln49_reg_777_pp0_iter2_reg == 1'd0))) begin
        mul_1_mid1_reg_989 <= grp_fu_1708_p_dout0;
        mul_mid1_reg_984 <= grp_fu_1704_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln50_reg_789_pp0_iter2_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_1_reg_979 <= grp_fu_1708_p_dout0;
        mul_reg_974 <= grp_fu_1704_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln50_reg_789_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln49_reg_777_pp0_iter4_reg == 1'd0))) begin
        tmp_1_mid1_reg_999 <= grp_fu_1696_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln50_reg_789_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_1_reg_994 <= grp_fu_1696_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln50_reg_789_pp0_iter4_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_2_reg_1004 <= grp_fu_1700_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln50_reg_789_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln49_reg_777_pp0_iter1_reg == 1'd0))) begin
        tmp_4_mid1_reg_969 <= tmp_4_mid1_fu_681_p5;
        tmp_mid1_reg_964 <= tmp_mid1_fu_672_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln50_reg_789_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_4_reg_959 <= tmp_4_fu_659_p5;
        tmp_reg_954 <= tmp_fu_650_p5;
    end
end

always @ (*) begin
    if (((icmp_ln49_reg_777 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln49_reg_777_pp0_iter5_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter5_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter5_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln49_reg_777_pp0_iter5_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter6_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter6_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter6_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to5 = 1'b1;
    end else begin
        ap_idle_pp0_0to5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_kr_1 = 3'd0;
    end else begin
        ap_sig_allocacmp_kr_1 = kr_fu_106;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_sig_allocacmp_p_load = grp_fu_1700_p_dout0;
    end else begin
        ap_sig_allocacmp_p_load = empty_59_fu_102;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_324_p0 = tmp_1_mid1_reg_999;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_324_p0 = mul_mid1_reg_984;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_324_p0 = mul_reg_974;
    end else begin
        grp_fu_324_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_324_p1 = mul_1_mid1_reg_989_pp0_iter4_reg;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_324_p1 = 32'd0;
    end else begin
        grp_fu_324_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_329_p0 = ap_sig_allocacmp_p_load;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_329_p0 = tmp_1_reg_994;
    end else begin
        grp_fu_329_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_329_p1 = select_ln49_reg_1009;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_329_p1 = mul_1_reg_979_pp0_iter4_reg;
    end else begin
        grp_fu_329_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_333_p0 = tmp_mid1_reg_964;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_333_p0 = tmp_reg_954;
        end else begin
            grp_fu_333_p0 = 'bx;
        end
    end else begin
        grp_fu_333_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_333_p1 = input_fm_buffer_load_2_reg_929;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_333_p1 = input_fm_buffer_load_reg_849;
        end else begin
            grp_fu_333_p1 = 'bx;
        end
    end else begin
        grp_fu_333_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_337_p0 = tmp_4_mid1_reg_969;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_337_p0 = tmp_4_reg_959;
        end else begin
            grp_fu_337_p0 = 'bx;
        end
    end else begin
        grp_fu_337_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_337_p1 = input_fm_buffer_load_3_reg_949;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_337_p1 = input_fm_buffer_load_1_reg_869;
        end else begin
            grp_fu_337_p1 = 'bx;
        end
    end else begin
        grp_fu_337_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_fm_buffer_address0 = p_cast10_fu_641_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_fm_buffer_address0 = p_cast7_fu_544_p1;
        end else begin
            input_fm_buffer_address0 = 'bx;
        end
    end else begin
        input_fm_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            input_fm_buffer_address1 = p_cast9_fu_631_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            input_fm_buffer_address1 = p_cast6_fu_534_p1;
        end else begin
            input_fm_buffer_address1 = 'bx;
        end
    end else begin
        input_fm_buffer_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_fm_buffer_ce0 = 1'b1;
    end else begin
        input_fm_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_fm_buffer_ce1 = 1'b1;
    end else begin
        input_fm_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0 = zext_ln60_4_fu_592_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0 = zext_ln60_2_fu_495_p1;
        end else begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0 = zext_ln60_4_fu_592_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0 = zext_ln60_2_fu_495_p1;
        end else begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0 = zext_ln60_4_fu_592_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0 = zext_ln60_2_fu_495_p1;
        end else begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0 = zext_ln60_4_fu_592_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0 = zext_ln60_2_fu_495_p1;
        end else begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0 = zext_ln60_4_fu_592_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0 = zext_ln60_2_fu_495_p1;
        end else begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0 = zext_ln60_4_fu_592_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0 = zext_ln60_2_fu_495_p1;
        end else begin
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln49_reg_777_pp0_iter5_reg == 1'd1))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to5 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter6_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln49_1_fu_391_p2 = (indvar_flatten34_fu_110 + 4'd1);

assign add_ln49_fu_397_p2 = (kr_1_reg_768 + 3'd1);

assign add_ln50_fu_428_p2 = (kc0_fu_98 + 2'd1);

assign add_ln60_1_fu_578_p2 = (trunc_ln60_1_fu_571_p1 + zext_ln60_3_fu_574_p1);

assign add_ln60_fu_481_p2 = (trunc_ln60_fu_474_p1 + zext_ln60_fu_477_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign empty_60_fu_505_p2 = (zext_ln49_fu_452_p1 + select_ln46_2_cast_reg_750);

assign empty_61_fu_514_p2 = (empty + p_cast_fu_510_p1);

assign empty_62_fu_523_p0 = empty_62_fu_523_p00;

assign empty_62_fu_523_p00 = empty_61_fu_514_p2;

assign empty_62_fu_523_p1 = 17'd259;

assign empty_63_fu_529_p2 = (empty_62_fu_523_p2 + zext_ln47_cast_reg_762);

assign empty_64_fu_539_p2 = (empty_62_fu_523_p2 + zext_ln63_cast_reg_756);

assign empty_65_fu_611_p2 = (empty + p_mid1_cast_fu_607_p1);

assign empty_66_fu_620_p0 = empty_66_fu_620_p00;

assign empty_66_fu_620_p00 = empty_65_fu_611_p2;

assign empty_66_fu_620_p1 = 17'd259;

assign empty_67_fu_626_p2 = (empty_66_fu_620_p2 + zext_ln47_cast_reg_762);

assign empty_68_fu_636_p2 = (empty_66_fu_620_p2 + zext_ln63_cast_reg_756);

assign grp_fu_1696_p_ce = 1'b1;

assign grp_fu_1696_p_din0 = grp_fu_324_p0;

assign grp_fu_1696_p_din1 = grp_fu_324_p1;

assign grp_fu_1696_p_opcode = 2'd0;

assign grp_fu_1700_p_ce = 1'b1;

assign grp_fu_1700_p_din0 = grp_fu_329_p0;

assign grp_fu_1700_p_din1 = grp_fu_329_p1;

assign grp_fu_1700_p_opcode = 2'd0;

assign grp_fu_1704_p_ce = 1'b1;

assign grp_fu_1704_p_din0 = grp_fu_333_p0;

assign grp_fu_1704_p_din1 = grp_fu_333_p1;

assign grp_fu_1708_p_ce = 1'b1;

assign grp_fu_1708_p_din0 = grp_fu_337_p0;

assign grp_fu_1708_p_din1 = grp_fu_337_p1;

assign grp_fu_402_p0 = (kr_1_reg_768 + 3'd1);

assign icmp_ln49_fu_385_p2 = ((indvar_flatten34_fu_110 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_416_p2 = ((kc0_fu_98 == 2'd2) ? 1'b1 : 1'b0);

assign kc0_1_fu_434_p3 = ((icmp_ln50_fu_416_p2[0:0] == 1'b1) ? 2'd1 : add_ln50_fu_428_p2);

assign mul_ln49_1_fu_555_p0 = mul_ln49_1_fu_555_p00;

assign mul_ln49_1_fu_555_p00 = add_ln49_reg_781;

assign mul_ln49_1_fu_555_p1 = 7'd11;

assign mul_ln49_fu_458_p0 = mul_ln49_fu_458_p00;

assign mul_ln49_fu_458_p00 = kr_1_reg_768;

assign mul_ln49_fu_458_p1 = 7'd11;

assign p_cast10_fu_641_p1 = empty_68_fu_636_p2;

assign p_cast6_fu_534_p1 = empty_63_fu_529_p2;

assign p_cast7_fu_544_p1 = empty_64_fu_539_p2;

assign p_cast9_fu_631_p1 = empty_67_fu_626_p2;

assign p_cast_fu_510_p1 = empty_60_fu_505_p2;

assign p_mid1_cast_fu_607_p1 = p_mid1_fu_602_p2;

assign p_mid1_fu_602_p2 = (zext_ln49_2_fu_549_p1 + select_ln46_2_cast_reg_750);

assign p_out = empty_59_fu_102;

assign select_ln46_2_cast_fu_341_p1 = select_ln46_2;

assign select_ln49_1_fu_422_p3 = ((icmp_ln50_fu_416_p2[0:0] == 1'b1) ? add_ln49_reg_781 : kr_1_reg_768);

assign select_ln49_fu_690_p3 = ((icmp_ln50_reg_789_pp0_iter5_reg[0:0] == 1'b1) ? grp_fu_1696_p_dout0 : tmp_2_reg_1004);

assign tmp_5_fu_464_p4 = {{mul_ln49_fu_458_p2[6:5]}};

assign tmp_6_fu_561_p4 = {{mul_ln49_1_fu_555_p2[6:5]}};

assign tmp_7_fu_584_p3 = {{add_ln60_1_fu_578_p2}, {1'd0}};

assign tmp_s_fu_487_p3 = {{add_ln60_fu_481_p2}, {1'd0}};

assign trunc_ln49_1_fu_668_p1 = grp_fu_402_p2[1:0];

assign trunc_ln49_fu_646_p1 = grp_fu_376_p2[1:0];

assign trunc_ln60_1_fu_571_p1 = zext_ln60_1[5:0];

assign trunc_ln60_fu_474_p1 = zext_ln60_1[5:0];

assign zext_ln47_cast_fu_349_p1 = zext_ln47;

assign zext_ln49_2_fu_549_p1 = add_ln49_reg_781;

assign zext_ln49_fu_452_p1 = kr_1_reg_768;

assign zext_ln60_2_fu_495_p1 = tmp_s_fu_487_p3;

assign zext_ln60_3_fu_574_p1 = tmp_6_fu_561_p4;

assign zext_ln60_4_fu_592_p1 = tmp_7_fu_584_p3;

assign zext_ln60_fu_477_p1 = tmp_5_fu_464_p4;

assign zext_ln63_cast_fu_345_p1 = zext_ln63;

always @ (posedge ap_clk) begin
    select_ln46_2_cast_reg_750[3] <= 1'b0;
    zext_ln63_cast_reg_756[16:8] <= 9'b000000000;
    zext_ln47_cast_reg_762[16:8] <= 9'b000000000;
end

endmodule //srcnn_conv3_Pipeline_KR_KC
