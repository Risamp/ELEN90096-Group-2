// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv1_Pipeline_KR_KC2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        select_ln63_2,
        or_ln63,
        zext_ln52_5,
        zext_ln52_7,
        trunc_ln,
        zext_ln52_6,
        add52_2_out,
        add52_2_out_ap_vld,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_q1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0,
        grp_fu_2133_p_din0,
        grp_fu_2133_p_din1,
        grp_fu_2133_p_opcode,
        grp_fu_2133_p_dout0,
        grp_fu_2133_p_ce,
        grp_fu_2137_p_din0,
        grp_fu_2137_p_din1,
        grp_fu_2137_p_dout0,
        grp_fu_2137_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 12'd1;
parameter    ap_ST_fsm_pp0_stage1 = 12'd2;
parameter    ap_ST_fsm_pp0_stage2 = 12'd4;
parameter    ap_ST_fsm_pp0_stage3 = 12'd8;
parameter    ap_ST_fsm_pp0_stage4 = 12'd16;
parameter    ap_ST_fsm_pp0_stage5 = 12'd32;
parameter    ap_ST_fsm_pp0_stage6 = 12'd64;
parameter    ap_ST_fsm_pp0_stage7 = 12'd128;
parameter    ap_ST_fsm_pp0_stage8 = 12'd256;
parameter    ap_ST_fsm_pp0_stage9 = 12'd512;
parameter    ap_ST_fsm_pp0_stage10 = 12'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] select_ln63_2;
input  [4:0] or_ln63;
input  [3:0] zext_ln52_5;
input  [7:0] zext_ln52_7;
input  [0:0] trunc_ln;
input  [7:0] zext_ln52_6;
output  [31:0] add52_2_out;
output   add52_2_out_ap_vld;
output  [8:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address0;
output   p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce0;
input  [31:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_q0;
output  [8:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address1;
output   p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce1;
input  [31:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_q1;
output  [8:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address0;
output   p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce0;
input  [31:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_q0;
output  [8:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address1;
output   p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce1;
input  [31:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_q1;
output  [10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0;
output  [10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0;
output  [10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0;
output  [10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0;
output  [31:0] grp_fu_2133_p_din0;
output  [31:0] grp_fu_2133_p_din1;
output  [1:0] grp_fu_2133_p_opcode;
input  [31:0] grp_fu_2133_p_dout0;
output   grp_fu_2133_p_ce;
output  [31:0] grp_fu_2137_p_din0;
output  [31:0] grp_fu_2137_p_din1;
input  [31:0] grp_fu_2137_p_dout0;
output   grp_fu_2137_p_ce;

reg ap_idle;
reg add52_2_out_ap_vld;
reg[8:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address0;
reg p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce0;
reg p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce1;
reg[8:0] p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address0;
reg p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce0;
reg p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce1;
reg[10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
reg[10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
reg[10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
reg[10:0] conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_subdone;
reg   [0:0] icmp_ln54_reg_867;
reg    ap_condition_exit_pp0_iter0_stage11;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state13_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] zext_ln52_7_cast_fu_347_p1;
reg   [8:0] zext_ln52_7_cast_reg_812;
wire   [10:0] zext_ln52_6_cast_fu_355_p1;
reg   [10:0] zext_ln52_6_cast_reg_818;
wire   [1:0] trunc_ln54_fu_420_p1;
reg   [1:0] trunc_ln54_reg_823;
wire   [2:0] lshr_ln56_2_fu_434_p4;
reg   [2:0] lshr_ln56_2_reg_829;
wire   [8:0] zext_ln63_17_fu_448_p1;
reg   [8:0] zext_ln63_17_reg_839;
wire   [3:0] or_ln56_fu_464_p2;
reg   [3:0] or_ln56_reg_854;
wire   [0:0] icmp_ln56_fu_470_p2;
reg   [0:0] icmp_ln56_reg_859;
reg   [0:0] icmp_ln56_reg_859_pp0_iter1_reg;
wire   [0:0] icmp_ln54_fu_476_p2;
wire   [5:0] add_ln63_16_fu_540_p2;
reg   [5:0] add_ln63_16_reg_871;
wire   [1:0] trunc_ln54_2_fu_546_p1;
reg   [1:0] trunc_ln54_2_reg_877;
reg   [2:0] lshr_ln56_2_mid1_reg_883;
wire   [8:0] add_ln61_fu_599_p2;
reg   [8:0] add_ln61_reg_899;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state14_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] tmp_s_fu_603_p4;
reg   [31:0] tmp_s_reg_904;
wire   [2:0] select_ln54_14_fu_631_p3;
reg   [2:0] select_ln54_14_reg_914;
wire   [31:0] grp_fu_338_p4;
reg   [31:0] tmp_12_mid1_reg_919;
wire   [8:0] add_ln61_2_fu_658_p2;
reg   [8:0] add_ln61_2_reg_934;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state15_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] tmp_11_reg_949;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state16_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [31:0] tmp_10_fu_676_p6;
reg   [31:0] tmp_10_reg_974;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state17_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire   [1:0] select_ln54_13_fu_699_p3;
reg   [1:0] select_ln54_13_reg_1004;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state18_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire   [31:0] tmp_13_mid1_fu_704_p6;
reg   [31:0] tmp_13_mid1_reg_1009;
wire   [31:0] tmp_12_fu_724_p6;
reg   [31:0] tmp_12_reg_1034;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state19_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
reg   [31:0] mul_2_reg_1039;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state20_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] mul_2_mid1_reg_1049;
reg   [31:0] mul_2_1_reg_1054;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg   [31:0] add52_2_reg_1059;
wire    ap_block_pp0_stage11_11001;
wire   [31:0] select_ln54_15_fu_741_p3;
reg   [31:0] select_ln54_15_reg_1065;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage7_subdone;
wire   [63:0] zext_ln63_18_fu_458_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln54_4_fu_522_p1;
wire   [63:0] zext_ln63_28_fu_652_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln63_20_fu_669_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln63_26_fu_689_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln63_30_fu_717_p1;
wire    ap_block_pp0_stage5;
reg   [31:0] add52_2_125_fu_88;
wire    ap_loop_init;
wire    ap_block_pp0_stage8;
reg   [3:0] kc_fu_92;
wire   [3:0] select_ln56_fu_576_p3;
reg   [3:0] ap_sig_allocacmp_kc_2;
reg   [3:0] kr_fu_96;
wire   [3:0] select_ln54_fu_528_p3;
reg   [3:0] ap_sig_allocacmp_kr_2;
reg   [5:0] indvar_flatten55_fu_100;
wire   [5:0] add_ln54_fu_482_p2;
reg   [5:0] ap_sig_allocacmp_indvar_flatten55_load;
wire    ap_block_pp0_stage11_01001;
reg   [31:0] grp_fu_329_p0;
reg   [31:0] grp_fu_329_p1;
reg   [31:0] grp_fu_334_p0;
reg   [31:0] grp_fu_334_p1;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage2;
wire   [5:0] or_ln63_cast_fu_359_p1;
wire   [5:0] zext_ln63_fu_392_p1;
wire   [5:0] add_ln63_fu_396_p2;
wire   [8:0] p_shl_fu_406_p3;
wire   [8:0] zext_ln63_16_fu_402_p1;
wire   [4:0] zext_ln54_fu_424_p1;
wire   [4:0] zext_ln52_5_cast_fu_351_p1;
wire   [4:0] empty_fu_428_p2;
wire   [8:0] add_ln63_11_fu_414_p2;
wire   [8:0] add_ln63_12_fu_452_p2;
wire   [3:0] add_ln54_2_fu_488_p2;
wire   [5:0] zext_ln63_21_fu_494_p1;
wire   [5:0] add_ln63_14_fu_498_p2;
wire   [8:0] p_shl3_fu_508_p3;
wire   [8:0] zext_ln63_22_fu_504_p1;
wire   [8:0] add_ln63_15_fu_516_p2;
wire   [5:0] zext_ln63_23_fu_536_p1;
wire   [4:0] zext_ln54_5_fu_550_p1;
wire   [4:0] p_mid153_fu_554_p2;
wire   [3:0] add_ln56_fu_570_p2;
wire   [8:0] p_shl4_fu_615_p3;
wire   [8:0] zext_ln63_24_fu_612_p1;
wire   [3:0] select_ln54_16_fu_636_p3;
wire   [8:0] add_ln63_17_fu_622_p2;
wire   [8:0] zext_ln63_27_fu_642_p1;
wire   [8:0] add_ln63_19_fu_646_p2;
wire   [10:0] grp_fu_752_p3;
wire   [10:0] grp_fu_761_p3;
wire   [10:0] grp_fu_769_p3;
wire   [2:0] grp_fu_752_p0;
wire   [8:0] grp_fu_752_p1;
wire   [8:0] grp_fu_752_p2;
wire   [2:0] grp_fu_761_p0;
wire   [8:0] grp_fu_761_p1;
wire   [7:0] grp_fu_761_p2;
wire   [2:0] grp_fu_769_p0;
wire   [8:0] grp_fu_769_p1;
wire   [8:0] grp_fu_769_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [11:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage8_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage4_00001;
wire   [10:0] grp_fu_752_p00;
wire   [10:0] grp_fu_752_p20;
wire   [10:0] grp_fu_761_p00;
wire   [10:0] grp_fu_769_p00;
wire   [10:0] grp_fu_769_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U72(
    .din0(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_q0),
    .din1(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_q0),
    .din2(trunc_ln),
    .dout(grp_fu_338_p4)
);

srcnn_mux_2_1_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_2_1_32_1_1_U73(
    .din0(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_q1),
    .din1(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_q1),
    .din2(trunc_ln),
    .dout(tmp_s_fu_603_p4)
);

srcnn_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U74(
    .din0(conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0),
    .din1(conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0),
    .din2(conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0),
    .din3(conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0),
    .din4(trunc_ln54_reg_823),
    .dout(tmp_10_fu_676_p6)
);

srcnn_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U75(
    .din0(conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0),
    .din1(conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0),
    .din2(conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0),
    .din3(conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0),
    .din4(trunc_ln54_2_reg_877),
    .dout(tmp_13_mid1_fu_704_p6)
);

srcnn_mux_4_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_4_2_32_1_1_U76(
    .din0(conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0),
    .din1(conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0),
    .din2(conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0),
    .din3(conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0),
    .din4(select_ln54_13_reg_1004),
    .dout(tmp_12_fu_724_p6)
);

srcnn_mac_muladd_3ns_9ns_9ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
mac_muladd_3ns_9ns_9ns_11_4_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_752_p0),
    .din1(grp_fu_752_p1),
    .din2(grp_fu_752_p2),
    .ce(1'b1),
    .dout(grp_fu_752_p3)
);

srcnn_mac_muladd_3ns_9ns_8ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 11 ))
mac_muladd_3ns_9ns_8ns_11_4_1_U78(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_761_p0),
    .din1(grp_fu_761_p1),
    .din2(grp_fu_761_p2),
    .ce(1'b1),
    .dout(grp_fu_761_p3)
);

srcnn_mac_muladd_3ns_9ns_9ns_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 9 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 11 ))
mac_muladd_3ns_9ns_9ns_11_4_1_U79(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_769_p0),
    .din1(grp_fu_769_p1),
    .din2(grp_fu_769_p2),
    .ce(1'b1),
    .dout(grp_fu_769_p3)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage11),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter0_stage11) | ((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add52_2_125_fu_88 <= select_ln63_2;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        add52_2_125_fu_88 <= grp_fu_2133_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_476_p2 == 1'd0))) begin
            indvar_flatten55_fu_100 <= add_ln54_fu_482_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten55_fu_100 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_476_p2 == 1'd0))) begin
            kc_fu_92 <= select_ln56_fu_576_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            kc_fu_92 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_476_p2 == 1'd0))) begin
            kr_fu_96 <= select_ln54_fu_528_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            kr_fu_96 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add52_2_reg_1059 <= grp_fu_2133_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln61_2_reg_934 <= add_ln61_2_fu_658_p2;
        select_ln54_14_reg_914 <= select_ln54_14_fu_631_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln61_reg_899 <= add_ln61_fu_599_p2;
        tmp_s_reg_904 <= tmp_s_fu_603_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln54_fu_476_p2 == 1'd0))) begin
        add_ln63_16_reg_871 <= add_ln63_16_fu_540_p2;
        lshr_ln56_2_mid1_reg_883 <= {{p_mid153_fu_554_p2[4:2]}};
        trunc_ln54_2_reg_877 <= trunc_ln54_2_fu_546_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln54_reg_867 <= icmp_ln54_fu_476_p2;
        icmp_ln56_reg_859 <= icmp_ln56_fu_470_p2;
        icmp_ln56_reg_859_pp0_iter1_reg <= icmp_ln56_reg_859;
        lshr_ln56_2_reg_829 <= {{empty_fu_428_p2[4:2]}};
        or_ln56_reg_854[3 : 1] <= or_ln56_fu_464_p2[3 : 1];
        trunc_ln54_reg_823 <= trunc_ln54_fu_420_p1;
        zext_ln52_6_cast_reg_818[7 : 0] <= zext_ln52_6_cast_fu_355_p1[7 : 0];
        zext_ln52_7_cast_reg_812[7 : 0] <= zext_ln52_7_cast_fu_347_p1[7 : 0];
        zext_ln63_17_reg_839[3 : 0] <= zext_ln63_17_fu_448_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        mul_2_1_reg_1054 <= grp_fu_2137_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln56_reg_859 == 1'd0))) begin
        mul_2_mid1_reg_1049 <= grp_fu_2137_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_1039 <= grp_fu_2137_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        select_ln54_13_reg_1004 <= select_ln54_13_fu_699_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        select_ln54_15_reg_1065 <= select_ln54_15_fu_741_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_10_reg_974 <= tmp_10_fu_676_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_11_reg_949 <= grp_fu_338_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln56_reg_859 == 1'd0))) begin
        tmp_12_mid1_reg_919 <= grp_fu_338_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_12_reg_1034 <= tmp_12_fu_724_p6;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_867 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln56_reg_859 == 1'd0))) begin
        tmp_13_mid1_reg_1009 <= tmp_13_mid1_fu_704_p6;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_867 == 1'd1) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add52_2_out_ap_vld = 1'b1;
    end else begin
        add52_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_867 == 1'd1) & (1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_condition_exit_pp0_iter0_stage11 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage11 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage11_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten55_load = 6'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten55_load = indvar_flatten55_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_kc_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_kc_2 = kc_fu_92;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_kr_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_kr_2 = kr_fu_96;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 = zext_ln63_30_fu_717_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 = zext_ln63_26_fu_689_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 = zext_ln63_20_fu_669_p1;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 = zext_ln63_30_fu_717_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 = zext_ln63_26_fu_689_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 = zext_ln63_20_fu_669_p1;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 = zext_ln63_30_fu_717_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 = zext_ln63_26_fu_689_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 = zext_ln63_20_fu_669_p1;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 = zext_ln63_30_fu_717_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 = zext_ln63_26_fu_689_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 = zext_ln63_20_fu_669_p1;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_329_p0 = select_ln54_15_reg_1065;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_329_p0 = add52_2_reg_1059;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_329_p0 = add52_2_125_fu_88;
    end else begin
        grp_fu_329_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_329_p1 = mul_2_1_reg_1054;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_329_p1 = mul_2_mid1_reg_1049;
    end else if (((1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        grp_fu_329_p1 = mul_2_reg_1039;
    end else begin
        grp_fu_329_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_334_p0 = tmp_11_reg_949;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_334_p0 = tmp_12_mid1_reg_919;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_334_p0 = tmp_s_reg_904;
        end else begin
            grp_fu_334_p0 = 'bx;
        end
    end else begin
        grp_fu_334_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            grp_fu_334_p1 = tmp_12_reg_1034;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_334_p1 = tmp_13_mid1_reg_1009;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_334_p1 = tmp_10_reg_974;
        end else begin
            grp_fu_334_p1 = 'bx;
        end
    end else begin
        grp_fu_334_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address0 = zext_ln63_28_fu_652_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address0 = zext_ln54_4_fu_522_p1;
        end else begin
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce1 = 1'b1;
    end else begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address0 = zext_ln63_28_fu_652_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address0 = zext_ln54_4_fu_522_p1;
        end else begin
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address0 = 'bx;
        end
    end else begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce0 = 1'b1;
    end else begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce1 = 1'b1;
    end else begin
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add52_2_out = grp_fu_2133_p_dout0;

assign add_ln54_2_fu_488_p2 = (ap_sig_allocacmp_kr_2 + 4'd1);

assign add_ln54_fu_482_p2 = (ap_sig_allocacmp_indvar_flatten55_load + 6'd1);

assign add_ln56_fu_570_p2 = (ap_sig_allocacmp_kc_2 + 4'd2);

assign add_ln61_2_fu_658_p2 = (zext_ln63_27_fu_642_p1 + zext_ln52_7_cast_reg_812);

assign add_ln61_fu_599_p2 = (zext_ln63_17_reg_839 + zext_ln52_7_cast_reg_812);

assign add_ln63_11_fu_414_p2 = (p_shl_fu_406_p3 + zext_ln63_16_fu_402_p1);

assign add_ln63_12_fu_452_p2 = (add_ln63_11_fu_414_p2 + zext_ln63_17_fu_448_p1);

assign add_ln63_14_fu_498_p2 = (or_ln63_cast_fu_359_p1 + zext_ln63_21_fu_494_p1);

assign add_ln63_15_fu_516_p2 = (p_shl3_fu_508_p3 + zext_ln63_22_fu_504_p1);

assign add_ln63_16_fu_540_p2 = (or_ln63_cast_fu_359_p1 + zext_ln63_23_fu_536_p1);

assign add_ln63_17_fu_622_p2 = (p_shl4_fu_615_p3 + zext_ln63_24_fu_612_p1);

assign add_ln63_19_fu_646_p2 = (add_ln63_17_fu_622_p2 + zext_ln63_27_fu_642_p1);

assign add_ln63_fu_396_p2 = (or_ln63_cast_fu_359_p1 + zext_ln63_fu_392_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage11;

assign empty_fu_428_p2 = (zext_ln54_fu_424_p1 + zext_ln52_5_cast_fu_351_p1);

assign grp_fu_2133_p_ce = 1'b1;

assign grp_fu_2133_p_din0 = grp_fu_329_p0;

assign grp_fu_2133_p_din1 = grp_fu_329_p1;

assign grp_fu_2133_p_opcode = 2'd0;

assign grp_fu_2137_p_ce = 1'b1;

assign grp_fu_2137_p_din0 = grp_fu_334_p0;

assign grp_fu_2137_p_din1 = grp_fu_334_p1;

assign grp_fu_752_p0 = grp_fu_752_p00;

assign grp_fu_752_p00 = lshr_ln56_2_fu_434_p4;

assign grp_fu_752_p1 = 11'd263;

assign grp_fu_752_p2 = grp_fu_752_p20;

assign grp_fu_752_p20 = add_ln61_reg_899;

assign grp_fu_761_p0 = grp_fu_761_p00;

assign grp_fu_761_p00 = lshr_ln56_2_mid1_reg_883;

assign grp_fu_761_p1 = 11'd263;

assign grp_fu_761_p2 = zext_ln52_6_cast_reg_818;

assign grp_fu_769_p0 = grp_fu_769_p00;

assign grp_fu_769_p00 = select_ln54_14_reg_914;

assign grp_fu_769_p1 = 11'd263;

assign grp_fu_769_p2 = grp_fu_769_p20;

assign grp_fu_769_p20 = add_ln61_2_reg_934;

assign icmp_ln54_fu_476_p2 = ((ap_sig_allocacmp_indvar_flatten55_load == 6'd36) ? 1'b1 : 1'b0);

assign icmp_ln56_fu_470_p2 = ((or_ln56_fu_464_p2 < 4'd9) ? 1'b1 : 1'b0);

assign lshr_ln56_2_fu_434_p4 = {{empty_fu_428_p2[4:2]}};

assign or_ln56_fu_464_p2 = (ap_sig_allocacmp_kc_2 | 4'd1);

assign or_ln63_cast_fu_359_p1 = or_ln63;

assign p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_address1 = zext_ln63_18_fu_458_p1;

assign p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_address1 = zext_ln63_18_fu_458_p1;

assign p_mid153_fu_554_p2 = (zext_ln54_5_fu_550_p1 + zext_ln52_5_cast_fu_351_p1);

assign p_shl3_fu_508_p3 = {{add_ln63_14_fu_498_p2}, {3'd0}};

assign p_shl4_fu_615_p3 = {{add_ln63_16_reg_871}, {3'd0}};

assign p_shl_fu_406_p3 = {{add_ln63_fu_396_p2}, {3'd0}};

assign select_ln54_13_fu_699_p3 = ((icmp_ln56_reg_859[0:0] == 1'b1) ? trunc_ln54_reg_823 : trunc_ln54_2_reg_877);

assign select_ln54_14_fu_631_p3 = ((icmp_ln56_reg_859[0:0] == 1'b1) ? lshr_ln56_2_reg_829 : lshr_ln56_2_mid1_reg_883);

assign select_ln54_15_fu_741_p3 = ((icmp_ln56_reg_859_pp0_iter1_reg[0:0] == 1'b1) ? add52_2_reg_1059 : grp_fu_2133_p_dout0);

assign select_ln54_16_fu_636_p3 = ((icmp_ln56_reg_859[0:0] == 1'b1) ? or_ln56_reg_854 : 4'd1);

assign select_ln54_fu_528_p3 = ((icmp_ln56_fu_470_p2[0:0] == 1'b1) ? ap_sig_allocacmp_kr_2 : add_ln54_2_fu_488_p2);

assign select_ln56_fu_576_p3 = ((icmp_ln56_fu_470_p2[0:0] == 1'b1) ? add_ln56_fu_570_p2 : 4'd2);

assign trunc_ln54_2_fu_546_p1 = add_ln54_2_fu_488_p2[1:0];

assign trunc_ln54_fu_420_p1 = ap_sig_allocacmp_kr_2[1:0];

assign zext_ln52_5_cast_fu_351_p1 = zext_ln52_5;

assign zext_ln52_6_cast_fu_355_p1 = zext_ln52_6;

assign zext_ln52_7_cast_fu_347_p1 = zext_ln52_7;

assign zext_ln54_4_fu_522_p1 = add_ln63_15_fu_516_p2;

assign zext_ln54_5_fu_550_p1 = add_ln54_2_fu_488_p2;

assign zext_ln54_fu_424_p1 = ap_sig_allocacmp_kr_2;

assign zext_ln63_16_fu_402_p1 = add_ln63_fu_396_p2;

assign zext_ln63_17_fu_448_p1 = ap_sig_allocacmp_kc_2;

assign zext_ln63_18_fu_458_p1 = add_ln63_12_fu_452_p2;

assign zext_ln63_20_fu_669_p1 = grp_fu_752_p3;

assign zext_ln63_21_fu_494_p1 = add_ln54_2_fu_488_p2;

assign zext_ln63_22_fu_504_p1 = add_ln63_14_fu_498_p2;

assign zext_ln63_23_fu_536_p1 = select_ln54_fu_528_p3;

assign zext_ln63_24_fu_612_p1 = add_ln63_16_reg_871;

assign zext_ln63_26_fu_689_p1 = grp_fu_761_p3;

assign zext_ln63_27_fu_642_p1 = select_ln54_16_fu_636_p3;

assign zext_ln63_28_fu_652_p1 = add_ln63_19_fu_646_p2;

assign zext_ln63_30_fu_717_p1 = grp_fu_769_p3;

assign zext_ln63_fu_392_p1 = ap_sig_allocacmp_kr_2;

always @ (posedge ap_clk) begin
    zext_ln52_7_cast_reg_812[8] <= 1'b0;
    zext_ln52_6_cast_reg_818[10:8] <= 3'b000;
    zext_ln63_17_reg_839[8:4] <= 5'b00000;
    or_ln56_reg_854[0] <= 1'b1;
end

endmodule //srcnn_conv1_Pipeline_KR_KC2
