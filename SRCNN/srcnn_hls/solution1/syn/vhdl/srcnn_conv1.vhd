-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_i1_AWVALID : OUT STD_LOGIC;
    m_axi_i1_AWREADY : IN STD_LOGIC;
    m_axi_i1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_WVALID : OUT STD_LOGIC;
    m_axi_i1_WREADY : IN STD_LOGIC;
    m_axi_i1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_WLAST : OUT STD_LOGIC;
    m_axi_i1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_ARVALID : OUT STD_LOGIC;
    m_axi_i1_ARREADY : IN STD_LOGIC;
    m_axi_i1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RVALID : IN STD_LOGIC;
    m_axi_i1_RREADY : OUT STD_LOGIC;
    m_axi_i1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_RLAST : IN STD_LOGIC;
    m_axi_i1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_BVALID : IN STD_LOGIC;
    m_axi_i1_BREADY : OUT STD_LOGIC;
    m_axi_i1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w1_AWVALID : OUT STD_LOGIC;
    m_axi_w1_AWREADY : IN STD_LOGIC;
    m_axi_w1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_WVALID : OUT STD_LOGIC;
    m_axi_w1_WREADY : IN STD_LOGIC;
    m_axi_w1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_WLAST : OUT STD_LOGIC;
    m_axi_w1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_ARVALID : OUT STD_LOGIC;
    m_axi_w1_ARREADY : IN STD_LOGIC;
    m_axi_w1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_RVALID : IN STD_LOGIC;
    m_axi_w1_RREADY : OUT STD_LOGIC;
    m_axi_w1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_RLAST : IN STD_LOGIC;
    m_axi_w1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_w1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_BVALID : IN STD_LOGIC;
    m_axi_w1_BREADY : OUT STD_LOGIC;
    m_axi_w1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv1_weights : IN STD_LOGIC_VECTOR (63 downto 0);
    conv1_biases_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    conv1_biases_ce0 : OUT STD_LOGIC;
    conv1_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_AWVALID : OUT STD_LOGIC;
    m_axi_i2_AWREADY : IN STD_LOGIC;
    m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WVALID : OUT STD_LOGIC;
    m_axi_i2_WREADY : IN STD_LOGIC;
    m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_WLAST : OUT STD_LOGIC;
    m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARVALID : OUT STD_LOGIC;
    m_axi_i2_ARREADY : IN STD_LOGIC;
    m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RVALID : IN STD_LOGIC;
    m_axi_i2_RREADY : OUT STD_LOGIC;
    m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_RLAST : IN STD_LOGIC;
    m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BVALID : IN STD_LOGIC;
    m_axi_i2_BREADY : OUT STD_LOGIC;
    m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_340_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_340_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_340_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_340_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_340_p_ce : OUT STD_LOGIC;
    grp_fu_344_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_344_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_344_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_344_p_ce : OUT STD_LOGIC;
    grp_fu_348_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_348_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_348_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_348_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_348_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (41 downto 0) := "000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (41 downto 0) := "000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (41 downto 0) := "000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (41 downto 0) := "000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (41 downto 0) := "000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (41 downto 0) := "000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (41 downto 0) := "000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (41 downto 0) := "000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (41 downto 0) := "001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (41 downto 0) := "010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (41 downto 0) := "100000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_288 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010001000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv13_107 : STD_LOGIC_VECTOR (12 downto 0) := "0000100000111";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_FE : STD_LOGIC_VECTOR (9 downto 0) := "0011111110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_3F8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001111111000";
    constant ap_const_lv9_103 : STD_LOGIC_VECTOR (8 downto 0) := "100000011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv15_144 : STD_LOGIC_VECTOR (14 downto 0) := "000000101000100";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv15_7788 : STD_LOGIC_VECTOR (14 downto 0) := "111011110001000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv12_EF1 : STD_LOGIC_VECTOR (11 downto 0) := "111011110001";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (41 downto 0) := "000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 : STD_LOGIC_VECTOR (12 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal w1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal reg_609 : STD_LOGIC_VECTOR (31 downto 0);
    signal h_5_reg_1171 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln32_fu_627_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln32_reg_1179 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln32_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln84_2_fu_631_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln84_2_reg_1184 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln84_fu_647_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln84_reg_1192 : STD_LOGIC_VECTOR (4 downto 0);
    signal i1_addr_reg_1197 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln84_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_addr_1_reg_1203 : STD_LOGIC_VECTOR (63 downto 0);
    signal left_fu_793_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_reg_1209 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_fu_797_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_reg_1214 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln93_fu_826_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal empty_95_fu_863_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_95_reg_1230 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal empty_97_fu_879_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_97_reg_1235 : STD_LOGIC_VECTOR (12 downto 0);
    signal exitcond255_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln110_1_reg_1243 : STD_LOGIC_VECTOR (61 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal tmp_5_fu_894_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln40_3_fu_957_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln40_3_reg_1257 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal icmp_ln44_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln44_reg_1262 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln40_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_4_fu_983_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln40_4_reg_1267 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln40_fu_991_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln40_reg_1272 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln44_fu_1025_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln44_reg_1278 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln44_1_fu_1033_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln44_1_reg_1284 : STD_LOGIC_VECTOR (3 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_96_reg_1290 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_97_reg_1295 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_98_reg_1300 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_99_reg_1305 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_100_reg_1310 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_101_reg_1315 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_102_reg_1320 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_103_reg_1325 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln60_fu_1081_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln60_reg_1330 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln36_fu_1086_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln36_reg_1335 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_fu_1092_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1340 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal add_ln45_fu_1125_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal select_ln44_2_fu_1136_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_idle : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_ready : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWVALID : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WVALID : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WLAST : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARVALID : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_RREADY : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_BREADY : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 : STD_LOGIC;
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_WVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_WLAST : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_RREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_i2_BREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_biases_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_biases_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_ap_start : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_ap_done : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_ap_idle : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_ap_ready : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_p_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_p_out_ap_vld : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_ce : STD_LOGIC;
    signal bh_reg_419 : STD_LOGIC_VECTOR (4 downto 0);
    signal phi_mul_reg_430 : STD_LOGIC_VECTOR (12 downto 0);
    signal p_reg_442 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln93_fu_820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index_i_reg_453 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal out_reg_464 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal indvar_flatten42_reg_476 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal o_reg_487 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten27_reg_498 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_reg_510 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_reg_521 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_export_output_buffer_c1_fu_555_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv1_Pipeline_KR_KC_fu_582_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal zext_ln95_1_fu_811_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln96_1_fu_848_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_890_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast245_fu_1069_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln89_1_fu_757_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln90_fu_783_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln110_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_fu_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln32_fu_931_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal empty_96_fu_885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln84_fu_637_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln87_fu_653_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln87_fu_659_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln87_1_fu_663_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_668_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln56_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln55_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln55_fu_690_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal hclamp_fu_704_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln89_1_fu_720_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_712_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln89_fu_728_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln89_fu_732_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln89_2_fu_738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln89_fu_742_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_747_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln90_fu_767_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_fu_773_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal zext_ln95_fu_801_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln95_fu_805_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln93_1_fu_816_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln96_fu_832_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln96_fu_838_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln96_1_fu_842_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal loop_index_i_cast_fu_853_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal arrayidx36612_sum_i_fu_869_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal arrayidx36612_sum_i_cast241_fu_875_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal mul_ln110_fu_906_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln110_fu_906_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln110_fu_906_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln110_fu_912_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln110_fu_916_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln40_fu_963_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln45_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln40_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_fu_975_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln40_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln44_fu_1019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln44_fu_1013_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl8_fu_1045_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln44_1_cast_fu_1041_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_99_fu_1053_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln44_cast_fu_1059_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_100_fu_1063_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln44_1_fu_1130_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1355_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1355_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1355_ce : STD_LOGIC;
    signal grp_fu_1359_ce : STD_LOGIC;
    signal grp_fu_1363_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal mul_ln110_fu_906_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_conv1_Pipeline_LOAD_WEIGHTS_K_L IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_w1_AWVALID : OUT STD_LOGIC;
        m_axi_w1_AWREADY : IN STD_LOGIC;
        m_axi_w1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_w1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_WVALID : OUT STD_LOGIC;
        m_axi_w1_WREADY : IN STD_LOGIC;
        m_axi_w1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w1_WLAST : OUT STD_LOGIC;
        m_axi_w1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_ARVALID : OUT STD_LOGIC;
        m_axi_w1_ARREADY : IN STD_LOGIC;
        m_axi_w1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_w1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_RVALID : IN STD_LOGIC;
        m_axi_w1_RREADY : OUT STD_LOGIC;
        m_axi_w1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w1_RLAST : IN STD_LOGIC;
        m_axi_w1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_w1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w1_BVALID : IN STD_LOGIC;
        m_axi_w1_BREADY : OUT STD_LOGIC;
        m_axi_w1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln110 : IN STD_LOGIC_VECTOR (61 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_export_output_buffer_c1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i2_AWVALID : OUT STD_LOGIC;
        m_axi_i2_AWREADY : IN STD_LOGIC;
        m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WVALID : OUT STD_LOGIC;
        m_axi_i2_WREADY : IN STD_LOGIC;
        m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_WLAST : OUT STD_LOGIC;
        m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARVALID : OUT STD_LOGIC;
        m_axi_i2_ARREADY : IN STD_LOGIC;
        m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RVALID : IN STD_LOGIC;
        m_axi_i2_RREADY : OUT STD_LOGIC;
        m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_RLAST : IN STD_LOGIC;
        m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BVALID : IN STD_LOGIC;
        m_axi_i2_BREADY : OUT STD_LOGIC;
        m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        conv1_biases_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv1_biases_ce0 : OUT STD_LOGIC;
        conv1_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r : IN STD_LOGIC_VECTOR (5 downto 0);
        h : IN STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1355_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_ce : OUT STD_LOGIC;
        grp_fu_1363_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1363_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1363_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1363_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1363_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv1_Pipeline_KR_KC IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp : IN STD_LOGIC_VECTOR (31 downto 0);
        select_ln44_2 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln45_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        trunc_ln40_mid2 : IN STD_LOGIC_VECTOR (2 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1355_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1355_p_ce : OUT STD_LOGIC;
        grp_fu_1359_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1359_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1359_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1359_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_mul_7ns_10ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component srcnn_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 6049,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        address1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1,
        d1 => left_reg_1209);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 81,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0,
        d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3825,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1);

    grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532 : component srcnn_conv1_Pipeline_LOAD_WEIGHTS_K_L
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start,
        ap_done => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done,
        ap_idle => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_idle,
        ap_ready => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_ready,
        m_axi_w1_AWVALID => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWVALID,
        m_axi_w1_AWREADY => ap_const_logic_0,
        m_axi_w1_AWADDR => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWADDR,
        m_axi_w1_AWID => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWID,
        m_axi_w1_AWLEN => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWLEN,
        m_axi_w1_AWSIZE => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWSIZE,
        m_axi_w1_AWBURST => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWBURST,
        m_axi_w1_AWLOCK => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWLOCK,
        m_axi_w1_AWCACHE => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWCACHE,
        m_axi_w1_AWPROT => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWPROT,
        m_axi_w1_AWQOS => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWQOS,
        m_axi_w1_AWREGION => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWREGION,
        m_axi_w1_AWUSER => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_AWUSER,
        m_axi_w1_WVALID => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WVALID,
        m_axi_w1_WREADY => ap_const_logic_0,
        m_axi_w1_WDATA => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WDATA,
        m_axi_w1_WSTRB => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WSTRB,
        m_axi_w1_WLAST => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WLAST,
        m_axi_w1_WID => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WID,
        m_axi_w1_WUSER => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_WUSER,
        m_axi_w1_ARVALID => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARVALID,
        m_axi_w1_ARREADY => m_axi_w1_ARREADY,
        m_axi_w1_ARADDR => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARADDR,
        m_axi_w1_ARID => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARID,
        m_axi_w1_ARLEN => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLEN,
        m_axi_w1_ARSIZE => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARSIZE,
        m_axi_w1_ARBURST => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARBURST,
        m_axi_w1_ARLOCK => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLOCK,
        m_axi_w1_ARCACHE => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARCACHE,
        m_axi_w1_ARPROT => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARPROT,
        m_axi_w1_ARQOS => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARQOS,
        m_axi_w1_ARREGION => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARREGION,
        m_axi_w1_ARUSER => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARUSER,
        m_axi_w1_RVALID => m_axi_w1_RVALID,
        m_axi_w1_RREADY => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_RREADY,
        m_axi_w1_RDATA => m_axi_w1_RDATA,
        m_axi_w1_RLAST => m_axi_w1_RLAST,
        m_axi_w1_RID => m_axi_w1_RID,
        m_axi_w1_RFIFONUM => m_axi_w1_RFIFONUM,
        m_axi_w1_RUSER => m_axi_w1_RUSER,
        m_axi_w1_RRESP => m_axi_w1_RRESP,
        m_axi_w1_BVALID => ap_const_logic_0,
        m_axi_w1_BREADY => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_BREADY,
        m_axi_w1_BRESP => ap_const_lv2_0,
        m_axi_w1_BID => ap_const_lv1_0,
        m_axi_w1_BUSER => ap_const_lv1_0,
        sext_ln110 => trunc_ln110_1_reg_1243,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0 => grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0);

    grp_export_output_buffer_c1_fu_555 : component srcnn_export_output_buffer_c1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_fu_555_ap_start,
        ap_done => grp_export_output_buffer_c1_fu_555_ap_done,
        ap_idle => grp_export_output_buffer_c1_fu_555_ap_idle,
        ap_ready => grp_export_output_buffer_c1_fu_555_ap_ready,
        m_axi_i2_AWVALID => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWVALID,
        m_axi_i2_AWREADY => m_axi_i2_AWREADY,
        m_axi_i2_AWADDR => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWADDR,
        m_axi_i2_AWID => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWID,
        m_axi_i2_AWLEN => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWLEN,
        m_axi_i2_AWSIZE => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWSIZE,
        m_axi_i2_AWBURST => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWBURST,
        m_axi_i2_AWLOCK => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWLOCK,
        m_axi_i2_AWCACHE => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWCACHE,
        m_axi_i2_AWPROT => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWPROT,
        m_axi_i2_AWQOS => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWQOS,
        m_axi_i2_AWREGION => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWREGION,
        m_axi_i2_AWUSER => grp_export_output_buffer_c1_fu_555_m_axi_i2_AWUSER,
        m_axi_i2_WVALID => grp_export_output_buffer_c1_fu_555_m_axi_i2_WVALID,
        m_axi_i2_WREADY => m_axi_i2_WREADY,
        m_axi_i2_WDATA => grp_export_output_buffer_c1_fu_555_m_axi_i2_WDATA,
        m_axi_i2_WSTRB => grp_export_output_buffer_c1_fu_555_m_axi_i2_WSTRB,
        m_axi_i2_WLAST => grp_export_output_buffer_c1_fu_555_m_axi_i2_WLAST,
        m_axi_i2_WID => grp_export_output_buffer_c1_fu_555_m_axi_i2_WID,
        m_axi_i2_WUSER => grp_export_output_buffer_c1_fu_555_m_axi_i2_WUSER,
        m_axi_i2_ARVALID => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARVALID,
        m_axi_i2_ARREADY => ap_const_logic_0,
        m_axi_i2_ARADDR => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARADDR,
        m_axi_i2_ARID => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARID,
        m_axi_i2_ARLEN => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARLEN,
        m_axi_i2_ARSIZE => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARSIZE,
        m_axi_i2_ARBURST => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARBURST,
        m_axi_i2_ARLOCK => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARLOCK,
        m_axi_i2_ARCACHE => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARCACHE,
        m_axi_i2_ARPROT => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARPROT,
        m_axi_i2_ARQOS => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARQOS,
        m_axi_i2_ARREGION => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARREGION,
        m_axi_i2_ARUSER => grp_export_output_buffer_c1_fu_555_m_axi_i2_ARUSER,
        m_axi_i2_RVALID => ap_const_logic_0,
        m_axi_i2_RREADY => grp_export_output_buffer_c1_fu_555_m_axi_i2_RREADY,
        m_axi_i2_RDATA => ap_const_lv32_0,
        m_axi_i2_RLAST => ap_const_logic_0,
        m_axi_i2_RID => ap_const_lv1_0,
        m_axi_i2_RFIFONUM => ap_const_lv13_0,
        m_axi_i2_RUSER => ap_const_lv1_0,
        m_axi_i2_RRESP => ap_const_lv2_0,
        m_axi_i2_BVALID => m_axi_i2_BVALID,
        m_axi_i2_BREADY => grp_export_output_buffer_c1_fu_555_m_axi_i2_BREADY,
        m_axi_i2_BRESP => m_axi_i2_BRESP,
        m_axi_i2_BID => m_axi_i2_BID,
        m_axi_i2_BUSER => m_axi_i2_BUSER,
        output_ftmap => output_ftmap,
        conv1_biases_address0 => grp_export_output_buffer_c1_fu_555_conv1_biases_address0,
        conv1_biases_ce0 => grp_export_output_buffer_c1_fu_555_conv1_biases_ce0,
        conv1_biases_q0 => conv1_biases_q0,
        out_r => trunc_ln60_reg_1330,
        h => h_5_reg_1171,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1,
        grp_fu_1355_p_din0 => grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din0,
        grp_fu_1355_p_din1 => grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din1,
        grp_fu_1355_p_opcode => grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_opcode,
        grp_fu_1355_p_dout0 => grp_fu_340_p_dout0,
        grp_fu_1355_p_ce => grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_ce,
        grp_fu_1363_p_din0 => grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_din0,
        grp_fu_1363_p_din1 => grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_din1,
        grp_fu_1363_p_opcode => grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_opcode,
        grp_fu_1363_p_dout0 => grp_fu_348_p_dout0,
        grp_fu_1363_p_ce => grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_ce);

    grp_conv1_Pipeline_KR_KC_fu_582 : component srcnn_conv1_Pipeline_KR_KC
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_Pipeline_KR_KC_fu_582_ap_start,
        ap_done => grp_conv1_Pipeline_KR_KC_fu_582_ap_done,
        ap_idle => grp_conv1_Pipeline_KR_KC_fu_582_ap_idle,
        ap_ready => grp_conv1_Pipeline_KR_KC_fu_582_ap_ready,
        tmp => tmp_reg_1340,
        select_ln44_2 => select_ln44_1_reg_1284,
        zext_ln45_2 => select_ln44_reg_1278,
        trunc_ln40_mid2 => trunc_ln40_reg_1272,
        p_out => grp_conv1_Pipeline_KR_KC_fu_582_p_out,
        p_out_ap_vld => grp_conv1_Pipeline_KR_KC_fu_582_p_out_ap_vld,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 => grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        grp_fu_1355_p_din0 => grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din0,
        grp_fu_1355_p_din1 => grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din1,
        grp_fu_1355_p_opcode => grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_opcode,
        grp_fu_1355_p_dout0 => grp_fu_340_p_dout0,
        grp_fu_1355_p_ce => grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_ce,
        grp_fu_1359_p_din0 => grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_din0,
        grp_fu_1359_p_din1 => grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_din1,
        grp_fu_1359_p_dout0 => grp_fu_344_p_dout0,
        grp_fu_1359_p_ce => grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_ce);

    mul_7ns_10ns_15_1_1_U132 : component srcnn_mul_7ns_10ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln110_fu_906_p0,
        din1 => mul_ln110_fu_906_p1,
        dout => mul_ln110_fu_906_p2);

    mux_8_3_32_1_1_U133 : component srcnn_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0,
        din1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0,
        din2 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0,
        din3 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0,
        din4 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0,
        din5 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0,
        din6 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        din7 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        din8 => trunc_ln40_reg_1272,
        dout => tmp_fu_1092_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv1_Pipeline_KR_KC_fu_582_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv1_Pipeline_KR_KC_fu_582_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    grp_conv1_Pipeline_KR_KC_fu_582_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv1_Pipeline_KR_KC_fu_582_ap_ready = ap_const_logic_1)) then 
                    grp_conv1_Pipeline_KR_KC_fu_582_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                    grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_ready = ap_const_logic_1)) then 
                    grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_fu_555_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_fu_555_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln40_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                    grp_export_output_buffer_c1_fu_555_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_fu_555_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_fu_555_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bh_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_621_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                bh_reg_419 <= ap_const_lv5_0;
            elsif (((exitcond255_fu_857_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                bh_reg_419 <= add_ln84_reg_1192;
            end if; 
        end if;
    end process;

    c_reg_521_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                c_reg_521 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                c_reg_521 <= add_ln45_fu_1125_p2;
            end if; 
        end if;
    end process;

    h_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_fu_222 <= ap_const_lv8_0;
            elsif (((tmp_5_fu_894_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                h_fu_222 <= add_ln32_fu_931_p2;
            end if; 
        end if;
    end process;

    indvar_flatten27_reg_498_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                indvar_flatten27_reg_498 <= ap_const_lv12_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                indvar_flatten27_reg_498 <= select_ln44_2_fu_1136_p3;
            end if; 
        end if;
    end process;

    indvar_flatten42_reg_476_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                indvar_flatten42_reg_476 <= ap_const_lv15_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                indvar_flatten42_reg_476 <= add_ln40_3_reg_1257;
            end if; 
        end if;
    end process;

    loop_index_i_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                loop_index_i_reg_453 <= empty_95_reg_1230;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                loop_index_i_reg_453 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    o_reg_487_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                o_reg_487 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                o_reg_487 <= select_ln40_4_reg_1267;
            end if; 
        end if;
    end process;

    out_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln84_fu_641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_reg_464 <= ap_const_lv7_0;
            elsif (((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                out_reg_464 <= add_ln36_reg_1335;
            end if; 
        end if;
    end process;

    p_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_i1_RVALID = ap_const_logic_1))) then 
                p_reg_442 <= ap_const_lv3_0;
            elsif (((icmp_ln93_fu_820_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                p_reg_442 <= add_ln93_fu_826_p2;
            end if; 
        end if;
    end process;

    phi_mul_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_621_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                phi_mul_reg_430 <= ap_const_lv13_0;
            elsif (((exitcond255_fu_857_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                phi_mul_reg_430 <= add_ln84_2_reg_1184;
            end if; 
        end if;
    end process;

    r_reg_510_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                r_reg_510 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
                r_reg_510 <= select_ln44_1_reg_1284;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                add_ln36_reg_1335 <= add_ln36_fu_1086_p2;
                trunc_ln60_reg_1330 <= trunc_ln60_fu_1081_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                add_ln40_3_reg_1257 <= add_ln40_3_fu_957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln84_2_reg_1184 <= add_ln84_2_fu_631_p2;
                add_ln84_reg_1192 <= add_ln84_fu_647_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_100_reg_1310 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_101_reg_1315 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_102_reg_1320 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_103_reg_1325 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_96_reg_1290 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_97_reg_1295 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_98_reg_1300 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_99_reg_1305 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
                icmp_ln44_reg_1262 <= icmp_ln44_fu_969_p2;
                select_ln40_4_reg_1267 <= select_ln40_4_fu_983_p3;
                select_ln44_1_reg_1284 <= select_ln44_1_fu_1033_p3;
                select_ln44_reg_1278 <= select_ln44_fu_1025_p3;
                trunc_ln40_reg_1272 <= trunc_ln40_fu_991_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                empty_95_reg_1230 <= empty_95_fu_863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond255_fu_857_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                empty_97_reg_1235 <= empty_97_fu_879_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                h_5_reg_1171 <= h_fu_222;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln84_fu_641_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                i1_addr_1_reg_1203 <= sext_ln90_fu_783_p1;
                i1_addr_reg_1197 <= sext_ln89_1_fu_757_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                left_reg_1209 <= left_fu_793_p1;
                right_reg_1214 <= right_fu_797_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
                reg_609 <= m_axi_i1_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                tmp_reg_1340 <= tmp_fu_1092_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_fu_894_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                trunc_ln110_1_reg_1243 <= add_ln110_fu_916_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_621_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    zext_ln32_reg_1179(7 downto 0) <= zext_ln32_fu_627_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln32_reg_1179(9 downto 8) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_i1_ARREADY, m_axi_i1_RVALID, m_axi_w1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state27, ap_CS_fsm_state2, icmp_ln32_fu_621_p2, ap_CS_fsm_state3, icmp_ln84_fu_641_p2, ap_CS_fsm_state14, ap_CS_fsm_state23, exitcond255_fu_857_p2, ap_CS_fsm_state26, tmp_5_fu_894_p3, ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done, grp_export_output_buffer_c1_fu_555_ap_done, grp_conv1_Pipeline_KR_KC_fu_582_ap_done, icmp_ln93_fu_820_p2, ap_CS_fsm_state42, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln32_fu_621_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln84_fu_641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (m_axi_i1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_i1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln93_fu_820_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((exitcond255_fu_857_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (m_axi_i1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state26 => 
                if (((tmp_5_fu_894_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_w1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                if (((icmp_ln40_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((grp_conv1_Pipeline_KR_KC_fu_582_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state42 => 
                if (((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln110_fu_916_p2 <= std_logic_vector(unsigned(zext_ln110_fu_912_p1) + unsigned(conv1_weights));
    add_ln32_fu_931_p2 <= std_logic_vector(unsigned(h_fu_222) + unsigned(ap_const_lv8_F));
    add_ln36_fu_1086_p2 <= std_logic_vector(unsigned(out_reg_464) + unsigned(ap_const_lv7_8));
    add_ln40_3_fu_957_p2 <= std_logic_vector(unsigned(indvar_flatten42_reg_476) + unsigned(ap_const_lv15_1));
    add_ln40_fu_963_p2 <= std_logic_vector(unsigned(o_reg_487) + unsigned(ap_const_lv4_1));
    add_ln44_1_fu_1130_p2 <= std_logic_vector(unsigned(indvar_flatten27_reg_498) + unsigned(ap_const_lv12_1));
    add_ln44_fu_1013_p2 <= std_logic_vector(unsigned(select_ln40_fu_975_p3) + unsigned(ap_const_lv4_1));
    add_ln45_fu_1125_p2 <= std_logic_vector(unsigned(select_ln44_reg_1278) + unsigned(ap_const_lv8_1));
    add_ln84_2_fu_631_p2 <= std_logic_vector(unsigned(phi_mul_reg_430) + unsigned(ap_const_lv13_107));
    add_ln84_fu_647_p2 <= std_logic_vector(unsigned(bh_reg_419) + unsigned(ap_const_lv5_1));
    add_ln87_1_fu_663_p2 <= std_logic_vector(signed(sext_ln87_fu_659_p1) + signed(zext_ln32_reg_1179));
    add_ln87_fu_653_p2 <= std_logic_vector(unsigned(zext_ln84_fu_637_p1) + unsigned(ap_const_lv6_3C));
    add_ln89_fu_742_p2 <= std_logic_vector(signed(sext_ln89_2_fu_738_p1) + signed(input_ftmap));
    add_ln90_fu_767_p2 <= std_logic_vector(unsigned(add_ln89_fu_742_p2) + unsigned(ap_const_lv64_3F8));
    add_ln93_fu_826_p2 <= std_logic_vector(unsigned(p_reg_442) + unsigned(ap_const_lv3_1));
    add_ln95_fu_805_p2 <= std_logic_vector(unsigned(phi_mul_reg_430) + unsigned(zext_ln95_fu_801_p1));
    add_ln96_1_fu_842_p2 <= std_logic_vector(unsigned(phi_mul_reg_430) + unsigned(zext_ln96_fu_838_p1));
    add_ln96_fu_832_p2 <= std_logic_vector(unsigned(zext_ln93_1_fu_816_p1) + unsigned(ap_const_lv9_103));
    and_ln40_fu_1007_p2 <= (xor_ln40_fu_995_p2 and icmp_ln45_fu_1001_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(m_axi_w1_ARREADY)
    begin
        if ((m_axi_w1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done)
    begin
        if ((grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;

    ap_ST_fsm_state39_blk_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_582_ap_done)
    begin
        if ((grp_conv1_Pipeline_KR_KC_fu_582_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;

    ap_ST_fsm_state42_blk_assign_proc : process(grp_export_output_buffer_c1_fu_555_ap_done)
    begin
        if ((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state42_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state42_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln32_fu_621_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln32_fu_621_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln32_fu_621_p2)
    begin
        if (((icmp_ln32_fu_621_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx36612_sum_i_cast241_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(arrayidx36612_sum_i_fu_869_p2),13));
    arrayidx36612_sum_i_fu_869_p2 <= std_logic_vector(unsigned(loop_index_i_cast_fu_853_p1) + unsigned(ap_const_lv9_4));
    conv1_biases_address0 <= grp_export_output_buffer_c1_fu_555_conv1_biases_address0;
    conv1_biases_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_biases_ce0;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0, ap_CS_fsm_state25, ap_CS_fsm_state39, zext_ln96_1_fu_848_p1, p_cast_fu_890_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= p_cast_fu_890_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= zext_ln96_1_fu_848_p1(13 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= "XXXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 <= zext_ln95_1_fu_811_p1(13 - 1 downto 0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0, ap_CS_fsm_state25, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0_assign_proc : process(right_reg_1214, ap_CS_fsm_state14, ap_CS_fsm_state25, empty_96_fu_885_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= empty_96_fu_885_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= right_reg_1214;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0_assign_proc : process(ap_CS_fsm_state14, icmp_ln93_fu_820_p2, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((icmp_ln93_fu_820_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1_assign_proc : process(ap_CS_fsm_state14, icmp_ln93_fu_820_p2)
    begin
        if (((icmp_ln93_fu_820_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_102_reg_1320, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_102_reg_1320;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_101_reg_1315, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_101_reg_1315;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_100_reg_1310, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_100_reg_1310;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_99_reg_1305, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_99_reg_1305;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_98_reg_1300, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_98_reg_1300;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_97_reg_1295, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_97_reg_1295;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_96_reg_1290, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_96_reg_1290;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_103_reg_1325, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, ap_CS_fsm_state42, p_cast245_fu_1069_p1, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_103_reg_1325;
        elsif (((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= p_cast245_fu_1069_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, grp_conv1_Pipeline_KR_KC_fu_582_p_out, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_conv1_Pipeline_KR_KC_fu_582_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0_assign_proc : process(trunc_ln40_reg_1272, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, ap_CS_fsm_state42, ap_CS_fsm_state40)
    begin
        if (((trunc_ln40_reg_1272 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= "XXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0, grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0, ap_CS_fsm_state36, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= grp_conv1_Pipeline_KR_KC_fu_582_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0, ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_100_fu_1063_p2 <= std_logic_vector(unsigned(empty_99_fu_1053_p2) + unsigned(select_ln44_cast_fu_1059_p1));
    empty_95_fu_863_p2 <= std_logic_vector(unsigned(loop_index_i_reg_453) + unsigned(ap_const_lv8_1));
    empty_96_fu_885_p1 <= reg_609;
    empty_97_fu_879_p2 <= std_logic_vector(unsigned(phi_mul_reg_430) + unsigned(arrayidx36612_sum_i_cast241_fu_875_p1));
    empty_99_fu_1053_p2 <= std_logic_vector(unsigned(p_shl8_fu_1045_p3) - unsigned(select_ln44_1_cast_fu_1041_p1));
    exitcond255_fu_857_p2 <= "1" when (loop_index_i_reg_453 = ap_const_lv8_FF) else "0";
    grp_conv1_Pipeline_KR_KC_fu_582_ap_start <= grp_conv1_Pipeline_KR_KC_fu_582_ap_start_reg;
    grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_ap_start_reg;
    grp_export_output_buffer_c1_fu_555_ap_start <= grp_export_output_buffer_c1_fu_555_ap_start_reg;

    grp_fu_1355_ce_assign_proc : process(grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_ce, grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_ce, ap_CS_fsm_state42, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_1355_ce <= grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_1355_ce <= grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_ce;
        else 
            grp_fu_1355_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1355_p0_assign_proc : process(grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din0, grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din0, ap_CS_fsm_state42, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_1355_p0 <= grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_1355_p0 <= grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din0;
        else 
            grp_fu_1355_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1355_p1_assign_proc : process(grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din1, grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din1, ap_CS_fsm_state42, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_1355_p1 <= grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1355_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_1355_p1 <= grp_export_output_buffer_c1_fu_555_grp_fu_1355_p_din1;
        else 
            grp_fu_1355_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1359_ce_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_ce, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            grp_fu_1359_ce <= grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_ce;
        else 
            grp_fu_1359_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1363_ce_assign_proc : process(grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_ce, ap_CS_fsm_state42)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_1363_ce <= grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_ce;
        else 
            grp_fu_1363_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_340_p_ce <= grp_fu_1355_ce;
    grp_fu_340_p_din0 <= grp_fu_1355_p0;
    grp_fu_340_p_din1 <= grp_fu_1355_p1;
    grp_fu_340_p_opcode <= ap_const_lv2_0;
    grp_fu_344_p_ce <= grp_fu_1359_ce;
    grp_fu_344_p_din0 <= grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_din0;
    grp_fu_344_p_din1 <= grp_conv1_Pipeline_KR_KC_fu_582_grp_fu_1359_p_din1;
    grp_fu_348_p_ce <= grp_fu_1363_ce;
    grp_fu_348_p_din0 <= grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_din0;
    grp_fu_348_p_din1 <= grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_din1;
    grp_fu_348_p_opcode <= grp_export_output_buffer_c1_fu_555_grp_fu_1363_p_opcode;
    hclamp_fu_704_p3 <= 
        select_ln55_fu_690_p3 when (or_ln55_fu_698_p2(0) = '1') else 
        add_ln87_1_fu_663_p2;

    i1_blk_n_AR_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            i1_blk_n_AR <= m_axi_i1_ARREADY;
        else 
            i1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    i1_blk_n_R_assign_proc : process(m_axi_i1_RVALID, ap_CS_fsm_state12, ap_CS_fsm_state24, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            i1_blk_n_R <= m_axi_i1_RVALID;
        else 
            i1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln32_fu_621_p2 <= "1" when (h_fu_222 = ap_const_lv8_FF) else "0";
    icmp_ln40_fu_951_p2 <= "1" when (indvar_flatten42_reg_476 = ap_const_lv15_7788) else "0";
    icmp_ln44_fu_969_p2 <= "1" when (indvar_flatten27_reg_498 = ap_const_lv12_EF1) else "0";
    icmp_ln45_fu_1001_p2 <= "1" when (c_reg_521 = ap_const_lv8_FF) else "0";
    icmp_ln56_fu_676_p2 <= "1" when (signed(add_ln87_1_fu_663_p2) > signed(ap_const_lv10_FE)) else "0";
    icmp_ln84_fu_641_p2 <= "1" when (bh_reg_419 = ap_const_lv5_17) else "0";
    icmp_ln93_fu_820_p2 <= "1" when (p_reg_442 = ap_const_lv3_4) else "0";
    left_fu_793_p1 <= reg_609;
    loop_index_i_cast_fu_853_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index_i_reg_453),9));

    m_axi_i1_ARADDR_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5, i1_addr_reg_1197, i1_addr_1_reg_1203)
    begin
        if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_i1_ARADDR <= i1_addr_1_reg_1203;
        elsif ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_i1_ARADDR <= i1_addr_reg_1197;
        else 
            m_axi_i1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i1_ARBURST <= ap_const_lv2_0;
    m_axi_i1_ARCACHE <= ap_const_lv4_0;
    m_axi_i1_ARID <= ap_const_lv1_0;

    m_axi_i1_ARLEN_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5)
    begin
        if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            m_axi_i1_ARLEN <= ap_const_lv32_FF;
        elsif ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_i1_ARLEN <= ap_const_lv32_1;
        else 
            m_axi_i1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i1_ARLOCK <= ap_const_lv2_0;
    m_axi_i1_ARPROT <= ap_const_lv3_0;
    m_axi_i1_ARQOS <= ap_const_lv4_0;
    m_axi_i1_ARREGION <= ap_const_lv4_0;
    m_axi_i1_ARSIZE <= ap_const_lv3_0;
    m_axi_i1_ARUSER <= ap_const_lv1_0;

    m_axi_i1_ARVALID_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5)
    begin
        if ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_i1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_i1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i1_AWADDR <= ap_const_lv64_0;
    m_axi_i1_AWBURST <= ap_const_lv2_0;
    m_axi_i1_AWCACHE <= ap_const_lv4_0;
    m_axi_i1_AWID <= ap_const_lv1_0;
    m_axi_i1_AWLEN <= ap_const_lv32_0;
    m_axi_i1_AWLOCK <= ap_const_lv2_0;
    m_axi_i1_AWPROT <= ap_const_lv3_0;
    m_axi_i1_AWQOS <= ap_const_lv4_0;
    m_axi_i1_AWREGION <= ap_const_lv4_0;
    m_axi_i1_AWSIZE <= ap_const_lv3_0;
    m_axi_i1_AWUSER <= ap_const_lv1_0;
    m_axi_i1_AWVALID <= ap_const_logic_0;
    m_axi_i1_BREADY <= ap_const_logic_0;

    m_axi_i1_RREADY_assign_proc : process(m_axi_i1_RVALID, ap_CS_fsm_state12, ap_CS_fsm_state24, ap_CS_fsm_state13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_i1_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (m_axi_i1_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (m_axi_i1_RVALID = ap_const_logic_1)))) then 
            m_axi_i1_RREADY <= ap_const_logic_1;
        else 
            m_axi_i1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i1_WDATA <= ap_const_lv32_0;
    m_axi_i1_WID <= ap_const_lv1_0;
    m_axi_i1_WLAST <= ap_const_logic_0;
    m_axi_i1_WSTRB <= ap_const_lv4_0;
    m_axi_i1_WUSER <= ap_const_lv1_0;
    m_axi_i1_WVALID <= ap_const_logic_0;
    m_axi_i2_ARADDR <= ap_const_lv64_0;
    m_axi_i2_ARBURST <= ap_const_lv2_0;
    m_axi_i2_ARCACHE <= ap_const_lv4_0;
    m_axi_i2_ARID <= ap_const_lv1_0;
    m_axi_i2_ARLEN <= ap_const_lv32_0;
    m_axi_i2_ARLOCK <= ap_const_lv2_0;
    m_axi_i2_ARPROT <= ap_const_lv3_0;
    m_axi_i2_ARQOS <= ap_const_lv4_0;
    m_axi_i2_ARREGION <= ap_const_lv4_0;
    m_axi_i2_ARSIZE <= ap_const_lv3_0;
    m_axi_i2_ARUSER <= ap_const_lv1_0;
    m_axi_i2_ARVALID <= ap_const_logic_0;
    m_axi_i2_AWADDR <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWADDR;
    m_axi_i2_AWBURST <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWBURST;
    m_axi_i2_AWCACHE <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWCACHE;
    m_axi_i2_AWID <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWID;
    m_axi_i2_AWLEN <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWLEN;
    m_axi_i2_AWLOCK <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWLOCK;
    m_axi_i2_AWPROT <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWPROT;
    m_axi_i2_AWQOS <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWQOS;
    m_axi_i2_AWREGION <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWREGION;
    m_axi_i2_AWSIZE <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWSIZE;
    m_axi_i2_AWUSER <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWUSER;

    m_axi_i2_AWVALID_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_m_axi_i2_AWVALID, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            m_axi_i2_AWVALID <= grp_export_output_buffer_c1_fu_555_m_axi_i2_AWVALID;
        else 
            m_axi_i2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_i2_BREADY_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_m_axi_i2_BREADY, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            m_axi_i2_BREADY <= grp_export_output_buffer_c1_fu_555_m_axi_i2_BREADY;
        else 
            m_axi_i2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i2_RREADY <= ap_const_logic_0;
    m_axi_i2_WDATA <= grp_export_output_buffer_c1_fu_555_m_axi_i2_WDATA;
    m_axi_i2_WID <= grp_export_output_buffer_c1_fu_555_m_axi_i2_WID;
    m_axi_i2_WLAST <= grp_export_output_buffer_c1_fu_555_m_axi_i2_WLAST;
    m_axi_i2_WSTRB <= grp_export_output_buffer_c1_fu_555_m_axi_i2_WSTRB;
    m_axi_i2_WUSER <= grp_export_output_buffer_c1_fu_555_m_axi_i2_WUSER;

    m_axi_i2_WVALID_assign_proc : process(ap_CS_fsm_state37, icmp_ln40_fu_951_p2, grp_export_output_buffer_c1_fu_555_m_axi_i2_WVALID, ap_CS_fsm_state42)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state42) or ((icmp_ln40_fu_951_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37)))) then 
            m_axi_i2_WVALID <= grp_export_output_buffer_c1_fu_555_m_axi_i2_WVALID;
        else 
            m_axi_i2_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_w1_ARADDR_assign_proc : process(m_axi_w1_ARREADY, ap_CS_fsm_state27, grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARADDR, ap_CS_fsm_state36, ap_CS_fsm_state35, sext_ln110_fu_941_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_w1_ARREADY = ap_const_logic_1))) then 
            m_axi_w1_ARADDR <= sext_ln110_fu_941_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARADDR <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARADDR;
        else 
            m_axi_w1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_w1_ARBURST_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARBURST, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARBURST <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARBURST;
        else 
            m_axi_w1_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_w1_ARCACHE_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARCACHE, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARCACHE <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARCACHE;
        else 
            m_axi_w1_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w1_ARID_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARID, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARID <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARID;
        else 
            m_axi_w1_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_w1_ARLEN_assign_proc : process(m_axi_w1_ARREADY, ap_CS_fsm_state27, grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLEN, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_w1_ARREADY = ap_const_logic_1))) then 
            m_axi_w1_ARLEN <= ap_const_lv32_288;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARLEN <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLEN;
        else 
            m_axi_w1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_w1_ARLOCK_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLOCK, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARLOCK <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARLOCK;
        else 
            m_axi_w1_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_w1_ARPROT_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARPROT, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARPROT <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARPROT;
        else 
            m_axi_w1_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_w1_ARQOS_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARQOS, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARQOS <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARQOS;
        else 
            m_axi_w1_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w1_ARREGION_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARREGION, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARREGION <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARREGION;
        else 
            m_axi_w1_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w1_ARSIZE_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARSIZE, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARSIZE <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARSIZE;
        else 
            m_axi_w1_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_w1_ARUSER_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARUSER, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARUSER <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARUSER;
        else 
            m_axi_w1_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_w1_ARVALID_assign_proc : process(m_axi_w1_ARREADY, ap_CS_fsm_state27, grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARVALID, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_w1_ARREADY = ap_const_logic_1))) then 
            m_axi_w1_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_ARVALID <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_ARVALID;
        else 
            m_axi_w1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w1_AWADDR <= ap_const_lv64_0;
    m_axi_w1_AWBURST <= ap_const_lv2_0;
    m_axi_w1_AWCACHE <= ap_const_lv4_0;
    m_axi_w1_AWID <= ap_const_lv1_0;
    m_axi_w1_AWLEN <= ap_const_lv32_0;
    m_axi_w1_AWLOCK <= ap_const_lv2_0;
    m_axi_w1_AWPROT <= ap_const_lv3_0;
    m_axi_w1_AWQOS <= ap_const_lv4_0;
    m_axi_w1_AWREGION <= ap_const_lv4_0;
    m_axi_w1_AWSIZE <= ap_const_lv3_0;
    m_axi_w1_AWUSER <= ap_const_lv1_0;
    m_axi_w1_AWVALID <= ap_const_logic_0;
    m_axi_w1_BREADY <= ap_const_logic_0;

    m_axi_w1_RREADY_assign_proc : process(grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_RREADY, ap_CS_fsm_state36, ap_CS_fsm_state35)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 = ap_CS_fsm_state36))) then 
            m_axi_w1_RREADY <= grp_conv1_Pipeline_LOAD_WEIGHTS_K_L_fu_532_m_axi_w1_RREADY;
        else 
            m_axi_w1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w1_WDATA <= ap_const_lv32_0;
    m_axi_w1_WID <= ap_const_lv1_0;
    m_axi_w1_WLAST <= ap_const_logic_0;
    m_axi_w1_WSTRB <= ap_const_lv4_0;
    m_axi_w1_WUSER <= ap_const_lv1_0;
    m_axi_w1_WVALID <= ap_const_logic_0;
    mul_ln110_fu_906_p0 <= mul_ln110_fu_906_p00(7 - 1 downto 0);
    mul_ln110_fu_906_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_reg_464),15));
    mul_ln110_fu_906_p1 <= ap_const_lv15_144(10 - 1 downto 0);
    or_ln44_fu_1019_p2 <= (icmp_ln44_fu_969_p2 or and_ln40_fu_1007_p2);
    or_ln55_fu_698_p2 <= (tmp_3_fu_668_p3 or icmp_ln56_fu_676_p2);
    p_cast245_fu_1069_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_100_fu_1063_p2),64));
    p_cast_fu_890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_97_reg_1235),64));
    p_shl8_fu_1045_p3 <= (select_ln44_1_fu_1033_p3 & ap_const_lv8_0);
    right_fu_797_p1 <= m_axi_i1_RDATA;
    select_ln40_4_fu_983_p3 <= 
        add_ln40_fu_963_p2 when (icmp_ln44_fu_969_p2(0) = '1') else 
        o_reg_487;
    select_ln40_fu_975_p3 <= 
        ap_const_lv4_0 when (icmp_ln44_fu_969_p2(0) = '1') else 
        r_reg_510;
    select_ln44_1_cast_fu_1041_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_1_fu_1033_p3),12));
    select_ln44_1_fu_1033_p3 <= 
        add_ln44_fu_1013_p2 when (and_ln40_fu_1007_p2(0) = '1') else 
        select_ln40_fu_975_p3;
    select_ln44_2_fu_1136_p3 <= 
        ap_const_lv12_1 when (icmp_ln44_reg_1262(0) = '1') else 
        add_ln44_1_fu_1130_p2;
    select_ln44_cast_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln44_fu_1025_p3),12));
    select_ln44_fu_1025_p3 <= 
        ap_const_lv8_0 when (or_ln44_fu_1019_p2(0) = '1') else 
        c_reg_521;
    select_ln55_fu_690_p3 <= 
        ap_const_lv10_0 when (tmp_4_fu_682_p3(0) = '1') else 
        ap_const_lv10_FE;
        sext_ln110_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln110_1_reg_1243),64));

        sext_ln87_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln87_fu_653_p2),10));

        sext_ln89_1_fu_757_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_747_p4),64));

        sext_ln89_2_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln89_fu_732_p2),64));

        sext_ln89_fu_728_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln89_1_fu_720_p3),20));

        sext_ln90_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_773_p4),64));

    shl_ln89_1_fu_720_p3 <= (hclamp_fu_704_p3 & ap_const_lv2_0);
    shl_ln_fu_712_p3 <= (hclamp_fu_704_p3 & ap_const_lv10_0);
    sub_ln89_fu_732_p2 <= std_logic_vector(unsigned(shl_ln_fu_712_p3) - unsigned(sext_ln89_fu_728_p1));
    tmp_3_fu_668_p3 <= add_ln87_1_fu_663_p2(9 downto 9);
    tmp_4_fu_682_p3 <= add_ln87_1_fu_663_p2(9 downto 9);
    tmp_5_fu_894_p3 <= out_reg_464(6 downto 6);
    trunc_ln2_fu_773_p4 <= add_ln90_fu_767_p2(63 downto 2);
    trunc_ln40_fu_991_p1 <= select_ln40_4_fu_983_p3(3 - 1 downto 0);
    trunc_ln60_fu_1081_p1 <= out_reg_464(6 - 1 downto 0);
    trunc_ln_fu_747_p4 <= add_ln89_fu_742_p2(63 downto 2);

    w1_blk_n_AR_assign_proc : process(m_axi_w1_ARREADY, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            w1_blk_n_AR <= m_axi_w1_ARREADY;
        else 
            w1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    xor_ln40_fu_995_p2 <= (icmp_ln44_fu_969_p2 xor ap_const_lv1_1);
    zext_ln110_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln110_fu_906_p2),64));
    zext_ln32_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_222),10));
    zext_ln84_fu_637_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_419),6));
    zext_ln93_1_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_reg_442),9));
    zext_ln95_1_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln95_fu_805_p2),64));
    zext_ln95_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_reg_442),13));
    zext_ln96_1_fu_848_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln96_1_fu_842_p2),64));
    zext_ln96_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln96_fu_832_p2),13));
end behav;
