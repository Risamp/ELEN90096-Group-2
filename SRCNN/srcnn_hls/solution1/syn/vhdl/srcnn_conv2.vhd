-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_i2_AWVALID : OUT STD_LOGIC;
    m_axi_i2_AWREADY : IN STD_LOGIC;
    m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WVALID : OUT STD_LOGIC;
    m_axi_i2_WREADY : IN STD_LOGIC;
    m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_WLAST : OUT STD_LOGIC;
    m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARVALID : OUT STD_LOGIC;
    m_axi_i2_ARREADY : IN STD_LOGIC;
    m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RVALID : IN STD_LOGIC;
    m_axi_i2_RREADY : OUT STD_LOGIC;
    m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_RLAST : IN STD_LOGIC;
    m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BVALID : IN STD_LOGIC;
    m_axi_i2_BREADY : OUT STD_LOGIC;
    m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w2_AWVALID : OUT STD_LOGIC;
    m_axi_w2_AWREADY : IN STD_LOGIC;
    m_axi_w2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_WVALID : OUT STD_LOGIC;
    m_axi_w2_WREADY : IN STD_LOGIC;
    m_axi_w2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w2_WLAST : OUT STD_LOGIC;
    m_axi_w2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_ARVALID : OUT STD_LOGIC;
    m_axi_w2_ARREADY : IN STD_LOGIC;
    m_axi_w2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_RVALID : IN STD_LOGIC;
    m_axi_w2_RREADY : OUT STD_LOGIC;
    m_axi_w2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w2_RLAST : IN STD_LOGIC;
    m_axi_w2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_w2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w2_BVALID : IN STD_LOGIC;
    m_axi_w2_BREADY : OUT STD_LOGIC;
    m_axi_w2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_weights : IN STD_LOGIC_VECTOR (63 downto 0);
    conv2_biases_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_biases_ce0 : OUT STD_LOGIC;
    conv2_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_AWVALID : OUT STD_LOGIC;
    m_axi_i3_AWREADY : IN STD_LOGIC;
    m_axi_i3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_WVALID : OUT STD_LOGIC;
    m_axi_i3_WREADY : IN STD_LOGIC;
    m_axi_i3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_WLAST : OUT STD_LOGIC;
    m_axi_i3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_ARVALID : OUT STD_LOGIC;
    m_axi_i3_ARREADY : IN STD_LOGIC;
    m_axi_i3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_RVALID : IN STD_LOGIC;
    m_axi_i3_RREADY : OUT STD_LOGIC;
    m_axi_i3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_RLAST : IN STD_LOGIC;
    m_axi_i3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_BVALID : IN STD_LOGIC;
    m_axi_i3_BREADY : OUT STD_LOGIC;
    m_axi_i3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_292_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_292_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_292_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_292_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_292_p_ce : OUT STD_LOGIC;
    grp_fu_284_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_284_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_284_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_284_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_284_p_ce : OUT STD_LOGIC;
    grp_fu_288_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_288_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_288_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_288_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (38 downto 0) := "000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (38 downto 0) := "000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (38 downto 0) := "000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (38 downto 0) := "000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (38 downto 0) := "000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (38 downto 0) := "000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (38 downto 0) := "000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (38 downto 0) := "000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (38 downto 0) := "000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (38 downto 0) := "000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (38 downto 0) := "001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (38 downto 0) := "010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (38 downto 0) := "100000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv23_3F804 : STD_LOGIC_VECTOR (22 downto 0) := "00000111111100000000100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv12_2FD : STD_LOGIC_VECTOR (11 downto 0) := "001011111101";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv12_FF : STD_LOGIC_VECTOR (11 downto 0) := "000011111111";
    constant ap_const_lv12_1FE : STD_LOGIC_VECTOR (11 downto 0) := "000111111110";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (38 downto 0) := "000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal input_fm_buffer_1_ce0 : STD_LOGIC;
    signal input_fm_buffer_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal input_fm_buffer_1_ce1 : STD_LOGIC;
    signal input_fm_buffer_1_we1 : STD_LOGIC;
    signal weight_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_buffer_ce0 : STD_LOGIC;
    signal weight_buffer_we0 : STD_LOGIC;
    signal weight_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal output_fm_buffer_ce0 : STD_LOGIC;
    signal output_fm_buffer_we0 : STD_LOGIC;
    signal output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_fm_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_fm_buffer_ce1 : STD_LOGIC;
    signal output_fm_buffer_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w2_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i3_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal i3_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln105_reg_909 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal trunc_ln_fu_389_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln_reg_838 : STD_LOGIC_VECTOR (61 downto 0);
    signal w2_addr_reg_843 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln76_fu_447_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln76_reg_854 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln32_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln101_fu_454_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln101_reg_859 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln36_1_fu_463_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_1_reg_868 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln100_fu_479_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln100_reg_873 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln104_fu_489_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln104_reg_881 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal icmp_ln104_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln108_fu_523_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln108_reg_891 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln104_fu_550_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln104_reg_897 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal empty_89_fu_554_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_89_reg_903 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln105_fu_558_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal sub_ln111_1_fu_589_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln111_1_reg_913 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln1_reg_919 : STD_LOGIC_VECTOR (61 downto 0);
    signal or_ln108_fu_658_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln108_reg_925 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln108_4_fu_707_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln108_4_reg_931 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln111_2_fu_746_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln111_2_reg_941 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln118_1_reg_950 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln105_1_fu_753_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln105_fu_767_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln105_reg_956 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln58_1_fu_783_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_1_reg_966 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal add_ln58_fu_795_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln58_reg_974 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln36_fu_801_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln58_fu_789_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln63_fu_807_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln63_reg_984 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal add_ln63_1_fu_814_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln63_1_reg_989 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_we1 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_input_fm_buffer_1_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_input_fm_buffer_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_m_axi_i3_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_339_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_5_fu_339_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_m_axi_i3_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_357_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_7_fu_357_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_367_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_367_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_367_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_367_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_375_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_375_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_375_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_375_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW9_fu_382_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_BW9_fu_382_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_BW9_fu_382_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_BW9_fu_382_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_reg_232 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_reg_243 : STD_LOGIC_VECTOR (5 downto 0);
    signal bout_1_reg_255 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state25 : BOOLEAN;
    signal bh_reg_267 : STD_LOGIC_VECTOR (2 downto 0);
    signal o_1_reg_279 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal phi_mul_reg_290 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln36_fu_457_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (38 downto 0);
    signal ap_NS_fsm_state13 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_331_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv2_Pipeline_5_fu_339_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_conv2_Pipeline_RELU7_fu_349_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state25_ignore_call0 : BOOLEAN;
    signal grp_conv2_Pipeline_7_fu_357_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal grp_conv2_Pipeline_BW_fu_367_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_conv2_Pipeline_BW8_fu_375_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_conv2_Pipeline_BW9_fu_382_ap_start_reg : STD_LOGIC := '0';
    signal p_cast14_fu_504_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln36_fu_399_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln118_fu_712_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln118_1_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln32_fu_469_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_423_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln76_1_fu_435_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln76_fu_431_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln76_1_fu_443_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln104_fu_495_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_88_fu_499_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln108_fu_513_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln108_fu_513_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln108_fu_513_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln108_fu_519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_s_fu_532_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln111_3_fu_540_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln111_fu_528_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln111_fu_544_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln111_4_fu_564_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln111_fu_568_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln111_fu_577_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl6_fu_581_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln111_fu_573_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln105_fu_600_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln108_1_fu_604_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln2_fu_609_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln108_1_fu_621_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln108_1_fu_617_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln108_2_fu_629_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln108_fu_633_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln108_fu_639_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln108_2_fu_643_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln105_fu_596_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln108_3_fu_664_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln108_3_fu_668_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln108_2_fu_673_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln108_3_fu_685_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln108_4_fu_681_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln108_5_fu_693_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln108_1_fu_697_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln108_1_fu_703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln111_5_fu_722_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln111_2_fu_725_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln111_1_fu_734_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl7_fu_738_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln111_1_fu_730_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_994_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_994_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_994_ce : STD_LOGIC;
    signal grp_fu_998_ce : STD_LOGIC;
    signal grp_fu_1002_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1002_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1002_ce : STD_LOGIC;
    signal grp_fu_1002_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal mul_ln108_fu_513_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_conv2_Pipeline_LOAD_INPUT_BH_L IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i2_AWVALID : OUT STD_LOGIC;
        m_axi_i2_AWREADY : IN STD_LOGIC;
        m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WVALID : OUT STD_LOGIC;
        m_axi_i2_WREADY : IN STD_LOGIC;
        m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_WLAST : OUT STD_LOGIC;
        m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARVALID : OUT STD_LOGIC;
        m_axi_i2_ARREADY : IN STD_LOGIC;
        m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RVALID : IN STD_LOGIC;
        m_axi_i2_RREADY : OUT STD_LOGIC;
        m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_RLAST : IN STD_LOGIC;
        m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BVALID : IN STD_LOGIC;
        m_axi_i2_BREADY : OUT STD_LOGIC;
        m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        sext_ln75 : IN STD_LOGIC_VECTOR (18 downto 0);
        input_fm_buffer_1_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_fm_buffer_1_ce1 : OUT STD_LOGIC;
        input_fm_buffer_1_we1 : OUT STD_LOGIC;
        input_fm_buffer_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_LOAD_WEIGHTS_L IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_w2_AWVALID : OUT STD_LOGIC;
        m_axi_w2_AWREADY : IN STD_LOGIC;
        m_axi_w2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_w2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_WVALID : OUT STD_LOGIC;
        m_axi_w2_WREADY : IN STD_LOGIC;
        m_axi_w2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w2_WLAST : OUT STD_LOGIC;
        m_axi_w2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_ARVALID : OUT STD_LOGIC;
        m_axi_w2_ARREADY : IN STD_LOGIC;
        m_axi_w2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_w2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_RVALID : IN STD_LOGIC;
        m_axi_w2_RREADY : OUT STD_LOGIC;
        m_axi_w2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w2_RLAST : IN STD_LOGIC;
        m_axi_w2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_w2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w2_BVALID : IN STD_LOGIC;
        m_axi_w2_BREADY : OUT STD_LOGIC;
        m_axi_w2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln36 : IN STD_LOGIC_VECTOR (61 downto 0);
        weight_buffer_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_buffer_ce0 : OUT STD_LOGIC;
        weight_buffer_we0 : OUT STD_LOGIC;
        weight_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_OUT_ROW_COL IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        weight_buffer_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_buffer_ce0 : OUT STD_LOGIC;
        weight_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_fm_buffer_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        input_fm_buffer_1_ce0 : OUT STD_LOGIC;
        input_fm_buffer_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_we0 : OUT STD_LOGIC;
        output_fm_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_fm_buffer_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce1 : OUT STD_LOGIC;
        output_fm_buffer_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_994_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_ce : OUT STD_LOGIC;
        grp_fu_998_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_998_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_998_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_998_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv2_Pipeline_RELU IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln111_1 : IN STD_LOGIC_VECTOR (11 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_we0 : OUT STD_LOGIC;
        output_fm_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_fm_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_994_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_ce : OUT STD_LOGIC;
        grp_fu_1002_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1002_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1002_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1002_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1002_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv2_Pipeline_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i3_AWVALID : OUT STD_LOGIC;
        m_axi_i3_AWREADY : IN STD_LOGIC;
        m_axi_i3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_WVALID : OUT STD_LOGIC;
        m_axi_i3_WREADY : IN STD_LOGIC;
        m_axi_i3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_WLAST : OUT STD_LOGIC;
        m_axi_i3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_ARVALID : OUT STD_LOGIC;
        m_axi_i3_ARREADY : IN STD_LOGIC;
        m_axi_i3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RVALID : IN STD_LOGIC;
        m_axi_i3_RREADY : OUT STD_LOGIC;
        m_axi_i3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_RLAST : IN STD_LOGIC;
        m_axi_i3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_BVALID : IN STD_LOGIC;
        m_axi_i3_BREADY : OUT STD_LOGIC;
        m_axi_i3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln118 : IN STD_LOGIC_VECTOR (61 downto 0);
        sub_ln111_1 : IN STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_RELU7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln111_2 : IN STD_LOGIC_VECTOR (11 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_we0 : OUT STD_LOGIC;
        output_fm_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_fm_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_994_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_994_p_ce : OUT STD_LOGIC;
        grp_fu_1002_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1002_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1002_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1002_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1002_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv2_Pipeline_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i3_AWVALID : OUT STD_LOGIC;
        m_axi_i3_AWREADY : IN STD_LOGIC;
        m_axi_i3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_WVALID : OUT STD_LOGIC;
        m_axi_i3_WREADY : IN STD_LOGIC;
        m_axi_i3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_WLAST : OUT STD_LOGIC;
        m_axi_i3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_ARVALID : OUT STD_LOGIC;
        m_axi_i3_ARREADY : IN STD_LOGIC;
        m_axi_i3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RVALID : IN STD_LOGIC;
        m_axi_i3_RREADY : OUT STD_LOGIC;
        m_axi_i3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_RLAST : IN STD_LOGIC;
        m_axi_i3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_BVALID : IN STD_LOGIC;
        m_axi_i3_BREADY : OUT STD_LOGIC;
        m_axi_i3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln118_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        sub_ln111_2 : IN STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_BW IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        phi_mul : IN STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_we0 : OUT STD_LOGIC;
        output_fm_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_BW8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln63 : IN STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_we0 : OUT STD_LOGIC;
        output_fm_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_BW9 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln63_1 : IN STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        output_fm_buffer_ce0 : OUT STD_LOGIC;
        output_fm_buffer_we0 : OUT STD_LOGIC;
        output_fm_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_mul_5ns_19ns_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_conv2_input_fm_buffer_1_RAM_2P_LUTRAM_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_weight_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_output_fm_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    input_fm_buffer_1_U : component srcnn_conv2_input_fm_buffer_1_RAM_2P_LUTRAM_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 48960,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_input_fm_buffer_1_address0,
        ce0 => input_fm_buffer_1_ce0,
        q0 => input_fm_buffer_1_q0,
        address1 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_address1,
        ce1 => input_fm_buffer_1_ce1,
        we1 => input_fm_buffer_1_we1,
        d1 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_d1);

    weight_buffer_U : component srcnn_conv2_weight_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer_address0,
        ce0 => weight_buffer_ce0,
        we0 => weight_buffer_we0,
        d0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_d0,
        q0 => weight_buffer_q0);

    output_fm_buffer_U : component srcnn_conv2_output_fm_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 3060,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_fm_buffer_address0,
        ce0 => output_fm_buffer_ce0,
        we0 => output_fm_buffer_we0,
        d0 => output_fm_buffer_d0,
        q0 => output_fm_buffer_q0,
        address1 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_address1,
        ce1 => output_fm_buffer_ce1,
        q1 => output_fm_buffer_q1);

    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302 : component srcnn_conv2_Pipeline_LOAD_INPUT_BH_L
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start,
        ap_done => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done,
        ap_idle => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_idle,
        ap_ready => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_ready,
        m_axi_i2_AWVALID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWVALID,
        m_axi_i2_AWREADY => ap_const_logic_0,
        m_axi_i2_AWADDR => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWADDR,
        m_axi_i2_AWID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWID,
        m_axi_i2_AWLEN => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWLEN,
        m_axi_i2_AWSIZE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWSIZE,
        m_axi_i2_AWBURST => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWBURST,
        m_axi_i2_AWLOCK => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWLOCK,
        m_axi_i2_AWCACHE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWCACHE,
        m_axi_i2_AWPROT => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWPROT,
        m_axi_i2_AWQOS => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWQOS,
        m_axi_i2_AWREGION => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWREGION,
        m_axi_i2_AWUSER => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_AWUSER,
        m_axi_i2_WVALID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WVALID,
        m_axi_i2_WREADY => ap_const_logic_0,
        m_axi_i2_WDATA => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WDATA,
        m_axi_i2_WSTRB => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WSTRB,
        m_axi_i2_WLAST => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WLAST,
        m_axi_i2_WID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WID,
        m_axi_i2_WUSER => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_WUSER,
        m_axi_i2_ARVALID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARVALID,
        m_axi_i2_ARREADY => m_axi_i2_ARREADY,
        m_axi_i2_ARADDR => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARADDR,
        m_axi_i2_ARID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARID,
        m_axi_i2_ARLEN => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARLEN,
        m_axi_i2_ARSIZE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARSIZE,
        m_axi_i2_ARBURST => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARBURST,
        m_axi_i2_ARLOCK => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARLOCK,
        m_axi_i2_ARCACHE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARCACHE,
        m_axi_i2_ARPROT => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARPROT,
        m_axi_i2_ARQOS => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARQOS,
        m_axi_i2_ARREGION => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARREGION,
        m_axi_i2_ARUSER => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARUSER,
        m_axi_i2_RVALID => m_axi_i2_RVALID,
        m_axi_i2_RREADY => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_RREADY,
        m_axi_i2_RDATA => m_axi_i2_RDATA,
        m_axi_i2_RLAST => m_axi_i2_RLAST,
        m_axi_i2_RID => m_axi_i2_RID,
        m_axi_i2_RFIFONUM => m_axi_i2_RFIFONUM,
        m_axi_i2_RUSER => m_axi_i2_RUSER,
        m_axi_i2_RRESP => m_axi_i2_RRESP,
        m_axi_i2_BVALID => ap_const_logic_0,
        m_axi_i2_BREADY => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_BREADY,
        m_axi_i2_BRESP => ap_const_lv2_0,
        m_axi_i2_BID => ap_const_lv1_0,
        m_axi_i2_BUSER => ap_const_lv1_0,
        input_ftmap => input_ftmap,
        sext_ln75 => sub_ln76_reg_854,
        input_fm_buffer_1_address1 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_address1,
        input_fm_buffer_1_ce1 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_ce1,
        input_fm_buffer_1_we1 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_we1,
        input_fm_buffer_1_d1 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_d1);

    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312 : component srcnn_conv2_Pipeline_LOAD_WEIGHTS_L
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start,
        ap_done => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_done,
        ap_idle => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_idle,
        ap_ready => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_ready,
        m_axi_w2_AWVALID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWVALID,
        m_axi_w2_AWREADY => ap_const_logic_0,
        m_axi_w2_AWADDR => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWADDR,
        m_axi_w2_AWID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWID,
        m_axi_w2_AWLEN => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWLEN,
        m_axi_w2_AWSIZE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWSIZE,
        m_axi_w2_AWBURST => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWBURST,
        m_axi_w2_AWLOCK => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWLOCK,
        m_axi_w2_AWCACHE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWCACHE,
        m_axi_w2_AWPROT => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWPROT,
        m_axi_w2_AWQOS => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWQOS,
        m_axi_w2_AWREGION => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWREGION,
        m_axi_w2_AWUSER => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_AWUSER,
        m_axi_w2_WVALID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WVALID,
        m_axi_w2_WREADY => ap_const_logic_0,
        m_axi_w2_WDATA => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WDATA,
        m_axi_w2_WSTRB => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WSTRB,
        m_axi_w2_WLAST => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WLAST,
        m_axi_w2_WID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WID,
        m_axi_w2_WUSER => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_WUSER,
        m_axi_w2_ARVALID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARVALID,
        m_axi_w2_ARREADY => m_axi_w2_ARREADY,
        m_axi_w2_ARADDR => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARADDR,
        m_axi_w2_ARID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARID,
        m_axi_w2_ARLEN => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLEN,
        m_axi_w2_ARSIZE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARSIZE,
        m_axi_w2_ARBURST => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARBURST,
        m_axi_w2_ARLOCK => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLOCK,
        m_axi_w2_ARCACHE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARCACHE,
        m_axi_w2_ARPROT => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARPROT,
        m_axi_w2_ARQOS => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARQOS,
        m_axi_w2_ARREGION => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARREGION,
        m_axi_w2_ARUSER => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARUSER,
        m_axi_w2_RVALID => m_axi_w2_RVALID,
        m_axi_w2_RREADY => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_RREADY,
        m_axi_w2_RDATA => m_axi_w2_RDATA,
        m_axi_w2_RLAST => m_axi_w2_RLAST,
        m_axi_w2_RID => m_axi_w2_RID,
        m_axi_w2_RFIFONUM => m_axi_w2_RFIFONUM,
        m_axi_w2_RUSER => m_axi_w2_RUSER,
        m_axi_w2_RRESP => m_axi_w2_RRESP,
        m_axi_w2_BVALID => ap_const_logic_0,
        m_axi_w2_BREADY => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_BREADY,
        m_axi_w2_BRESP => ap_const_lv2_0,
        m_axi_w2_BID => ap_const_lv1_0,
        m_axi_w2_BUSER => ap_const_lv1_0,
        sext_ln36 => trunc_ln_reg_838,
        weight_buffer_address0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_address0,
        weight_buffer_ce0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_ce0,
        weight_buffer_we0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_we0,
        weight_buffer_d0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_d0);

    grp_conv2_Pipeline_OUT_ROW_COL_fu_321 : component srcnn_conv2_Pipeline_OUT_ROW_COL
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start,
        ap_done => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_done,
        ap_idle => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_idle,
        ap_ready => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_ready,
        weight_buffer_address0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_address0,
        weight_buffer_ce0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_ce0,
        weight_buffer_q0 => weight_buffer_q0,
        input_fm_buffer_1_address0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_input_fm_buffer_1_address0,
        input_fm_buffer_1_ce0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_input_fm_buffer_1_ce0,
        input_fm_buffer_1_q0 => input_fm_buffer_1_q0,
        output_fm_buffer_address0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce0,
        output_fm_buffer_we0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_we0,
        output_fm_buffer_d0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_d0,
        output_fm_buffer_address1 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_address1,
        output_fm_buffer_ce1 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce1,
        output_fm_buffer_q1 => output_fm_buffer_q1,
        grp_fu_994_p_din0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din0,
        grp_fu_994_p_din1 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din1,
        grp_fu_994_p_opcode => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_opcode,
        grp_fu_994_p_dout0 => grp_fu_284_p_dout0,
        grp_fu_994_p_ce => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_ce,
        grp_fu_998_p_din0 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_din0,
        grp_fu_998_p_din1 => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_din1,
        grp_fu_998_p_dout0 => grp_fu_288_p_dout0,
        grp_fu_998_p_ce => grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_ce);

    grp_conv2_Pipeline_RELU_fu_331 : component srcnn_conv2_Pipeline_RELU
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_RELU_fu_331_ap_start,
        ap_done => grp_conv2_Pipeline_RELU_fu_331_ap_done,
        ap_idle => grp_conv2_Pipeline_RELU_fu_331_ap_idle,
        ap_ready => grp_conv2_Pipeline_RELU_fu_331_ap_ready,
        sub_ln111_1 => sub_ln111_1_reg_913,
        empty => empty_89_reg_903,
        output_fm_buffer_address0 => grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_ce0,
        output_fm_buffer_we0 => grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_we0,
        output_fm_buffer_d0 => grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_d0,
        output_fm_buffer_q0 => output_fm_buffer_q0,
        grp_fu_994_p_din0 => grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din0,
        grp_fu_994_p_din1 => grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din1,
        grp_fu_994_p_opcode => grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_opcode,
        grp_fu_994_p_dout0 => grp_fu_284_p_dout0,
        grp_fu_994_p_ce => grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_ce,
        grp_fu_1002_p_din0 => grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din0,
        grp_fu_1002_p_din1 => grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din1,
        grp_fu_1002_p_opcode => grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_opcode,
        grp_fu_1002_p_dout0 => grp_fu_292_p_dout0,
        grp_fu_1002_p_ce => grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_ce);

    grp_conv2_Pipeline_5_fu_339 : component srcnn_conv2_Pipeline_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_5_fu_339_ap_start,
        ap_done => grp_conv2_Pipeline_5_fu_339_ap_done,
        ap_idle => grp_conv2_Pipeline_5_fu_339_ap_idle,
        ap_ready => grp_conv2_Pipeline_5_fu_339_ap_ready,
        m_axi_i3_AWVALID => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWVALID,
        m_axi_i3_AWREADY => m_axi_i3_AWREADY,
        m_axi_i3_AWADDR => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWADDR,
        m_axi_i3_AWID => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWID,
        m_axi_i3_AWLEN => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLEN,
        m_axi_i3_AWSIZE => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWSIZE,
        m_axi_i3_AWBURST => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWBURST,
        m_axi_i3_AWLOCK => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLOCK,
        m_axi_i3_AWCACHE => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWCACHE,
        m_axi_i3_AWPROT => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWPROT,
        m_axi_i3_AWQOS => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWQOS,
        m_axi_i3_AWREGION => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWREGION,
        m_axi_i3_AWUSER => grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWUSER,
        m_axi_i3_WVALID => grp_conv2_Pipeline_5_fu_339_m_axi_i3_WVALID,
        m_axi_i3_WREADY => m_axi_i3_WREADY,
        m_axi_i3_WDATA => grp_conv2_Pipeline_5_fu_339_m_axi_i3_WDATA,
        m_axi_i3_WSTRB => grp_conv2_Pipeline_5_fu_339_m_axi_i3_WSTRB,
        m_axi_i3_WLAST => grp_conv2_Pipeline_5_fu_339_m_axi_i3_WLAST,
        m_axi_i3_WID => grp_conv2_Pipeline_5_fu_339_m_axi_i3_WID,
        m_axi_i3_WUSER => grp_conv2_Pipeline_5_fu_339_m_axi_i3_WUSER,
        m_axi_i3_ARVALID => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARVALID,
        m_axi_i3_ARREADY => ap_const_logic_0,
        m_axi_i3_ARADDR => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARADDR,
        m_axi_i3_ARID => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARID,
        m_axi_i3_ARLEN => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARLEN,
        m_axi_i3_ARSIZE => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARSIZE,
        m_axi_i3_ARBURST => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARBURST,
        m_axi_i3_ARLOCK => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARLOCK,
        m_axi_i3_ARCACHE => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARCACHE,
        m_axi_i3_ARPROT => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARPROT,
        m_axi_i3_ARQOS => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARQOS,
        m_axi_i3_ARREGION => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARREGION,
        m_axi_i3_ARUSER => grp_conv2_Pipeline_5_fu_339_m_axi_i3_ARUSER,
        m_axi_i3_RVALID => ap_const_logic_0,
        m_axi_i3_RREADY => grp_conv2_Pipeline_5_fu_339_m_axi_i3_RREADY,
        m_axi_i3_RDATA => ap_const_lv32_0,
        m_axi_i3_RLAST => ap_const_logic_0,
        m_axi_i3_RID => ap_const_lv1_0,
        m_axi_i3_RFIFONUM => ap_const_lv13_0,
        m_axi_i3_RUSER => ap_const_lv1_0,
        m_axi_i3_RRESP => ap_const_lv2_0,
        m_axi_i3_BVALID => m_axi_i3_BVALID,
        m_axi_i3_BREADY => grp_conv2_Pipeline_5_fu_339_m_axi_i3_BREADY,
        m_axi_i3_BRESP => m_axi_i3_BRESP,
        m_axi_i3_BID => m_axi_i3_BID,
        m_axi_i3_BUSER => m_axi_i3_BUSER,
        sext_ln118 => trunc_ln1_reg_919,
        sub_ln111_1 => sub_ln111_1_reg_913,
        output_fm_buffer_address0 => grp_conv2_Pipeline_5_fu_339_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_5_fu_339_output_fm_buffer_ce0,
        output_fm_buffer_q0 => output_fm_buffer_q0);

    grp_conv2_Pipeline_RELU7_fu_349 : component srcnn_conv2_Pipeline_RELU7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_RELU7_fu_349_ap_start,
        ap_done => grp_conv2_Pipeline_RELU7_fu_349_ap_done,
        ap_idle => grp_conv2_Pipeline_RELU7_fu_349_ap_idle,
        ap_ready => grp_conv2_Pipeline_RELU7_fu_349_ap_ready,
        sub_ln111_2 => sub_ln111_2_reg_941,
        empty => empty_89_reg_903,
        output_fm_buffer_address0 => grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_ce0,
        output_fm_buffer_we0 => grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_we0,
        output_fm_buffer_d0 => grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_d0,
        output_fm_buffer_q0 => output_fm_buffer_q0,
        grp_fu_994_p_din0 => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din0,
        grp_fu_994_p_din1 => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din1,
        grp_fu_994_p_opcode => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_opcode,
        grp_fu_994_p_dout0 => grp_fu_284_p_dout0,
        grp_fu_994_p_ce => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_ce,
        grp_fu_1002_p_din0 => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din0,
        grp_fu_1002_p_din1 => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din1,
        grp_fu_1002_p_opcode => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_opcode,
        grp_fu_1002_p_dout0 => grp_fu_292_p_dout0,
        grp_fu_1002_p_ce => grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_ce);

    grp_conv2_Pipeline_7_fu_357 : component srcnn_conv2_Pipeline_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_7_fu_357_ap_start,
        ap_done => grp_conv2_Pipeline_7_fu_357_ap_done,
        ap_idle => grp_conv2_Pipeline_7_fu_357_ap_idle,
        ap_ready => grp_conv2_Pipeline_7_fu_357_ap_ready,
        m_axi_i3_AWVALID => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWVALID,
        m_axi_i3_AWREADY => m_axi_i3_AWREADY,
        m_axi_i3_AWADDR => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWADDR,
        m_axi_i3_AWID => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWID,
        m_axi_i3_AWLEN => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLEN,
        m_axi_i3_AWSIZE => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWSIZE,
        m_axi_i3_AWBURST => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWBURST,
        m_axi_i3_AWLOCK => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLOCK,
        m_axi_i3_AWCACHE => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWCACHE,
        m_axi_i3_AWPROT => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWPROT,
        m_axi_i3_AWQOS => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWQOS,
        m_axi_i3_AWREGION => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWREGION,
        m_axi_i3_AWUSER => grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWUSER,
        m_axi_i3_WVALID => grp_conv2_Pipeline_7_fu_357_m_axi_i3_WVALID,
        m_axi_i3_WREADY => m_axi_i3_WREADY,
        m_axi_i3_WDATA => grp_conv2_Pipeline_7_fu_357_m_axi_i3_WDATA,
        m_axi_i3_WSTRB => grp_conv2_Pipeline_7_fu_357_m_axi_i3_WSTRB,
        m_axi_i3_WLAST => grp_conv2_Pipeline_7_fu_357_m_axi_i3_WLAST,
        m_axi_i3_WID => grp_conv2_Pipeline_7_fu_357_m_axi_i3_WID,
        m_axi_i3_WUSER => grp_conv2_Pipeline_7_fu_357_m_axi_i3_WUSER,
        m_axi_i3_ARVALID => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARVALID,
        m_axi_i3_ARREADY => ap_const_logic_0,
        m_axi_i3_ARADDR => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARADDR,
        m_axi_i3_ARID => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARID,
        m_axi_i3_ARLEN => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARLEN,
        m_axi_i3_ARSIZE => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARSIZE,
        m_axi_i3_ARBURST => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARBURST,
        m_axi_i3_ARLOCK => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARLOCK,
        m_axi_i3_ARCACHE => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARCACHE,
        m_axi_i3_ARPROT => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARPROT,
        m_axi_i3_ARQOS => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARQOS,
        m_axi_i3_ARREGION => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARREGION,
        m_axi_i3_ARUSER => grp_conv2_Pipeline_7_fu_357_m_axi_i3_ARUSER,
        m_axi_i3_RVALID => ap_const_logic_0,
        m_axi_i3_RREADY => grp_conv2_Pipeline_7_fu_357_m_axi_i3_RREADY,
        m_axi_i3_RDATA => ap_const_lv32_0,
        m_axi_i3_RLAST => ap_const_logic_0,
        m_axi_i3_RID => ap_const_lv1_0,
        m_axi_i3_RFIFONUM => ap_const_lv13_0,
        m_axi_i3_RUSER => ap_const_lv1_0,
        m_axi_i3_RRESP => ap_const_lv2_0,
        m_axi_i3_BVALID => m_axi_i3_BVALID,
        m_axi_i3_BREADY => grp_conv2_Pipeline_7_fu_357_m_axi_i3_BREADY,
        m_axi_i3_BRESP => m_axi_i3_BRESP,
        m_axi_i3_BID => m_axi_i3_BID,
        m_axi_i3_BUSER => m_axi_i3_BUSER,
        sext_ln118_1 => trunc_ln118_1_reg_950,
        sub_ln111_2 => sub_ln111_2_reg_941,
        output_fm_buffer_address0 => grp_conv2_Pipeline_7_fu_357_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_7_fu_357_output_fm_buffer_ce0,
        output_fm_buffer_q0 => output_fm_buffer_q0);

    grp_conv2_Pipeline_BW_fu_367 : component srcnn_conv2_Pipeline_BW
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_BW_fu_367_ap_start,
        ap_done => grp_conv2_Pipeline_BW_fu_367_ap_done,
        ap_idle => grp_conv2_Pipeline_BW_fu_367_ap_idle,
        ap_ready => grp_conv2_Pipeline_BW_fu_367_ap_ready,
        phi_mul => phi_mul_reg_290,
        output_fm_buffer_address0 => grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_ce0,
        output_fm_buffer_we0 => grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_we0,
        output_fm_buffer_d0 => grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_d0);

    grp_conv2_Pipeline_BW8_fu_375 : component srcnn_conv2_Pipeline_BW8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_BW8_fu_375_ap_start,
        ap_done => grp_conv2_Pipeline_BW8_fu_375_ap_done,
        ap_idle => grp_conv2_Pipeline_BW8_fu_375_ap_idle,
        ap_ready => grp_conv2_Pipeline_BW8_fu_375_ap_ready,
        add_ln63 => add_ln63_reg_984,
        output_fm_buffer_address0 => grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_ce0,
        output_fm_buffer_we0 => grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_we0,
        output_fm_buffer_d0 => grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_d0);

    grp_conv2_Pipeline_BW9_fu_382 : component srcnn_conv2_Pipeline_BW9
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_BW9_fu_382_ap_start,
        ap_done => grp_conv2_Pipeline_BW9_fu_382_ap_done,
        ap_idle => grp_conv2_Pipeline_BW9_fu_382_ap_idle,
        ap_ready => grp_conv2_Pipeline_BW9_fu_382_ap_ready,
        add_ln63_1 => add_ln63_1_reg_989,
        output_fm_buffer_address0 => grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_address0,
        output_fm_buffer_ce0 => grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_ce0,
        output_fm_buffer_we0 => grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_we0,
        output_fm_buffer_d0 => grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_d0);

    mul_5ns_19ns_23_1_1_U101 : component srcnn_mul_5ns_19ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 19,
        dout_WIDTH => 23)
    port map (
        din0 => mul_ln108_fu_513_p0,
        din1 => mul_ln108_fu_513_p1,
        dout => mul_ln108_fu_513_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_5_fu_339_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_5_fu_339_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_conv2_Pipeline_5_fu_339_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_5_fu_339_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_5_fu_339_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_7_fu_357_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_7_fu_357_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    grp_conv2_Pipeline_7_fu_357_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_7_fu_357_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_7_fu_357_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_BW8_fu_375_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_BW8_fu_375_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    grp_conv2_Pipeline_BW8_fu_375_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_BW8_fu_375_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_BW8_fu_375_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_BW9_fu_382_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_BW9_fu_382_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    grp_conv2_Pipeline_BW9_fu_382_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_BW9_fu_382_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_BW9_fu_382_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_BW_fu_367_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_BW_fu_367_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln58_fu_789_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                    grp_conv2_Pipeline_BW_fu_367_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_BW_fu_367_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_BW_fu_367_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln32_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state13) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_RELU7_fu_349_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_RELU7_fu_349_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0))) and (icmp_ln105_1_fu_753_p2 = ap_const_lv1_0) and (icmp_ln105_reg_909 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                    grp_conv2_Pipeline_RELU7_fu_349_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_RELU7_fu_349_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_RELU7_fu_349_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_RELU_fu_331_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_RELU_fu_331_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln105_fu_558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    grp_conv2_Pipeline_RELU_fu_331_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_RELU_fu_331_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_RELU_fu_331_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bh_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                bh_reg_267 <= ap_const_lv3_0;
            elsif (((m_axi_i3_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                bh_reg_267 <= add_ln105_reg_956;
            end if; 
        end if;
    end process;

    bout_1_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                bout_1_reg_255 <= ap_const_lv3_0;
            elsif ((not(((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln105_1_fu_753_p2 = ap_const_lv1_1) or (icmp_ln105_reg_909 = ap_const_lv1_0)))) then 
                bout_1_reg_255 <= add_ln104_reg_881;
            end if; 
        end if;
    end process;

    h_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_fu_174 <= ap_const_lv8_0;
            elsif (((icmp_ln36_fu_457_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                h_fu_174 <= add_ln32_fu_469_p2;
            end if; 
        end if;
    end process;

    indvar_reg_232_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                indvar_reg_232 <= ap_const_lv4_0;
            elsif (((icmp_ln58_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                indvar_reg_232 <= add_ln36_1_reg_868;
            end if; 
        end if;
    end process;

    o_1_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_483_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                o_1_reg_279 <= ap_const_lv3_0;
            elsif (((grp_conv2_Pipeline_BW9_fu_382_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
                o_1_reg_279 <= add_ln58_reg_974;
            end if; 
        end if;
    end process;

    out_reg_243_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                out_reg_243 <= ap_const_lv6_0;
            elsif (((icmp_ln58_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                out_reg_243 <= add_ln36_fu_801_p2;
            end if; 
        end if;
    end process;

    phi_mul_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_483_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                phi_mul_reg_290 <= ap_const_lv12_0;
            elsif (((grp_conv2_Pipeline_BW9_fu_382_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
                phi_mul_reg_290 <= add_ln58_1_reg_966;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                add_ln104_reg_881 <= add_ln104_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_1_fu_753_p2 = ap_const_lv1_0) and (icmp_ln105_reg_909 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                add_ln105_reg_956 <= add_ln105_fu_767_p2;
                trunc_ln118_1_reg_950 <= add_ln108_4_reg_931(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_fu_558_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                add_ln108_4_reg_931 <= add_ln108_4_fu_707_p2;
                    or_ln108_reg_925(1) <= or_ln108_fu_658_p2(1);
                sub_ln111_1_reg_913 <= sub_ln111_1_fu_589_p2;
                trunc_ln1_reg_919 <= add_ln108_2_fu_643_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln104_fu_483_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                add_ln108_reg_891 <= add_ln108_fu_523_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln36_1_reg_868 <= add_ln36_1_fu_463_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add_ln58_1_reg_966 <= add_ln58_1_fu_783_p2;
                add_ln58_reg_974 <= add_ln58_fu_795_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                add_ln63_1_reg_989 <= add_ln63_1_fu_814_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                add_ln63_reg_984 <= add_ln63_fu_807_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                empty_89_reg_903 <= empty_89_fu_554_p1;
                sext_ln104_reg_897 <= sext_ln104_fu_550_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                icmp_ln105_reg_909 <= icmp_ln105_fu_558_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln105_reg_909 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                sub_ln111_2_reg_941 <= sub_ln111_2_fu_746_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    sub_ln76_reg_854(18 downto 2) <= sub_ln76_fu_447_p2(18 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                trunc_ln100_reg_873 <= trunc_ln100_fu_479_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln_reg_838 <= conv2_weights(63 downto 2);
                w2_addr_reg_843 <= sext_ln36_fu_399_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    zext_ln101_reg_859(7 downto 0) <= zext_ln101_fu_454_p1(7 downto 0);
            end if;
        end if;
    end process;
    sub_ln76_reg_854(1 downto 0) <= "00";
    zext_ln101_reg_859(8) <= '0';
    or_ln108_reg_925(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_w2_ARREADY, m_axi_i3_AWREADY, m_axi_i3_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state18, ap_CS_fsm_state25, icmp_ln105_reg_909, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_CS_fsm_state2, icmp_ln32_fu_417_p2, ap_CS_fsm_state11, ap_CS_fsm_state14, ap_CS_fsm_state15, icmp_ln104_fu_483_p2, icmp_ln105_fu_558_p2, ap_CS_fsm_state17, icmp_ln105_1_fu_753_p2, ap_CS_fsm_state34, icmp_ln58_fu_789_p2, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_done, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_done, grp_conv2_Pipeline_RELU_fu_331_ap_done, grp_conv2_Pipeline_5_fu_339_ap_done, grp_conv2_Pipeline_RELU7_fu_349_ap_done, grp_conv2_Pipeline_7_fu_357_ap_done, grp_conv2_Pipeline_BW_fu_367_ap_done, grp_conv2_Pipeline_BW8_fu_375_ap_done, grp_conv2_Pipeline_BW9_fu_382_ap_done, ap_CS_fsm_state39, icmp_ln36_fu_457_p2, ap_CS_fsm_state12, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state35, ap_CS_fsm_state37)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln32_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done = ap_const_logic_0) or (m_axi_w2_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln36_fu_457_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln104_fu_483_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln105_fu_558_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state18 => 
                if ((not(((grp_conv2_Pipeline_RELU_fu_331_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_conv2_Pipeline_5_fu_339_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if ((not(((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln105_1_fu_753_p2 = ap_const_lv1_1) or (icmp_ln105_reg_909 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif ((not(((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0))) and (icmp_ln105_1_fu_753_p2 = ap_const_lv1_0) and (icmp_ln105_reg_909 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if ((not(((grp_conv2_Pipeline_RELU7_fu_349_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((grp_conv2_Pipeline_7_fu_357_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((m_axi_i3_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                if (((icmp_ln58_fu_789_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state35 => 
                if (((grp_conv2_Pipeline_BW_fu_367_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_conv2_Pipeline_BW8_fu_375_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((grp_conv2_Pipeline_BW9_fu_382_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln104_fu_489_p2 <= std_logic_vector(unsigned(bout_1_reg_255) + unsigned(ap_const_lv3_1));
    add_ln105_fu_767_p2 <= std_logic_vector(unsigned(bh_reg_267) + unsigned(ap_const_lv3_2));
    add_ln108_1_fu_604_p2 <= std_logic_vector(unsigned(zext_ln105_fu_600_p1) + unsigned(zext_ln101_reg_859));
    add_ln108_2_fu_643_p2 <= std_logic_vector(signed(sext_ln108_fu_639_p1) + signed(add_ln108_reg_891));
    add_ln108_3_fu_668_p2 <= std_logic_vector(unsigned(zext_ln108_3_fu_664_p1) + unsigned(zext_ln101_reg_859));
    add_ln108_4_fu_707_p2 <= std_logic_vector(signed(sext_ln108_1_fu_703_p1) + signed(add_ln108_reg_891));
    add_ln108_fu_523_p2 <= std_logic_vector(unsigned(zext_ln108_fu_519_p1) + unsigned(output_ftmap));
    add_ln111_2_fu_725_p2 <= std_logic_vector(signed(sext_ln104_reg_897) + signed(zext_ln111_5_fu_722_p1));
    add_ln111_fu_568_p2 <= std_logic_vector(signed(sext_ln104_reg_897) + signed(zext_ln111_4_fu_564_p1));
    add_ln32_fu_469_p2 <= std_logic_vector(unsigned(h_fu_174) + unsigned(ap_const_lv8_3));
    add_ln36_1_fu_463_p2 <= std_logic_vector(unsigned(indvar_reg_232) + unsigned(ap_const_lv4_1));
    add_ln36_fu_801_p2 <= std_logic_vector(unsigned(out_reg_243) + unsigned(ap_const_lv6_4));
    add_ln58_1_fu_783_p2 <= std_logic_vector(unsigned(phi_mul_reg_290) + unsigned(ap_const_lv12_2FD));
    add_ln58_fu_795_p2 <= std_logic_vector(unsigned(o_1_reg_279) + unsigned(ap_const_lv3_1));
    add_ln63_1_fu_814_p2 <= std_logic_vector(unsigned(phi_mul_reg_290) + unsigned(ap_const_lv12_1FE));
    add_ln63_fu_807_p2 <= std_logic_vector(unsigned(phi_mul_reg_290) + unsigned(ap_const_lv12_FF));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_NS_fsm_state13 <= ap_NS_fsm(12);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_done)
    begin
        if ((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_done)
    begin
        if ((grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(m_axi_i3_AWREADY, grp_conv2_Pipeline_RELU_fu_331_ap_done)
    begin
        if (((grp_conv2_Pipeline_RELU_fu_331_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(grp_conv2_Pipeline_5_fu_339_ap_done)
    begin
        if ((grp_conv2_Pipeline_5_fu_339_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(m_axi_i3_BVALID, icmp_ln105_reg_909)
    begin
        if (((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state26_blk_assign_proc : process(m_axi_i3_AWREADY, grp_conv2_Pipeline_RELU7_fu_349_ap_done)
    begin
        if (((grp_conv2_Pipeline_RELU7_fu_349_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_conv2_Pipeline_7_fu_357_ap_done)
    begin
        if ((grp_conv2_Pipeline_7_fu_357_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(m_axi_i3_BVALID)
    begin
        if ((m_axi_i3_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state34_blk <= ap_const_logic_0;

    ap_ST_fsm_state35_blk_assign_proc : process(grp_conv2_Pipeline_BW_fu_367_ap_done)
    begin
        if ((grp_conv2_Pipeline_BW_fu_367_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state36_blk <= ap_const_logic_0;

    ap_ST_fsm_state37_blk_assign_proc : process(grp_conv2_Pipeline_BW8_fu_375_ap_done)
    begin
        if ((grp_conv2_Pipeline_BW8_fu_375_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state38_blk <= ap_const_logic_0;

    ap_ST_fsm_state39_blk_assign_proc : process(grp_conv2_Pipeline_BW9_fu_382_ap_done)
    begin
        if ((grp_conv2_Pipeline_BW9_fu_382_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_w2_ARREADY, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done)
    begin
        if (((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done = ap_const_logic_0) or (m_axi_w2_ARREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state25_assign_proc : process(m_axi_i3_BVALID, icmp_ln105_reg_909)
    begin
                ap_block_state25 <= ((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0));
    end process;


    ap_block_state25_ignore_call0_assign_proc : process(m_axi_i3_BVALID, icmp_ln105_reg_909)
    begin
                ap_block_state25_ignore_call0 <= ((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln32_fu_417_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln32_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln32_fu_417_p2)
    begin
        if (((icmp_ln32_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    conv2_biases_address0 <= p_cast14_fu_504_p1(5 - 1 downto 0);

    conv2_biases_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_biases_ce0 <= ap_const_logic_1;
        else 
            conv2_biases_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_88_fu_499_p2 <= std_logic_vector(unsigned(zext_ln104_fu_495_p1) + unsigned(trunc_ln100_reg_873));
    empty_89_fu_554_p1 <= conv2_biases_q0;
    grp_conv2_Pipeline_5_fu_339_ap_start <= grp_conv2_Pipeline_5_fu_339_ap_start_reg;
    grp_conv2_Pipeline_7_fu_357_ap_start <= grp_conv2_Pipeline_7_fu_357_ap_start_reg;
    grp_conv2_Pipeline_BW8_fu_375_ap_start <= grp_conv2_Pipeline_BW8_fu_375_ap_start_reg;
    grp_conv2_Pipeline_BW9_fu_382_ap_start <= grp_conv2_Pipeline_BW9_fu_382_ap_start_reg;
    grp_conv2_Pipeline_BW_fu_367_ap_start <= grp_conv2_Pipeline_BW_fu_367_ap_start_reg;
    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_start_reg;
    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_ap_start_reg;
    grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_ap_start_reg;
    grp_conv2_Pipeline_RELU7_fu_349_ap_start <= grp_conv2_Pipeline_RELU7_fu_349_ap_start_reg;
    grp_conv2_Pipeline_RELU_fu_331_ap_start <= grp_conv2_Pipeline_RELU_fu_331_ap_start_reg;

    grp_fu_1002_ce_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_ce, grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1002_ce <= grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_1002_ce <= grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_ce;
        else 
            grp_fu_1002_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1002_opcode_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_opcode, grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1002_opcode <= grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_1002_opcode <= grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_opcode;
        else 
            grp_fu_1002_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1002_p0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din0, grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1002_p0 <= grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_1002_p0 <= grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din0;
        else 
            grp_fu_1002_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1002_p1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din1, grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_1002_p1 <= grp_conv2_Pipeline_RELU7_fu_349_grp_fu_1002_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_1002_p1 <= grp_conv2_Pipeline_RELU_fu_331_grp_fu_1002_p_din1;
        else 
            grp_fu_1002_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_284_p_ce <= grp_fu_994_ce;
    grp_fu_284_p_din0 <= grp_fu_994_p0;
    grp_fu_284_p_din1 <= grp_fu_994_p1;
    grp_fu_284_p_opcode <= ap_const_lv2_0;
    grp_fu_288_p_ce <= grp_fu_998_ce;
    grp_fu_288_p_din0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_din0;
    grp_fu_288_p_din1 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_din1;
    grp_fu_292_p_ce <= grp_fu_1002_ce;
    grp_fu_292_p_din0 <= grp_fu_1002_p0;
    grp_fu_292_p_din1 <= grp_fu_1002_p1;
    grp_fu_292_p_opcode <= grp_fu_1002_opcode;

    grp_fu_994_ce_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_ce, grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_ce, grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_994_ce <= grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_994_ce <= grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_994_ce <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_ce;
        else 
            grp_fu_994_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_994_p0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din0, grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din0, grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_994_p0 <= grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_994_p0 <= grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_994_p0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din0;
        else 
            grp_fu_994_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_994_p1_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din1, grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din1, grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_994_p1 <= grp_conv2_Pipeline_RELU7_fu_349_grp_fu_994_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_994_p1 <= grp_conv2_Pipeline_RELU_fu_331_grp_fu_994_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_994_p1 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_994_p_din1;
        else 
            grp_fu_994_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_998_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_998_ce <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_grp_fu_998_p_ce;
        else 
            grp_fu_998_ce <= ap_const_logic_1;
        end if; 
    end process;


    i3_blk_n_AW_assign_proc : process(m_axi_i3_AWREADY, ap_CS_fsm_state18, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            i3_blk_n_AW <= m_axi_i3_AWREADY;
        else 
            i3_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    i3_blk_n_B_assign_proc : process(m_axi_i3_BVALID, ap_CS_fsm_state25, icmp_ln105_reg_909, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or ((icmp_ln105_reg_909 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            i3_blk_n_B <= m_axi_i3_BVALID;
        else 
            i3_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln104_fu_483_p2 <= "1" when (bout_1_reg_255 = ap_const_lv3_4) else "0";
    icmp_ln105_1_fu_753_p2 <= "1" when (or_ln108_reg_925 = ap_const_lv2_3) else "0";
    icmp_ln105_fu_558_p2 <= "1" when (unsigned(bh_reg_267) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln32_fu_417_p2 <= "1" when (h_fu_174 = ap_const_lv8_FF) else "0";
    icmp_ln36_fu_457_p2 <= "1" when (indvar_reg_232 = ap_const_lv4_8) else "0";
    icmp_ln58_fu_789_p2 <= "1" when (o_1_reg_279 = ap_const_lv3_4) else "0";

    input_fm_buffer_1_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_input_fm_buffer_1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            input_fm_buffer_1_ce0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_input_fm_buffer_1_ce0;
        else 
            input_fm_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_fm_buffer_1_ce1_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_fm_buffer_1_ce1 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_ce1;
        else 
            input_fm_buffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    input_fm_buffer_1_we1_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_fm_buffer_1_we1 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_input_fm_buffer_1_we1;
        else 
            input_fm_buffer_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i2_ARADDR <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARADDR;
    m_axi_i2_ARBURST <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARBURST;
    m_axi_i2_ARCACHE <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARCACHE;
    m_axi_i2_ARID <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARID;
    m_axi_i2_ARLEN <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARLEN;
    m_axi_i2_ARLOCK <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARLOCK;
    m_axi_i2_ARPROT <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARPROT;
    m_axi_i2_ARQOS <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARQOS;
    m_axi_i2_ARREGION <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARREGION;
    m_axi_i2_ARSIZE <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARSIZE;
    m_axi_i2_ARUSER <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARUSER;

    m_axi_i2_ARVALID_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln32_fu_417_p2, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln32_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            m_axi_i2_ARVALID <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_ARVALID;
        else 
            m_axi_i2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i2_AWADDR <= ap_const_lv64_0;
    m_axi_i2_AWBURST <= ap_const_lv2_0;
    m_axi_i2_AWCACHE <= ap_const_lv4_0;
    m_axi_i2_AWID <= ap_const_lv1_0;
    m_axi_i2_AWLEN <= ap_const_lv32_0;
    m_axi_i2_AWLOCK <= ap_const_lv2_0;
    m_axi_i2_AWPROT <= ap_const_lv3_0;
    m_axi_i2_AWQOS <= ap_const_lv4_0;
    m_axi_i2_AWREGION <= ap_const_lv4_0;
    m_axi_i2_AWSIZE <= ap_const_lv3_0;
    m_axi_i2_AWUSER <= ap_const_lv1_0;
    m_axi_i2_AWVALID <= ap_const_logic_0;
    m_axi_i2_BREADY <= ap_const_logic_0;

    m_axi_i2_RREADY_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln32_fu_417_p2, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_RREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln32_fu_417_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            m_axi_i2_RREADY <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_m_axi_i2_RREADY;
        else 
            m_axi_i2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i2_WDATA <= ap_const_lv32_0;
    m_axi_i2_WID <= ap_const_lv1_0;
    m_axi_i2_WLAST <= ap_const_logic_0;
    m_axi_i2_WSTRB <= ap_const_lv4_0;
    m_axi_i2_WUSER <= ap_const_lv1_0;
    m_axi_i2_WVALID <= ap_const_logic_0;
    m_axi_i3_ARADDR <= ap_const_lv64_0;
    m_axi_i3_ARBURST <= ap_const_lv2_0;
    m_axi_i3_ARCACHE <= ap_const_lv4_0;
    m_axi_i3_ARID <= ap_const_lv1_0;
    m_axi_i3_ARLEN <= ap_const_lv32_0;
    m_axi_i3_ARLOCK <= ap_const_lv2_0;
    m_axi_i3_ARPROT <= ap_const_lv3_0;
    m_axi_i3_ARQOS <= ap_const_lv4_0;
    m_axi_i3_ARREGION <= ap_const_lv4_0;
    m_axi_i3_ARSIZE <= ap_const_lv3_0;
    m_axi_i3_ARUSER <= ap_const_lv1_0;
    m_axi_i3_ARVALID <= ap_const_logic_0;

    m_axi_i3_AWADDR_assign_proc : process(m_axi_i3_AWREADY, ap_CS_fsm_state18, ap_CS_fsm_state26, grp_conv2_Pipeline_RELU_fu_331_ap_done, grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWADDR, grp_conv2_Pipeline_RELU7_fu_349_ap_done, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWADDR, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28, sext_ln118_fu_712_p1, sext_ln118_1_fu_773_p1)
    begin
        if ((not(((grp_conv2_Pipeline_RELU7_fu_349_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            m_axi_i3_AWADDR <= sext_ln118_1_fu_773_p1;
        elsif ((not(((grp_conv2_Pipeline_RELU_fu_331_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
            m_axi_i3_AWADDR <= sext_ln118_fu_712_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWADDR <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWADDR <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWADDR;
        else 
            m_axi_i3_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_i3_AWBURST_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWBURST, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWBURST, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWBURST <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWBURST <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWBURST;
        else 
            m_axi_i3_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_i3_AWCACHE_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWCACHE, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWCACHE, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWCACHE <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWCACHE <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWCACHE;
        else 
            m_axi_i3_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_i3_AWID_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWID, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWID, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWID <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWID <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWID;
        else 
            m_axi_i3_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_i3_AWLEN_assign_proc : process(m_axi_i3_AWREADY, ap_CS_fsm_state18, ap_CS_fsm_state26, grp_conv2_Pipeline_RELU_fu_331_ap_done, grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLEN, grp_conv2_Pipeline_RELU7_fu_349_ap_done, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLEN, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((not(((grp_conv2_Pipeline_RELU7_fu_349_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((grp_conv2_Pipeline_RELU_fu_331_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            m_axi_i3_AWLEN <= ap_const_lv32_FF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWLEN <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWLEN <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLEN;
        else 
            m_axi_i3_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_i3_AWLOCK_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLOCK, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLOCK, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWLOCK <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWLOCK <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWLOCK;
        else 
            m_axi_i3_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_i3_AWPROT_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWPROT, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWPROT, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWPROT <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWPROT <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWPROT;
        else 
            m_axi_i3_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_i3_AWQOS_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWQOS, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWQOS, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWQOS <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWQOS <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWQOS;
        else 
            m_axi_i3_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_i3_AWREGION_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWREGION, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWREGION, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWREGION <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWREGION <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWREGION;
        else 
            m_axi_i3_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_i3_AWSIZE_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWSIZE, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWSIZE, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWSIZE <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWSIZE <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWSIZE;
        else 
            m_axi_i3_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_i3_AWUSER_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWUSER, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWUSER, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWUSER <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWUSER <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWUSER;
        else 
            m_axi_i3_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_i3_AWVALID_assign_proc : process(m_axi_i3_AWREADY, ap_CS_fsm_state18, ap_CS_fsm_state26, grp_conv2_Pipeline_RELU_fu_331_ap_done, grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWVALID, grp_conv2_Pipeline_RELU7_fu_349_ap_done, grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWVALID, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((not(((grp_conv2_Pipeline_RELU7_fu_349_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26)) or (not(((grp_conv2_Pipeline_RELU_fu_331_ap_done = ap_const_logic_0) or (m_axi_i3_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            m_axi_i3_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_AWVALID <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_AWVALID <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_AWVALID;
        else 
            m_axi_i3_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_i3_BREADY_assign_proc : process(m_axi_i3_BVALID, ap_CS_fsm_state25, icmp_ln105_reg_909, ap_CS_fsm_state33, grp_conv2_Pipeline_5_fu_339_m_axi_i3_BREADY, grp_conv2_Pipeline_7_fu_357_m_axi_i3_BREADY, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if ((((m_axi_i3_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33)) or (not(((icmp_ln105_reg_909 = ap_const_lv1_1) and (m_axi_i3_BVALID = ap_const_logic_0))) and (icmp_ln105_reg_909 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            m_axi_i3_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_BREADY <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_BREADY <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_BREADY;
        else 
            m_axi_i3_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i3_RREADY <= ap_const_logic_0;

    m_axi_i3_WDATA_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_WDATA, grp_conv2_Pipeline_7_fu_357_m_axi_i3_WDATA, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_WDATA <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_WDATA <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_WDATA;
        else 
            m_axi_i3_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_i3_WID_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_WID, grp_conv2_Pipeline_7_fu_357_m_axi_i3_WID, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_WID <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_WID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_WID <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_WID;
        else 
            m_axi_i3_WID <= "X";
        end if; 
    end process;


    m_axi_i3_WLAST_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_WLAST, grp_conv2_Pipeline_7_fu_357_m_axi_i3_WLAST, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_WLAST <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_WLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_WLAST <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_WLAST;
        else 
            m_axi_i3_WLAST <= 'X';
        end if; 
    end process;


    m_axi_i3_WSTRB_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_WSTRB, grp_conv2_Pipeline_7_fu_357_m_axi_i3_WSTRB, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_WSTRB <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_WSTRB <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_WSTRB;
        else 
            m_axi_i3_WSTRB <= "XXXX";
        end if; 
    end process;


    m_axi_i3_WUSER_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_WUSER, grp_conv2_Pipeline_7_fu_357_m_axi_i3_WUSER, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_WUSER <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_WUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_WUSER <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_WUSER;
        else 
            m_axi_i3_WUSER <= "X";
        end if; 
    end process;


    m_axi_i3_WVALID_assign_proc : process(grp_conv2_Pipeline_5_fu_339_m_axi_i3_WVALID, grp_conv2_Pipeline_7_fu_357_m_axi_i3_WVALID, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state27, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_i3_WVALID <= grp_conv2_Pipeline_7_fu_357_m_axi_i3_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_i3_WVALID <= grp_conv2_Pipeline_5_fu_339_m_axi_i3_WVALID;
        else 
            m_axi_i3_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_w2_ARADDR_assign_proc : process(m_axi_w2_ARREADY, ap_CS_fsm_state3, w2_addr_reg_843, ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARADDR, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done = ap_const_logic_0) or (m_axi_w2_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_w2_ARADDR <= w2_addr_reg_843;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARADDR <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARADDR;
        else 
            m_axi_w2_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_w2_ARBURST_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARBURST, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARBURST <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARBURST;
        else 
            m_axi_w2_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_w2_ARCACHE_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARCACHE, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARCACHE <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARCACHE;
        else 
            m_axi_w2_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w2_ARID_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARID, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARID <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARID;
        else 
            m_axi_w2_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_w2_ARLEN_assign_proc : process(m_axi_w2_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLEN, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done = ap_const_logic_0) or (m_axi_w2_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_w2_ARLEN <= ap_const_lv32_800;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARLEN <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLEN;
        else 
            m_axi_w2_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_w2_ARLOCK_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLOCK, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARLOCK <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARLOCK;
        else 
            m_axi_w2_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_w2_ARPROT_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARPROT, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARPROT <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARPROT;
        else 
            m_axi_w2_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_w2_ARQOS_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARQOS, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARQOS <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARQOS;
        else 
            m_axi_w2_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w2_ARREGION_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARREGION, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARREGION <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARREGION;
        else 
            m_axi_w2_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w2_ARSIZE_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARSIZE, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARSIZE <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARSIZE;
        else 
            m_axi_w2_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_w2_ARUSER_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARUSER, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARUSER <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARUSER;
        else 
            m_axi_w2_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_w2_ARVALID_assign_proc : process(m_axi_w2_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARVALID, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_302_ap_done = ap_const_logic_0) or (m_axi_w2_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_w2_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_ARVALID <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_ARVALID;
        else 
            m_axi_w2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w2_AWADDR <= ap_const_lv64_0;
    m_axi_w2_AWBURST <= ap_const_lv2_0;
    m_axi_w2_AWCACHE <= ap_const_lv4_0;
    m_axi_w2_AWID <= ap_const_lv1_0;
    m_axi_w2_AWLEN <= ap_const_lv32_0;
    m_axi_w2_AWLOCK <= ap_const_lv2_0;
    m_axi_w2_AWPROT <= ap_const_lv3_0;
    m_axi_w2_AWQOS <= ap_const_lv4_0;
    m_axi_w2_AWREGION <= ap_const_lv4_0;
    m_axi_w2_AWSIZE <= ap_const_lv3_0;
    m_axi_w2_AWUSER <= ap_const_lv1_0;
    m_axi_w2_AWVALID <= ap_const_logic_0;
    m_axi_w2_BREADY <= ap_const_logic_0;

    m_axi_w2_RREADY_assign_proc : process(ap_CS_fsm_state11, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_RREADY, icmp_ln36_fu_457_p2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln36_fu_457_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_w2_RREADY <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_m_axi_w2_RREADY;
        else 
            m_axi_w2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w2_WDATA <= ap_const_lv32_0;
    m_axi_w2_WID <= ap_const_lv1_0;
    m_axi_w2_WLAST <= ap_const_logic_0;
    m_axi_w2_WSTRB <= ap_const_lv4_0;
    m_axi_w2_WUSER <= ap_const_lv1_0;
    m_axi_w2_WVALID <= ap_const_logic_0;
    mul_ln108_fu_513_p0 <= mul_ln108_fu_513_p00(5 - 1 downto 0);
    mul_ln108_fu_513_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_88_fu_499_p2),23));
    mul_ln108_fu_513_p1 <= ap_const_lv23_3F804(19 - 1 downto 0);
    or_ln108_fu_658_p2 <= (trunc_ln105_fu_596_p1 or ap_const_lv2_1);

    output_fm_buffer_address0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_address0, grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_address0, grp_conv2_Pipeline_5_fu_339_output_fm_buffer_address0, grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_address0, grp_conv2_Pipeline_7_fu_357_output_fm_buffer_address0, grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_address0, grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_address0, grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_address0, ap_CS_fsm_state39, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state35, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_7_fu_357_output_fm_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_5_fu_339_output_fm_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            output_fm_buffer_address0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_address0;
        else 
            output_fm_buffer_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    output_fm_buffer_ce0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce0, grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_ce0, grp_conv2_Pipeline_5_fu_339_output_fm_buffer_ce0, grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_ce0, grp_conv2_Pipeline_7_fu_357_output_fm_buffer_ce0, grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_ce0, grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_ce0, grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_ce0, ap_CS_fsm_state39, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state35, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_7_fu_357_output_fm_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_5_fu_339_output_fm_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            output_fm_buffer_ce0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce0;
        else 
            output_fm_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_fm_buffer_ce1_assign_proc : process(ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            output_fm_buffer_ce1 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_ce1;
        else 
            output_fm_buffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    output_fm_buffer_d0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_d0, grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_d0, grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_d0, grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_d0, grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_d0, grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_d0, ap_CS_fsm_state39, ap_CS_fsm_state35, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            output_fm_buffer_d0 <= grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            output_fm_buffer_d0 <= grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            output_fm_buffer_d0 <= grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_fm_buffer_d0 <= grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            output_fm_buffer_d0 <= grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            output_fm_buffer_d0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_d0;
        else 
            output_fm_buffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_fm_buffer_we0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state14, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_we0, grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_we0, grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_we0, grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_we0, grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_we0, grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_we0, ap_CS_fsm_state39, ap_CS_fsm_state35, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            output_fm_buffer_we0 <= grp_conv2_Pipeline_BW9_fu_382_output_fm_buffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            output_fm_buffer_we0 <= grp_conv2_Pipeline_BW8_fu_375_output_fm_buffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            output_fm_buffer_we0 <= grp_conv2_Pipeline_BW_fu_367_output_fm_buffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_fm_buffer_we0 <= grp_conv2_Pipeline_RELU7_fu_349_output_fm_buffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            output_fm_buffer_we0 <= grp_conv2_Pipeline_RELU_fu_331_output_fm_buffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            output_fm_buffer_we0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_output_fm_buffer_we0;
        else 
            output_fm_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast14_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_88_fu_499_p2),64));
    p_shl6_fu_581_p3 <= (trunc_ln111_fu_577_p1 & ap_const_lv8_0);
    p_shl7_fu_738_p3 <= (trunc_ln111_1_fu_734_p1 & ap_const_lv8_0);
        sext_ln104_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln111_fu_544_p2),7));

        sext_ln108_1_fu_703_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln108_1_fu_697_p2),64));

        sext_ln108_fu_639_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln108_fu_633_p2),64));

        sext_ln111_1_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln111_2_fu_725_p2),12));

        sext_ln111_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln111_fu_568_p2),12));

        sext_ln118_1_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln118_1_reg_950),64));

        sext_ln118_fu_712_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_reg_919),64));

        sext_ln36_fu_399_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_389_p4),64));

    shl_ln108_1_fu_621_p3 <= (add_ln108_1_fu_604_p2 & ap_const_lv2_0);
    shl_ln108_2_fu_673_p3 <= (add_ln108_3_fu_668_p2 & ap_const_lv10_0);
    shl_ln108_3_fu_685_p3 <= (add_ln108_3_fu_668_p2 & ap_const_lv2_0);
    shl_ln2_fu_609_p3 <= (add_ln108_1_fu_604_p2 & ap_const_lv10_0);
    shl_ln76_1_fu_435_p3 <= (h_fu_174 & ap_const_lv2_0);
    shl_ln_fu_423_p3 <= (h_fu_174 & ap_const_lv10_0);
    sub_ln108_1_fu_697_p2 <= std_logic_vector(unsigned(zext_ln108_4_fu_681_p1) - unsigned(zext_ln108_5_fu_693_p1));
    sub_ln108_fu_633_p2 <= std_logic_vector(unsigned(zext_ln108_1_fu_617_p1) - unsigned(zext_ln108_2_fu_629_p1));
    sub_ln111_1_fu_589_p2 <= std_logic_vector(unsigned(p_shl6_fu_581_p3) - unsigned(sext_ln111_fu_573_p1));
    sub_ln111_2_fu_746_p2 <= std_logic_vector(unsigned(p_shl7_fu_738_p3) - unsigned(sext_ln111_1_fu_730_p1));
    sub_ln111_fu_544_p2 <= std_logic_vector(unsigned(zext_ln111_3_fu_540_p1) - unsigned(zext_ln111_fu_528_p1));
    sub_ln76_fu_447_p2 <= std_logic_vector(unsigned(zext_ln76_fu_431_p1) - unsigned(zext_ln76_1_fu_443_p1));
    tmp_s_fu_532_p3 <= (bout_1_reg_255 & ap_const_lv2_0);
    trunc_ln100_fu_479_p1 <= out_reg_243(5 - 1 downto 0);
    trunc_ln105_fu_596_p1 <= bh_reg_267(2 - 1 downto 0);
    trunc_ln111_1_fu_734_p1 <= add_ln111_2_fu_725_p2(4 - 1 downto 0);
    trunc_ln111_fu_577_p1 <= add_ln111_fu_568_p2(4 - 1 downto 0);
    trunc_ln_fu_389_p4 <= conv2_weights(63 downto 2);

    w2_blk_n_AR_assign_proc : process(m_axi_w2_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            w2_blk_n_AR <= m_axi_w2_ARREADY;
        else 
            w2_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    weight_buffer_address0_assign_proc : process(ap_CS_fsm_state14, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_address0, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_address0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_buffer_address0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_address0 <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_address0;
        else 
            weight_buffer_address0 <= "XXXXXXXX";
        end if; 
    end process;


    weight_buffer_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_ce0, grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_buffer_ce0 <= grp_conv2_Pipeline_OUT_ROW_COL_fu_321_weight_buffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_ce0 <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_ce0;
        else 
            weight_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_we0_assign_proc : process(grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_we0 <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_312_weight_buffer_we0;
        else 
            weight_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln101_fu_454_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_174),9));
    zext_ln104_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_1_reg_255),5));
    zext_ln105_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_267),9));
    zext_ln108_1_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_609_p3),20));
    zext_ln108_2_fu_629_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln108_1_fu_621_p3),20));
    zext_ln108_3_fu_664_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln108_fu_658_p2),9));
    zext_ln108_4_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln108_2_fu_673_p3),20));
    zext_ln108_5_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln108_3_fu_685_p3),20));
    zext_ln108_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln108_fu_513_p2),64));
    zext_ln111_3_fu_540_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_532_p3),6));
    zext_ln111_4_fu_564_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_267),7));
    zext_ln111_5_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln108_reg_925),7));
    zext_ln111_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_1_reg_255),6));
    zext_ln76_1_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln76_1_fu_435_p3),19));
    zext_ln76_fu_431_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_423_p3),19));
end behav;
