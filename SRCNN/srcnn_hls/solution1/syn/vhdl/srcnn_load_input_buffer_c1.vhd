-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_load_input_buffer_c1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_i1_AWVALID : OUT STD_LOGIC;
    m_axi_i1_AWREADY : IN STD_LOGIC;
    m_axi_i1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_WVALID : OUT STD_LOGIC;
    m_axi_i1_WREADY : IN STD_LOGIC;
    m_axi_i1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_WLAST : OUT STD_LOGIC;
    m_axi_i1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_ARVALID : OUT STD_LOGIC;
    m_axi_i1_ARREADY : IN STD_LOGIC;
    m_axi_i1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RVALID : IN STD_LOGIC;
    m_axi_i1_RREADY : OUT STD_LOGIC;
    m_axi_i1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_RLAST : IN STD_LOGIC;
    m_axi_i1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_BVALID : IN STD_LOGIC;
    m_axi_i1_BREADY : OUT STD_LOGIC;
    m_axi_i1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    h : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of srcnn_load_input_buffer_c1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (30 downto 0) := "0000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (30 downto 0) := "0000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (30 downto 0) := "0000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (30 downto 0) := "0000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (30 downto 0) := "0000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (30 downto 0) := "0000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (30 downto 0) := "0001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (30 downto 0) := "0010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (30 downto 0) := "0100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (30 downto 0) := "1000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_FE : STD_LOGIC_VECTOR (9 downto 0) := "0011111110";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_3F8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001111111000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv12_107 : STD_LOGIC_VECTOR (11 downto 0) := "000100000111";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv11_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_const_lv11_3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000011";
    constant ap_const_lv11_103 : STD_LOGIC_VECTOR (10 downto 0) := "00100000011";
    constant ap_const_lv11_104 : STD_LOGIC_VECTOR (10 downto 0) := "00100000100";
    constant ap_const_lv11_105 : STD_LOGIC_VECTOR (10 downto 0) := "00100000101";
    constant ap_const_lv11_106 : STD_LOGIC_VECTOR (10 downto 0) := "00100000110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_fu_512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_523 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal h_cast2_fu_535_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal h_cast2_reg_1180 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln98_fu_549_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln98_reg_1185 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln95_fu_565_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln95_reg_1190 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln95_fu_575_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln95_reg_1197 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln_reg_1202 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln95_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_addr_reg_1207 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_addr_1_reg_1213 : STD_LOGIC_VECTOR (63 downto 0);
    signal xs_sign_reg_1219 : STD_LOGIC_VECTOR (0 downto 0);
    signal xs_exp_reg_1224 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln371_fu_758_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_reg_1230 : STD_LOGIC_VECTOR (22 downto 0);
    signal result_fu_865_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_1235 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal data_1_reg_1240 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_1_reg_1245 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln371_1_fu_882_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln371_1_reg_1251 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln107_fu_903_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln107_reg_1256 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_6_reg_1261 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_7_reg_1266 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_8_reg_1271 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_9_reg_1276 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_10_reg_1281 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_11_reg_1286 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_14_reg_1291 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_15_reg_1296 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_16_reg_1301 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_17_reg_1306 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_18_reg_1311 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_19_reg_1316 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_22_reg_1321 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_23_reg_1326 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_24_reg_1331 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_25_reg_1336 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_26_reg_1341 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_27_reg_1346 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_30_reg_1351 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_31_reg_1356 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_32_reg_1361 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_33_reg_1366 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_34_reg_1371 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_35_reg_1376 : STD_LOGIC_VECTOR (10 downto 0);
    signal val_1_fu_1094_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_1_reg_1381 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_6_fu_1102_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_6_reg_1386 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_66_fu_1118_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_66_reg_1394 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal empty_68_fu_1134_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_68_reg_1399 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond2_fu_1112_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal result_7_fu_1146_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_67_fu_1153_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_67_reg_1409 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_index_reg_501 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal zext_ln107_1_fu_895_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_2_fu_913_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_3_fu_927_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln107_4_fu_941_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_fu_955_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_1_fu_969_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_2_fu_983_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln116_3_fu_997_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_fu_1157_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln100_1_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln101_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal bh_fu_158 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_fu_512_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal zext_ln95_fu_539_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln98_fu_543_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln95_1_fu_561_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln98_1_fu_595_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln98_fu_591_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln55_1_fu_614_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln55_fu_620_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_1_fu_629_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_600_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_fu_608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_fu_645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln54_fu_637_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln55_fu_624_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal hclamp_fu_651_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln100_1_fu_667_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_659_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln100_fu_675_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln100_fu_679_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln100_2_fu_685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln100_fu_689_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_fu_694_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln101_fu_714_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln4_fu_720_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mantissa_fu_762_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_fu_775_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_fu_778_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln18_fu_792_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_784_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln18_fu_797_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln18_fu_801_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln18_1_fu_809_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_771_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln18_fu_813_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln18_fu_817_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_6_fu_829_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln18_fu_823_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln21_fu_837_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_841_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_fu_851_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_2_fu_859_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln107_fu_889_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln107_fu_889_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln107_fu_889_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln107_fu_907_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln107_1_fu_921_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln107_2_fu_935_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln116_fu_949_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln116_1_fu_963_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln116_2_fu_977_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln116_3_fu_991_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mantissa_1_fu_1005_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln346_1_fu_1018_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln346_1_fu_1021_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln18_1_fu_1035_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1027_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln18_2_fu_1040_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln18_2_fu_1044_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln18_3_fu_1052_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_1_fu_1014_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln18_1_fu_1056_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln18_1_fu_1060_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_8_fu_1072_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln18_1_fu_1066_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln21_1_fu_1080_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1084_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal loop_index_cast_fu_1108_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal arrayidx31612_sum_fu_1124_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal arrayidx31612_sum_cast219_fu_1130_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal xs_sign_1_fu_1139_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_512_ce : STD_LOGIC;
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal mul_ln107_fu_889_p00 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_sitofp_32ns_32_4_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_mul_3ns_10ns_12_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    sitofp_32ns_32_4_no_dsp_1_U5 : component srcnn_sitofp_32ns_32_4_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_512_p0,
        ce => grp_fu_512_ce,
        dout => grp_fu_512_p1);

    mul_3ns_10ns_12_1_1_U6 : component srcnn_mul_3ns_10ns_12_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 10,
        dout_WIDTH => 12)
    port map (
        din0 => mul_ln107_fu_889_p0,
        din1 => mul_ln107_fu_889_p1,
        dout => mul_ln107_fu_889_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    bh_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bh_fu_158 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                bh_fu_158 <= add_ln95_reg_1197;
            end if; 
        end if;
    end process;

    loop_index_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                loop_index_reg_501 <= empty_66_reg_1394;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                loop_index_reg_501 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln95_reg_1197 <= add_ln95_fu_575_p2;
                trunc_ln95_reg_1190 <= trunc_ln95_fu_565_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_10_reg_1281 <= zext_ln116_2_fu_983_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_11_reg_1286 <= zext_ln116_3_fu_997_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_14_reg_1291 <= zext_ln107_3_fu_927_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_15_reg_1296 <= zext_ln107_4_fu_941_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_16_reg_1301 <= zext_ln116_fu_955_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_17_reg_1306 <= zext_ln116_1_fu_969_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_18_reg_1311 <= zext_ln116_2_fu_983_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_19_reg_1316 <= zext_ln116_3_fu_997_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_22_reg_1321 <= zext_ln107_3_fu_927_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_23_reg_1326 <= zext_ln107_4_fu_941_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_24_reg_1331 <= zext_ln116_fu_955_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_25_reg_1336 <= zext_ln116_1_fu_969_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_26_reg_1341 <= zext_ln116_2_fu_983_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_27_reg_1346 <= zext_ln116_3_fu_997_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_30_reg_1351 <= zext_ln107_3_fu_927_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_31_reg_1356 <= zext_ln107_4_fu_941_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_32_reg_1361 <= zext_ln116_fu_955_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_33_reg_1366 <= zext_ln116_1_fu_969_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_34_reg_1371 <= zext_ln116_2_fu_983_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_35_reg_1376 <= zext_ln116_3_fu_997_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_6_reg_1261 <= zext_ln107_3_fu_927_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_7_reg_1266 <= zext_ln107_4_fu_941_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_8_reg_1271 <= zext_ln116_fu_955_p1(11 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_in_9_reg_1276 <= zext_ln116_1_fu_969_p1(11 - 1 downto 0);
                result_6_reg_1386 <= result_6_fu_1102_p2;
                trunc_ln107_reg_1256 <= trunc_ln107_fu_903_p1;
                val_1_reg_1381 <= val_1_fu_1094_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                data_1_reg_1240 <= m_axi_i1_RDATA;
                trunc_ln371_1_reg_1251 <= trunc_ln371_1_fu_882_p1;
                xs_exp_1_reg_1245 <= m_axi_i1_RDATA(30 downto 23);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                empty_66_reg_1394 <= empty_66_fu_1118_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                empty_67_reg_1409 <= empty_67_fu_1153_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond2_fu_1112_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                empty_68_reg_1399 <= empty_68_fu_1134_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    h_cast2_reg_1180(7 downto 0) <= h_cast2_fu_535_p1(7 downto 0);
                sext_ln98_reg_1185 <= sext_ln98_fu_549_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln95_fu_569_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i1_addr_1_reg_1213 <= sext_ln101_fu_730_p1;
                i1_addr_reg_1207 <= sext_ln100_1_fu_704_p1;
                lshr_ln_reg_1202 <= bh_fu_158(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_523 <= grp_fu_512_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                result_reg_1235 <= result_fu_865_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                trunc_ln371_reg_1230 <= trunc_ln371_fu_758_p1;
                xs_exp_reg_1224 <= m_axi_i1_RDATA(30 downto 23);
                xs_sign_reg_1219 <= m_axi_i1_RDATA(31 downto 31);
            end if;
        end if;
    end process;
    h_cast2_reg_1180(9 downto 8) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_i1_ARREADY, m_axi_i1_RVALID, ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state17, ap_CS_fsm_state26, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state2, icmp_ln95_fu_569_p2, ap_CS_fsm_state25, exitcond2_fu_1112_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln95_fu_569_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((m_axi_i1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((m_axi_i1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((exitcond2_fu_1112_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                if (((m_axi_i1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln100_fu_689_p2 <= std_logic_vector(signed(sext_ln100_2_fu_685_p1) + signed(input_ftmap));
    add_ln101_fu_714_p2 <= std_logic_vector(unsigned(add_ln100_fu_689_p2) + unsigned(ap_const_lv64_3F8));
    add_ln107_1_fu_921_p2 <= std_logic_vector(unsigned(trunc_ln107_fu_903_p1) + unsigned(ap_const_lv11_2));
    add_ln107_2_fu_935_p2 <= std_logic_vector(unsigned(trunc_ln107_fu_903_p1) + unsigned(ap_const_lv11_3));
    add_ln107_fu_907_p2 <= std_logic_vector(unsigned(trunc_ln107_fu_903_p1) + unsigned(ap_const_lv11_1));
    add_ln116_1_fu_963_p2 <= std_logic_vector(unsigned(trunc_ln107_fu_903_p1) + unsigned(ap_const_lv11_104));
    add_ln116_2_fu_977_p2 <= std_logic_vector(unsigned(trunc_ln107_fu_903_p1) + unsigned(ap_const_lv11_105));
    add_ln116_3_fu_991_p2 <= std_logic_vector(unsigned(trunc_ln107_fu_903_p1) + unsigned(ap_const_lv11_106));
    add_ln116_fu_949_p2 <= std_logic_vector(unsigned(trunc_ln107_fu_903_p1) + unsigned(ap_const_lv11_103));
    add_ln346_1_fu_1021_p2 <= std_logic_vector(unsigned(zext_ln346_1_fu_1018_p1) + unsigned(ap_const_lv9_181));
    add_ln346_fu_778_p2 <= std_logic_vector(unsigned(zext_ln346_fu_775_p1) + unsigned(ap_const_lv9_181));
    add_ln55_1_fu_614_p2 <= std_logic_vector(unsigned(zext_ln98_fu_591_p1) + unsigned(ap_const_lv6_3C));
    add_ln55_fu_624_p2 <= std_logic_vector(signed(sext_ln55_fu_620_p1) + signed(h_cast2_reg_1180));
    add_ln95_fu_575_p2 <= std_logic_vector(unsigned(bh_fu_158) + unsigned(ap_const_lv5_1));
    add_ln98_1_fu_595_p2 <= std_logic_vector(signed(sext_ln98_reg_1185) + signed(zext_ln95_1_fu_561_p1));
    add_ln98_fu_543_p2 <= std_logic_vector(unsigned(zext_ln95_fu_539_p1) + unsigned(ap_const_lv9_1FC));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln95_fu_569_p2)
    begin
        if ((((icmp_ln95_fu_569_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln95_fu_569_p2)
    begin
        if (((icmp_ln95_fu_569_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx31612_sum_cast219_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(arrayidx31612_sum_fu_1124_p2),11));
    arrayidx31612_sum_fu_1124_p2 <= std_logic_vector(unsigned(loop_index_cast_fu_1108_p1) + unsigned(ap_const_lv9_4));

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_23_reg_1326, conv1_float_255_255_float_1_9_9_float_float_255_255_in_24_reg_1331, conv1_float_255_255_float_1_9_9_float_float_255_255_in_26_reg_1341, ap_CS_fsm_state27, zext_ln107_2_fu_913_p1, p_cast_fu_1157_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_26_reg_1341;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_24_reg_1331;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= p_cast_fu_1157_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_23_reg_1326;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= zext_ln107_2_fu_913_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_22_reg_1321, conv1_float_255_255_float_1_9_9_float_float_255_255_in_25_reg_1336, conv1_float_255_255_float_1_9_9_float_float_255_255_in_27_reg_1346, zext_ln107_1_fu_895_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_27_reg_1346;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_25_reg_1336;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_22_reg_1321;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 <= zext_ln107_1_fu_895_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, empty_67_reg_1409, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 <= empty_67_reg_1409;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d1_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d1 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d1 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_15_reg_1296, conv1_float_255_255_float_1_9_9_float_float_255_255_in_16_reg_1301, conv1_float_255_255_float_1_9_9_float_float_255_255_in_18_reg_1311, ap_CS_fsm_state27, zext_ln107_2_fu_913_p1, p_cast_fu_1157_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_18_reg_1311;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_16_reg_1301;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= p_cast_fu_1157_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_15_reg_1296;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= zext_ln107_2_fu_913_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_14_reg_1291, conv1_float_255_255_float_1_9_9_float_float_255_255_in_17_reg_1306, conv1_float_255_255_float_1_9_9_float_float_255_255_in_19_reg_1316, zext_ln107_1_fu_895_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_19_reg_1316;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_17_reg_1306;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_14_reg_1291;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 <= zext_ln107_1_fu_895_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, empty_67_reg_1409, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 <= empty_67_reg_1409;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d1_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d1 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d1 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_7_reg_1266, conv1_float_255_255_float_1_9_9_float_float_255_255_in_8_reg_1271, conv1_float_255_255_float_1_9_9_float_float_255_255_in_10_reg_1281, ap_CS_fsm_state27, zext_ln107_2_fu_913_p1, p_cast_fu_1157_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_10_reg_1281;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_8_reg_1271;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= p_cast_fu_1157_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_7_reg_1266;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= zext_ln107_2_fu_913_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_6_reg_1261, conv1_float_255_255_float_1_9_9_float_float_255_255_in_9_reg_1276, conv1_float_255_255_float_1_9_9_float_float_255_255_in_11_reg_1286, zext_ln107_1_fu_895_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_11_reg_1286;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_9_reg_1276;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_6_reg_1261;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 <= zext_ln107_1_fu_895_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, empty_67_reg_1409, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 <= empty_67_reg_1409;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_31_reg_1356, conv1_float_255_255_float_1_9_9_float_float_255_255_in_32_reg_1361, conv1_float_255_255_float_1_9_9_float_float_255_255_in_34_reg_1371, ap_CS_fsm_state27, zext_ln107_2_fu_913_p1, p_cast_fu_1157_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_34_reg_1371;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_32_reg_1361;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= p_cast_fu_1157_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_31_reg_1356;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= zext_ln107_2_fu_913_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1_assign_proc : process(ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, conv1_float_255_255_float_1_9_9_float_float_255_255_in_30_reg_1351, conv1_float_255_255_float_1_9_9_float_float_255_255_in_33_reg_1366, conv1_float_255_255_float_1_9_9_float_float_255_255_in_35_reg_1376, zext_ln107_1_fu_895_p1, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_35_reg_1376;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_33_reg_1366;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 <= conv1_float_255_255_float_1_9_9_float_float_255_255_in_30_reg_1351;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 <= zext_ln107_1_fu_895_p1(11 - 1 downto 0);
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, empty_67_reg_1409, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= empty_67_reg_1409;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1_assign_proc : process(ap_CS_fsm_state17, grp_fu_512_p1, reg_523, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1 <= reg_523;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1 <= grp_fu_512_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state27, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state17, ap_CS_fsm_state16, ap_CS_fsm_state30, trunc_ln95_reg_1190, ap_CS_fsm_state31)
    begin
        if ((((trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (trunc_ln95_reg_1190 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_66_fu_1118_p2 <= std_logic_vector(unsigned(loop_index_reg_501) + unsigned(ap_const_lv8_1));
    empty_67_fu_1153_p1 <= m_axi_i1_RDATA;
    empty_68_fu_1134_p2 <= std_logic_vector(unsigned(trunc_ln107_reg_1256) + unsigned(arrayidx31612_sum_cast219_fu_1130_p1));
    exitcond2_fu_1112_p2 <= "1" when (loop_index_reg_501 = ap_const_lv8_FF) else "0";

    grp_fu_512_ce_assign_proc : process(m_axi_i1_RVALID, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state30, ap_CS_fsm_state25, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16) or ((m_axi_i1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_fu_512_ce <= ap_const_logic_1;
        else 
            grp_fu_512_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_512_p0_assign_proc : process(result_reg_1235, ap_CS_fsm_state25, result_7_fu_1146_p3, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_512_p0 <= result_7_fu_1146_p3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_512_p0 <= result_reg_1235;
        else 
            grp_fu_512_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    h_cast2_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h),10));
    hclamp_fu_651_p3 <= 
        select_ln54_fu_637_p3 when (or_ln54_fu_645_p2(0) = '1') else 
        add_ln55_fu_624_p2;

    i1_blk_n_AR_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state17, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            i1_blk_n_AR <= m_axi_i1_ARREADY;
        else 
            i1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    i1_blk_n_R_assign_proc : process(m_axi_i1_RVALID, ap_CS_fsm_state11, ap_CS_fsm_state26, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            i1_blk_n_R <= m_axi_i1_RVALID;
        else 
            i1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln55_fu_608_p2 <= "1" when (signed(add_ln98_1_fu_595_p2) > signed(ap_const_lv10_FE)) else "0";
    icmp_ln95_fu_569_p2 <= "1" when (bh_fu_158 = ap_const_lv5_17) else "0";
    loop_index_cast_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index_reg_501),9));
    lshr_ln18_1_fu_1060_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_1_fu_1014_p1),to_integer(unsigned('0' & zext_ln18_1_fu_1056_p1(31-1 downto 0)))));
    lshr_ln18_fu_817_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_771_p1),to_integer(unsigned('0' & zext_ln18_fu_813_p1(31-1 downto 0)))));

    m_axi_i1_ARADDR_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state17, ap_CS_fsm_state4, i1_addr_reg_1207, i1_addr_1_reg_1213)
    begin
        if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_i1_ARADDR <= i1_addr_1_reg_1213;
        elsif ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            m_axi_i1_ARADDR <= i1_addr_reg_1207;
        else 
            m_axi_i1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i1_ARBURST <= ap_const_lv2_0;
    m_axi_i1_ARCACHE <= ap_const_lv4_0;
    m_axi_i1_ARID <= ap_const_lv1_0;

    m_axi_i1_ARLEN_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state17, ap_CS_fsm_state4)
    begin
        if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_i1_ARLEN <= ap_const_lv32_FF;
        elsif ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            m_axi_i1_ARLEN <= ap_const_lv32_1;
        else 
            m_axi_i1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i1_ARLOCK <= ap_const_lv2_0;
    m_axi_i1_ARPROT <= ap_const_lv3_0;
    m_axi_i1_ARQOS <= ap_const_lv4_0;
    m_axi_i1_ARREGION <= ap_const_lv4_0;
    m_axi_i1_ARSIZE <= ap_const_lv3_0;
    m_axi_i1_ARUSER <= ap_const_lv1_0;

    m_axi_i1_ARVALID_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state3, ap_CS_fsm_state17, ap_CS_fsm_state4)
    begin
        if ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            m_axi_i1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_i1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i1_AWADDR <= ap_const_lv64_0;
    m_axi_i1_AWBURST <= ap_const_lv2_0;
    m_axi_i1_AWCACHE <= ap_const_lv4_0;
    m_axi_i1_AWID <= ap_const_lv1_0;
    m_axi_i1_AWLEN <= ap_const_lv32_0;
    m_axi_i1_AWLOCK <= ap_const_lv2_0;
    m_axi_i1_AWPROT <= ap_const_lv3_0;
    m_axi_i1_AWQOS <= ap_const_lv4_0;
    m_axi_i1_AWREGION <= ap_const_lv4_0;
    m_axi_i1_AWSIZE <= ap_const_lv3_0;
    m_axi_i1_AWUSER <= ap_const_lv1_0;
    m_axi_i1_AWVALID <= ap_const_logic_0;
    m_axi_i1_BREADY <= ap_const_logic_0;

    m_axi_i1_RREADY_assign_proc : process(m_axi_i1_RVALID, ap_CS_fsm_state11, ap_CS_fsm_state26, ap_CS_fsm_state15)
    begin
        if ((((m_axi_i1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((m_axi_i1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((m_axi_i1_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_i1_RREADY <= ap_const_logic_1;
        else 
            m_axi_i1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i1_WDATA <= ap_const_lv32_0;
    m_axi_i1_WID <= ap_const_lv1_0;
    m_axi_i1_WLAST <= ap_const_logic_0;
    m_axi_i1_WSTRB <= ap_const_lv4_0;
    m_axi_i1_WUSER <= ap_const_lv1_0;
    m_axi_i1_WVALID <= ap_const_logic_0;
    mantissa_1_fu_1005_p4 <= ((ap_const_lv1_1 & trunc_ln371_1_reg_1251) & ap_const_lv1_0);
    mantissa_fu_762_p4 <= ((ap_const_lv1_1 & trunc_ln371_reg_1230) & ap_const_lv1_0);
    mul_ln107_fu_889_p0 <= mul_ln107_fu_889_p00(3 - 1 downto 0);
    mul_ln107_fu_889_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_1202),12));
    mul_ln107_fu_889_p1 <= ap_const_lv12_107(10 - 1 downto 0);
    or_ln54_fu_645_p2 <= (tmp_fu_600_p3 or icmp_ln55_fu_608_p2);
    p_cast_fu_1157_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_68_reg_1399),64));
    result_2_fu_859_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_fu_851_p3));
    result_6_fu_1102_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_1_fu_1094_p3));
    result_7_fu_1146_p3 <= 
        result_6_reg_1386 when (xs_sign_1_fu_1139_p3(0) = '1') else 
        val_1_reg_1381;
    result_fu_865_p3 <= 
        result_2_fu_859_p2 when (xs_sign_reg_1219(0) = '1') else 
        val_fu_851_p3;
    select_ln18_2_fu_1044_p3 <= 
        sext_ln18_2_fu_1040_p1 when (tmp_7_fu_1027_p3(0) = '1') else 
        add_ln346_1_fu_1021_p2;
    select_ln18_fu_801_p3 <= 
        sext_ln18_fu_797_p1 when (tmp_5_fu_784_p3(0) = '1') else 
        add_ln346_fu_778_p2;
    select_ln54_fu_637_p3 <= 
        ap_const_lv10_0 when (tmp_1_fu_629_p3(0) = '1') else 
        ap_const_lv10_FE;
        sext_ln100_1_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln3_fu_694_p4),64));

        sext_ln100_2_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln100_fu_679_p2),64));

        sext_ln100_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln100_1_fu_667_p3),20));

        sext_ln101_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_720_p4),64));

        sext_ln18_1_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_fu_801_p3),32));

        sext_ln18_2_fu_1040_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_1_fu_1035_p2),9));

        sext_ln18_3_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_2_fu_1044_p3),32));

        sext_ln18_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_fu_792_p2),9));

        sext_ln55_fu_620_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln55_1_fu_614_p2),10));

        sext_ln98_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln98_fu_543_p2),10));

    shl_ln100_1_fu_667_p3 <= (hclamp_fu_651_p3 & ap_const_lv2_0);
    shl_ln18_1_fu_1066_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_1_fu_1014_p1),to_integer(unsigned('0' & zext_ln18_1_fu_1056_p1(31-1 downto 0)))));
    shl_ln18_fu_823_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_771_p1),to_integer(unsigned('0' & zext_ln18_fu_813_p1(31-1 downto 0)))));
    shl_ln_fu_659_p3 <= (hclamp_fu_651_p3 & ap_const_lv10_0);
    sub_ln100_fu_679_p2 <= std_logic_vector(unsigned(shl_ln_fu_659_p3) - unsigned(sext_ln100_fu_675_p1));
    sub_ln18_1_fu_1035_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_1_reg_1245));
    sub_ln18_fu_792_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_reg_1224));
    tmp_1_fu_629_p3 <= add_ln98_1_fu_595_p2(9 downto 9);
    tmp_2_fu_841_p4 <= shl_ln18_fu_823_p2(55 downto 24);
    tmp_4_fu_1084_p4 <= shl_ln18_1_fu_1066_p2(55 downto 24);
    tmp_5_fu_784_p3 <= add_ln346_fu_778_p2(8 downto 8);
    tmp_6_fu_829_p3 <= lshr_ln18_fu_817_p2(24 downto 24);
    tmp_7_fu_1027_p3 <= add_ln346_1_fu_1021_p2(8 downto 8);
    tmp_8_fu_1072_p3 <= lshr_ln18_1_fu_1060_p2(24 downto 24);
    tmp_fu_600_p3 <= add_ln98_1_fu_595_p2(9 downto 9);
    trunc_ln107_fu_903_p1 <= mul_ln107_fu_889_p2(11 - 1 downto 0);
    trunc_ln371_1_fu_882_p1 <= m_axi_i1_RDATA(23 - 1 downto 0);
    trunc_ln371_fu_758_p1 <= m_axi_i1_RDATA(23 - 1 downto 0);
    trunc_ln3_fu_694_p4 <= add_ln100_fu_689_p2(63 downto 2);
    trunc_ln4_fu_720_p4 <= add_ln101_fu_714_p2(63 downto 2);
    trunc_ln95_fu_565_p1 <= bh_fu_158(2 - 1 downto 0);
    val_1_fu_1094_p3 <= 
        zext_ln21_1_fu_1080_p1 when (tmp_7_fu_1027_p3(0) = '1') else 
        tmp_4_fu_1084_p4;
    val_fu_851_p3 <= 
        zext_ln21_fu_837_p1 when (tmp_5_fu_784_p3(0) = '1') else 
        tmp_2_fu_841_p4;
    xs_sign_1_fu_1139_p3 <= data_1_reg_1240(31 downto 31);
    zext_ln107_1_fu_895_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln107_fu_889_p2),64));
    zext_ln107_2_fu_913_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_fu_907_p2),64));
    zext_ln107_3_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_1_fu_921_p2),64));
    zext_ln107_4_fu_941_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln107_2_fu_935_p2),64));
    zext_ln116_1_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_1_fu_963_p2),64));
    zext_ln116_2_fu_983_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_2_fu_977_p2),64));
    zext_ln116_3_fu_997_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_3_fu_991_p2),64));
    zext_ln116_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln116_fu_949_p2),64));
    zext_ln15_1_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_1_fu_1005_p4),79));
    zext_ln15_fu_771_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_762_p4),79));
    zext_ln18_1_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_3_fu_1052_p1),79));
    zext_ln18_fu_813_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_1_fu_809_p1),79));
    zext_ln21_1_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1072_p3),32));
    zext_ln21_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_6_fu_829_p3),32));
    zext_ln346_1_fu_1018_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_1_reg_1245),9));
    zext_ln346_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_reg_1224),9));
    zext_ln95_1_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_fu_158),10));
    zext_ln95_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h),9));
    zext_ln98_fu_591_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_fu_158),6));
end behav;
