

================================================================
== Vitis HLS Report for 'conv1_Pipeline_KR_KC'
================================================================
* Date:           Thu Nov  2 02:40:01 2023

* Version:        2023.1 (Build 3854077 on May  4 2023)
* Project:        srcnn_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xck24-ubva530-2LV-c


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.016 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      253|      253|  2.530 us|  2.530 us|  253|  253|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- KR_KC   |      251|      251|        12|          3|          3|    81|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 3, depth = 12


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 3, D = 12, States = { 1 2 3 4 5 6 7 8 9 10 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 3.88>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 15 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%kc = alloca i32 1"   --->   Operation 16 'alloca' 'kc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%kr = alloca i32 1"   --->   Operation 17 'alloca' 'kr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 18 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%zext_ln43_2_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %zext_ln43_2"   --->   Operation 19 'read' 'zext_ln43_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%select_ln42_6_read = read i5 @_ssdm_op_Read.ap_auto.i5, i5 %select_ln42_6"   --->   Operation 20 'read' 'select_ln42_6_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%add_ln53_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %add_ln53"   --->   Operation 21 'read' 'add_ln53_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%output_fm_buffer_1_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %output_fm_buffer_1_load"   --->   Operation 22 'read' 'output_fm_buffer_1_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%zext_ln43_2_cast = zext i8 %zext_ln43_2_read"   --->   Operation 23 'zext' 'zext_ln43_2_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.42ns)   --->   "%store_ln0 = store i7 0, i7 %indvar_flatten"   --->   Operation 24 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 25 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %kr"   --->   Operation 25 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 26 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %kc"   --->   Operation 26 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 27 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %output_fm_buffer_1_load_read, i32 %empty"   --->   Operation 27 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 28 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i7 %indvar_flatten" [src/conv1.cpp:45]   --->   Operation 29 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.77ns)   --->   "%icmp_ln45 = icmp_eq  i7 %indvar_flatten_load, i7 81" [src/conv1.cpp:45]   --->   Operation 30 'icmp' 'icmp_ln45' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.77ns)   --->   "%add_ln45_7 = add i7 %indvar_flatten_load, i7 1" [src/conv1.cpp:45]   --->   Operation 31 'add' 'add_ln45_7' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%br_ln45 = br i1 %icmp_ln45, void %for.inc53, void %for.inc56.exitStub" [src/conv1.cpp:45]   --->   Operation 32 'br' 'br_ln45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%kc_load = load i4 %kc" [src/conv1.cpp:46]   --->   Operation 33 'load' 'kc_load' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%kr_load = load i4 %kr" [src/conv1.cpp:45]   --->   Operation 34 'load' 'kr_load' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.79ns)   --->   "%add_ln45 = add i4 %kr_load, i4 1" [src/conv1.cpp:45]   --->   Operation 35 'add' 'add_ln45' <Predicate = (!icmp_ln45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (0.79ns)   --->   "%icmp_ln46 = icmp_eq  i4 %kc_load, i4 9" [src/conv1.cpp:46]   --->   Operation 36 'icmp' 'icmp_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (0.39ns)   --->   "%select_ln45 = select i1 %icmp_ln46, i4 0, i4 %kc_load" [src/conv1.cpp:45]   --->   Operation 37 'select' 'select_ln45' <Predicate = (!icmp_ln45)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 38 [1/1] (0.39ns)   --->   "%select_ln45_2 = select i1 %icmp_ln46, i4 %add_ln45, i4 %kr_load" [src/conv1.cpp:45]   --->   Operation 38 'select' 'select_ln45_2' <Predicate = (!icmp_ln45)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln45_4 = zext i4 %select_ln45_2" [src/conv1.cpp:45]   --->   Operation 39 'zext' 'zext_ln45_4' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.69ns) (grouped into DSP with root node add_ln53_10)   --->   "%add_ln45_6 = add i5 %zext_ln45_4, i5 %select_ln42_6_read" [src/conv1.cpp:45]   --->   Operation 40 'add' 'add_ln45_6' <Predicate = (!icmp_ln45)> <Delay = 1.69> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 41 [1/1] (0.00ns) (grouped into DSP with root node add_ln53_10)   --->   "%zext_ln46 = zext i5 %add_ln45_6" [src/conv1.cpp:46]   --->   Operation 41 'zext' 'zext_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_1 : Operation 42 [3/3] (0.99ns) (grouped into DSP with root node add_ln53_10)   --->   "%mul_ln46 = mul i13 %zext_ln46, i13 263" [src/conv1.cpp:46]   --->   Operation 42 'mul' 'mul_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 43 [1/1] (0.79ns)   --->   "%add_ln46 = add i4 %select_ln45, i4 1" [src/conv1.cpp:46]   --->   Operation 43 'add' 'add_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln46 = store i7 %add_ln45_7, i7 %indvar_flatten" [src/conv1.cpp:46]   --->   Operation 44 'store' 'store_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln46 = store i4 %select_ln45_2, i4 %kr" [src/conv1.cpp:46]   --->   Operation 45 'store' 'store_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln46 = store i4 %add_ln46, i4 %kc" [src/conv1.cpp:46]   --->   Operation 46 'store' 'store_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 0.99>
ST_2 : Operation 47 [2/3] (0.99ns) (grouped into DSP with root node add_ln53_10)   --->   "%mul_ln46 = mul i13 %zext_ln46, i13 263" [src/conv1.cpp:46]   --->   Operation 47 'mul' 'mul_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 3 <SV = 2> <Delay = 1.41>
ST_3 : Operation 48 [1/3] (0.00ns) (grouped into DSP with root node add_ln53_10)   --->   "%mul_ln46 = mul i13 %zext_ln46, i13 263" [src/conv1.cpp:46]   --->   Operation 48 'mul' 'mul_ln46' <Predicate = (!icmp_ln45)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln46_2 = zext i4 %select_ln45" [src/conv1.cpp:46]   --->   Operation 49 'zext' 'zext_ln46_2' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.76ns)   --->   "%add_ln51 = add i9 %zext_ln46_2, i9 %zext_ln43_2_cast" [src/conv1.cpp:51]   --->   Operation 50 'add' 'add_ln51' <Predicate = (!icmp_ln45)> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln53_13 = zext i9 %add_ln51" [src/conv1.cpp:53]   --->   Operation 51 'zext' 'zext_ln53_13' <Predicate = (!icmp_ln45)> <Delay = 0.00>
ST_3 : Operation 52 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln53_10 = add i13 %mul_ln46, i13 %zext_ln53_13" [src/conv1.cpp:53]   --->   Operation 52 'add' 'add_ln53_10' <Predicate = (!icmp_ln45)> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 4 <SV = 3> <Delay = 2.96>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln53 = zext i4 %select_ln45_2" [src/conv1.cpp:53]   --->   Operation 53 'zext' 'zext_ln53' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.76ns)   --->   "%add_ln53_7 = add i8 %add_ln53_read, i8 %zext_ln53" [src/conv1.cpp:53]   --->   Operation 54 'add' 'add_ln53_7' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln53_10 = zext i8 %add_ln53_7" [src/conv1.cpp:53]   --->   Operation 55 'zext' 'zext_ln53_10' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%trunc_ln53 = trunc i8 %add_ln53_7" [src/conv1.cpp:53]   --->   Operation 56 'trunc' 'trunc_ln53' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%p_shl7 = bitconcatenate i10 @_ssdm_op_BitConcatenate.i10.i7.i3, i7 %trunc_ln53, i3 0" [src/conv1.cpp:53]   --->   Operation 57 'bitconcatenate' 'p_shl7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln53_8 = add i10 %p_shl7, i10 %zext_ln53_10" [src/conv1.cpp:53]   --->   Operation 58 'add' 'add_ln53_8' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%zext_ln53_11 = zext i4 %select_ln45" [src/conv1.cpp:53]   --->   Operation 59 'zext' 'zext_ln53_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.96ns) (root node of TernaryAdder)   --->   "%add_ln53_9 = add i10 %add_ln53_8, i10 %zext_ln53_11" [src/conv1.cpp:53]   --->   Operation 60 'add' 'add_ln53_9' <Predicate = true> <Delay = 0.96> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : '<invalid operator> ' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%zext_ln53_12 = zext i10 %add_ln53_9" [src/conv1.cpp:53]   --->   Operation 61 'zext' 'zext_ln53_12' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%weight_buffer_2_0_addr = getelementptr i32 %weight_buffer_2_0, i64 0, i64 %zext_ln53_12" [src/conv1.cpp:53]   --->   Operation 62 'getelementptr' 'weight_buffer_2_0_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln53_10 = add i13 %mul_ln46, i13 %zext_ln53_13" [src/conv1.cpp:53]   --->   Operation 63 'add' 'add_ln53_10' <Predicate = true> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 127 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : '<invalid operator> ' 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln53_14 = zext i13 %add_ln53_10" [src/conv1.cpp:53]   --->   Operation 64 'zext' 'zext_ln53_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%input_fm_buffer_2_0_addr = getelementptr i32 %input_fm_buffer_2_0, i64 0, i64 %zext_ln53_14" [src/conv1.cpp:53]   --->   Operation 65 'getelementptr' 'input_fm_buffer_2_0_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 66 [2/2] (1.23ns)   --->   "%weight_buffer_2_0_load = load i10 %weight_buffer_2_0_addr" [src/conv1.cpp:53]   --->   Operation 66 'load' 'weight_buffer_2_0_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 648> <RAM>
ST_4 : Operation 67 [2/2] (1.23ns)   --->   "%input_fm_buffer_2_0_load = load i13 %input_fm_buffer_2_0_addr" [src/conv1.cpp:53]   --->   Operation 67 'load' 'input_fm_buffer_2_0_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6575> <RAM>

State 5 <SV = 4> <Delay = 1.23>
ST_5 : Operation 68 [1/2] (1.23ns)   --->   "%weight_buffer_2_0_load = load i10 %weight_buffer_2_0_addr" [src/conv1.cpp:53]   --->   Operation 68 'load' 'weight_buffer_2_0_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 648> <RAM>
ST_5 : Operation 69 [1/2] (1.23ns)   --->   "%input_fm_buffer_2_0_load = load i13 %input_fm_buffer_2_0_addr" [src/conv1.cpp:53]   --->   Operation 69 'load' 'input_fm_buffer_2_0_load' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 6575> <RAM>

State 6 <SV = 5> <Delay = 7.01>
ST_6 : [1/1] (0.47ns)   --->   Input mux for Operation 70 '%mul = fmul i32 %weight_buffer_2_0_load, i32 %input_fm_buffer_2_0_load'
ST_6 : Operation 70 [3/3] (6.54ns)   --->   "%mul = fmul i32 %weight_buffer_2_0_load, i32 %input_fm_buffer_2_0_load" [src/conv1.cpp:53]   --->   Operation 70 'fmul' 'mul' <Predicate = true> <Delay = 6.54> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 7.01> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 7.01>
ST_7 : Operation 71 [2/3] (7.01ns)   --->   "%mul = fmul i32 %weight_buffer_2_0_load, i32 %input_fm_buffer_2_0_load" [src/conv1.cpp:53]   --->   Operation 71 'fmul' 'mul' <Predicate = true> <Delay = 7.01> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 7.01> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 7.01>
ST_8 : Operation 72 [1/3] (7.01ns)   --->   "%mul = fmul i32 %weight_buffer_2_0_load, i32 %input_fm_buffer_2_0_load" [src/conv1.cpp:53]   --->   Operation 72 'fmul' 'mul' <Predicate = true> <Delay = 7.01> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 2> <II = 1> <Delay = 7.01> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 6.43>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty" [src/conv1.cpp:53]   --->   Operation 73 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_9 : [1/1] (0.77ns)   --->   Input mux for Operation 74 '%add = fadd i32 %p_load, i32 %mul'
ST_9 : Operation 74 [4/4] (5.66ns)   --->   "%add = fadd i32 %p_load, i32 %mul" [src/conv1.cpp:53]   --->   Operation 74 'fadd' 'add' <Predicate = true> <Delay = 5.66> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "%p_load21 = load i32 %empty"   --->   Operation 84 'load' 'p_load21' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %p_out, i32 %p_load21"   --->   Operation 85 'write' 'write_ln0' <Predicate = (icmp_ln45)> <Delay = 0.00>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 86 'ret' 'ret_ln0' <Predicate = (icmp_ln45)> <Delay = 0.00>

State 10 <SV = 9> <Delay = 6.43>
ST_10 : Operation 75 [3/4] (6.43ns)   --->   "%add = fadd i32 %p_load, i32 %mul" [src/conv1.cpp:53]   --->   Operation 75 'fadd' 'add' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 6.43>
ST_11 : Operation 76 [2/4] (6.43ns)   --->   "%add = fadd i32 %p_load, i32 %mul" [src/conv1.cpp:53]   --->   Operation 76 'fadd' 'add' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 6.86>
ST_12 : Operation 77 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @KR_KC_str"   --->   Operation 77 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 78 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 81, i64 81, i64 81"   --->   Operation 78 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 79 [1/1] (0.00ns)   --->   "%specpipeline_ln48 = specpipeline void @_ssdm_op_SpecPipeline, i32 3, i32 0, i32 0, i32 0, void @empty_22" [src/conv1.cpp:48]   --->   Operation 79 'specpipeline' 'specpipeline_ln48' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 80 [1/1] (0.00ns)   --->   "%specloopname_ln46 = specloopname void @_ssdm_op_SpecLoopName, void @empty_9" [src/conv1.cpp:46]   --->   Operation 80 'specloopname' 'specloopname_ln46' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 81 [1/4] (6.43ns)   --->   "%add = fadd i32 %p_load, i32 %mul" [src/conv1.cpp:53]   --->   Operation 81 'fadd' 'add' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln46 = store i32 %add, i32 %empty" [src/conv1.cpp:46]   --->   Operation 82 'store' 'store_ln46' <Predicate = true> <Delay = 0.42>
ST_12 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln46 = br void %for.inc" [src/conv1.cpp:46]   --->   Operation 83 'br' 'br_ln46' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 3.880ns
The critical path consists of the following:
	'alloca' operation ('kc') [9]  (0.000 ns)
	'load' operation ('kc_load', src/conv1.cpp:46) on local variable 'kc' [29]  (0.000 ns)
	'icmp' operation ('icmp_ln46', src/conv1.cpp:46) [34]  (0.797 ns)
	'select' operation ('select_ln45_2', src/conv1.cpp:45) [36]  (0.391 ns)
	'add' operation of DSP[56] ('add_ln45_6', src/conv1.cpp:45) [44]  (1.696 ns)
	'mul' operation of DSP[56] ('mul_ln46', src/conv1.cpp:46) [46]  (0.996 ns)

 <State 2>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[56] ('mul_ln46', src/conv1.cpp:46) [46]  (0.996 ns)

 <State 3>: 1.410ns
The critical path consists of the following:
	'add' operation ('add_ln51', src/conv1.cpp:51) [54]  (0.765 ns)
	'add' operation of DSP[56] ('add_ln53_10', src/conv1.cpp:53) [56]  (0.645 ns)

 <State 4>: 2.962ns
The critical path consists of the following:
	'add' operation ('add_ln53_7', src/conv1.cpp:53) [38]  (0.765 ns)
	'add' operation ('add_ln53_8', src/conv1.cpp:53) [42]  (0.000 ns)
	'add' operation ('add_ln53_9', src/conv1.cpp:53) [48]  (0.960 ns)
	'getelementptr' operation ('weight_buffer_2_0_addr', src/conv1.cpp:53) [50]  (0.000 ns)
	'load' operation ('weight_buffer_2_0_load', src/conv1.cpp:53) on array 'weight_buffer_2_0' [59]  (1.237 ns)

 <State 5>: 1.237ns
The critical path consists of the following:
	'load' operation ('weight_buffer_2_0_load', src/conv1.cpp:53) on array 'weight_buffer_2_0' [59]  (1.237 ns)

 <State 6>: 7.016ns
The critical path consists of the following:
	multiplexor before operation 'fmul' with delay (0.476 ns)
'fmul' operation ('mul', src/conv1.cpp:53) [61]  (6.540 ns)

 <State 7>: 7.016ns
The critical path consists of the following:
	'fmul' operation ('mul', src/conv1.cpp:53) [61]  (7.016 ns)

 <State 8>: 7.016ns
The critical path consists of the following:
	'fmul' operation ('mul', src/conv1.cpp:53) [61]  (7.016 ns)

 <State 9>: 6.437ns
The critical path consists of the following:
	'load' operation ('p_load', src/conv1.cpp:53) on local variable 'empty' [28]  (0.000 ns)
	multiplexor before operation 'fadd' with delay (0.770 ns)
'fadd' operation ('add', src/conv1.cpp:53) [62]  (5.667 ns)

 <State 10>: 6.437ns
The critical path consists of the following:
	'fadd' operation ('add', src/conv1.cpp:53) [62]  (6.437 ns)

 <State 11>: 6.437ns
The critical path consists of the following:
	'fadd' operation ('add', src/conv1.cpp:53) [62]  (6.437 ns)

 <State 12>: 6.864ns
The critical path consists of the following:
	'fadd' operation ('add', src/conv1.cpp:53) [62]  (6.437 ns)
	'store' operation ('store_ln46', src/conv1.cpp:46) of variable 'add', src/conv1.cpp:53 on local variable 'empty' [67]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
