-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv3_Pipeline_WEIGHTI_WEIGHTK_L is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_w3_AWVALID : OUT STD_LOGIC;
    m_axi_w3_AWREADY : IN STD_LOGIC;
    m_axi_w3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_WVALID : OUT STD_LOGIC;
    m_axi_w3_WREADY : IN STD_LOGIC;
    m_axi_w3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_WLAST : OUT STD_LOGIC;
    m_axi_w3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_ARVALID : OUT STD_LOGIC;
    m_axi_w3_ARREADY : IN STD_LOGIC;
    m_axi_w3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_RVALID : IN STD_LOGIC;
    m_axi_w3_RREADY : OUT STD_LOGIC;
    m_axi_w3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_RLAST : IN STD_LOGIC;
    m_axi_w3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_w3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_BVALID : IN STD_LOGIC;
    m_axi_w3_BREADY : OUT STD_LOGIC;
    m_axi_w3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln117 : IN STD_LOGIC_VECTOR (61 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_ce0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_we0 : OUT STD_LOGIC;
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of srcnn_conv3_Pipeline_WEIGHTI_WEIGHTK_L is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv10_320 : STD_LOGIC_VECTOR (9 downto 0) := "1100100000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln117_reg_753 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln117_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal w3_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln118_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln118_reg_757 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln118_fu_584_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_reg_762 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_1_fu_592_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln118_1_reg_766 : STD_LOGIC_VECTOR (2 downto 0);
    signal w3_addr_read_reg_770 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal zext_ln117_fu_651_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal loop_index_i_fu_120 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_fu_600_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal k_fu_124 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_fu_128 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln118_2_fu_612_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal bin_fu_132 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln117_1_fu_644_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten35_fu_136 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln117_1_fu_514_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_sig_allocacmp_indvar_flatten35_load : STD_LOGIC_VECTOR (9 downto 0);
    signal empty_324_fu_680_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal exitcond4641_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln117_fu_554_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln117_fu_546_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln117_fu_566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln118_fu_578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln118_fu_572_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln118_1_fu_606_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln117_fu_638_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    bin_fu_132_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    bin_fu_132 <= ap_const_lv6_0;
                elsif ((ap_enable_reg_pp0_iter2 = ap_const_logic_1)) then 
                    bin_fu_132 <= select_ln117_1_fu_644_p3;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten35_fu_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln117_fu_508_p2 = ap_const_lv1_0))) then 
                    indvar_flatten35_fu_136 <= add_ln117_1_fu_514_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten35_fu_136 <= ap_const_lv10_0;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_fu_128_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_128 <= ap_const_lv6_0;
                elsif (((icmp_ln117_reg_753 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    indvar_flatten_fu_128 <= select_ln118_2_fu_612_p3;
                end if;
            end if; 
        end if;
    end process;

    k_fu_124_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_fu_124 <= ap_const_lv3_0;
                elsif (((icmp_ln117_reg_753 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_fu_124 <= select_ln118_1_fu_592_p3;
                end if;
            end if; 
        end if;
    end process;

    loop_index_i_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    loop_index_i_fu_120 <= ap_const_lv3_0;
                elsif (((icmp_ln117_reg_753 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    loop_index_i_fu_120 <= empty_fu_600_p2;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                icmp_ln117_reg_753 <= icmp_ln117_fu_508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_753 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln118_reg_757 <= icmp_ln118_fu_540_p2;
                select_ln118_1_reg_766 <= select_ln118_1_fu_592_p3;
                select_ln118_reg_762 <= select_ln118_fu_584_p3;
                w3_addr_read_reg_770 <= m_axi_w3_RDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln117_1_fu_514_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten35_load) + unsigned(ap_const_lv10_1));
    add_ln117_fu_638_p2 <= std_logic_vector(unsigned(bin_fu_132) + unsigned(ap_const_lv6_1));
    add_ln118_1_fu_606_p2 <= std_logic_vector(unsigned(indvar_flatten_fu_128) + unsigned(ap_const_lv6_1));
    add_ln118_fu_572_p2 <= std_logic_vector(unsigned(select_ln117_fu_546_p3) + unsigned(ap_const_lv3_1));
    and_ln117_fu_566_p2 <= (xor_ln117_fu_554_p2 and exitcond4641_fu_560_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_w3_RVALID, icmp_ln117_reg_753)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln117_reg_753 = ap_const_lv1_0) and (m_axi_w3_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_w3_RVALID, icmp_ln117_reg_753)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln117_reg_753 = ap_const_lv1_0) and (m_axi_w3_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(m_axi_w3_RVALID, icmp_ln117_reg_753)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((icmp_ln117_reg_753 = ap_const_lv1_0) and (m_axi_w3_RVALID = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln117_fu_508_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln117_fu_508_p2 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln117_reg_753, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln117_reg_753 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten35_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten35_fu_136)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten35_load <= ap_const_lv10_0;
        else 
            ap_sig_allocacmp_indvar_flatten35_load <= indvar_flatten35_fu_136;
        end if; 
    end process;

    empty_324_fu_680_p1 <= w3_addr_read_reg_770;
    empty_fu_600_p2 <= std_logic_vector(unsigned(select_ln118_fu_584_p3) + unsigned(ap_const_lv3_1));
    exitcond4641_fu_560_p2 <= "1" when (loop_index_i_fu_120 = ap_const_lv3_5) else "0";
    icmp_ln117_fu_508_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten35_load = ap_const_lv10_320) else "0";
    icmp_ln118_fu_540_p2 <= "1" when (indvar_flatten_fu_128 = ap_const_lv6_19) else "0";
    m_axi_w3_ARADDR <= ap_const_lv64_0;
    m_axi_w3_ARBURST <= ap_const_lv2_0;
    m_axi_w3_ARCACHE <= ap_const_lv4_0;
    m_axi_w3_ARID <= ap_const_lv1_0;
    m_axi_w3_ARLEN <= ap_const_lv32_0;
    m_axi_w3_ARLOCK <= ap_const_lv2_0;
    m_axi_w3_ARPROT <= ap_const_lv3_0;
    m_axi_w3_ARQOS <= ap_const_lv4_0;
    m_axi_w3_ARREGION <= ap_const_lv4_0;
    m_axi_w3_ARSIZE <= ap_const_lv3_0;
    m_axi_w3_ARUSER <= ap_const_lv1_0;
    m_axi_w3_ARVALID <= ap_const_logic_0;
    m_axi_w3_AWADDR <= ap_const_lv64_0;
    m_axi_w3_AWBURST <= ap_const_lv2_0;
    m_axi_w3_AWCACHE <= ap_const_lv4_0;
    m_axi_w3_AWID <= ap_const_lv1_0;
    m_axi_w3_AWLEN <= ap_const_lv32_0;
    m_axi_w3_AWLOCK <= ap_const_lv2_0;
    m_axi_w3_AWPROT <= ap_const_lv3_0;
    m_axi_w3_AWQOS <= ap_const_lv4_0;
    m_axi_w3_AWREGION <= ap_const_lv4_0;
    m_axi_w3_AWSIZE <= ap_const_lv3_0;
    m_axi_w3_AWUSER <= ap_const_lv1_0;
    m_axi_w3_AWVALID <= ap_const_logic_0;
    m_axi_w3_BREADY <= ap_const_logic_0;

    m_axi_w3_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln117_reg_753, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln117_reg_753 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_w3_RREADY <= ap_const_logic_1;
        else 
            m_axi_w3_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w3_WDATA <= ap_const_lv32_0;
    m_axi_w3_WID <= ap_const_lv1_0;
    m_axi_w3_WLAST <= ap_const_logic_0;
    m_axi_w3_WSTRB <= ap_const_lv4_0;
    m_axi_w3_WUSER <= ap_const_lv1_0;
    m_axi_w3_WVALID <= ap_const_logic_0;
    or_ln118_fu_578_p2 <= (icmp_ln118_fu_540_p2 or and_ln117_fu_566_p2);
    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_0) and (select_ln118_reg_762 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_0) and (select_ln118_reg_762 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_0) and (select_ln118_reg_762 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_0) and (select_ln118_reg_762 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_reg_762 = ap_const_lv3_0)) and not((select_ln118_reg_762 = ap_const_lv3_1)) and not((select_ln118_reg_762 = ap_const_lv3_2)) and not((select_ln118_reg_762 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_0_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_1) and (select_ln118_reg_762 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_1) and (select_ln118_reg_762 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_1) and (select_ln118_reg_762 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_1) and (select_ln118_reg_762 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_reg_762 = ap_const_lv3_0)) and not((select_ln118_reg_762 = ap_const_lv3_1)) and not((select_ln118_reg_762 = ap_const_lv3_2)) and not((select_ln118_reg_762 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_1_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_2) and (select_ln118_reg_762 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_2) and (select_ln118_reg_762 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_2) and (select_ln118_reg_762 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_2) and (select_ln118_reg_762 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_reg_762 = ap_const_lv3_0)) and not((select_ln118_reg_762 = ap_const_lv3_1)) and not((select_ln118_reg_762 = ap_const_lv3_2)) and not((select_ln118_reg_762 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_2_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_3) and (select_ln118_reg_762 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_3) and (select_ln118_reg_762 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_3) and (select_ln118_reg_762 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_3) and (select_ln118_reg_762 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_reg_762 = ap_const_lv3_0)) and not((select_ln118_reg_762 = ap_const_lv3_1)) and not((select_ln118_reg_762 = ap_const_lv3_2)) and not((select_ln118_reg_762 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_1_reg_766 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_3_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_1_reg_766 = ap_const_lv3_0)) and not((select_ln118_1_reg_766 = ap_const_lv3_1)) and not((select_ln118_1_reg_766 = ap_const_lv3_2)) and not((select_ln118_1_reg_766 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_reg_762 = ap_const_lv3_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_1_reg_766 = ap_const_lv3_0)) and not((select_ln118_1_reg_766 = ap_const_lv3_1)) and not((select_ln118_1_reg_766 = ap_const_lv3_2)) and not((select_ln118_1_reg_766 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_reg_762 = ap_const_lv3_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_1_reg_766 = ap_const_lv3_0)) and not((select_ln118_1_reg_766 = ap_const_lv3_1)) and not((select_ln118_1_reg_766 = ap_const_lv3_2)) and not((select_ln118_1_reg_766 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_reg_762 = ap_const_lv3_2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_1_reg_766 = ap_const_lv3_0)) and not((select_ln118_1_reg_766 = ap_const_lv3_1)) and not((select_ln118_1_reg_766 = ap_const_lv3_2)) and not((select_ln118_1_reg_766 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (select_ln118_reg_762 = ap_const_lv3_3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_address0 <= zext_ln117_fu_651_p1(5 - 1 downto 0);

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_ce0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_d0 <= empty_324_fu_680_p1;

    p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, select_ln118_reg_762, select_ln118_1_reg_766)
    begin
        if ((not((select_ln118_1_reg_766 = ap_const_lv3_0)) and not((select_ln118_1_reg_766 = ap_const_lv3_1)) and not((select_ln118_1_reg_766 = ap_const_lv3_2)) and not((select_ln118_reg_762 = ap_const_lv3_0)) and not((select_ln118_reg_762 = ap_const_lv3_1)) and not((select_ln118_reg_762 = ap_const_lv3_2)) and not((select_ln118_reg_762 = ap_const_lv3_3)) and not((select_ln118_1_reg_766 = ap_const_lv3_3)) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv3PA255_A255_fPA32_A5_A5_fPfS1_E13weight_buffer_4_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln117_1_fu_644_p3 <= 
        add_ln117_fu_638_p2 when (icmp_ln118_reg_757(0) = '1') else 
        bin_fu_132;
    select_ln117_fu_546_p3 <= 
        ap_const_lv3_0 when (icmp_ln118_fu_540_p2(0) = '1') else 
        k_fu_124;
    select_ln118_1_fu_592_p3 <= 
        add_ln118_fu_572_p2 when (and_ln117_fu_566_p2(0) = '1') else 
        select_ln117_fu_546_p3;
    select_ln118_2_fu_612_p3 <= 
        ap_const_lv6_1 when (icmp_ln118_fu_540_p2(0) = '1') else 
        add_ln118_1_fu_606_p2;
    select_ln118_fu_584_p3 <= 
        ap_const_lv3_0 when (or_ln118_fu_578_p2(0) = '1') else 
        loop_index_i_fu_120;

    w3_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_w3_RVALID, icmp_ln117_reg_753, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln117_reg_753 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            w3_blk_n_R <= m_axi_w3_RVALID;
        else 
            w3_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    xor_ln117_fu_554_p2 <= (icmp_ln118_fu_540_p2 xor ap_const_lv1_1);
    zext_ln117_fu_651_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln117_1_fu_644_p3),64));
end behav;
