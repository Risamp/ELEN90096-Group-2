-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_input_r_AWVALID : OUT STD_LOGIC;
    m_axi_input_r_AWREADY : IN STD_LOGIC;
    m_axi_input_r_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_input_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_input_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_WVALID : OUT STD_LOGIC;
    m_axi_input_r_WREADY : IN STD_LOGIC;
    m_axi_input_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_input_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_r_WLAST : OUT STD_LOGIC;
    m_axi_input_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_ARVALID : OUT STD_LOGIC;
    m_axi_input_r_ARREADY : IN STD_LOGIC;
    m_axi_input_r_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_input_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_input_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_input_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_input_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_RVALID : IN STD_LOGIC;
    m_axi_input_r_RREADY : OUT STD_LOGIC;
    m_axi_input_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_input_r_RLAST : IN STD_LOGIC;
    m_axi_input_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_input_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_r_BVALID : IN STD_LOGIC;
    m_axi_input_r_BREADY : OUT STD_LOGIC;
    m_axi_input_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_input_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_input_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_params_AWVALID : OUT STD_LOGIC;
    m_axi_params_AWREADY : IN STD_LOGIC;
    m_axi_params_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_params_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_params_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_params_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_params_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_params_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_params_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_params_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_params_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_params_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_WVALID : OUT STD_LOGIC;
    m_axi_params_WREADY : IN STD_LOGIC;
    m_axi_params_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_params_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_params_WLAST : OUT STD_LOGIC;
    m_axi_params_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_ARVALID : OUT STD_LOGIC;
    m_axi_params_ARREADY : IN STD_LOGIC;
    m_axi_params_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_params_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_params_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_params_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_params_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_params_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_params_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_params_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_params_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_params_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_RVALID : IN STD_LOGIC;
    m_axi_params_RREADY : OUT STD_LOGIC;
    m_axi_params_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_params_RLAST : IN STD_LOGIC;
    m_axi_params_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_params_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_params_BVALID : IN STD_LOGIC;
    m_axi_params_BREADY : OUT STD_LOGIC;
    m_axi_params_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_params_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_params_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv1_weights : IN STD_LOGIC_VECTOR (63 downto 0);
    conv1_biases_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    conv1_biases_ce0 : OUT STD_LOGIC;
    conv1_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_r_AWVALID : OUT STD_LOGIC;
    m_axi_output_r_AWREADY : IN STD_LOGIC;
    m_axi_output_r_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_WVALID : OUT STD_LOGIC;
    m_axi_output_r_WREADY : IN STD_LOGIC;
    m_axi_output_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_r_WLAST : OUT STD_LOGIC;
    m_axi_output_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_ARVALID : OUT STD_LOGIC;
    m_axi_output_r_ARREADY : IN STD_LOGIC;
    m_axi_output_r_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_output_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_output_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_output_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_RVALID : IN STD_LOGIC;
    m_axi_output_r_RREADY : OUT STD_LOGIC;
    m_axi_output_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_output_r_RLAST : IN STD_LOGIC;
    m_axi_output_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_output_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_r_BVALID : IN STD_LOGIC;
    m_axi_output_r_BREADY : OUT STD_LOGIC;
    m_axi_output_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_output_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_output_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_471_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_471_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_471_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_471_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_471_p_ce : OUT STD_LOGIC;
    grp_fu_475_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_475_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_475_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_475_p_ce : OUT STD_LOGIC;
    grp_fu_479_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_479_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_479_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_479_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_479_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (44 downto 0) := "000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (44 downto 0) := "000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (44 downto 0) := "000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (44 downto 0) := "000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (44 downto 0) := "000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (44 downto 0) := "000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (44 downto 0) := "000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (44 downto 0) := "000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (44 downto 0) := "000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (44 downto 0) := "000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (44 downto 0) := "001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (44 downto 0) := "010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (44 downto 0) := "100000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_288 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010001000";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv8_88 : STD_LOGIC_VECTOR (7 downto 0) := "10001000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv16_144 : STD_LOGIC_VECTOR (15 downto 0) := "0000000101000100";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv8_9 : STD_LOGIC_VECTOR (7 downto 0) := "00001001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv9_FF : STD_LOGIC_VECTOR (8 downto 0) := "011111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv15_7788 : STD_LOGIC_VECTOR (14 downto 0) := "111011110001000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv31_8912 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000001000100100010010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv25_1011 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000010001";
    constant ap_const_lv12_FF : STD_LOGIC_VECTOR (11 downto 0) := "000011111111";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv15_EF1 : STD_LOGIC_VECTOR (14 downto 0) := "000111011110001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (44 downto 0) := "000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal params_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal params_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal reg_678 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal reg_684 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal add_ln24_2_fu_714_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln24_2_reg_1366 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln24_fu_738_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln24_reg_1371 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln24_fu_708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln24_1_fu_747_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln24_1_reg_1378 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln24_fu_755_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln24_reg_1383 : STD_LOGIC_VECTOR (5 downto 0);
    signal params_addr42_reg_1388 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln107_fu_808_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln107_reg_1397 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal select_ln107_fu_814_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln107_reg_1402 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln107_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_1407 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln113_1_fu_853_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln113_1_reg_1411 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln109_fu_865_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln109_reg_1420 : STD_LOGIC_VECTOR (3 downto 0);
    signal params_addr42_read_reg_1425 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_40_reg_1430 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_41_reg_1435 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_42_reg_1440 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_we_43_reg_1445 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln113_1_fu_916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln113_1_reg_1453 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln110_fu_920_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal add_ln31_2_fu_932_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln31_2_reg_1469 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal select_ln31_fu_950_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_reg_1474 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln31_fu_926_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln31_3_fu_958_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln31_3_reg_1483 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln42_fu_992_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln42_reg_1488 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln31_mid2_reg_1496 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_131_fu_1014_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_131_reg_1504 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_s_fu_1020_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_s_reg_1509 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln35_fu_1028_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln35_reg_1514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal icmp_ln35_fu_1032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln35_reg_1522 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_22_reg_1526 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_23_reg_1531 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln35_fu_1067_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln35_reg_1536 : STD_LOGIC_VECTOR (7 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_26_reg_1541 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_27_reg_1546 : STD_LOGIC_VECTOR (13 downto 0);
    signal or_ln35_1_fu_1106_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln35_1_reg_1551 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln35_2_fu_1116_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln35_2_reg_1556 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal add_ln35_fu_1127_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln35_reg_1564 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln35_1_fu_1121_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln34_fu_1133_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_133_fu_1148_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_133_reg_1577 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal next_mul_fu_1154_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal next_mul_reg_1582 : STD_LOGIC_VECTOR (30 downto 0);
    signal exitcond7816_fu_1142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_135_fu_1198_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_136_fu_1226_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_136_reg_1592 : STD_LOGIC_VECTOR (6 downto 0);
    signal idx_urem_fu_1295_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal grp_load_input_buffer_c1_fu_539_ap_start : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_ap_done : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_ap_idle : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_ap_ready : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWVALID : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_WVALID : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_WLAST : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARVALID : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_RREADY : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_m_axi_input_r_BREADY : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 : STD_LOGIC;
    signal grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_WVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_WLAST : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_RREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_m_axi_output_r_BREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_biases_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_biases_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_ap_start : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_ap_done : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_ap_idle : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_ap_ready : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_p_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_p_out_ap_vld : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_ap_start : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_ap_done : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_ap_idle : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_ap_ready : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_add52_119_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_add52_119_out_ap_vld : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_ap_start : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_ap_done : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_ap_idle : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_ap_ready : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_add52_222_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_add52_222_out_ap_vld : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_ap_start : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_ap_done : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_ap_idle : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_ap_ready : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_add52_325_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_add52_325_out_ap_vld : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_ce : STD_LOGIC;
    signal bout_reg_426 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln109_fu_859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal kh_reg_437 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln110_fu_910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal kw_reg_448 : STD_LOGIC_VECTOR (7 downto 0);
    signal indvar_flatten37_reg_460 : STD_LOGIC_VECTOR (6 downto 0);
    signal o_reg_471 : STD_LOGIC_VECTOR (3 downto 0);
    signal r_reg_482 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_reg_493 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal empty_132_reg_505 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal phi_mul_reg_516 : STD_LOGIC_VECTOR (30 downto 0);
    signal phi_urem_reg_527 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_load_input_buffer_c1_fu_539_ap_start_reg : STD_LOGIC := '0';
    signal grp_export_output_buffer_c1_fu_555_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv1_Pipeline_KR_KC_fu_570_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_conv1_Pipeline_KR_KC1_fu_597_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv1_Pipeline_KR_KC2_fu_624_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal grp_conv1_Pipeline_KR_KC3_fu_651_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal zext_ln113_2_fu_876_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln113_3_fu_902_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast371_fu_1057_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_46_cast_fu_1096_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_42_cast_fu_1277_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln24_fu_788_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_fu_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal h_1_fu_1238_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_fu_234 : STD_LOGIC_VECTOR (6 downto 0);
    signal indvar_flatten47_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal bitcast_ln113_fu_884_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_138_fu_1256_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln24_fu_726_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln24_fu_763_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln24_fu_763_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln24_fu_763_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln24_1_fu_769_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln24_1_fu_773_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln107_mid2_v_fu_778_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln107_fu_798_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln113_fu_832_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln113_fu_836_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_shl_fu_845_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln113_1_fu_841_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln113_2_fu_871_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal kw_1_fu_891_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln113_3_fu_897_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln34_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln31_fu_938_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_129_fu_970_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_33_cast_fu_974_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_3_cast_fu_966_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln31_fu_988_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_130_fu_982_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln31_cast_fu_1010_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal lshr_ln_fu_1038_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln_cast_fu_1048_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal empty_fu_1052_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln35_1_fu_1073_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln38_fu_1083_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_14_fu_1089_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_fu_1160_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_16_fu_1174_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_38_cast_fu_1184_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_36_cast_fu_1170_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul56_fu_1206_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul56_fu_1206_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul56_fu_1206_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_17_fu_1212_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_134_fu_1192_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_39_cast_fu_1222_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_1232_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_1232_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_1260_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_13_fu_1270_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal next_urem_fu_1283_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal empty_139_fu_1289_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1232_ap_start : STD_LOGIC;
    signal grp_fu_1232_ap_done : STD_LOGIC;
    signal grp_fu_1605_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1605_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1605_ce : STD_LOGIC;
    signal grp_fu_1609_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1609_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1609_ce : STD_LOGIC;
    signal grp_fu_1613_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (44 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal mul56_fu_1206_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal mul_ln24_fu_763_p00 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_load_input_buffer_c1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_input_r_AWVALID : OUT STD_LOGIC;
        m_axi_input_r_AWREADY : IN STD_LOGIC;
        m_axi_input_r_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_input_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_WVALID : OUT STD_LOGIC;
        m_axi_input_r_WREADY : IN STD_LOGIC;
        m_axi_input_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_WLAST : OUT STD_LOGIC;
        m_axi_input_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_ARVALID : OUT STD_LOGIC;
        m_axi_input_r_ARREADY : IN STD_LOGIC;
        m_axi_input_r_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_input_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_input_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_input_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_RVALID : IN STD_LOGIC;
        m_axi_input_r_RREADY : OUT STD_LOGIC;
        m_axi_input_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_input_r_RLAST : IN STD_LOGIC;
        m_axi_input_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_input_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_BVALID : IN STD_LOGIC;
        m_axi_input_r_BREADY : OUT STD_LOGIC;
        m_axi_input_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_input_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_input_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        h : IN STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_export_output_buffer_c1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_output_r_AWVALID : OUT STD_LOGIC;
        m_axi_output_r_AWREADY : IN STD_LOGIC;
        m_axi_output_r_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_output_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_output_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_WVALID : OUT STD_LOGIC;
        m_axi_output_r_WREADY : IN STD_LOGIC;
        m_axi_output_r_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_output_r_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_r_WLAST : OUT STD_LOGIC;
        m_axi_output_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_ARVALID : OUT STD_LOGIC;
        m_axi_output_r_ARREADY : IN STD_LOGIC;
        m_axi_output_r_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_output_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_output_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_output_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_output_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_RVALID : IN STD_LOGIC;
        m_axi_output_r_RREADY : OUT STD_LOGIC;
        m_axi_output_r_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_output_r_RLAST : IN STD_LOGIC;
        m_axi_output_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_output_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_r_BVALID : IN STD_LOGIC;
        m_axi_output_r_BREADY : OUT STD_LOGIC;
        m_axi_output_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_output_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_output_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        conv1_biases_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv1_biases_ce0 : OUT STD_LOGIC;
        conv1_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r : IN STD_LOGIC_VECTOR (5 downto 0);
        h : IN STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1605_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_ce : OUT STD_LOGIC;
        grp_fu_1613_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1613_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1613_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1613_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1613_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv1_Pipeline_KR_KC IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_20 : IN STD_LOGIC_VECTOR (31 downto 0);
        select_ln42 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln34_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        trunc_ln31_mid2 : IN STD_LOGIC_VECTOR (1 downto 0);
        c : IN STD_LOGIC_VECTOR (7 downto 0);
        p_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_ap_vld : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1605_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_ce : OUT STD_LOGIC;
        grp_fu_1609_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv1_Pipeline_KR_KC1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_21 : IN STD_LOGIC_VECTOR (31 downto 0);
        select_ln42 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln34_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        trunc_ln31_mid2 : IN STD_LOGIC_VECTOR (1 downto 0);
        or_ln35_cast : IN STD_LOGIC_VECTOR (7 downto 0);
        add52_119_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add52_119_out_ap_vld : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1605_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_ce : OUT STD_LOGIC;
        grp_fu_1609_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv1_Pipeline_KR_KC2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_26 : IN STD_LOGIC_VECTOR (31 downto 0);
        select_ln42 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln34_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        trunc_ln31_mid2 : IN STD_LOGIC_VECTOR (1 downto 0);
        zext_ln38_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        add52_222_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add52_222_out_ap_vld : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1605_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_ce : OUT STD_LOGIC;
        grp_fu_1609_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv1_Pipeline_KR_KC3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_27 : IN STD_LOGIC_VECTOR (31 downto 0);
        select_ln42 : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln34_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        trunc_ln31_mid2 : IN STD_LOGIC_VECTOR (1 downto 0);
        zext_ln35_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        add52_325_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add52_325_out_ap_vld : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1605_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1605_p_ce : OUT STD_LOGIC;
        grp_fu_1609_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1609_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_mul_7ns_10ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component srcnn_mul_12ns_14ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (13 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component srcnn_urem_12ns_9ns_12_16_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 162,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 162,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 162,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_we_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 162,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 15360,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1,
        d1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1518,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0,
        d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        address1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1,
        d1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1518,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0,
        d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1518,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0,
        d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1518,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0,
        d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        address1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1,
        d1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 15360,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1,
        d1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1);

    grp_load_input_buffer_c1_fu_539 : component srcnn_load_input_buffer_c1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_input_buffer_c1_fu_539_ap_start,
        ap_done => grp_load_input_buffer_c1_fu_539_ap_done,
        ap_idle => grp_load_input_buffer_c1_fu_539_ap_idle,
        ap_ready => grp_load_input_buffer_c1_fu_539_ap_ready,
        m_axi_input_r_AWVALID => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWVALID,
        m_axi_input_r_AWREADY => ap_const_logic_0,
        m_axi_input_r_AWADDR => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWADDR,
        m_axi_input_r_AWID => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWID,
        m_axi_input_r_AWLEN => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWLEN,
        m_axi_input_r_AWSIZE => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWSIZE,
        m_axi_input_r_AWBURST => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWBURST,
        m_axi_input_r_AWLOCK => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWLOCK,
        m_axi_input_r_AWCACHE => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWCACHE,
        m_axi_input_r_AWPROT => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWPROT,
        m_axi_input_r_AWQOS => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWQOS,
        m_axi_input_r_AWREGION => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWREGION,
        m_axi_input_r_AWUSER => grp_load_input_buffer_c1_fu_539_m_axi_input_r_AWUSER,
        m_axi_input_r_WVALID => grp_load_input_buffer_c1_fu_539_m_axi_input_r_WVALID,
        m_axi_input_r_WREADY => ap_const_logic_0,
        m_axi_input_r_WDATA => grp_load_input_buffer_c1_fu_539_m_axi_input_r_WDATA,
        m_axi_input_r_WSTRB => grp_load_input_buffer_c1_fu_539_m_axi_input_r_WSTRB,
        m_axi_input_r_WLAST => grp_load_input_buffer_c1_fu_539_m_axi_input_r_WLAST,
        m_axi_input_r_WID => grp_load_input_buffer_c1_fu_539_m_axi_input_r_WID,
        m_axi_input_r_WUSER => grp_load_input_buffer_c1_fu_539_m_axi_input_r_WUSER,
        m_axi_input_r_ARVALID => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARVALID,
        m_axi_input_r_ARREADY => m_axi_input_r_ARREADY,
        m_axi_input_r_ARADDR => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARADDR,
        m_axi_input_r_ARID => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARID,
        m_axi_input_r_ARLEN => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARLEN,
        m_axi_input_r_ARSIZE => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARSIZE,
        m_axi_input_r_ARBURST => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARBURST,
        m_axi_input_r_ARLOCK => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARLOCK,
        m_axi_input_r_ARCACHE => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARCACHE,
        m_axi_input_r_ARPROT => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARPROT,
        m_axi_input_r_ARQOS => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARQOS,
        m_axi_input_r_ARREGION => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARREGION,
        m_axi_input_r_ARUSER => grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARUSER,
        m_axi_input_r_RVALID => m_axi_input_r_RVALID,
        m_axi_input_r_RREADY => grp_load_input_buffer_c1_fu_539_m_axi_input_r_RREADY,
        m_axi_input_r_RDATA => m_axi_input_r_RDATA,
        m_axi_input_r_RLAST => m_axi_input_r_RLAST,
        m_axi_input_r_RID => m_axi_input_r_RID,
        m_axi_input_r_RFIFONUM => m_axi_input_r_RFIFONUM,
        m_axi_input_r_RUSER => m_axi_input_r_RUSER,
        m_axi_input_r_RRESP => m_axi_input_r_RRESP,
        m_axi_input_r_BVALID => ap_const_logic_0,
        m_axi_input_r_BREADY => grp_load_input_buffer_c1_fu_539_m_axi_input_r_BREADY,
        m_axi_input_r_BRESP => ap_const_lv2_0,
        m_axi_input_r_BID => ap_const_lv1_0,
        m_axi_input_r_BUSER => ap_const_lv1_0,
        input_ftmap => input_ftmap,
        h => select_ln24_reg_1371,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1 => grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_d1);

    grp_export_output_buffer_c1_fu_555 : component srcnn_export_output_buffer_c1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_fu_555_ap_start,
        ap_done => grp_export_output_buffer_c1_fu_555_ap_done,
        ap_idle => grp_export_output_buffer_c1_fu_555_ap_idle,
        ap_ready => grp_export_output_buffer_c1_fu_555_ap_ready,
        m_axi_output_r_AWVALID => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWVALID,
        m_axi_output_r_AWREADY => m_axi_output_r_AWREADY,
        m_axi_output_r_AWADDR => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWADDR,
        m_axi_output_r_AWID => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWID,
        m_axi_output_r_AWLEN => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWLEN,
        m_axi_output_r_AWSIZE => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWSIZE,
        m_axi_output_r_AWBURST => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWBURST,
        m_axi_output_r_AWLOCK => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWLOCK,
        m_axi_output_r_AWCACHE => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWCACHE,
        m_axi_output_r_AWPROT => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWPROT,
        m_axi_output_r_AWQOS => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWQOS,
        m_axi_output_r_AWREGION => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWREGION,
        m_axi_output_r_AWUSER => grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWUSER,
        m_axi_output_r_WVALID => grp_export_output_buffer_c1_fu_555_m_axi_output_r_WVALID,
        m_axi_output_r_WREADY => m_axi_output_r_WREADY,
        m_axi_output_r_WDATA => grp_export_output_buffer_c1_fu_555_m_axi_output_r_WDATA,
        m_axi_output_r_WSTRB => grp_export_output_buffer_c1_fu_555_m_axi_output_r_WSTRB,
        m_axi_output_r_WLAST => grp_export_output_buffer_c1_fu_555_m_axi_output_r_WLAST,
        m_axi_output_r_WID => grp_export_output_buffer_c1_fu_555_m_axi_output_r_WID,
        m_axi_output_r_WUSER => grp_export_output_buffer_c1_fu_555_m_axi_output_r_WUSER,
        m_axi_output_r_ARVALID => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARVALID,
        m_axi_output_r_ARREADY => ap_const_logic_0,
        m_axi_output_r_ARADDR => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARADDR,
        m_axi_output_r_ARID => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARID,
        m_axi_output_r_ARLEN => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARLEN,
        m_axi_output_r_ARSIZE => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARSIZE,
        m_axi_output_r_ARBURST => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARBURST,
        m_axi_output_r_ARLOCK => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARLOCK,
        m_axi_output_r_ARCACHE => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARCACHE,
        m_axi_output_r_ARPROT => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARPROT,
        m_axi_output_r_ARQOS => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARQOS,
        m_axi_output_r_ARREGION => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARREGION,
        m_axi_output_r_ARUSER => grp_export_output_buffer_c1_fu_555_m_axi_output_r_ARUSER,
        m_axi_output_r_RVALID => ap_const_logic_0,
        m_axi_output_r_RREADY => grp_export_output_buffer_c1_fu_555_m_axi_output_r_RREADY,
        m_axi_output_r_RDATA => ap_const_lv32_0,
        m_axi_output_r_RLAST => ap_const_logic_0,
        m_axi_output_r_RID => ap_const_lv1_0,
        m_axi_output_r_RFIFONUM => ap_const_lv9_0,
        m_axi_output_r_RUSER => ap_const_lv1_0,
        m_axi_output_r_RRESP => ap_const_lv2_0,
        m_axi_output_r_BVALID => m_axi_output_r_BVALID,
        m_axi_output_r_BREADY => grp_export_output_buffer_c1_fu_555_m_axi_output_r_BREADY,
        m_axi_output_r_BRESP => m_axi_output_r_BRESP,
        m_axi_output_r_BID => m_axi_output_r_BID,
        m_axi_output_r_BUSER => m_axi_output_r_BUSER,
        output_ftmap => output_ftmap,
        conv1_biases_address0 => grp_export_output_buffer_c1_fu_555_conv1_biases_address0,
        conv1_biases_ce0 => grp_export_output_buffer_c1_fu_555_conv1_biases_ce0,
        conv1_biases_q0 => conv1_biases_q0,
        out_r => trunc_ln24_reg_1383,
        h => select_ln24_reg_1371,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d1 => grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1,
        grp_fu_1605_p_din0 => grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din0,
        grp_fu_1605_p_din1 => grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din1,
        grp_fu_1605_p_opcode => grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_opcode,
        grp_fu_1605_p_dout0 => grp_fu_471_p_dout0,
        grp_fu_1605_p_ce => grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_ce,
        grp_fu_1613_p_din0 => grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_din0,
        grp_fu_1613_p_din1 => grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_din1,
        grp_fu_1613_p_opcode => grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_opcode,
        grp_fu_1613_p_dout0 => grp_fu_479_p_dout0,
        grp_fu_1613_p_ce => grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_ce);

    grp_conv1_Pipeline_KR_KC_fu_570 : component srcnn_conv1_Pipeline_KR_KC
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_Pipeline_KR_KC_fu_570_ap_start,
        ap_done => grp_conv1_Pipeline_KR_KC_fu_570_ap_done,
        ap_idle => grp_conv1_Pipeline_KR_KC_fu_570_ap_idle,
        ap_ready => grp_conv1_Pipeline_KR_KC_fu_570_ap_ready,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_20 => reg_678,
        select_ln42 => select_ln42_reg_1488,
        zext_ln34_1 => select_ln31_reg_1474,
        trunc_ln31_mid2 => trunc_ln31_mid2_reg_1496,
        c => trunc_ln35_reg_1514,
        p_out => grp_conv1_Pipeline_KR_KC_fu_570_p_out,
        p_out_ap_vld => grp_conv1_Pipeline_KR_KC_fu_570_p_out_ap_vld,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 => grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        grp_fu_1605_p_din0 => grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din0,
        grp_fu_1605_p_din1 => grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din1,
        grp_fu_1605_p_opcode => grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_opcode,
        grp_fu_1605_p_dout0 => grp_fu_471_p_dout0,
        grp_fu_1605_p_ce => grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_ce,
        grp_fu_1609_p_din0 => grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din0,
        grp_fu_1609_p_din1 => grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din1,
        grp_fu_1609_p_dout0 => grp_fu_475_p_dout0,
        grp_fu_1609_p_ce => grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_ce);

    grp_conv1_Pipeline_KR_KC1_fu_597 : component srcnn_conv1_Pipeline_KR_KC1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_Pipeline_KR_KC1_fu_597_ap_start,
        ap_done => grp_conv1_Pipeline_KR_KC1_fu_597_ap_done,
        ap_idle => grp_conv1_Pipeline_KR_KC1_fu_597_ap_idle,
        ap_ready => grp_conv1_Pipeline_KR_KC1_fu_597_ap_ready,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_21 => reg_684,
        select_ln42 => select_ln42_reg_1488,
        zext_ln34_1 => select_ln31_reg_1474,
        trunc_ln31_mid2 => trunc_ln31_mid2_reg_1496,
        or_ln35_cast => or_ln35_reg_1536,
        add52_119_out => grp_conv1_Pipeline_KR_KC1_fu_597_add52_119_out,
        add52_119_out_ap_vld => grp_conv1_Pipeline_KR_KC1_fu_597_add52_119_out_ap_vld,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 => grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        grp_fu_1605_p_din0 => grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din0,
        grp_fu_1605_p_din1 => grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din1,
        grp_fu_1605_p_opcode => grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_opcode,
        grp_fu_1605_p_dout0 => grp_fu_471_p_dout0,
        grp_fu_1605_p_ce => grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_ce,
        grp_fu_1609_p_din0 => grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din0,
        grp_fu_1609_p_din1 => grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din1,
        grp_fu_1609_p_dout0 => grp_fu_475_p_dout0,
        grp_fu_1609_p_ce => grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_ce);

    grp_conv1_Pipeline_KR_KC2_fu_624 : component srcnn_conv1_Pipeline_KR_KC2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_Pipeline_KR_KC2_fu_624_ap_start,
        ap_done => grp_conv1_Pipeline_KR_KC2_fu_624_ap_done,
        ap_idle => grp_conv1_Pipeline_KR_KC2_fu_624_ap_idle,
        ap_ready => grp_conv1_Pipeline_KR_KC2_fu_624_ap_ready,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_26 => reg_678,
        select_ln42 => select_ln42_reg_1488,
        zext_ln34_1 => select_ln31_reg_1474,
        trunc_ln31_mid2 => trunc_ln31_mid2_reg_1496,
        zext_ln38_2 => or_ln35_1_reg_1551,
        add52_222_out => grp_conv1_Pipeline_KR_KC2_fu_624_add52_222_out,
        add52_222_out_ap_vld => grp_conv1_Pipeline_KR_KC2_fu_624_add52_222_out_ap_vld,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 => grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        grp_fu_1605_p_din0 => grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din0,
        grp_fu_1605_p_din1 => grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din1,
        grp_fu_1605_p_opcode => grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_opcode,
        grp_fu_1605_p_dout0 => grp_fu_471_p_dout0,
        grp_fu_1605_p_ce => grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_ce,
        grp_fu_1609_p_din0 => grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din0,
        grp_fu_1609_p_din1 => grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din1,
        grp_fu_1609_p_dout0 => grp_fu_475_p_dout0,
        grp_fu_1609_p_ce => grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_ce);

    grp_conv1_Pipeline_KR_KC3_fu_651 : component srcnn_conv1_Pipeline_KR_KC3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_Pipeline_KR_KC3_fu_651_ap_start,
        ap_done => grp_conv1_Pipeline_KR_KC3_fu_651_ap_done,
        ap_idle => grp_conv1_Pipeline_KR_KC3_fu_651_ap_idle,
        ap_ready => grp_conv1_Pipeline_KR_KC3_fu_651_ap_ready,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_27 => reg_684,
        select_ln42 => select_ln42_reg_1488,
        zext_ln34_1 => select_ln31_reg_1474,
        trunc_ln31_mid2 => trunc_ln31_mid2_reg_1496,
        zext_ln35_1 => or_ln35_2_reg_1556,
        add52_325_out => grp_conv1_Pipeline_KR_KC3_fu_651_add52_325_out,
        add52_325_out_ap_vld => grp_conv1_Pipeline_KR_KC3_fu_651_add52_325_out_ap_vld,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_we_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 => grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        grp_fu_1605_p_din0 => grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din0,
        grp_fu_1605_p_din1 => grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din1,
        grp_fu_1605_p_opcode => grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_opcode,
        grp_fu_1605_p_dout0 => grp_fu_471_p_dout0,
        grp_fu_1605_p_ce => grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_ce,
        grp_fu_1609_p_din0 => grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din0,
        grp_fu_1609_p_din1 => grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din1,
        grp_fu_1609_p_dout0 => grp_fu_475_p_dout0,
        grp_fu_1609_p_ce => grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_ce);

    mul_7ns_10ns_16_1_1_U127 : component srcnn_mul_7ns_10ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        dout_WIDTH => 16)
    port map (
        din0 => mul_ln24_fu_763_p0,
        din1 => mul_ln24_fu_763_p1,
        dout => mul_ln24_fu_763_p2);

    mul_12ns_14ns_25_1_1_U128 : component srcnn_mul_12ns_14ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 14,
        dout_WIDTH => 25)
    port map (
        din0 => mul56_fu_1206_p0,
        din1 => mul56_fu_1206_p1,
        dout => mul56_fu_1206_p2);

    urem_12ns_9ns_12_16_seq_1_U129 : component srcnn_urem_12ns_9ns_12_16_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        start => grp_fu_1232_ap_start,
        done => grp_fu_1232_ap_done,
        din0 => empty_135_fu_1198_p1,
        din1 => grp_fu_1232_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1232_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv1_Pipeline_KR_KC1_fu_597_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv1_Pipeline_KR_KC1_fu_597_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_conv1_Pipeline_KR_KC1_fu_597_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv1_Pipeline_KR_KC1_fu_597_ap_ready = ap_const_logic_1)) then 
                    grp_conv1_Pipeline_KR_KC1_fu_597_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv1_Pipeline_KR_KC2_fu_624_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv1_Pipeline_KR_KC2_fu_624_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    grp_conv1_Pipeline_KR_KC2_fu_624_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv1_Pipeline_KR_KC2_fu_624_ap_ready = ap_const_logic_1)) then 
                    grp_conv1_Pipeline_KR_KC2_fu_624_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv1_Pipeline_KR_KC3_fu_651_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv1_Pipeline_KR_KC3_fu_651_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    grp_conv1_Pipeline_KR_KC3_fu_651_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv1_Pipeline_KR_KC3_fu_651_ap_ready = ap_const_logic_1)) then 
                    grp_conv1_Pipeline_KR_KC3_fu_651_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv1_Pipeline_KR_KC_fu_570_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv1_Pipeline_KR_KC_fu_570_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_conv1_Pipeline_KR_KC_fu_570_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv1_Pipeline_KR_KC_fu_570_ap_ready = ap_const_logic_1)) then 
                    grp_conv1_Pipeline_KR_KC_fu_570_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_fu_555_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_fu_555_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln31_fu_926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                    grp_export_output_buffer_c1_fu_555_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_fu_555_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_fu_555_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_input_buffer_c1_fu_539_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_input_buffer_c1_fu_539_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln24_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_load_input_buffer_c1_fu_539_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_input_buffer_c1_fu_539_ap_ready = ap_const_logic_1)) then 
                    grp_load_input_buffer_c1_fu_539_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bout_reg_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                bout_reg_426 <= ap_const_lv4_0;
            elsif (((icmp_ln109_fu_859_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                bout_reg_426 <= add_ln107_reg_1397;
            end if; 
        end if;
    end process;

    c_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_926_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                c_reg_493 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                c_reg_493 <= add_ln35_reg_1564;
            end if; 
        end if;
    end process;

    empty_132_reg_505_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                empty_132_reg_505 <= empty_133_reg_1577;
            elsif (((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                empty_132_reg_505 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    h_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_fu_230 <= ap_const_lv8_0;
            elsif (((exitcond7816_fu_1142_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                h_fu_230 <= h_1_fu_1238_p2;
            end if; 
        end if;
    end process;

    indvar_flatten37_reg_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_fu_802_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                indvar_flatten37_reg_460 <= ap_const_lv7_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln35_1_fu_1121_p2 = ap_const_lv1_1) or (icmp_ln35_reg_1522 = ap_const_lv1_0)))) then 
                indvar_flatten37_reg_460 <= add_ln31_2_reg_1469;
            end if; 
        end if;
    end process;

    indvar_flatten47_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten47_fu_238 <= ap_const_lv8_0;
            elsif (((exitcond7816_fu_1142_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                indvar_flatten47_fu_238 <= add_ln24_2_reg_1366;
            end if; 
        end if;
    end process;

    kh_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_fu_802_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                kh_reg_437 <= ap_const_lv4_0;
            elsif (((icmp_ln110_fu_910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                kh_reg_437 <= add_ln109_reg_1420;
            end if; 
        end if;
    end process;

    kw_reg_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                kw_reg_448 <= add_ln110_fu_920_p2;
            elsif (((icmp_ln109_fu_859_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                kw_reg_448 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    o_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_fu_802_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                o_reg_471 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln35_1_fu_1121_p2 = ap_const_lv1_1) or (icmp_ln35_reg_1522 = ap_const_lv1_0)))) then 
                o_reg_471 <= select_ln31_3_reg_1483;
            end if; 
        end if;
    end process;

    out_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                out_fu_234 <= ap_const_lv7_0;
            elsif (((exitcond7816_fu_1142_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                out_fu_234 <= select_ln24_1_reg_1378;
            end if; 
        end if;
    end process;

    phi_mul_reg_516_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                phi_mul_reg_516 <= next_mul_reg_1582;
            elsif (((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                phi_mul_reg_516 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    phi_urem_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                phi_urem_reg_527 <= idx_urem_fu_1295_p3;
            elsif (((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                phi_urem_reg_527 <= ap_const_lv15_0;
            end if; 
        end if;
    end process;

    r_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_fu_802_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                r_reg_482 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln35_1_fu_1121_p2 = ap_const_lv1_1) or (icmp_ln35_reg_1522 = ap_const_lv1_0)))) then 
                r_reg_482 <= add_ln34_fu_1133_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln107_reg_1397 <= add_ln107_fu_808_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln109_reg_1420 <= add_ln109_fu_865_p2;
                add_ln113_1_reg_1411 <= add_ln113_1_fu_853_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln24_2_reg_1366 <= add_ln24_2_fu_714_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                add_ln31_2_reg_1469 <= add_ln31_2_fu_932_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_1_fu_1121_p2 = ap_const_lv1_0) and (icmp_ln35_reg_1522 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                add_ln35_reg_1564 <= add_ln35_fu_1127_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                bitcast_ln113_1_reg_1453 <= bitcast_ln113_1_fu_916_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_fu_1032_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_22_reg_1526 <= p_cast371_fu_1057_p1(14 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_23_reg_1531 <= p_cast371_fu_1057_p1(14 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_26_reg_1541(13 downto 1) <= tmp_46_cast_fu_1096_p1(14 - 1 downto 0)(13 downto 1);
                    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_27_reg_1546(13 downto 1) <= tmp_46_cast_fu_1096_p1(14 - 1 downto 0)(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                conv1_float_255_255_float_1_9_9_float_float_255_255_we_40_reg_1430 <= zext_ln113_3_fu_902_p1(8 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_we_41_reg_1435 <= zext_ln113_3_fu_902_p1(8 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_we_42_reg_1440 <= zext_ln113_3_fu_902_p1(8 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_we_43_reg_1445 <= zext_ln113_3_fu_902_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_926_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                empty_131_reg_1504 <= empty_131_fu_1014_p2;
                select_ln31_3_reg_1483 <= select_ln31_3_fu_958_p3;
                select_ln31_reg_1474 <= select_ln31_fu_950_p3;
                    select_ln42_reg_1488(0) <= select_ln42_fu_992_p3(0);    select_ln42_reg_1488(3) <= select_ln42_fu_992_p3(3);
                    tmp_s_reg_1509(13 downto 7) <= tmp_s_fu_1020_p3(13 downto 7);
                trunc_ln31_mid2_reg_1496 <= select_ln31_3_fu_958_p3(2 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                empty_133_reg_1577 <= empty_133_fu_1148_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond7816_fu_1142_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                empty_136_reg_1592 <= empty_136_fu_1226_p2;
                next_mul_reg_1582 <= next_mul_fu_1154_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                icmp_ln35_reg_1522 <= icmp_ln35_fu_1032_p2;
                trunc_ln35_reg_1514 <= trunc_ln35_fu_1028_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                    or_ln35_1_reg_1551(0) <= or_ln35_1_fu_1106_p2(0);    or_ln35_1_reg_1551(7 downto 2) <= or_ln35_1_fu_1106_p2(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_reg_1522 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    or_ln35_2_reg_1556(7 downto 2) <= or_ln35_2_fu_1116_p2(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                    or_ln35_reg_1536(7 downto 1) <= or_ln35_fu_1067_p2(7 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                params_addr42_read_reg_1425 <= m_axi_params_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln24_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                params_addr42_reg_1388 <= sext_ln24_fu_788_p1;
                select_ln24_1_reg_1378 <= select_ln24_1_fu_747_p3;
                select_ln24_reg_1371 <= select_ln24_fu_738_p3;
                trunc_ln24_reg_1383 <= trunc_ln24_fu_755_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state19))) then
                reg_678 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state21))) then
                reg_684 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln107_fu_802_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    select_ln107_reg_1402(0) <= select_ln107_fu_814_p3(0);    select_ln107_reg_1402(3) <= select_ln107_fu_814_p3(3);
                trunc_ln_reg_1407 <= bout_reg_426(2 downto 1);
            end if;
        end if;
    end process;
    select_ln107_reg_1402(2 downto 1) <= "00";
    select_ln107_reg_1402(4) <= '0';
    select_ln42_reg_1488(2 downto 1) <= "00";
    tmp_s_reg_1509(6 downto 0) <= "0000000";
    or_ln35_reg_1536(0) <= '1';
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_26_reg_1541(0) <= '1';
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_27_reg_1546(0) <= '1';
    or_ln35_1_reg_1551(1) <= '1';
    or_ln35_2_reg_1556(1 downto 0) <= "11";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_params_ARREADY, m_axi_params_RVALID, ap_CS_fsm_state13, ap_CS_fsm_state3, ap_CS_fsm_state15, ap_CS_fsm_state2, icmp_ln24_fu_708_p2, ap_CS_fsm_state11, icmp_ln107_fu_802_p2, ap_CS_fsm_state12, ap_CS_fsm_state14, ap_CS_fsm_state17, icmp_ln31_fu_926_p2, ap_CS_fsm_state18, icmp_ln35_fu_1032_p2, icmp_ln35_reg_1522, ap_CS_fsm_state22, ap_CS_fsm_state25, icmp_ln35_1_fu_1121_p2, ap_CS_fsm_state30, exitcond7816_fu_1142_p2, grp_load_input_buffer_c1_fu_539_ap_done, grp_export_output_buffer_c1_fu_555_ap_done, grp_conv1_Pipeline_KR_KC_fu_570_ap_done, grp_conv1_Pipeline_KR_KC1_fu_597_ap_done, grp_conv1_Pipeline_KR_KC2_fu_624_ap_done, grp_conv1_Pipeline_KR_KC3_fu_651_ap_done, icmp_ln109_fu_859_p2, icmp_ln110_fu_910_p2, ap_CS_fsm_state29, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln24_fu_708_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((grp_load_input_buffer_c1_fu_539_ap_done = ap_const_logic_0) or (m_axi_params_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln107_fu_802_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln109_fu_859_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_params_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((icmp_ln110_fu_910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (m_axi_params_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state17 => 
                if (((icmp_ln31_fu_926_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln35_fu_1032_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_conv1_Pipeline_KR_KC_fu_570_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_conv1_Pipeline_KR_KC1_fu_597_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                if (((grp_conv1_Pipeline_KR_KC2_fu_624_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and ((icmp_ln35_1_fu_1121_p2 = ap_const_lv1_1) or (icmp_ln35_reg_1522 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_conv1_Pipeline_KR_KC3_fu_651_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state29 => 
                if (((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((exitcond7816_fu_1142_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln107_fu_808_p2 <= std_logic_vector(unsigned(bout_reg_426) + unsigned(ap_const_lv4_1));
    add_ln109_fu_865_p2 <= std_logic_vector(unsigned(kh_reg_437) + unsigned(ap_const_lv4_1));
    add_ln110_fu_920_p2 <= std_logic_vector(unsigned(kw_reg_448) + unsigned(ap_const_lv8_2));
    add_ln113_1_fu_853_p2 <= std_logic_vector(unsigned(p_shl_fu_845_p3) + unsigned(zext_ln113_1_fu_841_p1));
    add_ln113_2_fu_871_p2 <= std_logic_vector(unsigned(add_ln113_1_reg_1411) + unsigned(kw_reg_448));
    add_ln113_3_fu_897_p2 <= std_logic_vector(unsigned(add_ln113_1_reg_1411) + unsigned(kw_1_fu_891_p2));
    add_ln113_fu_836_p2 <= std_logic_vector(unsigned(select_ln107_reg_1402) + unsigned(zext_ln113_fu_832_p1));
    add_ln24_1_fu_773_p2 <= std_logic_vector(unsigned(zext_ln24_1_fu_769_p1) + unsigned(conv1_weights));
    add_ln24_2_fu_714_p2 <= std_logic_vector(unsigned(indvar_flatten47_fu_238) + unsigned(ap_const_lv8_1));
    add_ln24_fu_726_p2 <= std_logic_vector(unsigned(out_fu_234) + unsigned(ap_const_lv7_8));
    add_ln31_2_fu_932_p2 <= std_logic_vector(unsigned(indvar_flatten37_reg_460) + unsigned(ap_const_lv7_1));
    add_ln31_fu_938_p2 <= std_logic_vector(unsigned(o_reg_471) + unsigned(ap_const_lv4_1));
    add_ln34_fu_1133_p2 <= std_logic_vector(unsigned(select_ln31_reg_1474) + unsigned(ap_const_lv4_1));
    add_ln35_fu_1127_p2 <= std_logic_vector(unsigned(c_reg_493) + unsigned(ap_const_lv9_4));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(m_axi_params_RVALID)
    begin
        if ((m_axi_params_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(m_axi_params_RVALID)
    begin
        if ((m_axi_params_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_570_ap_done)
    begin
        if ((grp_conv1_Pipeline_KR_KC_fu_570_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_conv1_Pipeline_KR_KC1_fu_597_ap_done)
    begin
        if ((grp_conv1_Pipeline_KR_KC1_fu_597_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(grp_conv1_Pipeline_KR_KC2_fu_624_ap_done)
    begin
        if ((grp_conv1_Pipeline_KR_KC2_fu_624_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(grp_conv1_Pipeline_KR_KC3_fu_651_ap_done)
    begin
        if ((grp_conv1_Pipeline_KR_KC3_fu_651_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_export_output_buffer_c1_fu_555_ap_done)
    begin
        if ((grp_export_output_buffer_c1_fu_555_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_params_ARREADY, grp_load_input_buffer_c1_fu_539_ap_done)
    begin
        if (((grp_load_input_buffer_c1_fu_539_ap_done = ap_const_logic_0) or (m_axi_params_ARREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln24_fu_708_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln24_fu_708_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln24_fu_708_p2)
    begin
        if (((icmp_ln24_fu_708_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln113_1_fu_916_p1 <= m_axi_params_RDATA;
    bitcast_ln113_fu_884_p1 <= params_addr42_read_reg_1425;
    conv1_biases_address0 <= grp_export_output_buffer_c1_fu_555_conv1_biases_address0;
    conv1_biases_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_biases_ce0;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state22, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1_assign_proc : process(ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= grp_load_input_buffer_c1_fu_539_conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state18, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_22_reg_1526, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_26_reg_1541, ap_CS_fsm_state22, ap_CS_fsm_state25, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, ap_CS_fsm_state29, p_cast371_fu_1057_p1, tmp_46_cast_fu_1096_p1, tmp_42_cast_fu_1277_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= tmp_42_cast_fu_1277_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_26_reg_1541;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= tmp_46_cast_fu_1096_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_22_reg_1526;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= p_cast371_fu_1057_p1(14 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state18, ap_CS_fsm_state22, ap_CS_fsm_state25, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_ap_done, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((grp_conv1_Pipeline_KR_KC1_fu_597_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state25, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0, grp_conv1_Pipeline_KR_KC_fu_570_p_out, grp_conv1_Pipeline_KR_KC2_fu_624_add52_222_out, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_conv1_Pipeline_KR_KC2_fu_624_add52_222_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_conv1_Pipeline_KR_KC_fu_570_p_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0_assign_proc : process(ap_CS_fsm_state21, icmp_ln35_reg_1522, ap_CS_fsm_state25, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, ap_CS_fsm_state29, empty_138_fu_1256_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state45) and (empty_138_fu_1256_p1 = ap_const_lv1_0)) or ((icmp_ln35_reg_1522 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0_assign_proc : process(ap_CS_fsm_state23, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_23_reg_1531, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_27_reg_1546, ap_CS_fsm_state25, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state20, tmp_42_cast_fu_1277_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= tmp_42_cast_fu_1277_p1(14 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_27_reg_1546;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_23_reg_1531;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state25, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, grp_conv1_Pipeline_KR_KC_fu_570_ap_done, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((grp_conv1_Pipeline_KR_KC_fu_570_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, grp_conv1_Pipeline_KR_KC1_fu_597_add52_119_out, grp_conv1_Pipeline_KR_KC3_fu_651_add52_325_out, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_conv1_Pipeline_KR_KC3_fu_651_add52_325_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_conv1_Pipeline_KR_KC1_fu_597_add52_119_out;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0_assign_proc : process(ap_CS_fsm_state23, ap_CS_fsm_state45, grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, ap_CS_fsm_state28, ap_CS_fsm_state29, empty_138_fu_1256_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state45) and (empty_138_fu_1256_p1 = ap_const_lv1_1)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1_assign_proc : process(grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1 <= grp_export_output_buffer_c1_fu_555_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0_assign_proc : process(ap_CS_fsm_state14, conv1_float_255_255_float_1_9_9_float_float_255_255_we_42_reg_1440, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27, zext_ln113_2_fu_876_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_we_42_reg_1440;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= zext_ln113_2_fu_876_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0_assign_proc : process(ap_CS_fsm_state14, bitcast_ln113_1_reg_1453, ap_CS_fsm_state16, bitcast_ln113_fu_884_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0 <= bitcast_ln113_1_reg_1453;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0 <= bitcast_ln113_fu_884_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0_assign_proc : process(trunc_ln_reg_1407, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((trunc_ln_reg_1407 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((trunc_ln_reg_1407 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0_assign_proc : process(ap_CS_fsm_state14, conv1_float_255_255_float_1_9_9_float_float_255_255_we_41_reg_1435, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27, zext_ln113_2_fu_876_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_we_41_reg_1435;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= zext_ln113_2_fu_876_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0_assign_proc : process(ap_CS_fsm_state14, bitcast_ln113_1_reg_1453, ap_CS_fsm_state16, bitcast_ln113_fu_884_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0 <= bitcast_ln113_1_reg_1453;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0 <= bitcast_ln113_fu_884_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0_assign_proc : process(trunc_ln_reg_1407, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((trunc_ln_reg_1407 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((trunc_ln_reg_1407 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0_assign_proc : process(conv1_float_255_255_float_1_9_9_float_float_255_255_we_40_reg_1430, ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27, zext_ln113_2_fu_876_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_we_40_reg_1430;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= zext_ln113_2_fu_876_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0_assign_proc : process(ap_CS_fsm_state14, bitcast_ln113_1_reg_1453, ap_CS_fsm_state16, bitcast_ln113_fu_884_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0 <= bitcast_ln113_1_reg_1453;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0 <= bitcast_ln113_fu_884_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0_assign_proc : process(trunc_ln_reg_1407, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((trunc_ln_reg_1407 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((trunc_ln_reg_1407 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0_assign_proc : process(ap_CS_fsm_state14, conv1_float_255_255_float_1_9_9_float_float_255_255_we_43_reg_1445, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27, zext_ln113_2_fu_876_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_we_43_reg_1445;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= zext_ln113_2_fu_876_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_address0 <= "XXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state16, ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0, grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0, grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0, grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= grp_conv1_Pipeline_KR_KC3_fu_651_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= grp_conv1_Pipeline_KR_KC2_fu_624_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= grp_conv1_Pipeline_KR_KC1_fu_597_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= grp_conv1_Pipeline_KR_KC_fu_570_conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0_assign_proc : process(ap_CS_fsm_state14, bitcast_ln113_1_reg_1453, ap_CS_fsm_state16, bitcast_ln113_fu_884_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0 <= bitcast_ln113_1_reg_1453;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0 <= bitcast_ln113_fu_884_p1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0_assign_proc : process(trunc_ln_reg_1407, ap_CS_fsm_state14, ap_CS_fsm_state16)
    begin
        if ((((trunc_ln_reg_1407 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state16)) or ((trunc_ln_reg_1407 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state14)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_we_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_129_fu_970_p1 <= select_ln31_3_fu_958_p3(3 - 1 downto 0);
    empty_130_fu_982_p2 <= std_logic_vector(unsigned(tmp_33_cast_fu_974_p3) - unsigned(select_ln31_3_cast_fu_966_p1));
    empty_131_fu_1014_p2 <= std_logic_vector(unsigned(empty_130_fu_982_p2) + unsigned(select_ln31_cast_fu_1010_p1));
    empty_133_fu_1148_p2 <= std_logic_vector(unsigned(empty_132_reg_505) + unsigned(ap_const_lv15_1));
    empty_134_fu_1192_p2 <= std_logic_vector(unsigned(tmp_38_cast_fu_1184_p3) - unsigned(tmp_36_cast_fu_1170_p1));
    empty_135_fu_1198_p1 <= phi_urem_reg_527(12 - 1 downto 0);
    empty_136_fu_1226_p2 <= std_logic_vector(unsigned(empty_134_fu_1192_p2) + unsigned(tmp_39_cast_fu_1222_p1));
    empty_138_fu_1256_p1 <= grp_fu_1232_p2(1 - 1 downto 0);
    empty_139_fu_1289_p2 <= "1" when (unsigned(next_urem_fu_1283_p2) < unsigned(ap_const_lv15_EF1)) else "0";
    empty_fu_1052_p2 <= std_logic_vector(unsigned(tmp_s_reg_1509) + unsigned(lshr_ln_cast_fu_1048_p1));
    exitcond7816_fu_1142_p2 <= "1" when (empty_132_reg_505 = ap_const_lv15_7788) else "0";
    grp_conv1_Pipeline_KR_KC1_fu_597_ap_start <= grp_conv1_Pipeline_KR_KC1_fu_597_ap_start_reg;
    grp_conv1_Pipeline_KR_KC2_fu_624_ap_start <= grp_conv1_Pipeline_KR_KC2_fu_624_ap_start_reg;
    grp_conv1_Pipeline_KR_KC3_fu_651_ap_start <= grp_conv1_Pipeline_KR_KC3_fu_651_ap_start_reg;
    grp_conv1_Pipeline_KR_KC_fu_570_ap_start <= grp_conv1_Pipeline_KR_KC_fu_570_ap_start_reg;
    grp_export_output_buffer_c1_fu_555_ap_start <= grp_export_output_buffer_c1_fu_555_ap_start_reg;

    grp_fu_1232_ap_start_assign_proc : process(ap_CS_fsm_state30, exitcond7816_fu_1142_p2)
    begin
        if (((exitcond7816_fu_1142_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            grp_fu_1232_ap_start <= ap_const_logic_1;
        else 
            grp_fu_1232_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1232_p1 <= ap_const_lv12_FF(9 - 1 downto 0);

    grp_fu_1605_ce_assign_proc : process(ap_CS_fsm_state22, grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_ce, grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_ce, grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_ce, grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_ce, grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_ce, ap_CS_fsm_state29, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1605_ce <= grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_1605_ce <= grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1605_ce <= grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1605_ce <= grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_1605_ce <= grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_ce;
        else 
            grp_fu_1605_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1605_p0_assign_proc : process(ap_CS_fsm_state22, grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din0, grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din0, grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din0, grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din0, grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din0, ap_CS_fsm_state29, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1605_p0 <= grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_1605_p0 <= grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1605_p0 <= grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1605_p0 <= grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_1605_p0 <= grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din0;
        else 
            grp_fu_1605_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1605_p1_assign_proc : process(ap_CS_fsm_state22, grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din1, grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din1, grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din1, grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din1, grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din1, ap_CS_fsm_state29, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1605_p1 <= grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1605_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_1605_p1 <= grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1605_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1605_p1 <= grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1605_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1605_p1 <= grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1605_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_1605_p1 <= grp_export_output_buffer_c1_fu_555_grp_fu_1605_p_din1;
        else 
            grp_fu_1605_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1609_ce_assign_proc : process(ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_ce, grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_ce, grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_ce, grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_ce, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1609_ce <= grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_1609_ce <= grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1609_ce <= grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1609_ce <= grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_ce;
        else 
            grp_fu_1609_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1609_p0_assign_proc : process(ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din0, grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din0, grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din0, grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din0, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1609_p0 <= grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_1609_p0 <= grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1609_p0 <= grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1609_p0 <= grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din0;
        else 
            grp_fu_1609_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1609_p1_assign_proc : process(ap_CS_fsm_state22, grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din1, grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din1, grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din1, grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din1, ap_CS_fsm_state20, ap_CS_fsm_state24, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1609_p1 <= grp_conv1_Pipeline_KR_KC3_fu_651_grp_fu_1609_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_1609_p1 <= grp_conv1_Pipeline_KR_KC2_fu_624_grp_fu_1609_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            grp_fu_1609_p1 <= grp_conv1_Pipeline_KR_KC1_fu_597_grp_fu_1609_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            grp_fu_1609_p1 <= grp_conv1_Pipeline_KR_KC_fu_570_grp_fu_1609_p_din1;
        else 
            grp_fu_1609_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1613_ce_assign_proc : process(grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_ce, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            grp_fu_1613_ce <= grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_ce;
        else 
            grp_fu_1613_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_471_p_ce <= grp_fu_1605_ce;
    grp_fu_471_p_din0 <= grp_fu_1605_p0;
    grp_fu_471_p_din1 <= grp_fu_1605_p1;
    grp_fu_471_p_opcode <= ap_const_lv2_0;
    grp_fu_475_p_ce <= grp_fu_1609_ce;
    grp_fu_475_p_din0 <= grp_fu_1609_p0;
    grp_fu_475_p_din1 <= grp_fu_1609_p1;
    grp_fu_479_p_ce <= grp_fu_1613_ce;
    grp_fu_479_p_din0 <= grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_din0;
    grp_fu_479_p_din1 <= grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_din1;
    grp_fu_479_p_opcode <= grp_export_output_buffer_c1_fu_555_grp_fu_1613_p_opcode;
    grp_load_input_buffer_c1_fu_539_ap_start <= grp_load_input_buffer_c1_fu_539_ap_start_reg;
    h_1_fu_1238_p2 <= std_logic_vector(unsigned(select_ln24_reg_1371) + unsigned(ap_const_lv8_F));
    icmp_ln107_fu_802_p2 <= "1" when (bout_reg_426 = ap_const_lv4_8) else "0";
    icmp_ln109_fu_859_p2 <= "1" when (kh_reg_437 = ap_const_lv4_9) else "0";
    icmp_ln110_fu_910_p2 <= "1" when (kw_1_fu_891_p2 = ap_const_lv8_9) else "0";
    icmp_ln24_fu_708_p2 <= "1" when (indvar_flatten47_fu_238 = ap_const_lv8_88) else "0";
    icmp_ln25_fu_732_p2 <= "1" when (h_fu_230 = ap_const_lv8_FF) else "0";
    icmp_ln31_fu_926_p2 <= "1" when (indvar_flatten37_reg_460 = ap_const_lv7_78) else "0";
    icmp_ln34_fu_944_p2 <= "1" when (r_reg_482 = ap_const_lv4_F) else "0";
    icmp_ln35_1_fu_1121_p2 <= "1" when (or_ln35_2_fu_1116_p2 = ap_const_lv8_FF) else "0";
    icmp_ln35_fu_1032_p2 <= "1" when (unsigned(c_reg_493) < unsigned(ap_const_lv9_FF)) else "0";
    idx_urem_fu_1295_p3 <= 
        next_urem_fu_1283_p2 when (empty_139_fu_1289_p2(0) = '1') else 
        ap_const_lv15_0;
    kw_1_fu_891_p2 <= (kw_reg_448 or ap_const_lv8_1);
    lshr_ln_cast_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_1038_p4),14));
    lshr_ln_fu_1038_p4 <= c_reg_493(8 downto 1);
    m_axi_input_r_ARADDR <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARADDR;
    m_axi_input_r_ARBURST <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARBURST;
    m_axi_input_r_ARCACHE <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARCACHE;
    m_axi_input_r_ARID <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARID;
    m_axi_input_r_ARLEN <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARLEN;
    m_axi_input_r_ARLOCK <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARLOCK;
    m_axi_input_r_ARPROT <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARPROT;
    m_axi_input_r_ARQOS <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARQOS;
    m_axi_input_r_ARREGION <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARREGION;
    m_axi_input_r_ARSIZE <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARSIZE;
    m_axi_input_r_ARUSER <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARUSER;

    m_axi_input_r_ARVALID_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln24_fu_708_p2, grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln24_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            m_axi_input_r_ARVALID <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_ARVALID;
        else 
            m_axi_input_r_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_input_r_AWADDR <= ap_const_lv64_0;
    m_axi_input_r_AWBURST <= ap_const_lv2_0;
    m_axi_input_r_AWCACHE <= ap_const_lv4_0;
    m_axi_input_r_AWID <= ap_const_lv1_0;
    m_axi_input_r_AWLEN <= ap_const_lv32_0;
    m_axi_input_r_AWLOCK <= ap_const_lv2_0;
    m_axi_input_r_AWPROT <= ap_const_lv3_0;
    m_axi_input_r_AWQOS <= ap_const_lv4_0;
    m_axi_input_r_AWREGION <= ap_const_lv4_0;
    m_axi_input_r_AWSIZE <= ap_const_lv3_0;
    m_axi_input_r_AWUSER <= ap_const_lv1_0;
    m_axi_input_r_AWVALID <= ap_const_logic_0;
    m_axi_input_r_BREADY <= ap_const_logic_0;

    m_axi_input_r_RREADY_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln24_fu_708_p2, grp_load_input_buffer_c1_fu_539_m_axi_input_r_RREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln24_fu_708_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            m_axi_input_r_RREADY <= grp_load_input_buffer_c1_fu_539_m_axi_input_r_RREADY;
        else 
            m_axi_input_r_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_input_r_WDATA <= ap_const_lv32_0;
    m_axi_input_r_WID <= ap_const_lv1_0;
    m_axi_input_r_WLAST <= ap_const_logic_0;
    m_axi_input_r_WSTRB <= ap_const_lv4_0;
    m_axi_input_r_WUSER <= ap_const_lv1_0;
    m_axi_input_r_WVALID <= ap_const_logic_0;
    m_axi_output_r_ARADDR <= ap_const_lv64_0;
    m_axi_output_r_ARBURST <= ap_const_lv2_0;
    m_axi_output_r_ARCACHE <= ap_const_lv4_0;
    m_axi_output_r_ARID <= ap_const_lv1_0;
    m_axi_output_r_ARLEN <= ap_const_lv32_0;
    m_axi_output_r_ARLOCK <= ap_const_lv2_0;
    m_axi_output_r_ARPROT <= ap_const_lv3_0;
    m_axi_output_r_ARQOS <= ap_const_lv4_0;
    m_axi_output_r_ARREGION <= ap_const_lv4_0;
    m_axi_output_r_ARSIZE <= ap_const_lv3_0;
    m_axi_output_r_ARUSER <= ap_const_lv1_0;
    m_axi_output_r_ARVALID <= ap_const_logic_0;
    m_axi_output_r_AWADDR <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWADDR;
    m_axi_output_r_AWBURST <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWBURST;
    m_axi_output_r_AWCACHE <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWCACHE;
    m_axi_output_r_AWID <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWID;
    m_axi_output_r_AWLEN <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWLEN;
    m_axi_output_r_AWLOCK <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWLOCK;
    m_axi_output_r_AWPROT <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWPROT;
    m_axi_output_r_AWQOS <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWQOS;
    m_axi_output_r_AWREGION <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWREGION;
    m_axi_output_r_AWSIZE <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWSIZE;
    m_axi_output_r_AWUSER <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWUSER;

    m_axi_output_r_AWVALID_assign_proc : process(ap_CS_fsm_state17, icmp_ln31_fu_926_p2, grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWVALID, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((icmp_ln31_fu_926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            m_axi_output_r_AWVALID <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_AWVALID;
        else 
            m_axi_output_r_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_output_r_BREADY_assign_proc : process(ap_CS_fsm_state17, icmp_ln31_fu_926_p2, grp_export_output_buffer_c1_fu_555_m_axi_output_r_BREADY, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((icmp_ln31_fu_926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            m_axi_output_r_BREADY <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_BREADY;
        else 
            m_axi_output_r_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_output_r_RREADY <= ap_const_logic_0;
    m_axi_output_r_WDATA <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_WDATA;
    m_axi_output_r_WID <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_WID;
    m_axi_output_r_WLAST <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_WLAST;
    m_axi_output_r_WSTRB <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_WSTRB;
    m_axi_output_r_WUSER <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_WUSER;

    m_axi_output_r_WVALID_assign_proc : process(ap_CS_fsm_state17, icmp_ln31_fu_926_p2, grp_export_output_buffer_c1_fu_555_m_axi_output_r_WVALID, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or ((icmp_ln31_fu_926_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            m_axi_output_r_WVALID <= grp_export_output_buffer_c1_fu_555_m_axi_output_r_WVALID;
        else 
            m_axi_output_r_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_params_ARADDR <= params_addr42_reg_1388;
    m_axi_params_ARBURST <= ap_const_lv2_0;
    m_axi_params_ARCACHE <= ap_const_lv4_0;
    m_axi_params_ARID <= ap_const_lv1_0;
    m_axi_params_ARLEN <= ap_const_lv32_288;
    m_axi_params_ARLOCK <= ap_const_lv2_0;
    m_axi_params_ARPROT <= ap_const_lv3_0;
    m_axi_params_ARQOS <= ap_const_lv4_0;
    m_axi_params_ARREGION <= ap_const_lv4_0;
    m_axi_params_ARSIZE <= ap_const_lv3_0;
    m_axi_params_ARUSER <= ap_const_lv1_0;

    m_axi_params_ARVALID_assign_proc : process(m_axi_params_ARREADY, ap_CS_fsm_state3, grp_load_input_buffer_c1_fu_539_ap_done)
    begin
        if ((not(((grp_load_input_buffer_c1_fu_539_ap_done = ap_const_logic_0) or (m_axi_params_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_params_ARVALID <= ap_const_logic_1;
        else 
            m_axi_params_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_params_AWADDR <= ap_const_lv64_0;
    m_axi_params_AWBURST <= ap_const_lv2_0;
    m_axi_params_AWCACHE <= ap_const_lv4_0;
    m_axi_params_AWID <= ap_const_lv1_0;
    m_axi_params_AWLEN <= ap_const_lv32_0;
    m_axi_params_AWLOCK <= ap_const_lv2_0;
    m_axi_params_AWPROT <= ap_const_lv3_0;
    m_axi_params_AWQOS <= ap_const_lv4_0;
    m_axi_params_AWREGION <= ap_const_lv4_0;
    m_axi_params_AWSIZE <= ap_const_lv3_0;
    m_axi_params_AWUSER <= ap_const_lv1_0;
    m_axi_params_AWVALID <= ap_const_logic_0;
    m_axi_params_BREADY <= ap_const_logic_0;

    m_axi_params_RREADY_assign_proc : process(m_axi_params_RVALID, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state15) and (m_axi_params_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_params_RVALID = ap_const_logic_1)))) then 
            m_axi_params_RREADY <= ap_const_logic_1;
        else 
            m_axi_params_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_params_WDATA <= ap_const_lv32_0;
    m_axi_params_WID <= ap_const_lv1_0;
    m_axi_params_WLAST <= ap_const_logic_0;
    m_axi_params_WSTRB <= ap_const_lv4_0;
    m_axi_params_WUSER <= ap_const_lv1_0;
    m_axi_params_WVALID <= ap_const_logic_0;
    mul56_fu_1206_p0 <= mul56_fu_1206_p00(12 - 1 downto 0);
    mul56_fu_1206_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_135_fu_1198_p1),25));
    mul56_fu_1206_p1 <= ap_const_lv25_1011(14 - 1 downto 0);
    mul_ln24_fu_763_p0 <= mul_ln24_fu_763_p00(7 - 1 downto 0);
    mul_ln24_fu_763_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln24_1_fu_747_p3),16));
    mul_ln24_fu_763_p1 <= ap_const_lv16_144(10 - 1 downto 0);
    next_mul_fu_1154_p2 <= std_logic_vector(unsigned(phi_mul_reg_516) + unsigned(ap_const_lv31_8912));
    next_urem_fu_1283_p2 <= std_logic_vector(unsigned(phi_urem_reg_527) + unsigned(ap_const_lv15_1));
    or_ln35_1_fu_1106_p2 <= (trunc_ln35_reg_1514 or ap_const_lv8_2);
    or_ln35_2_fu_1116_p2 <= (trunc_ln35_reg_1514 or ap_const_lv8_3);
    or_ln35_fu_1067_p2 <= (trunc_ln35_reg_1514 or ap_const_lv8_1);
    or_ln38_fu_1083_p2 <= (trunc_ln35_1_fu_1073_p4 or ap_const_lv7_1);
    p_cast371_fu_1057_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_1052_p2),64));
    p_shl_fu_845_p3 <= (add_ln113_fu_836_p2 & ap_const_lv3_0);

    params_blk_n_AR_assign_proc : process(m_axi_params_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            params_blk_n_AR <= m_axi_params_ARREADY;
        else 
            params_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    params_blk_n_R_assign_proc : process(m_axi_params_RVALID, ap_CS_fsm_state13, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            params_blk_n_R <= m_axi_params_RVALID;
        else 
            params_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    select_ln107_fu_814_p3 <= 
        ap_const_lv5_9 when (trunc_ln107_fu_798_p1(0) = '1') else 
        ap_const_lv5_0;
    select_ln24_1_fu_747_p3 <= 
        add_ln24_fu_726_p2 when (icmp_ln25_fu_732_p2(0) = '1') else 
        out_fu_234;
    select_ln24_fu_738_p3 <= 
        ap_const_lv8_0 when (icmp_ln25_fu_732_p2(0) = '1') else 
        h_fu_230;
    select_ln31_3_cast_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_3_fu_958_p3),7));
    select_ln31_3_fu_958_p3 <= 
        add_ln31_fu_938_p2 when (icmp_ln34_fu_944_p2(0) = '1') else 
        o_reg_471;
    select_ln31_cast_fu_1010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln31_fu_950_p3),7));
    select_ln31_fu_950_p3 <= 
        ap_const_lv4_0 when (icmp_ln34_fu_944_p2(0) = '1') else 
        r_reg_482;
    select_ln42_fu_992_p3 <= 
        ap_const_lv4_9 when (trunc_ln31_fu_988_p1(0) = '1') else 
        ap_const_lv4_0;
    sext_ln107_mid2_v_fu_778_p4 <= add_ln24_1_fu_773_p2(63 downto 2);
        sext_ln24_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln107_mid2_v_fu_778_p4),64));

    tmp_12_fu_1260_p4 <= grp_fu_1232_p2(7 downto 1);
    tmp_13_fu_1270_p3 <= (empty_136_reg_1592 & tmp_12_fu_1260_p4);
    tmp_14_fu_1089_p3 <= (empty_131_reg_1504 & or_ln38_fu_1083_p2);
    tmp_16_fu_1174_p4 <= phi_mul_reg_516(29 downto 27);
    tmp_17_fu_1212_p4 <= mul56_fu_1206_p2(24 downto 20);
    tmp_33_cast_fu_974_p3 <= (empty_129_fu_970_p1 & ap_const_lv4_0);
    tmp_36_cast_fu_1170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1160_p4),7));
    tmp_38_cast_fu_1184_p3 <= (tmp_16_fu_1174_p4 & ap_const_lv4_0);
    tmp_39_cast_fu_1222_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_17_fu_1212_p4),7));
    tmp_42_cast_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_13_fu_1270_p3),64));
    tmp_46_cast_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_14_fu_1089_p3),64));
    tmp_fu_1160_p4 <= phi_mul_reg_516(30 downto 27);
    tmp_s_fu_1020_p3 <= (empty_131_fu_1014_p2 & ap_const_lv7_0);
    trunc_ln107_fu_798_p1 <= bout_reg_426(1 - 1 downto 0);
    trunc_ln24_fu_755_p1 <= select_ln24_1_fu_747_p3(6 - 1 downto 0);
    trunc_ln31_fu_988_p1 <= select_ln31_3_fu_958_p3(1 - 1 downto 0);
    trunc_ln35_1_fu_1073_p4 <= c_reg_493(7 downto 1);
    trunc_ln35_fu_1028_p1 <= c_reg_493(8 - 1 downto 0);
    zext_ln113_1_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_fu_836_p2),8));
    zext_ln113_2_fu_876_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_2_fu_871_p2),64));
    zext_ln113_3_fu_902_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln113_3_fu_897_p2),64));
    zext_ln113_fu_832_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kh_reg_437),5));
    zext_ln24_1_fu_769_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln24_fu_763_p2),64));
end behav;
