-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_i1_AWVALID : OUT STD_LOGIC;
    m_axi_i1_AWREADY : IN STD_LOGIC;
    m_axi_i1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_WVALID : OUT STD_LOGIC;
    m_axi_i1_WREADY : IN STD_LOGIC;
    m_axi_i1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_WLAST : OUT STD_LOGIC;
    m_axi_i1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_ARVALID : OUT STD_LOGIC;
    m_axi_i1_ARREADY : IN STD_LOGIC;
    m_axi_i1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RVALID : IN STD_LOGIC;
    m_axi_i1_RREADY : OUT STD_LOGIC;
    m_axi_i1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i1_RLAST : IN STD_LOGIC;
    m_axi_i1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_BVALID : IN STD_LOGIC;
    m_axi_i1_BREADY : OUT STD_LOGIC;
    m_axi_i1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w1_AWVALID : OUT STD_LOGIC;
    m_axi_w1_AWREADY : IN STD_LOGIC;
    m_axi_w1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_WVALID : OUT STD_LOGIC;
    m_axi_w1_WREADY : IN STD_LOGIC;
    m_axi_w1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_WLAST : OUT STD_LOGIC;
    m_axi_w1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_ARVALID : OUT STD_LOGIC;
    m_axi_w1_ARREADY : IN STD_LOGIC;
    m_axi_w1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_RVALID : IN STD_LOGIC;
    m_axi_w1_RREADY : OUT STD_LOGIC;
    m_axi_w1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w1_RLAST : IN STD_LOGIC;
    m_axi_w1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_w1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_BVALID : IN STD_LOGIC;
    m_axi_w1_BREADY : OUT STD_LOGIC;
    m_axi_w1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv1_weights : IN STD_LOGIC_VECTOR (63 downto 0);
    conv1_biases_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    conv1_biases_ce0 : OUT STD_LOGIC;
    conv1_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_AWVALID : OUT STD_LOGIC;
    m_axi_i2_AWREADY : IN STD_LOGIC;
    m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WVALID : OUT STD_LOGIC;
    m_axi_i2_WREADY : IN STD_LOGIC;
    m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_WLAST : OUT STD_LOGIC;
    m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARVALID : OUT STD_LOGIC;
    m_axi_i2_ARREADY : IN STD_LOGIC;
    m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RVALID : IN STD_LOGIC;
    m_axi_i2_RREADY : OUT STD_LOGIC;
    m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_RLAST : IN STD_LOGIC;
    m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BVALID : IN STD_LOGIC;
    m_axi_i2_BREADY : OUT STD_LOGIC;
    m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_523_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_523_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_523_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_523_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_523_p_ce : OUT STD_LOGIC;
    grp_fu_527_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_527_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_527_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_527_p_ce : OUT STD_LOGIC;
    grp_fu_531_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_531_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_531_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_531_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_531_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (46 downto 0) := "00000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (46 downto 0) := "00000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (46 downto 0) := "00000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (46 downto 0) := "00000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (46 downto 0) := "00000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (46 downto 0) := "00000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (46 downto 0) := "00000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (46 downto 0) := "00001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (46 downto 0) := "00010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (46 downto 0) := "00100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (46 downto 0) := "01000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (46 downto 0) := "10000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_288 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001010001000";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv10_FE : STD_LOGIC_VECTOR (9 downto 0) := "0011111110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_3F8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001111111000";
    constant ap_const_lv11_107 : STD_LOGIC_VECTOR (10 downto 0) := "00100000111";
    constant ap_const_lv9_103 : STD_LOGIC_VECTOR (8 downto 0) := "100000011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_4 : STD_LOGIC_VECTOR (8 downto 0) := "000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv15_144 : STD_LOGIC_VECTOR (14 downto 0) := "000000101000100";
    constant ap_const_lv8_F : STD_LOGIC_VECTOR (7 downto 0) := "00001111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv15_7788 : STD_LOGIC_VECTOR (14 downto 0) := "111011110001000";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv12_EF1 : STD_LOGIC_VECTOR (11 downto 0) := "111011110001";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (46 downto 0) := "00000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_we0 : STD_LOGIC;
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal i1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal w1_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal w1_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal h_2_reg_1815 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln31_fu_1034_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln31_reg_1823 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln31_fu_1028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln82_fu_1042_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln82_reg_1828 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln82_fu_1052_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln82_reg_1835 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln_reg_1840 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln82_fu_1046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i1_addr_reg_1845 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_addr_1_reg_1851 : STD_LOGIC_VECTOR (63 downto 0);
    signal i1_addr_read_1_reg_1857 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln82_fu_1211_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln82_reg_1862 : STD_LOGIC_VECTOR (10 downto 0);
    signal left_fu_1217_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal left_reg_1869 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_fu_1220_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal right_reg_1877 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln91_fu_1251_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal empty_109_fu_1290_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_109_reg_1896 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal empty_111_fu_1306_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal empty_111_reg_1901 : STD_LOGIC_VECTOR (10 downto 0);
    signal exitcond275_fu_1284_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_110_fu_1311_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_110_reg_1906 : STD_LOGIC_VECTOR (31 downto 0);
    signal w1_addr_reg_1917 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal tmp_16_fu_1322_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_113_fu_1391_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_113_reg_1923 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal add_ln108_1_fu_1403_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln108_1_reg_1931 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln110_fu_1409_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln110_reg_1936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal add_ln110_fu_1419_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln110_reg_1943 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_addr_reg_1948 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln110_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_addr_reg_1953 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_addr_reg_1958 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_addr_reg_1963 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_addr_reg_1968 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_addr_reg_1973 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_addr_reg_1978 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_addr_reg_1983 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_addr_reg_1988 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_addr_reg_1993 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_addr_reg_1998 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_addr_reg_2003 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_addr_reg_2008 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_addr_reg_2013 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_addr_reg_2018 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_addr_reg_2023 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_addr_reg_2028 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_addr_reg_2033 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_115_fu_1472_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_115_reg_2041 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal empty_116_fu_1478_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_116_reg_2046 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln39_1_fu_1504_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln39_1_reg_2071 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln42_fu_1516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_2076 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_fu_1498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_1_fu_1530_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln39_1_reg_2081 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln42_fu_1596_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln42_reg_2088 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln42_1_fu_1604_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln42_1_reg_2095 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln42_2_fu_1616_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln42_2_reg_2101 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln42_4_fu_1678_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln42_4_reg_2106 : STD_LOGIC_VECTOR (1 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_61_reg_2111 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_62_reg_2116 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_63_reg_2121 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_64_reg_2126 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_65_reg_2131 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_66_reg_2136 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_67_reg_2141 : STD_LOGIC_VECTOR (11 downto 0);
    signal conv1_float_255_255_float_1_9_9_float_float_255_255_ou_68_reg_2146 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln58_fu_1708_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln58_reg_2151 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln35_fu_1713_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln35_reg_2156 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_118_fu_1729_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_118_reg_2161 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal tmp_fu_1736_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_2166 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln43_fu_1769_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal select_ln42_5_fu_1780_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_WVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_WLAST : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_RREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_m_axi_i2_BREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_biases_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_biases_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_ap_start : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_ap_done : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_ap_idle : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_ap_ready : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_add_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_add_out_ap_vld : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0 : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_ce : STD_LOGIC;
    signal grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_ce : STD_LOGIC;
    signal bh_reg_803 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_reg_814 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln91_fu_1245_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index_i_reg_825 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal out_reg_836 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal bout_reg_848 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal k_reg_859 : STD_LOGIC_VECTOR (3 downto 0);
    signal exitcond337_fu_1466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln108_fu_1397_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal loop_index_i22_reg_870 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal indvar_flatten55_reg_882 : STD_LOGIC_VECTOR (14 downto 0);
    signal o_reg_893 : STD_LOGIC_VECTOR (3 downto 0);
    signal indvar_flatten34_reg_904 : STD_LOGIC_VECTOR (11 downto 0);
    signal r_reg_916 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_reg_927 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_export_output_buffer_c1_fu_938_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv1_Pipeline_KR_KC_fu_965_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal add_loc_fu_290 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln93_1_fu_1233_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln94_1_fu_1272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast505_fu_1315_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast507_fu_1444_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast506_fu_1696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln87_1_fu_1172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln88_fu_1198_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln108_fu_1359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_fu_286 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln31_fu_1369_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal zext_ln82_fu_1038_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln85_fu_1068_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln85_fu_1074_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln85_1_fu_1078_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_15_fu_1097_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1083_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln55_fu_1091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln54_fu_1113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln54_fu_1105_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal hclamp_fu_1119_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln87_1_fu_1135_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln_fu_1127_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln87_fu_1143_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln87_fu_1147_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln87_2_fu_1153_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln87_fu_1157_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_1162_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln88_fu_1182_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln1_fu_1188_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal mul_ln82_fu_1211_p0 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln82_fu_1211_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln93_fu_1224_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln93_fu_1228_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln91_fu_1241_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln94_fu_1257_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln94_fu_1263_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln94_1_fu_1267_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal loop_index_i_cast_fu_1280_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal arrayidx36612_sum_i_fu_1296_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal arrayidx36612_sum_i_cast502_fu_1302_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln108_fu_1334_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln108_fu_1334_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln108_fu_1334_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln108_fu_1340_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln108_fu_1344_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln2_fu_1349_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal tmp_s_fu_1383_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal bout_cast_fu_1379_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln4_fu_1425_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln4_cast_fu_1435_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_114_fu_1439_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln39_fu_1510_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln42_fu_1482_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_17_fu_1486_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln39_1_fu_1546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_117_fu_1494_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln43_fu_1572_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln39_fu_1566_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln39_fu_1522_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal and_ln39_fu_1578_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln42_fu_1590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_fu_1584_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln42_1_fu_1612_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln39_2_fu_1538_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_19_fu_1624_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln39_1_fu_1552_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln42_3_fu_1632_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1644_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_119_fu_1640_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_shl1_fu_1658_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_32_cast_fu_1654_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_121_fu_1674_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln39_3_fu_1558_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_120_fu_1668_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln42_cast_fu_1686_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_122_fu_1690_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_1722_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln39_1_cast_fu_1719_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln42_1_fu_1774_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2181_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2181_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2181_ce : STD_LOGIC;
    signal grp_fu_2185_ce : STD_LOGIC;
    signal grp_fu_2189_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (46 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal mul_ln108_fu_1334_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln82_fu_1211_p00 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_export_output_buffer_c1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i2_AWVALID : OUT STD_LOGIC;
        m_axi_i2_AWREADY : IN STD_LOGIC;
        m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WVALID : OUT STD_LOGIC;
        m_axi_i2_WREADY : IN STD_LOGIC;
        m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_WLAST : OUT STD_LOGIC;
        m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARVALID : OUT STD_LOGIC;
        m_axi_i2_ARREADY : IN STD_LOGIC;
        m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RVALID : IN STD_LOGIC;
        m_axi_i2_RREADY : OUT STD_LOGIC;
        m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_RLAST : IN STD_LOGIC;
        m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BVALID : IN STD_LOGIC;
        m_axi_i2_BREADY : OUT STD_LOGIC;
        m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        conv1_biases_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        conv1_biases_ce0 : OUT STD_LOGIC;
        conv1_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_r : IN STD_LOGIC_VECTOR (5 downto 0);
        h : IN STD_LOGIC_VECTOR (7 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_2181_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_ce : OUT STD_LOGIC;
        grp_fu_2189_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2189_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2189_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_2189_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_2189_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv1_Pipeline_KR_KC IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (5 downto 0);
        select_ln42_1 : IN STD_LOGIC_VECTOR (3 downto 0);
        select_ln42_4 : IN STD_LOGIC_VECTOR (1 downto 0);
        zext_ln43_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        zext_ln43 : IN STD_LOGIC_VECTOR (7 downto 0);
        add_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        add_out_ap_vld : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0 : OUT STD_LOGIC;
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_2181_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2181_p_ce : OUT STD_LOGIC;
        grp_fu_2185_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2185_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2185_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_2185_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_mul_3ns_10ns_11_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (2 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component srcnn_mul_7ns_10ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component srcnn_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_RAM_AUTO_1bkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1578,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        address1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1,
        d1 => left_reg_1869);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1578,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0,
        address1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1,
        d1 => left_reg_1869);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1578,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        address1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1,
        d1 => left_reg_1869);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1578,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0,
        address1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1,
        we1 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1,
        d1 => left_reg_1869);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_RAM_AUTO_1bkb
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q0,
        address1 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address1,
        ce1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1,
        q1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q1);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_RAM_AUTO_1bkb
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q0,
        address1 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address1,
        ce1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1,
        q1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q1);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_q0);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_U : component srcnn_conv1_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_RAM_AUTO_1cud
    generic map (
        DataWidth => 32,
        AddressRange => 40,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0,
        ce0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0,
        we0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_we0,
        d0 => empty_116_reg_2046,
        q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_q0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1);

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_U : component srcnn_conv1_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 4080,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        ce0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        we0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        d0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        ce1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1);

    grp_export_output_buffer_c1_fu_938 : component srcnn_export_output_buffer_c1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_fu_938_ap_start,
        ap_done => grp_export_output_buffer_c1_fu_938_ap_done,
        ap_idle => grp_export_output_buffer_c1_fu_938_ap_idle,
        ap_ready => grp_export_output_buffer_c1_fu_938_ap_ready,
        m_axi_i2_AWVALID => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWVALID,
        m_axi_i2_AWREADY => m_axi_i2_AWREADY,
        m_axi_i2_AWADDR => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWADDR,
        m_axi_i2_AWID => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWID,
        m_axi_i2_AWLEN => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWLEN,
        m_axi_i2_AWSIZE => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWSIZE,
        m_axi_i2_AWBURST => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWBURST,
        m_axi_i2_AWLOCK => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWLOCK,
        m_axi_i2_AWCACHE => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWCACHE,
        m_axi_i2_AWPROT => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWPROT,
        m_axi_i2_AWQOS => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWQOS,
        m_axi_i2_AWREGION => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWREGION,
        m_axi_i2_AWUSER => grp_export_output_buffer_c1_fu_938_m_axi_i2_AWUSER,
        m_axi_i2_WVALID => grp_export_output_buffer_c1_fu_938_m_axi_i2_WVALID,
        m_axi_i2_WREADY => m_axi_i2_WREADY,
        m_axi_i2_WDATA => grp_export_output_buffer_c1_fu_938_m_axi_i2_WDATA,
        m_axi_i2_WSTRB => grp_export_output_buffer_c1_fu_938_m_axi_i2_WSTRB,
        m_axi_i2_WLAST => grp_export_output_buffer_c1_fu_938_m_axi_i2_WLAST,
        m_axi_i2_WID => grp_export_output_buffer_c1_fu_938_m_axi_i2_WID,
        m_axi_i2_WUSER => grp_export_output_buffer_c1_fu_938_m_axi_i2_WUSER,
        m_axi_i2_ARVALID => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARVALID,
        m_axi_i2_ARREADY => ap_const_logic_0,
        m_axi_i2_ARADDR => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARADDR,
        m_axi_i2_ARID => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARID,
        m_axi_i2_ARLEN => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARLEN,
        m_axi_i2_ARSIZE => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARSIZE,
        m_axi_i2_ARBURST => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARBURST,
        m_axi_i2_ARLOCK => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARLOCK,
        m_axi_i2_ARCACHE => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARCACHE,
        m_axi_i2_ARPROT => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARPROT,
        m_axi_i2_ARQOS => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARQOS,
        m_axi_i2_ARREGION => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARREGION,
        m_axi_i2_ARUSER => grp_export_output_buffer_c1_fu_938_m_axi_i2_ARUSER,
        m_axi_i2_RVALID => ap_const_logic_0,
        m_axi_i2_RREADY => grp_export_output_buffer_c1_fu_938_m_axi_i2_RREADY,
        m_axi_i2_RDATA => ap_const_lv32_0,
        m_axi_i2_RLAST => ap_const_logic_0,
        m_axi_i2_RID => ap_const_lv1_0,
        m_axi_i2_RFIFONUM => ap_const_lv13_0,
        m_axi_i2_RUSER => ap_const_lv1_0,
        m_axi_i2_RRESP => ap_const_lv2_0,
        m_axi_i2_BVALID => m_axi_i2_BVALID,
        m_axi_i2_BREADY => grp_export_output_buffer_c1_fu_938_m_axi_i2_BREADY,
        m_axi_i2_BRESP => m_axi_i2_BRESP,
        m_axi_i2_BID => m_axi_i2_BID,
        m_axi_i2_BUSER => m_axi_i2_BUSER,
        output_ftmap => output_ftmap,
        conv1_biases_address0 => grp_export_output_buffer_c1_fu_938_conv1_biases_address0,
        conv1_biases_ce0 => grp_export_output_buffer_c1_fu_938_conv1_biases_ce0,
        conv1_biases_q0 => conv1_biases_q0,
        out_r => trunc_ln58_reg_2151,
        h => h_2_reg_1815,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 => grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1,
        grp_fu_2181_p_din0 => grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din0,
        grp_fu_2181_p_din1 => grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din1,
        grp_fu_2181_p_opcode => grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_opcode,
        grp_fu_2181_p_dout0 => grp_fu_523_p_dout0,
        grp_fu_2181_p_ce => grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_ce,
        grp_fu_2189_p_din0 => grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_din0,
        grp_fu_2189_p_din1 => grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_din1,
        grp_fu_2189_p_opcode => grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_opcode,
        grp_fu_2189_p_dout0 => grp_fu_531_p_dout0,
        grp_fu_2189_p_ce => grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_ce);

    grp_conv1_Pipeline_KR_KC_fu_965 : component srcnn_conv1_Pipeline_KR_KC
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv1_Pipeline_KR_KC_fu_965_ap_start,
        ap_done => grp_conv1_Pipeline_KR_KC_fu_965_ap_done,
        ap_idle => grp_conv1_Pipeline_KR_KC_fu_965_ap_idle,
        ap_ready => grp_conv1_Pipeline_KR_KC_fu_965_ap_ready,
        tmp => tmp_reg_2166,
        empty => empty_118_reg_2161,
        select_ln42_1 => select_ln42_1_reg_2095,
        select_ln42_4 => select_ln42_4_reg_2106,
        zext_ln43_1 => select_ln42_reg_2088,
        zext_ln43 => select_ln42_reg_2088,
        add_out => grp_conv1_Pipeline_KR_KC_fu_965_add_out,
        add_out_ap_vld => grp_conv1_Pipeline_KR_KC_fu_965_add_out_ap_vld,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address1 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_q1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address1 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_q1,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_q0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0 => grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0,
        p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_q0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_q0,
        grp_fu_2181_p_din0 => grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din0,
        grp_fu_2181_p_din1 => grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din1,
        grp_fu_2181_p_opcode => grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_opcode,
        grp_fu_2181_p_dout0 => grp_fu_523_p_dout0,
        grp_fu_2181_p_ce => grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_ce,
        grp_fu_2185_p_din0 => grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_din0,
        grp_fu_2185_p_din1 => grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_din1,
        grp_fu_2185_p_dout0 => grp_fu_527_p_dout0,
        grp_fu_2185_p_ce => grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_ce);

    mul_3ns_10ns_11_1_1_U94 : component srcnn_mul_3ns_10ns_11_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 3,
        din1_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        din0 => mul_ln82_fu_1211_p0,
        din1 => mul_ln82_fu_1211_p1,
        dout => mul_ln82_fu_1211_p2);

    mul_7ns_10ns_15_1_1_U95 : component srcnn_mul_7ns_10ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 10,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln108_fu_1334_p0,
        din1 => mul_ln108_fu_1334_p1,
        dout => mul_ln108_fu_1334_p2);

    mux_8_3_32_1_1_U96 : component srcnn_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0,
        din1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0,
        din2 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0,
        din3 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0,
        din4 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0,
        din5 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0,
        din6 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        din7 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        din8 => select_ln42_2_reg_2101,
        dout => tmp_fu_1736_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv1_Pipeline_KR_KC_fu_965_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv1_Pipeline_KR_KC_fu_965_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
                    grp_conv1_Pipeline_KR_KC_fu_965_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv1_Pipeline_KR_KC_fu_965_ap_ready = ap_const_logic_1)) then 
                    grp_conv1_Pipeline_KR_KC_fu_965_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_fu_938_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_fu_938_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln39_fu_1498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
                    grp_export_output_buffer_c1_fu_938_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_fu_938_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_fu_938_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bh_reg_803_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_1028_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                bh_reg_803 <= ap_const_lv5_0;
            elsif (((exitcond275_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                bh_reg_803 <= add_ln82_reg_1835;
            end if; 
        end if;
    end process;

    bout_reg_848_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                bout_reg_848 <= ap_const_lv4_0;
            elsif (((icmp_ln110_fu_1413_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                bout_reg_848 <= add_ln108_1_reg_1931;
            end if; 
        end if;
    end process;

    c_reg_927_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln108_fu_1397_p2 = ap_const_lv1_1))) then 
                c_reg_927 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                c_reg_927 <= add_ln43_fu_1769_p2;
            end if; 
        end if;
    end process;

    h_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_fu_286 <= ap_const_lv8_0;
            elsif (((tmp_16_fu_1322_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                h_fu_286 <= add_ln31_fu_1369_p2;
            end if; 
        end if;
    end process;

    indvar_flatten34_reg_904_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln108_fu_1397_p2 = ap_const_lv1_1))) then 
                indvar_flatten34_reg_904 <= ap_const_lv12_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                indvar_flatten34_reg_904 <= select_ln42_5_fu_1780_p3;
            end if; 
        end if;
    end process;

    indvar_flatten55_reg_882_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln108_fu_1397_p2 = ap_const_lv1_1))) then 
                indvar_flatten55_reg_882 <= ap_const_lv15_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                indvar_flatten55_reg_882 <= add_ln39_1_reg_2071;
            end if; 
        end if;
    end process;

    k_reg_859_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln108_fu_1397_p2 = ap_const_lv1_0))) then 
                k_reg_859 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond337_fu_1466_p2 = ap_const_lv1_1))) then 
                k_reg_859 <= add_ln110_reg_1943;
            end if; 
        end if;
    end process;

    loop_index_i22_reg_870_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                loop_index_i22_reg_870 <= empty_115_reg_2041;
            elsif (((icmp_ln110_fu_1413_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                loop_index_i22_reg_870 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    loop_index_i_reg_825_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                loop_index_i_reg_825 <= empty_109_reg_1896;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                loop_index_i_reg_825 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    o_reg_893_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln108_fu_1397_p2 = ap_const_lv1_1))) then 
                o_reg_893 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                o_reg_893 <= select_ln39_1_reg_2081;
            end if; 
        end if;
    end process;

    out_reg_836_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln82_fu_1046_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                out_reg_836 <= ap_const_lv7_0;
            elsif (((grp_export_output_buffer_c1_fu_938_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                out_reg_836 <= add_ln35_reg_2156;
            end if; 
        end if;
    end process;

    p_reg_814_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_i1_RVALID = ap_const_logic_1))) then 
                p_reg_814 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0))) then 
                p_reg_814 <= add_ln91_fu_1251_p2;
            end if; 
        end if;
    end process;

    r_reg_916_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln108_fu_1397_p2 = ap_const_lv1_1))) then 
                r_reg_916 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
                r_reg_916 <= select_ln42_1_reg_2095;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                add_ln108_1_reg_1931 <= add_ln108_1_fu_1403_p2;
                empty_113_reg_1923 <= empty_113_fu_1391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                add_ln110_reg_1943 <= add_ln110_fu_1419_p2;
                trunc_ln110_reg_1936 <= trunc_ln110_fu_1409_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln39_fu_1498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                add_ln35_reg_2156 <= add_ln35_fu_1713_p2;
                trunc_ln58_reg_2151 <= trunc_ln58_fu_1708_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                add_ln39_1_reg_2071 <= add_ln39_1_fu_1504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln82_reg_1835 <= add_ln82_fu_1052_p2;
                trunc_ln82_reg_1828 <= trunc_ln82_fu_1042_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv1_Pipeline_KR_KC_fu_965_add_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                add_loc_fu_290 <= grp_conv1_Pipeline_KR_KC_fu_965_add_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_61_reg_2111 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_62_reg_2116 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_63_reg_2121 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_64_reg_2126 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_65_reg_2131 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_66_reg_2136 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_67_reg_2141 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                conv1_float_255_255_float_1_9_9_float_float_255_255_ou_68_reg_2146 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
                icmp_ln42_reg_2076 <= icmp_ln42_fu_1516_p2;
                select_ln39_1_reg_2081 <= select_ln39_1_fu_1530_p3;
                select_ln42_1_reg_2095 <= select_ln42_1_fu_1604_p3;
                select_ln42_2_reg_2101 <= select_ln42_2_fu_1616_p3;
                select_ln42_4_reg_2106 <= select_ln42_4_fu_1678_p3;
                select_ln42_reg_2088 <= select_ln42_fu_1596_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                empty_109_reg_1896 <= empty_109_fu_1290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                empty_110_reg_1906 <= empty_110_fu_1311_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond275_fu_1284_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                empty_111_reg_1901 <= empty_111_fu_1306_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                empty_115_reg_2041 <= empty_115_fu_1472_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                empty_116_reg_2046 <= empty_116_fu_1478_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                empty_118_reg_2161 <= empty_118_fu_1729_p2;
                tmp_reg_2166 <= tmp_fu_1736_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                h_2_reg_1815 <= h_fu_286;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln82_fu_1046_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                i1_addr_1_reg_1851 <= sext_ln88_fu_1198_p1;
                i1_addr_reg_1845 <= sext_ln87_1_fu_1172_p1;
                lshr_ln_reg_1840 <= bh_reg_803(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                i1_addr_read_1_reg_1857 <= m_axi_i1_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                left_reg_1869 <= left_fu_1217_p1;
                mul_ln82_reg_1862 <= mul_ln82_fu_1211_p2;
                right_reg_1877 <= right_fu_1220_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln110_fu_1413_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_addr_reg_1948 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_addr_reg_1953 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_addr_reg_1958 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_addr_reg_1963 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_addr_reg_1968 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_addr_reg_1973 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_addr_reg_1978 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_addr_reg_1983 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_addr_reg_1988 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_addr_reg_1993 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_addr_reg_1998 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_addr_reg_2003 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_addr_reg_2008 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_addr_reg_2013 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_addr_reg_2018 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_addr_reg_2023 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_addr_reg_2028 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
                p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_addr_reg_2033 <= p_cast507_fu_1444_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_16_fu_1322_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                w1_addr_reg_1917 <= sext_ln108_fu_1359_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln31_fu_1028_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    zext_ln31_reg_1823(7 downto 0) <= zext_ln31_fu_1034_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln31_reg_1823(9 downto 8) <= "00";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_i1_ARREADY, m_axi_i1_RVALID, m_axi_w1_ARREADY, m_axi_w1_RVALID, ap_CS_fsm_state4, ap_CS_fsm_state12, ap_CS_fsm_state15, ap_CS_fsm_state24, ap_CS_fsm_state5, ap_CS_fsm_state13, ap_CS_fsm_state27, ap_CS_fsm_state38, ap_CS_fsm_state2, icmp_ln31_fu_1028_p2, ap_CS_fsm_state3, icmp_ln82_fu_1046_p2, ap_CS_fsm_state14, ap_CS_fsm_state23, exitcond275_fu_1284_p2, ap_CS_fsm_state26, tmp_16_fu_1322_p3, ap_CS_fsm_state35, trunc_ln110_reg_1936, ap_CS_fsm_state36, icmp_ln110_fu_1413_p2, ap_CS_fsm_state37, ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_ap_done, grp_conv1_Pipeline_KR_KC_fu_965_ap_done, icmp_ln91_fu_1245_p2, ap_CS_fsm_state47, exitcond337_fu_1466_p2, icmp_ln108_fu_1397_p2, ap_CS_fsm_state44)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln31_fu_1028_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln82_fu_1046_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (m_axi_i1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_i1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state15 => 
                if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((exitcond275_fu_1284_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state24) and (m_axi_i1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state26 => 
                if (((tmp_16_fu_1322_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_w1_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state35) and (icmp_ln108_fu_1397_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state42;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln110_fu_1413_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state37) and (exitcond337_fu_1466_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                if (((trunc_ln110_reg_1936 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38) and (m_axi_w1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                elsif (((trunc_ln110_reg_1936 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38) and (m_axi_w1_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state42 => 
                if (((icmp_ln39_fu_1498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                if (((grp_conv1_Pipeline_KR_KC_fu_965_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state46;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state47 => 
                if (((grp_export_output_buffer_c1_fu_938_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln108_1_fu_1403_p2 <= std_logic_vector(unsigned(bout_reg_848) + unsigned(ap_const_lv4_1));
    add_ln108_fu_1344_p2 <= std_logic_vector(unsigned(zext_ln108_fu_1340_p1) + unsigned(conv1_weights));
    add_ln110_fu_1419_p2 <= std_logic_vector(unsigned(k_reg_859) + unsigned(ap_const_lv4_1));
    add_ln31_fu_1369_p2 <= std_logic_vector(unsigned(h_fu_286) + unsigned(ap_const_lv8_F));
    add_ln35_fu_1713_p2 <= std_logic_vector(unsigned(out_reg_836) + unsigned(ap_const_lv7_8));
    add_ln39_1_fu_1504_p2 <= std_logic_vector(unsigned(indvar_flatten55_reg_882) + unsigned(ap_const_lv15_1));
    add_ln39_fu_1510_p2 <= std_logic_vector(unsigned(o_reg_893) + unsigned(ap_const_lv4_1));
    add_ln42_1_fu_1774_p2 <= std_logic_vector(unsigned(indvar_flatten34_reg_904) + unsigned(ap_const_lv12_1));
    add_ln42_fu_1584_p2 <= std_logic_vector(unsigned(select_ln39_fu_1522_p3) + unsigned(ap_const_lv4_1));
    add_ln43_fu_1769_p2 <= std_logic_vector(unsigned(select_ln42_reg_2088) + unsigned(ap_const_lv8_1));
    add_ln82_fu_1052_p2 <= std_logic_vector(unsigned(bh_reg_803) + unsigned(ap_const_lv5_1));
    add_ln85_1_fu_1078_p2 <= std_logic_vector(signed(sext_ln85_fu_1074_p1) + signed(zext_ln31_reg_1823));
    add_ln85_fu_1068_p2 <= std_logic_vector(unsigned(zext_ln82_fu_1038_p1) + unsigned(ap_const_lv6_3C));
    add_ln87_fu_1157_p2 <= std_logic_vector(signed(sext_ln87_2_fu_1153_p1) + signed(input_ftmap));
    add_ln88_fu_1182_p2 <= std_logic_vector(unsigned(add_ln87_fu_1157_p2) + unsigned(ap_const_lv64_3F8));
    add_ln91_fu_1251_p2 <= std_logic_vector(unsigned(p_reg_814) + unsigned(ap_const_lv3_1));
    add_ln93_fu_1228_p2 <= std_logic_vector(unsigned(mul_ln82_reg_1862) + unsigned(zext_ln93_fu_1224_p1));
    add_ln94_1_fu_1267_p2 <= std_logic_vector(unsigned(mul_ln82_reg_1862) + unsigned(zext_ln94_fu_1263_p1));
    add_ln94_fu_1257_p2 <= std_logic_vector(unsigned(zext_ln91_fu_1241_p1) + unsigned(ap_const_lv9_103));
    and_ln39_1_fu_1552_p2 <= (xor_ln39_1_fu_1546_p2 and tmp_17_fu_1486_p3);
    and_ln39_fu_1578_p2 <= (xor_ln39_fu_1566_p2 and icmp_ln43_fu_1572_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state13_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;

    ap_ST_fsm_state24_blk_assign_proc : process(m_axi_i1_RVALID)
    begin
        if ((m_axi_i1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(m_axi_w1_ARREADY)
    begin
        if ((m_axi_w1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;

    ap_ST_fsm_state38_blk_assign_proc : process(m_axi_w1_RVALID)
    begin
        if ((m_axi_w1_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;

    ap_ST_fsm_state44_blk_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_ap_done)
    begin
        if ((grp_conv1_Pipeline_KR_KC_fu_965_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;

    ap_ST_fsm_state47_blk_assign_proc : process(grp_export_output_buffer_c1_fu_938_ap_done)
    begin
        if ((grp_export_output_buffer_c1_fu_938_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state47_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state47_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_i1_ARREADY)
    begin
        if ((m_axi_i1_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln31_fu_1028_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln31_fu_1028_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln31_fu_1028_p2)
    begin
        if (((icmp_ln31_fu_1028_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    arrayidx36612_sum_i_cast502_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(arrayidx36612_sum_i_fu_1296_p2),11));
    arrayidx36612_sum_i_fu_1296_p2 <= std_logic_vector(unsigned(loop_index_i_cast_fu_1280_p1) + unsigned(ap_const_lv9_4));
    bout_cast_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_reg_848),6));
    conv1_biases_address0 <= grp_export_output_buffer_c1_fu_938_conv1_biases_address0;
    conv1_biases_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_biases_ce0;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0, ap_CS_fsm_state25, ap_CS_fsm_state44, zext_ln94_1_fu_1272_p1, p_cast505_fu_1315_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= p_cast505_fu_1315_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= zext_ln94_1_fu_1272_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_address1 <= zext_ln93_1_fu_1233_p1(11 - 1 downto 0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0, ap_CS_fsm_state25, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0_assign_proc : process(right_reg_1877, ap_CS_fsm_state14, empty_110_reg_1906, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 <= empty_110_reg_1906;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 <= right_reg_1877;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2, ap_CS_fsm_state25)
    begin
        if ((((trunc_ln82_reg_1828 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0)) or ((trunc_ln82_reg_1828 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2)
    begin
        if (((trunc_ln82_reg_1828 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0, ap_CS_fsm_state25, ap_CS_fsm_state44, zext_ln94_1_fu_1272_p1, p_cast505_fu_1315_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= p_cast505_fu_1315_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= zext_ln94_1_fu_1272_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_address1 <= zext_ln93_1_fu_1233_p1(11 - 1 downto 0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0, ap_CS_fsm_state25, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0_assign_proc : process(right_reg_1877, ap_CS_fsm_state14, empty_110_reg_1906, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 <= empty_110_reg_1906;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 <= right_reg_1877;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2, ap_CS_fsm_state25)
    begin
        if ((((trunc_ln82_reg_1828 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0)) or ((trunc_ln82_reg_1828 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2)
    begin
        if (((trunc_ln82_reg_1828 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0, ap_CS_fsm_state25, ap_CS_fsm_state44, zext_ln94_1_fu_1272_p1, p_cast505_fu_1315_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= p_cast505_fu_1315_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= zext_ln94_1_fu_1272_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_address1 <= zext_ln93_1_fu_1233_p1(11 - 1 downto 0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0, ap_CS_fsm_state25, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0_assign_proc : process(right_reg_1877, ap_CS_fsm_state14, empty_110_reg_1906, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 <= empty_110_reg_1906;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 <= right_reg_1877;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2, ap_CS_fsm_state25)
    begin
        if ((((trunc_ln82_reg_1828 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0)) or ((trunc_ln82_reg_1828 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2)
    begin
        if (((trunc_ln82_reg_1828 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_3_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0, ap_CS_fsm_state25, ap_CS_fsm_state44, zext_ln94_1_fu_1272_p1, p_cast505_fu_1315_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= p_cast505_fu_1315_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= zext_ln94_1_fu_1272_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_address1 <= zext_ln93_1_fu_1233_p1(11 - 1 downto 0);

    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0, ap_CS_fsm_state25, ap_CS_fsm_state44)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1_assign_proc : process(ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0_assign_proc : process(right_reg_1877, ap_CS_fsm_state14, empty_110_reg_1906, ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= empty_110_reg_1906;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= right_reg_1877;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2, ap_CS_fsm_state25)
    begin
        if ((((trunc_ln82_reg_1828 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0)) or ((trunc_ln82_reg_1828 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1_assign_proc : process(trunc_ln82_reg_1828, ap_CS_fsm_state14, icmp_ln91_fu_1245_p2)
    begin
        if (((trunc_ln82_reg_1828 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln91_fu_1245_p2 = ap_const_lv1_0))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= ap_const_logic_1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_in_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_67_reg_2141, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_67_reg_2141;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_66_reg_2136, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_66_reg_2136;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_65_reg_2131, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_65_reg_2131;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_64_reg_2126, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_64_reg_2126;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_63_reg_2121, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_63_reg_2121;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_62_reg_2116, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_62_reg_2116;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_61_reg_2111, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_61_reg_2111;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, conv1_float_255_255_float_1_9_9_float_float_255_255_ou_68_reg_2146, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, ap_CS_fsm_state47, p_cast506_fu_1696_p1, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_68_reg_2146;
        elsif (((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= p_cast506_fu_1696_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state45) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0_assign_proc : process(grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, ap_CS_fsm_state47, add_loc_fu_290, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= add_loc_fu_290;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0_assign_proc : process(select_ln42_2_reg_2101, grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, ap_CS_fsm_state47, ap_CS_fsm_state45)
    begin
        if (((select_ln42_2_reg_2101 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_fu_938_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_109_fu_1290_p2 <= std_logic_vector(unsigned(loop_index_i_reg_825) + unsigned(ap_const_lv8_1));
    empty_110_fu_1311_p1 <= m_axi_i1_RDATA;
    empty_111_fu_1306_p2 <= std_logic_vector(unsigned(mul_ln82_reg_1862) + unsigned(arrayidx36612_sum_i_cast502_fu_1302_p1));
    empty_113_fu_1391_p2 <= std_logic_vector(unsigned(tmp_s_fu_1383_p3) + unsigned(bout_cast_fu_1379_p1));
    empty_114_fu_1439_p2 <= std_logic_vector(unsigned(empty_113_reg_1923) + unsigned(lshr_ln4_cast_fu_1435_p1));
    empty_115_fu_1472_p2 <= std_logic_vector(unsigned(loop_index_i22_reg_870) + unsigned(ap_const_lv4_1));
    empty_116_fu_1478_p1 <= m_axi_w1_RDATA;
    empty_117_fu_1494_p1 <= r_reg_916(2 - 1 downto 0);
    empty_118_fu_1729_p2 <= std_logic_vector(unsigned(tmp_18_fu_1722_p3) + unsigned(select_ln39_1_cast_fu_1719_p1));
    empty_119_fu_1640_p1 <= select_ln39_1_fu_1530_p3(3 - 1 downto 0);
    empty_120_fu_1668_p2 <= std_logic_vector(unsigned(p_shl1_fu_1658_p4) - unsigned(tmp_32_cast_fu_1654_p1));
    empty_121_fu_1674_p1 <= add_ln42_fu_1584_p2(2 - 1 downto 0);
    empty_122_fu_1690_p2 <= std_logic_vector(unsigned(empty_120_fu_1668_p2) + unsigned(select_ln42_cast_fu_1686_p1));
    exitcond275_fu_1284_p2 <= "1" when (loop_index_i_reg_825 = ap_const_lv8_FF) else "0";
    exitcond337_fu_1466_p2 <= "1" when (loop_index_i22_reg_870 = ap_const_lv4_9) else "0";
    grp_conv1_Pipeline_KR_KC_fu_965_ap_start <= grp_conv1_Pipeline_KR_KC_fu_965_ap_start_reg;
    grp_export_output_buffer_c1_fu_938_ap_start <= grp_export_output_buffer_c1_fu_938_ap_start_reg;

    grp_fu_2181_ce_assign_proc : process(grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_ce, grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_ce, ap_CS_fsm_state47, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_2181_ce <= grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2181_ce <= grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_ce;
        else 
            grp_fu_2181_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_2181_p0_assign_proc : process(grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din0, grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din0, ap_CS_fsm_state47, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_2181_p0 <= grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2181_p0 <= grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din0;
        else 
            grp_fu_2181_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2181_p1_assign_proc : process(grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din1, grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din1, ap_CS_fsm_state47, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_2181_p1 <= grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2181_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2181_p1 <= grp_export_output_buffer_c1_fu_938_grp_fu_2181_p_din1;
        else 
            grp_fu_2181_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2185_ce_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_ce, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            grp_fu_2185_ce <= grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_ce;
        else 
            grp_fu_2185_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_2189_ce_assign_proc : process(grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_ce, ap_CS_fsm_state47)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_2189_ce <= grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_ce;
        else 
            grp_fu_2189_ce <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_523_p_ce <= grp_fu_2181_ce;
    grp_fu_523_p_din0 <= grp_fu_2181_p0;
    grp_fu_523_p_din1 <= grp_fu_2181_p1;
    grp_fu_523_p_opcode <= ap_const_lv2_0;
    grp_fu_527_p_ce <= grp_fu_2185_ce;
    grp_fu_527_p_din0 <= grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_din0;
    grp_fu_527_p_din1 <= grp_conv1_Pipeline_KR_KC_fu_965_grp_fu_2185_p_din1;
    grp_fu_531_p_ce <= grp_fu_2189_ce;
    grp_fu_531_p_din0 <= grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_din0;
    grp_fu_531_p_din1 <= grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_din1;
    grp_fu_531_p_opcode <= grp_export_output_buffer_c1_fu_938_grp_fu_2189_p_opcode;
    hclamp_fu_1119_p3 <= 
        select_ln54_fu_1105_p3 when (or_ln54_fu_1113_p2(0) = '1') else 
        add_ln85_1_fu_1078_p2;

    i1_blk_n_AR_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            i1_blk_n_AR <= m_axi_i1_ARREADY;
        else 
            i1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    i1_blk_n_R_assign_proc : process(m_axi_i1_RVALID, ap_CS_fsm_state12, ap_CS_fsm_state24, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            i1_blk_n_R <= m_axi_i1_RVALID;
        else 
            i1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln108_fu_1397_p2 <= "1" when (bout_reg_848 = ap_const_lv4_8) else "0";
    icmp_ln110_fu_1413_p2 <= "1" when (k_reg_859 = ap_const_lv4_9) else "0";
    icmp_ln31_fu_1028_p2 <= "1" when (h_fu_286 = ap_const_lv8_FF) else "0";
    icmp_ln39_fu_1498_p2 <= "1" when (indvar_flatten55_reg_882 = ap_const_lv15_7788) else "0";
    icmp_ln42_fu_1516_p2 <= "1" when (indvar_flatten34_reg_904 = ap_const_lv12_EF1) else "0";
    icmp_ln43_fu_1572_p2 <= "1" when (c_reg_927 = ap_const_lv8_FF) else "0";
    icmp_ln55_fu_1091_p2 <= "1" when (signed(add_ln85_1_fu_1078_p2) > signed(ap_const_lv10_FE)) else "0";
    icmp_ln82_fu_1046_p2 <= "1" when (bh_reg_803 = ap_const_lv5_17) else "0";
    icmp_ln91_fu_1245_p2 <= "1" when (p_reg_814 = ap_const_lv3_4) else "0";
    left_fu_1217_p1 <= i1_addr_read_1_reg_1857;
    loop_index_i_cast_fu_1280_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index_i_reg_825),9));
    lshr_ln4_cast_fu_1435_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln4_fu_1425_p4),6));
    lshr_ln4_fu_1425_p4 <= k_reg_859(3 downto 1);

    m_axi_i1_ARADDR_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5, i1_addr_reg_1845, i1_addr_1_reg_1851)
    begin
        if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_i1_ARADDR <= i1_addr_1_reg_1851;
        elsif ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_i1_ARADDR <= i1_addr_reg_1845;
        else 
            m_axi_i1_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i1_ARBURST <= ap_const_lv2_0;
    m_axi_i1_ARCACHE <= ap_const_lv4_0;
    m_axi_i1_ARID <= ap_const_lv1_0;

    m_axi_i1_ARLEN_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5)
    begin
        if (((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            m_axi_i1_ARLEN <= ap_const_lv32_FF;
        elsif ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_i1_ARLEN <= ap_const_lv32_1;
        else 
            m_axi_i1_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i1_ARLOCK <= ap_const_lv2_0;
    m_axi_i1_ARPROT <= ap_const_lv3_0;
    m_axi_i1_ARQOS <= ap_const_lv4_0;
    m_axi_i1_ARREGION <= ap_const_lv4_0;
    m_axi_i1_ARSIZE <= ap_const_lv3_0;
    m_axi_i1_ARUSER <= ap_const_lv1_0;

    m_axi_i1_ARVALID_assign_proc : process(m_axi_i1_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state15, ap_CS_fsm_state5)
    begin
        if ((((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15)) or ((m_axi_i1_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            m_axi_i1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_i1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i1_AWADDR <= ap_const_lv64_0;
    m_axi_i1_AWBURST <= ap_const_lv2_0;
    m_axi_i1_AWCACHE <= ap_const_lv4_0;
    m_axi_i1_AWID <= ap_const_lv1_0;
    m_axi_i1_AWLEN <= ap_const_lv32_0;
    m_axi_i1_AWLOCK <= ap_const_lv2_0;
    m_axi_i1_AWPROT <= ap_const_lv3_0;
    m_axi_i1_AWQOS <= ap_const_lv4_0;
    m_axi_i1_AWREGION <= ap_const_lv4_0;
    m_axi_i1_AWSIZE <= ap_const_lv3_0;
    m_axi_i1_AWUSER <= ap_const_lv1_0;
    m_axi_i1_AWVALID <= ap_const_logic_0;
    m_axi_i1_BREADY <= ap_const_logic_0;

    m_axi_i1_RREADY_assign_proc : process(m_axi_i1_RVALID, ap_CS_fsm_state12, ap_CS_fsm_state24, ap_CS_fsm_state13)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state13) and (m_axi_i1_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (m_axi_i1_RVALID = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (m_axi_i1_RVALID = ap_const_logic_1)))) then 
            m_axi_i1_RREADY <= ap_const_logic_1;
        else 
            m_axi_i1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i1_WDATA <= ap_const_lv32_0;
    m_axi_i1_WID <= ap_const_lv1_0;
    m_axi_i1_WLAST <= ap_const_logic_0;
    m_axi_i1_WSTRB <= ap_const_lv4_0;
    m_axi_i1_WUSER <= ap_const_lv1_0;
    m_axi_i1_WVALID <= ap_const_logic_0;
    m_axi_i2_ARADDR <= ap_const_lv64_0;
    m_axi_i2_ARBURST <= ap_const_lv2_0;
    m_axi_i2_ARCACHE <= ap_const_lv4_0;
    m_axi_i2_ARID <= ap_const_lv1_0;
    m_axi_i2_ARLEN <= ap_const_lv32_0;
    m_axi_i2_ARLOCK <= ap_const_lv2_0;
    m_axi_i2_ARPROT <= ap_const_lv3_0;
    m_axi_i2_ARQOS <= ap_const_lv4_0;
    m_axi_i2_ARREGION <= ap_const_lv4_0;
    m_axi_i2_ARSIZE <= ap_const_lv3_0;
    m_axi_i2_ARUSER <= ap_const_lv1_0;
    m_axi_i2_ARVALID <= ap_const_logic_0;
    m_axi_i2_AWADDR <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWADDR;
    m_axi_i2_AWBURST <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWBURST;
    m_axi_i2_AWCACHE <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWCACHE;
    m_axi_i2_AWID <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWID;
    m_axi_i2_AWLEN <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWLEN;
    m_axi_i2_AWLOCK <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWLOCK;
    m_axi_i2_AWPROT <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWPROT;
    m_axi_i2_AWQOS <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWQOS;
    m_axi_i2_AWREGION <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWREGION;
    m_axi_i2_AWSIZE <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWSIZE;
    m_axi_i2_AWUSER <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWUSER;

    m_axi_i2_AWVALID_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_m_axi_i2_AWVALID, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            m_axi_i2_AWVALID <= grp_export_output_buffer_c1_fu_938_m_axi_i2_AWVALID;
        else 
            m_axi_i2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_i2_BREADY_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_m_axi_i2_BREADY, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            m_axi_i2_BREADY <= grp_export_output_buffer_c1_fu_938_m_axi_i2_BREADY;
        else 
            m_axi_i2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i2_RREADY <= ap_const_logic_0;
    m_axi_i2_WDATA <= grp_export_output_buffer_c1_fu_938_m_axi_i2_WDATA;
    m_axi_i2_WID <= grp_export_output_buffer_c1_fu_938_m_axi_i2_WID;
    m_axi_i2_WLAST <= grp_export_output_buffer_c1_fu_938_m_axi_i2_WLAST;
    m_axi_i2_WSTRB <= grp_export_output_buffer_c1_fu_938_m_axi_i2_WSTRB;
    m_axi_i2_WUSER <= grp_export_output_buffer_c1_fu_938_m_axi_i2_WUSER;

    m_axi_i2_WVALID_assign_proc : process(ap_CS_fsm_state42, icmp_ln39_fu_1498_p2, grp_export_output_buffer_c1_fu_938_m_axi_i2_WVALID, ap_CS_fsm_state47)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state47) or ((icmp_ln39_fu_1498_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state42)))) then 
            m_axi_i2_WVALID <= grp_export_output_buffer_c1_fu_938_m_axi_i2_WVALID;
        else 
            m_axi_i2_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w1_ARADDR <= w1_addr_reg_1917;
    m_axi_w1_ARBURST <= ap_const_lv2_0;
    m_axi_w1_ARCACHE <= ap_const_lv4_0;
    m_axi_w1_ARID <= ap_const_lv1_0;
    m_axi_w1_ARLEN <= ap_const_lv32_288;
    m_axi_w1_ARLOCK <= ap_const_lv2_0;
    m_axi_w1_ARPROT <= ap_const_lv3_0;
    m_axi_w1_ARQOS <= ap_const_lv4_0;
    m_axi_w1_ARREGION <= ap_const_lv4_0;
    m_axi_w1_ARSIZE <= ap_const_lv3_0;
    m_axi_w1_ARUSER <= ap_const_lv1_0;

    m_axi_w1_ARVALID_assign_proc : process(m_axi_w1_ARREADY, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) and (m_axi_w1_ARREADY = ap_const_logic_1))) then 
            m_axi_w1_ARVALID <= ap_const_logic_1;
        else 
            m_axi_w1_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w1_AWADDR <= ap_const_lv64_0;
    m_axi_w1_AWBURST <= ap_const_lv2_0;
    m_axi_w1_AWCACHE <= ap_const_lv4_0;
    m_axi_w1_AWID <= ap_const_lv1_0;
    m_axi_w1_AWLEN <= ap_const_lv32_0;
    m_axi_w1_AWLOCK <= ap_const_lv2_0;
    m_axi_w1_AWPROT <= ap_const_lv3_0;
    m_axi_w1_AWQOS <= ap_const_lv4_0;
    m_axi_w1_AWREGION <= ap_const_lv4_0;
    m_axi_w1_AWSIZE <= ap_const_lv3_0;
    m_axi_w1_AWUSER <= ap_const_lv1_0;
    m_axi_w1_AWVALID <= ap_const_logic_0;
    m_axi_w1_BREADY <= ap_const_logic_0;

    m_axi_w1_RREADY_assign_proc : process(m_axi_w1_RVALID, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) and (m_axi_w1_RVALID = ap_const_logic_1))) then 
            m_axi_w1_RREADY <= ap_const_logic_1;
        else 
            m_axi_w1_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w1_WDATA <= ap_const_lv32_0;
    m_axi_w1_WID <= ap_const_lv1_0;
    m_axi_w1_WLAST <= ap_const_logic_0;
    m_axi_w1_WSTRB <= ap_const_lv4_0;
    m_axi_w1_WUSER <= ap_const_lv1_0;
    m_axi_w1_WVALID <= ap_const_logic_0;
    mul_ln108_fu_1334_p0 <= mul_ln108_fu_1334_p00(7 - 1 downto 0);
    mul_ln108_fu_1334_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_reg_836),15));
    mul_ln108_fu_1334_p1 <= ap_const_lv15_144(10 - 1 downto 0);
    mul_ln82_fu_1211_p0 <= mul_ln82_fu_1211_p00(3 - 1 downto 0);
    mul_ln82_fu_1211_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_1840),11));
    mul_ln82_fu_1211_p1 <= ap_const_lv11_107(10 - 1 downto 0);
    or_ln42_fu_1590_p2 <= (icmp_ln42_fu_1516_p2 or and_ln39_fu_1578_p2);
    or_ln54_fu_1113_p2 <= (tmp_14_fu_1083_p3 or icmp_ln55_fu_1091_p2);

    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_addr_reg_1948, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_addr_reg_1948;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_0))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_addr_reg_1953, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_addr_reg_1953;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_1))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_addr_reg_1958, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_addr_reg_1958;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_2))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_addr_reg_1963, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_addr_reg_1963;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_3))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_addr_reg_1968, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_addr_reg_1968;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_4))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_addr_reg_1973, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_addr_reg_1973;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_5))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_5_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_addr_reg_1978, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_addr_reg_1978;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_6))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_6_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_addr_reg_1983, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_addr_reg_1983;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (loop_index_i22_reg_870 = ap_const_lv4_7))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_7_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_addr_reg_1988, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_addr_reg_1988;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state39)
    begin
        if ((not((loop_index_i22_reg_870 = ap_const_lv4_0)) and not((loop_index_i22_reg_870 = ap_const_lv4_1)) and not((loop_index_i22_reg_870 = ap_const_lv4_2)) and not((loop_index_i22_reg_870 = ap_const_lv4_3)) and not((loop_index_i22_reg_870 = ap_const_lv4_4)) and not((loop_index_i22_reg_870 = ap_const_lv4_5)) and not((loop_index_i22_reg_870 = ap_const_lv4_6)) and not((loop_index_i22_reg_870 = ap_const_lv4_7)) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_8_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_addr_reg_1993, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_addr_reg_1993;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1, ap_CS_fsm_state44)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_0))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_addr_reg_1998, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_addr_reg_1998;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_1))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_addr_reg_2003, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_addr_reg_2003;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_2))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_2_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_addr_reg_2008, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_addr_reg_2008;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_3))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_3_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_addr_reg_2013, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_addr_reg_2013;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_4))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_4_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_addr_reg_2018, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_addr_reg_2018;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_5))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_5_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_addr_reg_2023, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_addr_reg_2023;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_6))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_6_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_addr_reg_2028, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_addr_reg_2028;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state41) and (loop_index_i22_reg_870 = ap_const_lv4_7))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_7_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0_assign_proc : process(p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_addr_reg_2033, grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0 <= p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_addr_reg_2033;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_address0 <= "XXXXXX";
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0_assign_proc : process(grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0, ap_CS_fsm_state44, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0 <= grp_conv1_Pipeline_KR_KC_fu_965_p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_we0_assign_proc : process(loop_index_i22_reg_870, ap_CS_fsm_state41)
    begin
        if ((not((loop_index_i22_reg_870 = ap_const_lv4_0)) and not((loop_index_i22_reg_870 = ap_const_lv4_1)) and not((loop_index_i22_reg_870 = ap_const_lv4_2)) and not((loop_index_i22_reg_870 = ap_const_lv4_3)) and not((loop_index_i22_reg_870 = ap_const_lv4_4)) and not((loop_index_i22_reg_870 = ap_const_lv4_5)) and not((loop_index_i22_reg_870 = ap_const_lv4_6)) and not((loop_index_i22_reg_870 = ap_const_lv4_7)) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_we0 <= ap_const_logic_1;
        else 
            p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_8_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast505_fu_1315_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_111_reg_1901),64));
    p_cast506_fu_1696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_122_fu_1690_p2),64));
    p_cast507_fu_1444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_114_fu_1439_p2),64));
    p_shl1_fu_1658_p4 <= ((empty_119_fu_1640_p1 & select_ln42_3_fu_1632_p3) & ap_const_lv8_0);
    right_fu_1220_p1 <= m_axi_i1_RDATA;
    select_ln39_1_cast_fu_1719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln39_1_reg_2081),6));
    select_ln39_1_fu_1530_p3 <= 
        add_ln39_fu_1510_p2 when (icmp_ln42_fu_1516_p2(0) = '1') else 
        o_reg_893;
    select_ln39_2_fu_1538_p3 <= 
        ap_const_lv3_0 when (icmp_ln42_fu_1516_p2(0) = '1') else 
        trunc_ln42_fu_1482_p1;
    select_ln39_3_fu_1558_p3 <= 
        ap_const_lv2_0 when (icmp_ln42_fu_1516_p2(0) = '1') else 
        empty_117_fu_1494_p1;
    select_ln39_fu_1522_p3 <= 
        ap_const_lv4_0 when (icmp_ln42_fu_1516_p2(0) = '1') else 
        r_reg_916;
    select_ln42_1_fu_1604_p3 <= 
        add_ln42_fu_1584_p2 when (and_ln39_fu_1578_p2(0) = '1') else 
        select_ln39_fu_1522_p3;
    select_ln42_2_fu_1616_p3 <= 
        trunc_ln42_1_fu_1612_p1 when (and_ln39_fu_1578_p2(0) = '1') else 
        select_ln39_2_fu_1538_p3;
    select_ln42_3_fu_1632_p3 <= 
        tmp_19_fu_1624_p3 when (and_ln39_fu_1578_p2(0) = '1') else 
        and_ln39_1_fu_1552_p2;
    select_ln42_4_fu_1678_p3 <= 
        empty_121_fu_1674_p1 when (and_ln39_fu_1578_p2(0) = '1') else 
        select_ln39_3_fu_1558_p3;
    select_ln42_5_fu_1780_p3 <= 
        ap_const_lv12_1 when (icmp_ln42_reg_2076(0) = '1') else 
        add_ln42_1_fu_1774_p2;
    select_ln42_cast_fu_1686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln42_fu_1596_p3),12));
    select_ln42_fu_1596_p3 <= 
        ap_const_lv8_0 when (or_ln42_fu_1590_p2(0) = '1') else 
        c_reg_927;
    select_ln54_fu_1105_p3 <= 
        ap_const_lv10_0 when (tmp_15_fu_1097_p3(0) = '1') else 
        ap_const_lv10_FE;
        sext_ln108_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_fu_1349_p4),64));

        sext_ln85_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln85_fu_1068_p2),10));

        sext_ln87_1_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_1162_p4),64));

        sext_ln87_2_fu_1153_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln87_fu_1147_p2),64));

        sext_ln87_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln87_1_fu_1135_p3),20));

        sext_ln88_fu_1198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln1_fu_1188_p4),64));

    shl_ln87_1_fu_1135_p3 <= (hclamp_fu_1119_p3 & ap_const_lv2_0);
    shl_ln_fu_1127_p3 <= (hclamp_fu_1119_p3 & ap_const_lv10_0);
    sub_ln87_fu_1147_p2 <= std_logic_vector(unsigned(shl_ln_fu_1127_p3) - unsigned(sext_ln87_fu_1143_p1));
    tmp_14_fu_1083_p3 <= add_ln85_1_fu_1078_p2(9 downto 9);
    tmp_15_fu_1097_p3 <= add_ln85_1_fu_1078_p2(9 downto 9);
    tmp_16_fu_1322_p3 <= out_reg_836(6 downto 6);
    tmp_17_fu_1486_p3 <= r_reg_916(3 downto 3);
    tmp_18_fu_1722_p3 <= (select_ln39_1_reg_2081 & ap_const_lv2_0);
    tmp_19_fu_1624_p3 <= add_ln42_fu_1584_p2(3 downto 3);
    tmp_20_fu_1644_p4 <= ((ap_const_lv1_0 & select_ln39_1_fu_1530_p3) & select_ln42_3_fu_1632_p3);
    tmp_32_cast_fu_1654_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_20_fu_1644_p4),12));
    tmp_s_fu_1383_p3 <= (bout_reg_848 & ap_const_lv2_0);
    trunc_ln110_fu_1409_p1 <= k_reg_859(1 - 1 downto 0);
    trunc_ln1_fu_1188_p4 <= add_ln88_fu_1182_p2(63 downto 2);
    trunc_ln2_fu_1349_p4 <= add_ln108_fu_1344_p2(63 downto 2);
    trunc_ln42_1_fu_1612_p1 <= add_ln42_fu_1584_p2(3 - 1 downto 0);
    trunc_ln42_fu_1482_p1 <= r_reg_916(3 - 1 downto 0);
    trunc_ln58_fu_1708_p1 <= out_reg_836(6 - 1 downto 0);
    trunc_ln82_fu_1042_p1 <= bh_reg_803(2 - 1 downto 0);
    trunc_ln_fu_1162_p4 <= add_ln87_fu_1157_p2(63 downto 2);

    w1_blk_n_AR_assign_proc : process(m_axi_w1_ARREADY, ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            w1_blk_n_AR <= m_axi_w1_ARREADY;
        else 
            w1_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    w1_blk_n_R_assign_proc : process(m_axi_w1_RVALID, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            w1_blk_n_R <= m_axi_w1_RVALID;
        else 
            w1_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    xor_ln39_1_fu_1546_p2 <= (icmp_ln42_fu_1516_p2 xor ap_const_lv1_1);
    xor_ln39_fu_1566_p2 <= (icmp_ln42_fu_1516_p2 xor ap_const_lv1_1);
    zext_ln108_fu_1340_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln108_fu_1334_p2),64));
    zext_ln31_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_286),10));
    zext_ln82_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_803),6));
    zext_ln91_fu_1241_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_reg_814),9));
    zext_ln93_1_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln93_fu_1228_p2),64));
    zext_ln93_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_reg_814),11));
    zext_ln94_1_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_1_fu_1267_p2),64));
    zext_ln94_fu_1263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln94_fu_1257_p2),11));
end behav;
