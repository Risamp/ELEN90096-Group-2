-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv1_Pipeline_KR10 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tmp_7 : IN STD_LOGIC_VECTOR (31 downto 0);
    r_cast14 : IN STD_LOGIC_VECTOR (3 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_0_load : IN STD_LOGIC_VECTOR (31 downto 0);
    trunc_ln45_1_mid2 : IN STD_LOGIC_VECTOR (0 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_0_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_1_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_3_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_2_load_1 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_0_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_2_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_1_load_2 : IN STD_LOGIC_VECTOR (31 downto 0);
    add63_168_out : OUT STD_LOGIC_VECTOR (31 downto 0);
    add63_168_out_ap_vld : OUT STD_LOGIC;
    grp_fu_16727_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16727_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16727_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_16727_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16727_p_ce : OUT STD_LOGIC;
    grp_fu_16731_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16731_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16731_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_16731_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16731_p_ce : OUT STD_LOGIC;
    grp_fu_16735_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16735_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16735_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_16735_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16735_p_ce : OUT STD_LOGIC;
    grp_fu_16739_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16739_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16739_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_16739_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16739_p_ce : OUT STD_LOGIC;
    grp_fu_16743_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16743_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16743_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_16743_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16743_p_ce : OUT STD_LOGIC;
    grp_fu_16747_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16747_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16747_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16747_p_ce : OUT STD_LOGIC;
    grp_fu_16751_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16751_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16751_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16751_p_ce : OUT STD_LOGIC;
    grp_fu_16755_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16755_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16755_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_16755_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv1_Pipeline_KR10 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state9_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state18_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state21_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state24_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state30_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal icmp_ln52_reg_4130 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state31_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln52_fu_3085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_reg_4130_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_3155_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_4134 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_3165_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_4139 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_3265_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_reg_4144 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_3275_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_4149 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_3375_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_reg_4154 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_3385_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_reg_4159 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_fu_3485_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_52_reg_4164 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_3495_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_reg_4169 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_3595_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_4174 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_3605_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_reg_4179 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_3705_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_4184 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_3715_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_reg_4189 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_3815_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_reg_4194 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_fu_3825_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_4199 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_3925_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_reg_4204 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_fu_3935_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_69_reg_4209 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_fu_4035_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_72_reg_4214 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_fu_4045_p25 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_4219 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_4224 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_s_reg_4229 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_s_reg_4229_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_reg_4234 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_3_reg_4239 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state8_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state14_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state20_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state32_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal mul_1_3_reg_4239_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_3_reg_4239_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_1_reg_4244 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_1_reg_4244_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_reg_4249 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_2_reg_4254 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal mul_1_1_2_reg_4254_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_1_2_reg_4254_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_1_reg_4259 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_1_reg_4259_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_2_reg_4264 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_2_reg_4264_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_2_2_reg_4264_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_9_reg_4269 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_19_reg_4274 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_22_reg_4279 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_reg_4284 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_20_reg_4289 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_23_reg_4294 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_18_reg_4299 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_21_reg_4304 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_21_reg_4304_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_24_reg_4309 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_24_reg_4309_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_chunk_24_reg_4309_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_r_3_reg_4314 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_r_4_reg_4319 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_r_reg_4324 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal add63_168_fu_786 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_add63_168_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_loop_init : STD_LOGIC;
    signal kr_1_fu_790 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln52_fu_3091_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_allocacmp_kr : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal grp_fu_3033_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3033_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal grp_fu_3038_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3038_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3043_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3047_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3047_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3056_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3056_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3060_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3060_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3064_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3064_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln54_1_cast_fu_3097_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal r_cast14_cast_fu_3068_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_38_fu_3107_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_3131_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln56_fu_3101_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_42_fu_3217_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_3241_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_3327_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_fu_3351_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_3437_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_3461_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_3547_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_3571_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_fu_3657_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_3681_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_fu_3767_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_fu_3791_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_3877_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_fu_3901_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_fu_3987_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_4011_p11 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_condition_exit_pp0_iter9_stage1 : STD_LOGIC;
    signal ap_idle_pp0_0to8 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to10 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_mux_9_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_mux_2_1_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_mux_23_5_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_9_4_32_1_1_U489 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_0_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_0_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_0_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_0_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_0_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_0_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_0_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_0_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_0_load,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_38_fu_3107_p11);

    mux_9_4_32_1_1_U490 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_0_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_0_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_0_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_0_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_0_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_0_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_0_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_0_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_0_load,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_39_fu_3131_p11);

    mux_2_1_32_1_1_U491 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_38_fu_3107_p11,
        din1 => tmp_39_fu_3131_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_40_fu_3155_p4);

    mux_23_5_32_1_1_U492 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_1_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_1_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_1_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_1_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_1_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_1_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_1_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_1_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_1_load,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_1_load,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_1_load,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_1_load,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_1_load,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_1_load,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_1_load,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_1_load,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_1_load,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_1_load,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_1_load,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_1_load,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_1_load,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_1_load,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_1_load,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_41_fu_3165_p25);

    mux_9_4_32_1_1_U493 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_0_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_0_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_0_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_0_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_0_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_0_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_0_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_0_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_0_load_1,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_42_fu_3217_p11);

    mux_9_4_32_1_1_U494 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_0_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_0_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_0_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_0_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_0_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_0_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_0_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_0_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_0_load_1,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_43_fu_3241_p11);

    mux_2_1_32_1_1_U495 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_42_fu_3217_p11,
        din1 => tmp_43_fu_3241_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_44_fu_3265_p4);

    mux_23_5_32_1_1_U496 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_2_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_2_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_2_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_2_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_2_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_2_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_2_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_2_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_2_load,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_2_load,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_2_load,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_2_load,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_2_load,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_2_load,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_2_load,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_2_load,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_2_load,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_2_load,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_2_load,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_2_load,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_2_load,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_2_load,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_2_load,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_45_fu_3275_p25);

    mux_9_4_32_1_1_U497 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_0_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_0_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_0_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_0_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_0_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_0_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_0_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_0_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_0_load_2,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_46_fu_3327_p11);

    mux_9_4_32_1_1_U498 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_0_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_0_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_0_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_0_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_0_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_0_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_0_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_0_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_0_load_2,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_47_fu_3351_p11);

    mux_2_1_32_1_1_U499 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_46_fu_3327_p11,
        din1 => tmp_47_fu_3351_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_48_fu_3375_p4);

    mux_23_5_32_1_1_U500 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_3_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_3_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_3_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_3_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_3_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_3_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_3_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_3_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_3_load,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_3_load,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_3_load,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_3_load,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_3_load,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_3_load,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_3_load,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_3_load,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_3_load,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_3_load,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_3_load,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_3_load,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_3_load,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_3_load,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_3_load,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_49_fu_3385_p25);

    mux_9_4_32_1_1_U501 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_1_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_1_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_1_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_1_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_1_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_1_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_1_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_1_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_1_load,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_50_fu_3437_p11);

    mux_9_4_32_1_1_U502 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_1_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_1_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_1_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_1_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_1_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_1_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_1_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_1_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_1_load,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_51_fu_3461_p11);

    mux_2_1_32_1_1_U503 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_50_fu_3437_p11,
        din1 => tmp_51_fu_3461_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_52_fu_3485_p4);

    mux_23_5_32_1_1_U504 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_0_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_0_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_0_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_0_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_0_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_0_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_0_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_0_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_0_load_1,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_0_load_1,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_0_load_1,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_0_load_1,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_0_load_1,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_0_load_1,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_0_load_1,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_0_load_1,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_0_load_1,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_0_load_1,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_0_load_1,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_0_load_1,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_0_load_1,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_0_load_1,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_0_load_1,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_53_fu_3495_p25);

    mux_9_4_32_1_1_U505 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_1_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_1_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_1_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_1_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_1_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_1_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_1_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_1_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_1_load_1,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_54_fu_3547_p11);

    mux_9_4_32_1_1_U506 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_1_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_1_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_1_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_1_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_1_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_1_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_1_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_1_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_1_load_1,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_55_fu_3571_p11);

    mux_2_1_32_1_1_U507 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_54_fu_3547_p11,
        din1 => tmp_55_fu_3571_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_56_fu_3595_p4);

    mux_23_5_32_1_1_U508 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_1_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_1_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_1_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_1_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_1_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_1_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_1_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_1_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_1_load_1,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_1_load_1,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_1_load_1,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_1_load_1,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_1_load_1,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_1_load_1,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_1_load_1,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_1_load_1,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_1_load_1,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_1_load_1,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_1_load_1,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_1_load_1,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_1_load_1,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_1_load_1,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_1_load_1,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_57_fu_3605_p25);

    mux_9_4_32_1_1_U509 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_1_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_1_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_1_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_1_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_1_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_1_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_1_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_1_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_1_load_2,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_58_fu_3657_p11);

    mux_9_4_32_1_1_U510 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_1_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_1_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_1_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_1_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_1_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_1_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_1_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_1_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_1_load_2,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_59_fu_3681_p11);

    mux_2_1_32_1_1_U511 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_58_fu_3657_p11,
        din1 => tmp_59_fu_3681_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_60_fu_3705_p4);

    mux_23_5_32_1_1_U512 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_2_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_2_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_2_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_2_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_2_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_2_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_2_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_2_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_2_load_1,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_2_load_1,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_2_load_1,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_2_load_1,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_2_load_1,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_2_load_1,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_2_load_1,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_2_load_1,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_2_load_1,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_2_load_1,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_2_load_1,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_2_load_1,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_2_load_1,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_2_load_1,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_2_load_1,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_61_fu_3715_p25);

    mux_9_4_32_1_1_U513 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_2_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_2_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_2_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_2_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_2_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_2_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_2_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_2_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_2_load,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_62_fu_3767_p11);

    mux_9_4_32_1_1_U514 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_2_load,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_2_load,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_2_load,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_2_load,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_2_load,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_2_load,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_2_load,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_2_load,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_2_load,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_63_fu_3791_p11);

    mux_2_1_32_1_1_U515 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_62_fu_3767_p11,
        din1 => tmp_63_fu_3791_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_64_fu_3815_p4);

    mux_23_5_32_1_1_U516 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_3_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_3_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_3_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_3_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_3_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_3_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_3_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_3_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_3_load_1,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_3_load_1,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_3_load_1,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_3_load_1,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_3_load_1,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_3_load_1,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_3_load_1,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_3_load_1,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_3_load_1,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_3_load_1,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_3_load_1,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_3_load_1,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_3_load_1,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_3_load_1,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_3_load_1,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_65_fu_3825_p25);

    mux_9_4_32_1_1_U517 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_2_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_2_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_2_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_2_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_2_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_2_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_2_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_2_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_2_load_1,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_66_fu_3877_p11);

    mux_9_4_32_1_1_U518 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_2_load_1,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_2_load_1,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_2_load_1,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_2_load_1,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_2_load_1,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_2_load_1,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_2_load_1,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_2_load_1,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_2_load_1,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_67_fu_3901_p11);

    mux_2_1_32_1_1_U519 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_66_fu_3877_p11,
        din1 => tmp_67_fu_3901_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_68_fu_3925_p4);

    mux_23_5_32_1_1_U520 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_0_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_0_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_0_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_0_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_0_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_0_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_0_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_0_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_0_load_2,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_0_load_2,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_0_load_2,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_0_load_2,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_0_load_2,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_0_load_2,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_0_load_2,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_0_load_2,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_0_load_2,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_0_load_2,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_0_load_2,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_0_load_2,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_0_load_2,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_0_load_2,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_0_load_2,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_69_fu_3935_p25);

    mux_9_4_32_1_1_U521 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_0_2_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_1_2_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_2_2_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_3_2_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_4_2_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_5_2_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_6_2_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_7_2_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_0_0_8_2_load_2,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_70_fu_3987_p11);

    mux_9_4_32_1_1_U522 : component srcnn_mux_9_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_0_2_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_1_2_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_2_2_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_3_2_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_4_2_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_5_2_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_6_2_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_7_2_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E13weight_buffer_1_0_8_2_load_2,
        din9 => ap_sig_allocacmp_kr,
        dout => tmp_71_fu_4011_p11);

    mux_2_1_32_1_1_U523 : component srcnn_mux_2_1_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 1,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_70_fu_3987_p11,
        din1 => tmp_71_fu_4011_p11,
        din2 => trunc_ln45_1_mid2,
        dout => tmp_72_fu_4035_p4);

    mux_23_5_32_1_1_U524 : component srcnn_mux_23_5_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_0_1_load_2,
        din1 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_1_1_load_2,
        din2 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_2_1_load_2,
        din3 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_3_1_load_2,
        din4 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_4_1_load_2,
        din5 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_5_1_load_2,
        din6 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_6_1_load_2,
        din7 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_7_1_load_2,
        din8 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_8_1_load_2,
        din9 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_9_1_load_2,
        din10 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_10_1_load_2,
        din11 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_11_1_load_2,
        din12 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_12_1_load_2,
        din13 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_13_1_load_2,
        din14 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_14_1_load_2,
        din15 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_15_1_load_2,
        din16 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_16_1_load_2,
        din17 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_17_1_load_2,
        din18 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_18_1_load_2,
        din19 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_19_1_load_2,
        din20 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_20_1_load_2,
        din21 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_21_1_load_2,
        din22 => p_ZZ5conv1PA255_A255_fPA1_A9_A9_fPfS1_E15input_fm_buffer_0_22_1_load_2,
        din23 => add_ln56_fu_3101_p2,
        dout => tmp_73_fu_4045_p25);

    flow_control_loop_pipe_sequential_init_U : component srcnn_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    add63_168_fu_786_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                add63_168_fu_786 <= tmp_7;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                add63_168_fu_786 <= grp_fu_16743_p_dout0;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    kr_1_fu_790_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln52_fu_3085_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    kr_1_fu_790 <= add_ln52_fu_3091_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    kr_1_fu_790 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln52_reg_4130 <= icmp_ln52_fu_3085_p2;
                icmp_ln52_reg_4130_pp0_iter1_reg <= icmp_ln52_reg_4130;
                icmp_ln52_reg_4130_pp0_iter2_reg <= icmp_ln52_reg_4130_pp0_iter1_reg;
                icmp_ln52_reg_4130_pp0_iter3_reg <= icmp_ln52_reg_4130_pp0_iter2_reg;
                icmp_ln52_reg_4130_pp0_iter4_reg <= icmp_ln52_reg_4130_pp0_iter3_reg;
                icmp_ln52_reg_4130_pp0_iter5_reg <= icmp_ln52_reg_4130_pp0_iter4_reg;
                icmp_ln52_reg_4130_pp0_iter6_reg <= icmp_ln52_reg_4130_pp0_iter5_reg;
                icmp_ln52_reg_4130_pp0_iter7_reg <= icmp_ln52_reg_4130_pp0_iter6_reg;
                icmp_ln52_reg_4130_pp0_iter8_reg <= icmp_ln52_reg_4130_pp0_iter7_reg;
                icmp_ln52_reg_4130_pp0_iter9_reg <= icmp_ln52_reg_4130_pp0_iter8_reg;
                mul_1_s_reg_4229_pp0_iter2_reg <= mul_1_s_reg_4229;
                tmp_chunk_21_reg_4304_pp0_iter6_reg <= tmp_chunk_21_reg_4304;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_1_1_1_reg_4244 <= grp_fu_16751_p_dout0;
                mul_1_2_reg_4249 <= grp_fu_16755_p_dout0;
                mul_1_3_reg_4239 <= grp_fu_16747_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                mul_1_1_1_reg_4244_pp0_iter2_reg <= mul_1_1_1_reg_4244;
                mul_1_3_reg_4239_pp0_iter2_reg <= mul_1_3_reg_4239;
                mul_1_3_reg_4239_pp0_iter3_reg <= mul_1_3_reg_4239_pp0_iter2_reg;
                tmp_chunk_24_reg_4309_pp0_iter6_reg <= tmp_chunk_24_reg_4309;
                tmp_chunk_24_reg_4309_pp0_iter7_reg <= tmp_chunk_24_reg_4309_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_1_1_2_reg_4254 <= grp_fu_16747_p_dout0;
                mul_1_2_1_reg_4259 <= grp_fu_16751_p_dout0;
                mul_1_2_2_reg_4264 <= grp_fu_16755_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_1_1_2_reg_4254_pp0_iter2_reg <= mul_1_1_2_reg_4254;
                mul_1_1_2_reg_4254_pp0_iter3_reg <= mul_1_1_2_reg_4254_pp0_iter2_reg;
                mul_1_2_1_reg_4259_pp0_iter2_reg <= mul_1_2_1_reg_4259;
                mul_1_2_2_reg_4264_pp0_iter2_reg <= mul_1_2_2_reg_4264;
                mul_1_2_2_reg_4264_pp0_iter3_reg <= mul_1_2_2_reg_4264_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_1_1_reg_4234 <= grp_fu_16755_p_dout0;
                mul_1_reg_4224 <= grp_fu_16747_p_dout0;
                mul_1_s_reg_4229 <= grp_fu_16751_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln52_fu_3085_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_40_reg_4134 <= tmp_40_fu_3155_p4;
                tmp_41_reg_4139 <= tmp_41_fu_3165_p25;
                tmp_44_reg_4144 <= tmp_44_fu_3265_p4;
                tmp_45_reg_4149 <= tmp_45_fu_3275_p25;
                tmp_48_reg_4154 <= tmp_48_fu_3375_p4;
                tmp_49_reg_4159 <= tmp_49_fu_3385_p25;
                tmp_52_reg_4164 <= tmp_52_fu_3485_p4;
                tmp_53_reg_4169 <= tmp_53_fu_3495_p25;
                tmp_56_reg_4174 <= tmp_56_fu_3595_p4;
                tmp_57_reg_4179 <= tmp_57_fu_3605_p25;
                tmp_60_reg_4184 <= tmp_60_fu_3705_p4;
                tmp_61_reg_4189 <= tmp_61_fu_3715_p25;
                tmp_64_reg_4194 <= tmp_64_fu_3815_p4;
                tmp_65_reg_4199 <= tmp_65_fu_3825_p25;
                tmp_68_reg_4204 <= tmp_68_fu_3925_p4;
                tmp_69_reg_4209 <= tmp_69_fu_3935_p25;
                tmp_72_reg_4214 <= tmp_72_fu_4035_p4;
                tmp_73_reg_4219 <= tmp_73_fu_4045_p25;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_chunk_18_reg_4299 <= grp_fu_16731_p_dout0;
                tmp_chunk_21_reg_4304 <= grp_fu_16735_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_chunk_19_reg_4274 <= grp_fu_16731_p_dout0;
                tmp_chunk_9_reg_4269 <= grp_fu_16727_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_chunk_20_reg_4289 <= grp_fu_16735_p_dout0;
                tmp_chunk_reg_4284 <= grp_fu_16731_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_chunk_22_reg_4279 <= grp_fu_16727_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_chunk_23_reg_4294 <= grp_fu_16727_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_chunk_24_reg_4309 <= grp_fu_16735_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_r_3_reg_4314 <= grp_fu_16739_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_r_4_reg_4319 <= grp_fu_16739_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_r_reg_4324 <= grp_fu_16739_p_dout0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter9_stage1, ap_idle_pp0_0to8, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to10, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to10 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter9_stage1) and (ap_idle_pp0_0to8 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add63_168_out <= add63_168_fu_786;

    add63_168_out_ap_vld_assign_proc : process(icmp_ln52_reg_4130_pp0_iter9_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln52_reg_4130_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            add63_168_out_ap_vld <= ap_const_logic_1;
        else 
            add63_168_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    add_ln52_fu_3091_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_kr) + unsigned(ap_const_lv4_1));
    add_ln56_fu_3101_p2 <= std_logic_vector(unsigned(trunc_ln54_1_cast_fu_3097_p1) + unsigned(r_cast14_cast_fu_3068_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, icmp_ln52_reg_4130)
    begin
        if (((icmp_ln52_reg_4130 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter9_stage1_assign_proc : process(ap_enable_reg_pp0_iter9, icmp_ln52_reg_4130_pp0_iter9_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (icmp_ln52_reg_4130_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_condition_exit_pp0_iter9_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter9_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to8_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to10_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to10 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to10 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_add63_168_load_assign_proc : process(ap_enable_reg_pp0_iter10, ap_CS_fsm_pp0_stage1, add63_168_fu_786, ap_block_pp0_stage1, grp_fu_16743_p_dout0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_sig_allocacmp_add63_168_load <= grp_fu_16743_p_dout0;
        else 
            ap_sig_allocacmp_add63_168_load <= add63_168_fu_786;
        end if; 
    end process;


    ap_sig_allocacmp_kr_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_loop_init, kr_1_fu_790, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_kr <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_kr <= kr_1_fu_790;
        end if; 
    end process;

    grp_fu_16727_p_ce <= ap_const_logic_1;
    grp_fu_16727_p_din0 <= grp_fu_3033_p0;
    grp_fu_16727_p_din1 <= grp_fu_3033_p1;
    grp_fu_16727_p_opcode <= ap_const_lv2_0;
    grp_fu_16731_p_ce <= ap_const_logic_1;
    grp_fu_16731_p_din0 <= grp_fu_3038_p0;
    grp_fu_16731_p_din1 <= grp_fu_3038_p1;
    grp_fu_16731_p_opcode <= ap_const_lv2_0;
    grp_fu_16735_p_ce <= ap_const_logic_1;
    grp_fu_16735_p_din0 <= grp_fu_3043_p0;
    grp_fu_16735_p_din1 <= grp_fu_3043_p1;
    grp_fu_16735_p_opcode <= ap_const_lv2_0;
    grp_fu_16739_p_ce <= ap_const_logic_1;
    grp_fu_16739_p_din0 <= grp_fu_3047_p0;
    grp_fu_16739_p_din1 <= grp_fu_3047_p1;
    grp_fu_16739_p_opcode <= ap_const_lv2_0;
    grp_fu_16743_p_ce <= ap_const_logic_1;
    grp_fu_16743_p_din0 <= ap_sig_allocacmp_add63_168_load;
    grp_fu_16743_p_din1 <= tmp_r_reg_4324;
    grp_fu_16743_p_opcode <= ap_const_lv2_0;
    grp_fu_16747_p_ce <= ap_const_logic_1;
    grp_fu_16747_p_din0 <= grp_fu_3056_p0;
    grp_fu_16747_p_din1 <= grp_fu_3056_p1;
    grp_fu_16751_p_ce <= ap_const_logic_1;
    grp_fu_16751_p_din0 <= grp_fu_3060_p0;
    grp_fu_16751_p_din1 <= grp_fu_3060_p1;
    grp_fu_16755_p_ce <= ap_const_logic_1;
    grp_fu_16755_p_din0 <= grp_fu_3064_p0;
    grp_fu_16755_p_din1 <= grp_fu_3064_p1;

    grp_fu_3033_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, mul_1_reg_4224, ap_CS_fsm_pp0_stage1, mul_1_2_reg_4249, tmp_chunk_22_reg_4279, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3033_p0 <= tmp_chunk_22_reg_4279;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3033_p0 <= mul_1_2_reg_4249;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3033_p0 <= mul_1_reg_4224;
        else 
            grp_fu_3033_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3033_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, mul_1_2_1_reg_4259_pp0_iter2_reg, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3033_p1 <= mul_1_2_1_reg_4259_pp0_iter2_reg;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_3033_p1 <= ap_const_lv32_0;
        else 
            grp_fu_3033_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3038_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, mul_1_1_reg_4234, ap_CS_fsm_pp0_stage1, tmp_chunk_9_reg_4269, tmp_chunk_reg_4284, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3038_p0 <= tmp_chunk_reg_4284;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3038_p0 <= tmp_chunk_9_reg_4269;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3038_p0 <= mul_1_1_reg_4234;
        else 
            grp_fu_3038_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3038_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, mul_1_s_reg_4229_pp0_iter2_reg, ap_CS_fsm_pp0_stage1, mul_1_3_reg_4239_pp0_iter3_reg, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3038_p1 <= mul_1_3_reg_4239_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3038_p1 <= mul_1_s_reg_4229_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3038_p1 <= ap_const_lv32_0;
        else 
            grp_fu_3038_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3043_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_chunk_19_reg_4274, tmp_chunk_20_reg_4289, tmp_chunk_23_reg_4294, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3043_p0 <= tmp_chunk_23_reg_4294;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3043_p0 <= tmp_chunk_20_reg_4289;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3043_p0 <= tmp_chunk_19_reg_4274;
        else 
            grp_fu_3043_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3043_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, mul_1_1_1_reg_4244_pp0_iter2_reg, mul_1_1_2_reg_4254_pp0_iter3_reg, mul_1_2_2_reg_4264_pp0_iter3_reg, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3043_p1 <= mul_1_2_2_reg_4264_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3043_p1 <= mul_1_1_2_reg_4254_pp0_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3043_p1 <= mul_1_1_1_reg_4244_pp0_iter2_reg;
        else 
            grp_fu_3043_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3047_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_chunk_18_reg_4299, tmp_r_3_reg_4314, tmp_r_4_reg_4319, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3047_p0 <= tmp_r_4_reg_4319;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3047_p0 <= tmp_r_3_reg_4314;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3047_p0 <= tmp_chunk_18_reg_4299;
        else 
            grp_fu_3047_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3047_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, tmp_chunk_21_reg_4304_pp0_iter6_reg, tmp_chunk_24_reg_4309_pp0_iter7_reg, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3047_p1 <= tmp_chunk_24_reg_4309_pp0_iter7_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3047_p1 <= tmp_chunk_21_reg_4304_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3047_p1 <= ap_const_lv32_0;
        else 
            grp_fu_3047_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3056_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_40_reg_4134, tmp_48_reg_4154, tmp_60_reg_4184, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3056_p0 <= tmp_60_reg_4184;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3056_p0 <= tmp_48_reg_4154;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3056_p0 <= tmp_40_reg_4134;
        else 
            grp_fu_3056_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3056_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_41_reg_4139, tmp_49_reg_4159, tmp_61_reg_4189, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3056_p1 <= tmp_61_reg_4189;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3056_p1 <= tmp_49_reg_4159;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3056_p1 <= tmp_41_reg_4139;
        else 
            grp_fu_3056_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3060_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_44_reg_4144, tmp_56_reg_4174, tmp_68_reg_4204, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3060_p0 <= tmp_68_reg_4204;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3060_p0 <= tmp_56_reg_4174;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3060_p0 <= tmp_44_reg_4144;
        else 
            grp_fu_3060_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3060_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_45_reg_4149, tmp_57_reg_4179, tmp_69_reg_4209, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3060_p1 <= tmp_69_reg_4209;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3060_p1 <= tmp_57_reg_4179;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3060_p1 <= tmp_45_reg_4149;
        else 
            grp_fu_3060_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3064_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_52_reg_4164, tmp_64_reg_4194, tmp_72_reg_4214, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3064_p0 <= tmp_72_reg_4214;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3064_p0 <= tmp_64_reg_4194;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3064_p0 <= tmp_52_reg_4164;
        else 
            grp_fu_3064_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3064_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, tmp_53_reg_4169, tmp_65_reg_4199, tmp_73_reg_4219, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3064_p1 <= tmp_73_reg_4219;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3064_p1 <= tmp_65_reg_4199;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3064_p1 <= tmp_53_reg_4169;
        else 
            grp_fu_3064_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln52_fu_3085_p2 <= "1" when (ap_sig_allocacmp_kr = ap_const_lv4_9) else "0";
    r_cast14_cast_fu_3068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_cast14),5));
    trunc_ln54_1_cast_fu_3097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_kr),5));
end behav;
