-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    conv2_weights_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    conv2_weights_ce0 : OUT STD_LOGIC;
    conv2_weights_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv2_biases_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    conv2_biases_ce0 : OUT STD_LOGIC;
    conv2_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 : OUT STD_LOGIC;
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_739_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_739_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_739_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_739_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_739_p_ce : OUT STD_LOGIC;
    grp_fu_743_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_743_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_743_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_743_p_ce : OUT STD_LOGIC;
    grp_fu_747_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_747_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_747_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_747_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_747_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (86 downto 0) := "000000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (86 downto 0) := "000000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (86 downto 0) := "000000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (86 downto 0) := "000000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (86 downto 0) := "000000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (86 downto 0) := "000000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (86 downto 0) := "000000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (86 downto 0) := "000001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (86 downto 0) := "000010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (86 downto 0) := "000100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (86 downto 0) := "001000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (86 downto 0) := "010000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state87 : STD_LOGIC_VECTOR (86 downto 0) := "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_56 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010110";
    constant ap_const_lv8_55 : STD_LOGIC_VECTOR (7 downto 0) := "01010101";
    constant ap_const_lv8_AA : STD_LOGIC_VECTOR (7 downto 0) := "10101010";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv18_38720 : STD_LOGIC_VECTOR (17 downto 0) := "111000011100100000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv12_55 : STD_LOGIC_VECTOR (11 downto 0) := "000001010101";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv18_55 : STD_LOGIC_VECTOR (17 downto 0) := "000000000001010101";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv13_55 : STD_LOGIC_VECTOR (12 downto 0) := "0000001010101";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv19_55 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001010101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (86 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal reg_1159 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal input_fm_buffer_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1163 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1168 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal reg_1173 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal add_ln44_fu_1203_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln44_reg_2539 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln32_fu_1215_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln32_reg_2547 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_77_fu_1232_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln48_3_fu_1247_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln48_3_reg_2567 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal tmp_20_fu_1253_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_20_reg_2572 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln48_fu_1267_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln48_reg_2580 : STD_LOGIC_VECTOR (5 downto 0);
    signal ty_cast28_fu_1273_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ty_cast28_reg_2585 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal mul_ln50_fu_1291_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln50_reg_2590 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_fu_1303_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln50_reg_2598 : STD_LOGIC_VECTOR (6 downto 0);
    signal tx_7_cast29_fu_1309_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tx_7_cast29_reg_2603 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal output_fm_buffer_addr_3_reg_2608 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln51_fu_1333_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln51_reg_2616 : STD_LOGIC_VECTOR (6 downto 0);
    signal output_fm_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal add_ln66_9_fu_1339_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln66_9_reg_2626 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln63_fu_1369_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln63_reg_2644 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln66_fu_1375_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln131_3_fu_1380_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_3_reg_2654 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal add_ln131_fu_1396_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln131_reg_2662 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln131_fu_1424_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln131_reg_2667 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln131_fu_1390_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln4_reg_2672 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln132_fu_1452_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln132_reg_2676 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal add_ln132_fu_1468_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln132_reg_2684 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln135_1_fu_1504_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln135_1_reg_2689 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln132_fu_1462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_2694 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_65_reg_2699 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_66_reg_2704 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_67_reg_2709 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_68_reg_2714 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_69_reg_2719 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_70_reg_2724 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_71_reg_2729 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln133_fu_1547_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln133_reg_2742 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_83_fu_1559_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal empty_86_fu_1576_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal add_ln48_4_fu_1591_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln48_4_reg_2763 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal tmp_22_fu_1597_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_22_reg_2768 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln48_1_fu_1611_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln48_1_reg_2776 : STD_LOGIC_VECTOR (5 downto 0);
    signal ty_5_cast33_fu_1617_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ty_5_cast33_reg_2781 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal mul_ln50_1_fu_1635_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln50_1_reg_2786 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_1_fu_1647_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln50_1_reg_2794 : STD_LOGIC_VECTOR (6 downto 0);
    signal tx_8_cast34_fu_1653_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tx_8_cast34_reg_2799 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal output_fm_buffer_addr_7_reg_2804 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln51_1_fu_1677_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln51_1_reg_2812 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal add_ln66_10_fu_1683_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln66_10_reg_2822 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal add_ln63_1_fu_1713_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln63_1_reg_2840 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln66_1_fu_1719_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal add_ln131_4_fu_1724_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_4_reg_2855 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal add_ln131_1_fu_1740_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln131_1_reg_2863 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln131_1_fu_1768_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln131_1_reg_2868 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln131_1_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln131_1_reg_2873 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln132_1_fu_1796_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln132_1_reg_2877 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal add_ln132_1_fu_1812_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln132_1_reg_2885 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln135_3_fu_1848_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln135_3_reg_2890 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln132_1_fu_1806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal add_ln133_1_fu_1878_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln133_1_reg_2903 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln135_9_fu_1894_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln135_9_reg_2908 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln133_1_fu_1872_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_91_fu_1916_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal empty_93_fu_1933_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal add_ln48_5_fu_1948_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln48_5_reg_2929 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal tmp_24_fu_1954_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_24_reg_2934 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln48_2_fu_1968_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln48_2_reg_2942 : STD_LOGIC_VECTOR (5 downto 0);
    signal ty_6_cast38_fu_1974_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ty_6_cast38_reg_2947 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal mul_ln50_2_fu_1992_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln50_2_reg_2952 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_2_fu_2004_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln50_2_reg_2960 : STD_LOGIC_VECTOR (6 downto 0);
    signal tx_9_cast39_fu_2010_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal tx_9_cast39_reg_2965 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal output_fm_buffer_addr_10_reg_2970 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln51_2_fu_2034_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln51_2_reg_2978 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal add_ln66_11_fu_2040_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln66_11_reg_2988 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal add_ln63_2_fu_2070_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln63_2_reg_3006 : STD_LOGIC_VECTOR (6 downto 0);
    signal bitcast_ln66_2_fu_2076_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal add_ln131_5_fu_2081_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln131_5_reg_3021 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal add_ln131_2_fu_2097_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln131_2_reg_3029 : STD_LOGIC_VECTOR (5 downto 0);
    signal sext_ln131_2_fu_2125_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln131_2_reg_3034 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln131_2_fu_2091_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln131_2_reg_3039 : STD_LOGIC_VECTOR (2 downto 0);
    signal mul_ln132_2_fu_2153_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln132_2_reg_3043 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal add_ln132_2_fu_2169_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln132_2_reg_3051 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln135_5_fu_2205_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln135_5_reg_3056 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln132_2_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal add_ln133_2_fu_2235_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln133_2_reg_3069 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln135_13_fu_2251_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln135_13_reg_3074 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln133_2_fu_2229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_98_fu_2273_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal trunc_ln82_fu_2300_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln82_reg_3087 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal add_ln82_fu_2310_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln82_reg_3096 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln_reg_3101 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln82_fu_2304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln82_fu_2346_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln82_reg_3111 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal empty_84_fu_2350_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_84_reg_3116 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln86_1_fu_2379_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal sub_ln86_1_reg_3121 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal add_ln83_fu_2391_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln83_reg_3129 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_72_reg_3134 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_73_reg_3139 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_74_reg_3144 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_75_reg_3149 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_76_reg_3154 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_77_reg_3159 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_78_reg_3164 : STD_LOGIC_VECTOR (17 downto 0);
    signal srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_79_reg_3169 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln84_fu_2428_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln84_reg_3177 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_fu_2434_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_3182 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal icmp_ln87_fu_2473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_reg_3187 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal icmp_ln87_1_fu_2479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln87_1_reg_3192 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln87_fu_2489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal input_fm_buffer_1_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal input_fm_buffer_1_ce0 : STD_LOGIC;
    signal input_fm_buffer_1_we0 : STD_LOGIC;
    signal output_fm_buffer_address0 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_fm_buffer_ce0 : STD_LOGIC;
    signal output_fm_buffer_we0 : STD_LOGIC;
    signal output_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_ap_start : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_ap_done : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_ap_idle : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_ap_ready : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_we0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_tx0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 : STD_LOGIC;
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 : STD_LOGIC_VECTOR (18 downto 0);
    signal grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 : STD_LOGIC;
    signal empty_reg_660 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln32_fu_1209_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond894_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nout_reg_671 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln50_fu_1297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal phi_mul8_reg_682 : STD_LOGIC_VECTOR (11 downto 0);
    signal ty_reg_694 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln51_fu_1327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_fu_1261_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tx_7_reg_705 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln63_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_80_reg_716 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul_reg_727 : STD_LOGIC_VECTOR (12 downto 0);
    signal nin_reg_738 : STD_LOGIC_VECTOR (6 downto 0);
    signal nout_1_reg_749 : STD_LOGIC_VECTOR (5 downto 0);
    signal phi_mul10_reg_760 : STD_LOGIC_VECTOR (11 downto 0);
    signal ty_2_reg_772 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln133_fu_1541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tx_reg_783 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal empty_82_reg_794 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond11212_fu_1553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_85_reg_805 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond11313_fu_1570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nout_2_reg_816 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln50_1_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal phi_mul14_reg_827 : STD_LOGIC_VECTOR (11 downto 0);
    signal ty_5_reg_839 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln51_1_fu_1671_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_1_fu_1605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tx_8_reg_850 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln63_1_fu_1707_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add51_127_reg_861 : STD_LOGIC_VECTOR (31 downto 0);
    signal phi_mul12_reg_872 : STD_LOGIC_VECTOR (12 downto 0);
    signal nin_2_reg_883 : STD_LOGIC_VECTOR (6 downto 0);
    signal nout_3_reg_894 : STD_LOGIC_VECTOR (5 downto 0);
    signal phi_mul16_reg_905 : STD_LOGIC_VECTOR (11 downto 0);
    signal ty_3_reg_917 : STD_LOGIC_VECTOR (6 downto 0);
    signal tx_3_reg_928 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal empty_90_reg_939 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond13721_fu_1910_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_92_reg_950 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond13822_fu_1927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal nout_4_reg_961 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln50_2_fu_1998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal phi_mul20_reg_972 : STD_LOGIC_VECTOR (11 downto 0);
    signal ty_6_reg_984 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln51_2_fu_2028_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln48_2_fu_1962_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tx_9_reg_995 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln63_2_fu_2064_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal phi_mul18_reg_1006 : STD_LOGIC_VECTOR (12 downto 0);
    signal nin_3_reg_1017 : STD_LOGIC_VECTOR (6 downto 0);
    signal add51_228_reg_1028 : STD_LOGIC_VECTOR (31 downto 0);
    signal nout_5_reg_1039 : STD_LOGIC_VECTOR (5 downto 0);
    signal phi_mul22_reg_1050 : STD_LOGIC_VECTOR (11 downto 0);
    signal ty_4_reg_1062 : STD_LOGIC_VECTOR (6 downto 0);
    signal tx_5_reg_1073 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal empty_97_reg_1084 : STD_LOGIC_VECTOR (17 downto 0);
    signal exitcond16230_fu_2267_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal yr_reg_1095 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln84_fu_2422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xr_reg_1106 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln83_fu_2385_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state87 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state87 : signal is "none";
    signal grp_load_buffer_tile_c2_fu_1117_ap_start_reg : STD_LOGIC := '0';
    signal p_cast40_fu_1238_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast43_fu_1322_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_1_fu_1354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_3_fu_1359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_5_fu_1519_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_6_fu_1536_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast44_fu_1565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast46_fu_1582_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast48_fu_1666_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_5_fu_1698_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_7_fu_1703_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_12_fu_1863_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_14_fu_1899_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal p_cast49_fu_1922_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast52_fu_1939_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast54_fu_2023_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_9_fu_2055_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln66_11_fu_2060_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_20_fu_2220_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln135_22_fu_2256_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal p_cast55_fu_2279_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln82_fu_2295_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln86_4_fu_2410_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul24_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal tj_fu_182 : STD_LOGIC_VECTOR (1 downto 0);
    signal nr_fu_194 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal grp_fu_1143_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1143_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal grp_fu_1150_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln48_fu_1243_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ty_cast_fu_1277_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_78_fu_1281_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln50_fu_1291_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln50_fu_1291_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tx_7_cast_fu_1313_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_79_fu_1317_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln66_fu_1345_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln66_fu_1349_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2495_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln131_fu_1386_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_1406_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln135_1_fu_1414_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln135_fu_1402_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln135_fu_1418_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln135_2_fu_1438_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln135_2_fu_1442_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln132_fu_1452_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln132_fu_1452_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln132_1_fu_1458_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_81_fu_1474_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln135_3_fu_1479_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln135_3_fu_1483_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln135_fu_1492_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl1_fu_1496_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln135_fu_1488_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln135_4_fu_1510_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln135_4_fu_1514_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln135_5_fu_1531_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln48_1_fu_1587_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ty_5_cast_fu_1621_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_87_fu_1625_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln50_1_fu_1635_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln50_1_fu_1635_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tx_8_cast_fu_1657_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_88_fu_1661_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln66_4_fu_1689_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln66_3_fu_1693_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2504_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln131_3_fu_1730_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_23_fu_1750_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln135_8_fu_1758_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln135_7_fu_1746_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln135_2_fu_1762_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln135_9_fu_1782_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln135_6_fu_1786_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln132_1_fu_1796_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln132_1_fu_1796_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln132_3_fu_1802_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_89_fu_1818_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln135_10_fu_1823_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln135_7_fu_1827_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln135_1_fu_1836_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl5_fu_1840_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln135_1_fu_1832_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln135_11_fu_1854_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln135_8_fu_1858_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln133_fu_1868_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln135_fu_1884_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln135_13_fu_1890_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal trunc_ln48_2_fu_1944_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ty_6_cast_fu_1978_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_94_fu_1982_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln50_2_fu_1992_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln50_2_fu_1992_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tx_9_cast_fu_2014_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal empty_95_fu_2018_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln66_8_fu_2046_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln66_6_fu_2050_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_2513_p4 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln131_4_fu_2087_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_25_fu_2107_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln135_16_fu_2115_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln135_15_fu_2103_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln135_4_fu_2119_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln135_17_fu_2139_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln135_10_fu_2143_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln132_2_fu_2153_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln132_2_fu_2153_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln132_5_fu_2159_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_96_fu_2175_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln135_18_fu_2180_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln135_11_fu_2184_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln135_2_fu_2193_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl7_fu_2197_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln135_2_fu_2189_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln135_19_fu_2211_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln135_12_fu_2215_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln133_1_fu_2225_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln135_1_fu_2241_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln135_21_fu_2247_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_s_fu_2329_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln86_1_fu_2336_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln86_fu_2326_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln86_fu_2340_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln86_2_fu_2354_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln86_fu_2358_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln86_fu_2367_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_shl3_fu_2371_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln86_fu_2363_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln86_3_fu_2401_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln86_1_fu_2405_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal bitcast_ln87_fu_2455_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_2459_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln87_fu_2469_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln87_fu_2485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2495_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2495_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2495_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_fu_2504_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2504_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2504_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal grp_fu_2513_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2513_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_2513_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (86 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ST_fsm_state87_blk : STD_LOGIC;
    signal mul_ln132_1_fu_1796_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln132_2_fu_2153_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln132_fu_1452_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln50_1_fu_1635_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln50_2_fu_1992_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal mul_ln50_fu_1291_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_load_buffer_tile_c2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_fm_buffer_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        input_fm_buffer_ce0 : OUT STD_LOGIC;
        input_fm_buffer_we0 : OUT STD_LOGIC;
        input_fm_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        tx0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ty0 : IN STD_LOGIC_VECTOR (7 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 : OUT STD_LOGIC;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_mul_12ns_8ns_18_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;


    component srcnn_mux_8_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (12 downto 0);
        din1 : IN STD_LOGIC_VECTOR (6 downto 0);
        din2 : IN STD_LOGIC_VECTOR (6 downto 0);
        din3 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (18 downto 0) );
    end component;


    component srcnn_conv2_input_fm_buffer_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (18 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_output_fm_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    input_fm_buffer_1_U : component srcnn_conv2_input_fm_buffer_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 462400,
        AddressWidth => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => input_fm_buffer_1_address0,
        ce0 => input_fm_buffer_1_ce0,
        we0 => input_fm_buffer_1_we0,
        d0 => grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_d0,
        q0 => input_fm_buffer_1_q0);

    output_fm_buffer_U : component srcnn_conv2_output_fm_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 231200,
        AddressWidth => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => output_fm_buffer_address0,
        ce0 => output_fm_buffer_ce0,
        we0 => output_fm_buffer_we0,
        d0 => output_fm_buffer_d0,
        q0 => output_fm_buffer_q0);

    grp_load_buffer_tile_c2_fu_1117 : component srcnn_load_buffer_tile_c2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_buffer_tile_c2_fu_1117_ap_start,
        ap_done => grp_load_buffer_tile_c2_fu_1117_ap_done,
        ap_idle => grp_load_buffer_tile_c2_fu_1117_ap_idle,
        ap_ready => grp_load_buffer_tile_c2_fu_1117_ap_ready,
        input_fm_buffer_address0 => grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_address0,
        input_fm_buffer_ce0 => grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_ce0,
        input_fm_buffer_we0 => grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_we0,
        input_fm_buffer_d0 => grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_d0,
        tx0 => grp_load_buffer_tile_c2_fu_1117_tx0,
        ty0 => phi_mul24_fu_178,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 => grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0);

    mul_12ns_8ns_18_1_1_U51 : component srcnn_mul_12ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln50_fu_1291_p0,
        din1 => mul_ln50_fu_1291_p1,
        dout => mul_ln50_fu_1291_p2);

    mul_12ns_8ns_18_1_1_U52 : component srcnn_mul_12ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln132_fu_1452_p0,
        din1 => mul_ln132_fu_1452_p1,
        dout => mul_ln132_fu_1452_p2);

    mul_12ns_8ns_18_1_1_U53 : component srcnn_mul_12ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln50_1_fu_1635_p0,
        din1 => mul_ln50_1_fu_1635_p1,
        dout => mul_ln50_1_fu_1635_p2);

    mul_12ns_8ns_18_1_1_U54 : component srcnn_mul_12ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln132_1_fu_1796_p0,
        din1 => mul_ln132_1_fu_1796_p1,
        dout => mul_ln132_1_fu_1796_p2);

    mul_12ns_8ns_18_1_1_U55 : component srcnn_mul_12ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln50_2_fu_1992_p0,
        din1 => mul_ln50_2_fu_1992_p1,
        dout => mul_ln50_2_fu_1992_p2);

    mul_12ns_8ns_18_1_1_U56 : component srcnn_mul_12ns_8ns_18_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 12,
        din1_WIDTH => 8,
        dout_WIDTH => 18)
    port map (
        din0 => mul_ln132_2_fu_2153_p0,
        din1 => mul_ln132_2_fu_2153_p1,
        dout => mul_ln132_2_fu_2153_p2);

    mux_8_3_32_1_1_U57 : component srcnn_mux_8_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0,
        din1 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0,
        din2 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0,
        din3 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0,
        din4 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0,
        din5 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0,
        din6 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0,
        din7 => srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0,
        din8 => trunc_ln_reg_3101,
        dout => tmp_fu_2434_p10);

    ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1_U58 : component srcnn_ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        din3_WIDTH => 7,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => phi_mul_reg_727,
        din1 => grp_fu_2495_p1,
        din2 => grp_fu_2495_p2,
        din3 => grp_fu_2495_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_2495_p4);

    ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1_U59 : component srcnn_ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        din3_WIDTH => 7,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => phi_mul12_reg_872,
        din1 => grp_fu_2504_p1,
        din2 => grp_fu_2504_p2,
        din3 => grp_fu_2504_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_2504_p4);

    ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1_U60 : component srcnn_ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 13,
        din1_WIDTH => 7,
        din2_WIDTH => 7,
        din3_WIDTH => 7,
        dout_WIDTH => 19)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => phi_mul18_reg_1006,
        din1 => grp_fu_2513_p1,
        din2 => grp_fu_2513_p2,
        din3 => grp_fu_2513_p3,
        ce => ap_const_logic_1,
        dout => grp_fu_2513_p4);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_load_buffer_tile_c2_fu_1117_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_buffer_tile_c2_fu_1117_ap_start_reg <= ap_const_logic_0;
            else
                if ((((exitcond13822_fu_1927_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state51)) or ((exitcond11313_fu_1570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((exitcond894_fu_1226_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_load_buffer_tile_c2_fu_1117_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_buffer_tile_c2_fu_1117_ap_ready = ap_const_logic_1)) then 
                    grp_load_buffer_tile_c2_fu_1117_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    add51_127_reg_861_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                add51_127_reg_861 <= output_fm_buffer_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                add51_127_reg_861 <= grp_fu_739_p_dout0;
            end if; 
        end if;
    end process;

    add51_228_reg_1028_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                add51_228_reg_1028 <= output_fm_buffer_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                add51_228_reg_1028 <= grp_fu_739_p_dout0;
            end if; 
        end if;
    end process;

    empty_80_reg_716_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                empty_80_reg_716 <= output_fm_buffer_q0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                empty_80_reg_716 <= grp_fu_739_p_dout0;
            end if; 
        end if;
    end process;

    empty_82_reg_794_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_fu_1390_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                empty_82_reg_794 <= ap_const_lv18_0;
            elsif (((exitcond11212_fu_1553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                empty_82_reg_794 <= empty_83_fu_1559_p2;
            end if; 
        end if;
    end process;

    empty_85_reg_805_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond11212_fu_1553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                empty_85_reg_805 <= ap_const_lv18_0;
            elsif (((exitcond11313_fu_1570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                empty_85_reg_805 <= empty_86_fu_1576_p2;
            end if; 
        end if;
    end process;

    empty_90_reg_939_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_1_fu_1734_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                empty_90_reg_939 <= ap_const_lv18_0;
            elsif (((exitcond13721_fu_1910_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                empty_90_reg_939 <= empty_91_fu_1916_p2;
            end if; 
        end if;
    end process;

    empty_92_reg_950_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond13721_fu_1910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
                empty_92_reg_950 <= ap_const_lv18_0;
            elsif (((exitcond13822_fu_1927_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state51))) then 
                empty_92_reg_950 <= empty_93_fu_1933_p2;
            end if; 
        end if;
    end process;

    empty_97_reg_1084_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_2_fu_2091_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                empty_97_reg_1084 <= ap_const_lv18_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state74) and (exitcond16230_fu_2267_p2 = ap_const_lv1_0))) then 
                empty_97_reg_1084 <= empty_98_fu_2273_p2;
            end if; 
        end if;
    end process;

    empty_reg_660_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond894_fu_1226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                empty_reg_660 <= empty_77_fu_1232_p2;
            elsif (((icmp_ln32_fu_1209_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                empty_reg_660 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;

    nin_2_reg_883_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                nin_2_reg_883 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                nin_2_reg_883 <= add_ln63_1_reg_2840;
            end if; 
        end if;
    end process;

    nin_3_reg_1017_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                nin_3_reg_1017 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                nin_3_reg_1017 <= add_ln63_2_reg_3006;
            end if; 
        end if;
    end process;

    nin_reg_738_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                nin_reg_738 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                nin_reg_738 <= add_ln63_reg_2644;
            end if; 
        end if;
    end process;

    nout_1_reg_749_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1261_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                nout_1_reg_749 <= ap_const_lv6_0;
            elsif (((icmp_ln132_fu_1462_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                nout_1_reg_749 <= add_ln131_reg_2662;
            end if; 
        end if;
    end process;

    nout_2_reg_816_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                nout_2_reg_816 <= ap_const_lv6_0;
            elsif (((icmp_ln50_1_fu_1641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                nout_2_reg_816 <= add_ln48_1_reg_2776;
            end if; 
        end if;
    end process;

    nout_3_reg_894_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_1_fu_1605_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                nout_3_reg_894 <= ap_const_lv6_0;
            elsif (((icmp_ln132_1_fu_1806_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                nout_3_reg_894 <= add_ln131_1_reg_2863;
            end if; 
        end if;
    end process;

    nout_4_reg_961_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                nout_4_reg_961 <= ap_const_lv6_0;
            elsif (((icmp_ln50_2_fu_1998_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                nout_4_reg_961 <= add_ln48_2_reg_2942;
            end if; 
        end if;
    end process;

    nout_5_reg_1039_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_2_fu_1962_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                nout_5_reg_1039 <= ap_const_lv6_0;
            elsif (((icmp_ln132_2_fu_2163_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                nout_5_reg_1039 <= add_ln131_2_reg_3029;
            end if; 
        end if;
    end process;

    nout_reg_671_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                nout_reg_671 <= ap_const_lv6_0;
            elsif (((icmp_ln50_fu_1297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                nout_reg_671 <= add_ln48_reg_2580;
            end if; 
        end if;
    end process;

    nr_fu_194_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_1209_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                nr_fu_194 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln83_fu_2385_p2 = ap_const_lv1_1))) then 
                nr_fu_194 <= add_ln82_reg_3096;
            end if; 
        end if;
    end process;

    phi_mul10_reg_760_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1261_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                phi_mul10_reg_760 <= ap_const_lv12_0;
            elsif (((icmp_ln132_fu_1462_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                phi_mul10_reg_760 <= add_ln131_3_reg_2654;
            end if; 
        end if;
    end process;

    phi_mul12_reg_872_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                phi_mul12_reg_872 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
                phi_mul12_reg_872 <= add_ln66_10_reg_2822;
            end if; 
        end if;
    end process;

    phi_mul14_reg_827_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then 
                phi_mul14_reg_827 <= ap_const_lv12_0;
            elsif (((icmp_ln50_1_fu_1641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                phi_mul14_reg_827 <= add_ln48_4_reg_2763;
            end if; 
        end if;
    end process;

    phi_mul16_reg_905_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_1_fu_1605_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                phi_mul16_reg_905 <= ap_const_lv12_0;
            elsif (((icmp_ln132_1_fu_1806_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                phi_mul16_reg_905 <= add_ln131_4_reg_2855;
            end if; 
        end if;
    end process;

    phi_mul18_reg_1006_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
                phi_mul18_reg_1006 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
                phi_mul18_reg_1006 <= add_ln66_11_reg_2988;
            end if; 
        end if;
    end process;

    phi_mul20_reg_972_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                phi_mul20_reg_972 <= ap_const_lv12_0;
            elsif (((icmp_ln50_2_fu_1998_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                phi_mul20_reg_972 <= add_ln48_5_reg_2929;
            end if; 
        end if;
    end process;

    phi_mul22_reg_1050_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_2_fu_1962_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                phi_mul22_reg_1050 <= ap_const_lv12_0;
            elsif (((icmp_ln132_2_fu_2163_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                phi_mul22_reg_1050 <= add_ln131_5_reg_3021;
            end if; 
        end if;
    end process;

    phi_mul24_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                phi_mul24_fu_178 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state74) and (exitcond16230_fu_2267_p2 = ap_const_lv1_1))) then 
                phi_mul24_fu_178 <= add_ln44_reg_2539;
            end if; 
        end if;
    end process;

    phi_mul8_reg_682_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                phi_mul8_reg_682 <= ap_const_lv12_0;
            elsif (((icmp_ln50_fu_1297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                phi_mul8_reg_682 <= add_ln48_3_reg_2567;
            end if; 
        end if;
    end process;

    phi_mul_reg_727_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                phi_mul_reg_727 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                phi_mul_reg_727 <= add_ln66_9_reg_2626;
            end if; 
        end if;
    end process;

    tj_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                tj_fu_182 <= ap_const_lv2_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state74) and (exitcond16230_fu_2267_p2 = ap_const_lv1_1))) then 
                tj_fu_182 <= add_ln32_reg_2547;
            end if; 
        end if;
    end process;

    tx_3_reg_928_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln132_1_fu_1806_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then 
                tx_3_reg_928 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
                tx_3_reg_928 <= add_ln133_1_reg_2903;
            end if; 
        end if;
    end process;

    tx_5_reg_1073_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln132_2_fu_2163_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70))) then 
                tx_5_reg_1073 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
                tx_5_reg_1073 <= add_ln133_2_reg_3069;
            end if; 
        end if;
    end process;

    tx_7_reg_705_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_fu_1297_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                tx_7_reg_705 <= ap_const_lv7_0;
            elsif (((icmp_ln63_fu_1363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                tx_7_reg_705 <= add_ln51_reg_2616;
            end if; 
        end if;
    end process;

    tx_8_reg_850_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_1_fu_1641_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                tx_8_reg_850 <= ap_const_lv7_0;
            elsif (((icmp_ln63_1_fu_1707_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                tx_8_reg_850 <= add_ln51_1_reg_2812;
            end if; 
        end if;
    end process;

    tx_9_reg_995_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln50_2_fu_1998_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state54))) then 
                tx_9_reg_995 <= ap_const_lv7_0;
            elsif (((icmp_ln63_2_fu_2064_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then 
                tx_9_reg_995 <= add_ln51_2_reg_2978;
            end if; 
        end if;
    end process;

    tx_reg_783_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln132_fu_1462_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                tx_reg_783 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                tx_reg_783 <= add_ln133_reg_2742;
            end if; 
        end if;
    end process;

    ty_2_reg_772_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_fu_1390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
                ty_2_reg_772 <= ap_const_lv7_0;
            elsif (((icmp_ln133_fu_1541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                ty_2_reg_772 <= add_ln132_reg_2684;
            end if; 
        end if;
    end process;

    ty_3_reg_917_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_1_fu_1734_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
                ty_3_reg_917 <= ap_const_lv7_0;
            elsif (((icmp_ln133_1_fu_1872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then 
                ty_3_reg_917 <= add_ln132_1_reg_2885;
            end if; 
        end if;
    end process;

    ty_4_reg_1062_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_2_fu_2091_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then 
                ty_4_reg_1062 <= ap_const_lv7_0;
            elsif (((icmp_ln133_2_fu_2229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then 
                ty_4_reg_1062 <= add_ln132_2_reg_3051;
            end if; 
        end if;
    end process;

    ty_5_reg_839_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_1_fu_1605_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                ty_5_reg_839 <= ap_const_lv7_0;
            elsif (((icmp_ln51_1_fu_1671_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                ty_5_reg_839 <= add_ln50_1_reg_2794;
            end if; 
        end if;
    end process;

    ty_6_reg_984_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_2_fu_1962_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                ty_6_reg_984 <= ap_const_lv7_0;
            elsif (((icmp_ln51_2_fu_2028_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
                ty_6_reg_984 <= add_ln50_2_reg_2960;
            end if; 
        end if;
    end process;

    ty_reg_694_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln48_fu_1261_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                ty_reg_694 <= ap_const_lv7_0;
            elsif (((icmp_ln51_fu_1327_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                ty_reg_694 <= add_ln50_reg_2598;
            end if; 
        end if;
    end process;

    xr_reg_1106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state87)) then 
                xr_reg_1106 <= add_ln84_reg_3177;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln83_fu_2385_p2 = ap_const_lv1_0))) then 
                xr_reg_1106 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    yr_reg_1095_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
                yr_reg_1095 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state78) and (icmp_ln84_fu_2422_p2 = ap_const_lv1_1))) then 
                yr_reg_1095 <= add_ln83_reg_3129;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                add_ln131_1_reg_2863 <= add_ln131_1_fu_1740_p2;
                add_ln131_4_reg_2855 <= add_ln131_4_fu_1724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                add_ln131_2_reg_3029 <= add_ln131_2_fu_2097_p2;
                add_ln131_5_reg_3021 <= add_ln131_5_fu_2081_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                add_ln131_3_reg_2654 <= add_ln131_3_fu_1380_p2;
                add_ln131_reg_2662 <= add_ln131_fu_1396_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                add_ln132_1_reg_2885 <= add_ln132_1_fu_1812_p2;
                mul_ln132_1_reg_2877 <= mul_ln132_1_fu_1796_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                add_ln132_2_reg_3051 <= add_ln132_2_fu_2169_p2;
                mul_ln132_2_reg_3043 <= mul_ln132_2_fu_2153_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                add_ln132_reg_2684 <= add_ln132_fu_1468_p2;
                mul_ln132_reg_2676 <= mul_ln132_fu_1452_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                add_ln133_1_reg_2903 <= add_ln133_1_fu_1878_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                add_ln133_2_reg_3069 <= add_ln133_2_fu_2235_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                add_ln133_reg_2742 <= add_ln133_fu_1547_p2;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_2694 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_65_reg_2699 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_66_reg_2704 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_67_reg_2709 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_68_reg_2714 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_69_reg_2719 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_70_reg_2724 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_71_reg_2729 <= zext_ln135_5_fu_1519_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln133_2_fu_2229_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                add_ln135_13_reg_3074 <= add_ln135_13_fu_2251_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln133_1_fu_1872_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                add_ln135_9_reg_2908 <= add_ln135_9_fu_1894_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln32_reg_2547 <= add_ln32_fu_1215_p2;
                add_ln44_reg_2539 <= add_ln44_fu_1203_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                add_ln48_1_reg_2776 <= add_ln48_1_fu_1611_p2;
                add_ln48_4_reg_2763 <= add_ln48_4_fu_1591_p2;
                    tmp_22_reg_2768(10 downto 6) <= tmp_22_fu_1597_p3(10 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                add_ln48_2_reg_2942 <= add_ln48_2_fu_1968_p2;
                add_ln48_5_reg_2929 <= add_ln48_5_fu_1948_p2;
                    tmp_24_reg_2934(10 downto 6) <= tmp_24_fu_1954_p3(10 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                add_ln48_3_reg_2567 <= add_ln48_3_fu_1247_p2;
                add_ln48_reg_2580 <= add_ln48_fu_1267_p2;
                    tmp_20_reg_2572(10 downto 6) <= tmp_20_fu_1253_p3(10 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                add_ln50_1_reg_2794 <= add_ln50_1_fu_1647_p2;
                mul_ln50_1_reg_2786 <= mul_ln50_1_fu_1635_p2;
                    ty_5_cast33_reg_2781(6 downto 0) <= ty_5_cast33_fu_1617_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                add_ln50_2_reg_2960 <= add_ln50_2_fu_2004_p2;
                mul_ln50_2_reg_2952 <= mul_ln50_2_fu_1992_p2;
                    ty_6_cast38_reg_2947(6 downto 0) <= ty_6_cast38_fu_1974_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                add_ln50_reg_2598 <= add_ln50_fu_1303_p2;
                mul_ln50_reg_2590 <= mul_ln50_fu_1291_p2;
                    ty_cast28_reg_2585(6 downto 0) <= ty_cast28_fu_1273_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                add_ln51_1_reg_2812 <= add_ln51_1_fu_1677_p2;
                output_fm_buffer_addr_7_reg_2804 <= p_cast48_fu_1666_p1(18 - 1 downto 0);
                    tx_8_cast34_reg_2799(6 downto 0) <= tx_8_cast34_fu_1653_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                add_ln51_2_reg_2978 <= add_ln51_2_fu_2034_p2;
                output_fm_buffer_addr_10_reg_2970 <= p_cast54_fu_2023_p1(18 - 1 downto 0);
                    tx_9_cast39_reg_2965(6 downto 0) <= tx_9_cast39_fu_2010_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln51_reg_2616 <= add_ln51_fu_1333_p2;
                output_fm_buffer_addr_3_reg_2608 <= p_cast43_fu_1322_p1(18 - 1 downto 0);
                    tx_7_cast29_reg_2603(6 downto 0) <= tx_7_cast29_fu_1309_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                add_ln63_1_reg_2840 <= add_ln63_1_fu_1713_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                add_ln63_2_reg_3006 <= add_ln63_2_fu_2070_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                add_ln63_reg_2644 <= add_ln63_fu_1369_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                add_ln66_10_reg_2822 <= add_ln66_10_fu_1683_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                add_ln66_11_reg_2988 <= add_ln66_11_fu_2040_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln66_9_reg_2626 <= add_ln66_9_fu_1339_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                add_ln82_reg_3096 <= add_ln82_fu_2310_p2;
                trunc_ln82_reg_3087 <= trunc_ln82_fu_2300_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                add_ln83_reg_3129 <= add_ln83_fu_2391_p2;
                sub_ln86_1_reg_3121 <= sub_ln86_1_fu_2379_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                add_ln84_reg_3177 <= add_ln84_fu_2428_p2;
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_72_reg_3134 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_73_reg_3139 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_74_reg_3144 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_75_reg_3149 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_76_reg_3154 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_77_reg_3159 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_78_reg_3164 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
                srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_79_reg_3169 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                empty_84_reg_3116 <= empty_84_fu_2350_p1;
                sext_ln82_reg_3111 <= sext_ln82_fu_2346_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state85)) then
                icmp_ln87_1_reg_3192 <= icmp_ln87_1_fu_2479_p2;
                icmp_ln87_reg_3187 <= icmp_ln87_fu_2473_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state13))) then
                reg_1159 <= conv2_weights_q0;
                reg_1163 <= input_fm_buffer_1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state64) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state16))) then
                reg_1168 <= grp_fu_743_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state83) or (ap_const_logic_1 = ap_CS_fsm_state20))) then
                reg_1173 <= grp_fu_739_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_1_fu_1734_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                sext_ln131_1_reg_2868 <= sext_ln131_1_fu_1768_p1;
                trunc_ln131_1_reg_2873 <= nout_3_reg_894(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_2_fu_2091_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                sext_ln131_2_reg_3034 <= sext_ln131_2_fu_2125_p1;
                trunc_ln131_2_reg_3039 <= nout_5_reg_1039(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln131_fu_1390_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                sext_ln131_reg_2667 <= sext_ln131_fu_1424_p1;
                trunc_ln4_reg_2672 <= nout_1_reg_749(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln132_fu_1462_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                sub_ln135_1_reg_2689 <= sub_ln135_1_fu_1504_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln132_1_fu_1806_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                sub_ln135_3_reg_2890 <= sub_ln135_3_fu_1848_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln132_2_fu_2163_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                sub_ln135_5_reg_3056 <= sub_ln135_5_fu_2205_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                tmp_reg_3182 <= tmp_fu_2434_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln82_fu_2304_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                trunc_ln_reg_3101 <= nr_fu_194(4 downto 2);
            end if;
        end if;
    end process;
    tmp_20_reg_2572(5 downto 0) <= "000000";
    ty_cast28_reg_2585(12 downto 7) <= "000000";
    tx_7_cast29_reg_2603(18 downto 7) <= "000000000000";
    tmp_22_reg_2768(5 downto 0) <= "000000";
    ty_5_cast33_reg_2781(12 downto 7) <= "000000";
    tx_8_cast34_reg_2799(18 downto 7) <= "000000000000";
    tmp_24_reg_2934(5 downto 0) <= "000000";
    ty_6_cast38_reg_2947(12 downto 7) <= "000000";
    tx_9_cast39_reg_2965(18 downto 7) <= "000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state21, icmp_ln131_fu_1390_p2, ap_CS_fsm_state22, icmp_ln132_fu_1462_p2, ap_CS_fsm_state23, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state36, ap_CS_fsm_state45, icmp_ln131_1_fu_1734_p2, ap_CS_fsm_state46, icmp_ln132_1_fu_1806_p2, ap_CS_fsm_state47, icmp_ln133_1_fu_1872_p2, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state55, ap_CS_fsm_state60, ap_CS_fsm_state69, icmp_ln131_2_fu_2091_p2, ap_CS_fsm_state70, icmp_ln132_2_fu_2163_p2, ap_CS_fsm_state71, icmp_ln133_2_fu_2229_p2, ap_CS_fsm_state74, ap_CS_fsm_state75, icmp_ln82_fu_2304_p2, ap_CS_fsm_state77, ap_CS_fsm_state78, grp_load_buffer_tile_c2_fu_1117_ap_done, icmp_ln32_fu_1209_p2, exitcond894_fu_1226_p2, icmp_ln50_fu_1297_p2, ap_CS_fsm_state4, icmp_ln51_fu_1327_p2, icmp_ln48_fu_1261_p2, icmp_ln63_fu_1363_p2, icmp_ln133_fu_1541_p2, exitcond11212_fu_1553_p2, exitcond11313_fu_1570_p2, icmp_ln50_1_fu_1641_p2, ap_CS_fsm_state28, icmp_ln51_1_fu_1671_p2, icmp_ln48_1_fu_1605_p2, icmp_ln63_1_fu_1707_p2, exitcond13721_fu_1910_p2, exitcond13822_fu_1927_p2, icmp_ln50_2_fu_1998_p2, ap_CS_fsm_state52, icmp_ln51_2_fu_2028_p2, icmp_ln48_2_fu_1962_p2, icmp_ln63_2_fu_2064_p2, exitcond16230_fu_2267_p2, icmp_ln84_fu_2422_p2, icmp_ln83_fu_2385_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln32_fu_1209_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((exitcond894_fu_1226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln48_fu_1261_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((icmp_ln50_fu_1297_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln51_fu_1327_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln63_fu_1363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state21 => 
                if (((icmp_ln131_fu_1390_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state22 => 
                if (((icmp_ln132_fu_1462_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln133_fu_1541_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state26 => 
                if (((exitcond11212_fu_1553_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((exitcond11313_fu_1570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state28))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln48_1_fu_1605_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                if (((icmp_ln50_1_fu_1641_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state31 => 
                if (((icmp_ln51_1_fu_1671_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln63_1_fu_1707_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state45 => 
                if (((icmp_ln131_1_fu_1734_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state46 => 
                if (((icmp_ln132_1_fu_1806_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state46))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state47 => 
                if (((icmp_ln133_1_fu_1872_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state48;
                end if;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state50 => 
                if (((exitcond13721_fu_1910_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                if (((exitcond13822_fu_1927_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state51))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state52 => 
                if (((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when ap_ST_fsm_state53 => 
                if (((icmp_ln48_2_fu_1962_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                if (((icmp_ln50_2_fu_1998_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state54))) then
                    ap_NS_fsm <= ap_ST_fsm_state53;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state55 => 
                if (((icmp_ln51_2_fu_2028_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state54;
                else
                    ap_NS_fsm <= ap_ST_fsm_state56;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                if (((icmp_ln63_2_fu_2064_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state61;
                end if;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                ap_NS_fsm <= ap_ST_fsm_state65;
            when ap_ST_fsm_state65 => 
                ap_NS_fsm <= ap_ST_fsm_state66;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state69 => 
                if (((icmp_ln131_2_fu_2091_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state69))) then
                    ap_NS_fsm <= ap_ST_fsm_state74;
                else
                    ap_NS_fsm <= ap_ST_fsm_state70;
                end if;
            when ap_ST_fsm_state70 => 
                if (((icmp_ln132_2_fu_2163_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state70))) then
                    ap_NS_fsm <= ap_ST_fsm_state69;
                else
                    ap_NS_fsm <= ap_ST_fsm_state71;
                end if;
            when ap_ST_fsm_state71 => 
                if (((icmp_ln133_2_fu_2229_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state71))) then
                    ap_NS_fsm <= ap_ST_fsm_state70;
                else
                    ap_NS_fsm <= ap_ST_fsm_state72;
                end if;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state74 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state74) and (exitcond16230_fu_2267_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state74;
                end if;
            when ap_ST_fsm_state75 => 
                if (((icmp_ln82_fu_2304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state76;
                end if;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state77) and (icmp_ln83_fu_2385_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state75;
                else
                    ap_NS_fsm <= ap_ST_fsm_state78;
                end if;
            when ap_ST_fsm_state78 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state78) and (icmp_ln84_fu_2422_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state77;
                else
                    ap_NS_fsm <= ap_ST_fsm_state79;
                end if;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                ap_NS_fsm <= ap_ST_fsm_state83;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                ap_NS_fsm <= ap_ST_fsm_state85;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                ap_NS_fsm <= ap_ST_fsm_state87;
            when ap_ST_fsm_state87 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln131_1_fu_1740_p2 <= std_logic_vector(unsigned(nout_3_reg_894) + unsigned(ap_const_lv6_1));
    add_ln131_2_fu_2097_p2 <= std_logic_vector(unsigned(nout_5_reg_1039) + unsigned(ap_const_lv6_1));
    add_ln131_3_fu_1380_p2 <= std_logic_vector(unsigned(phi_mul10_reg_760) + unsigned(ap_const_lv12_55));
    add_ln131_4_fu_1724_p2 <= std_logic_vector(unsigned(phi_mul16_reg_905) + unsigned(ap_const_lv12_55));
    add_ln131_5_fu_2081_p2 <= std_logic_vector(unsigned(phi_mul22_reg_1050) + unsigned(ap_const_lv12_55));
    add_ln131_fu_1396_p2 <= std_logic_vector(unsigned(nout_1_reg_749) + unsigned(ap_const_lv6_1));
    add_ln132_1_fu_1812_p2 <= std_logic_vector(unsigned(ty_3_reg_917) + unsigned(ap_const_lv7_1));
    add_ln132_2_fu_2169_p2 <= std_logic_vector(unsigned(ty_4_reg_1062) + unsigned(ap_const_lv7_1));
    add_ln132_fu_1468_p2 <= std_logic_vector(unsigned(ty_2_reg_772) + unsigned(ap_const_lv7_1));
    add_ln133_1_fu_1878_p2 <= std_logic_vector(unsigned(tx_3_reg_928) + unsigned(ap_const_lv7_1));
    add_ln133_2_fu_2235_p2 <= std_logic_vector(unsigned(tx_5_reg_1073) + unsigned(ap_const_lv7_1));
    add_ln133_fu_1547_p2 <= std_logic_vector(unsigned(tx_reg_783) + unsigned(ap_const_lv7_1));
    add_ln135_10_fu_2143_p2 <= std_logic_vector(unsigned(phi_mul22_reg_1050) + unsigned(zext_ln135_17_fu_2139_p1));
    add_ln135_11_fu_2184_p2 <= std_logic_vector(signed(sext_ln131_2_reg_3034) + signed(zext_ln135_18_fu_2180_p1));
    add_ln135_12_fu_2215_p2 <= std_logic_vector(unsigned(mul_ln132_2_reg_3043) + unsigned(zext_ln135_19_fu_2211_p1));
    add_ln135_13_fu_2251_p2 <= std_logic_vector(unsigned(sub_ln135_5_reg_3056) + unsigned(zext_ln135_21_fu_2247_p1));
    add_ln135_1_fu_2241_p2 <= std_logic_vector(unsigned(zext_ln133_1_fu_2225_p1) + unsigned(ap_const_lv8_AA));
    add_ln135_2_fu_1442_p2 <= std_logic_vector(unsigned(phi_mul10_reg_760) + unsigned(zext_ln135_2_fu_1438_p1));
    add_ln135_3_fu_1483_p2 <= std_logic_vector(signed(sext_ln131_reg_2667) + signed(zext_ln135_3_fu_1479_p1));
    add_ln135_4_fu_1514_p2 <= std_logic_vector(unsigned(sub_ln135_1_reg_2689) + unsigned(zext_ln135_4_fu_1510_p1));
    add_ln135_5_fu_1531_p2 <= std_logic_vector(unsigned(mul_ln132_reg_2676) + unsigned(zext_ln135_4_fu_1510_p1));
    add_ln135_6_fu_1786_p2 <= std_logic_vector(unsigned(phi_mul16_reg_905) + unsigned(zext_ln135_9_fu_1782_p1));
    add_ln135_7_fu_1827_p2 <= std_logic_vector(signed(sext_ln131_1_reg_2868) + signed(zext_ln135_10_fu_1823_p1));
    add_ln135_8_fu_1858_p2 <= std_logic_vector(unsigned(mul_ln132_1_reg_2877) + unsigned(zext_ln135_11_fu_1854_p1));
    add_ln135_9_fu_1894_p2 <= std_logic_vector(unsigned(sub_ln135_3_reg_2890) + unsigned(zext_ln135_13_fu_1890_p1));
    add_ln135_fu_1884_p2 <= std_logic_vector(unsigned(zext_ln133_fu_1868_p1) + unsigned(ap_const_lv8_55));
    add_ln32_fu_1215_p2 <= std_logic_vector(unsigned(tj_fu_182) + unsigned(ap_const_lv2_1));
    add_ln44_fu_1203_p2 <= std_logic_vector(unsigned(phi_mul24_fu_178) + unsigned(ap_const_lv8_55));
    add_ln48_1_fu_1611_p2 <= std_logic_vector(unsigned(nout_2_reg_816) + unsigned(ap_const_lv6_1));
    add_ln48_2_fu_1968_p2 <= std_logic_vector(unsigned(nout_4_reg_961) + unsigned(ap_const_lv6_1));
    add_ln48_3_fu_1247_p2 <= std_logic_vector(unsigned(phi_mul8_reg_682) + unsigned(ap_const_lv12_55));
    add_ln48_4_fu_1591_p2 <= std_logic_vector(unsigned(phi_mul14_reg_827) + unsigned(ap_const_lv12_55));
    add_ln48_5_fu_1948_p2 <= std_logic_vector(unsigned(phi_mul20_reg_972) + unsigned(ap_const_lv12_55));
    add_ln48_fu_1267_p2 <= std_logic_vector(unsigned(nout_reg_671) + unsigned(ap_const_lv6_1));
    add_ln50_1_fu_1647_p2 <= std_logic_vector(unsigned(ty_5_reg_839) + unsigned(ap_const_lv7_1));
    add_ln50_2_fu_2004_p2 <= std_logic_vector(unsigned(ty_6_reg_984) + unsigned(ap_const_lv7_1));
    add_ln50_fu_1303_p2 <= std_logic_vector(unsigned(ty_reg_694) + unsigned(ap_const_lv7_1));
    add_ln51_1_fu_1677_p2 <= std_logic_vector(unsigned(tx_8_reg_850) + unsigned(ap_const_lv7_1));
    add_ln51_2_fu_2034_p2 <= std_logic_vector(unsigned(tx_9_reg_995) + unsigned(ap_const_lv7_1));
    add_ln51_fu_1333_p2 <= std_logic_vector(unsigned(tx_7_reg_705) + unsigned(ap_const_lv7_1));
    add_ln63_1_fu_1713_p2 <= std_logic_vector(unsigned(nin_2_reg_883) + unsigned(ap_const_lv7_1));
    add_ln63_2_fu_2070_p2 <= std_logic_vector(unsigned(nin_3_reg_1017) + unsigned(ap_const_lv7_1));
    add_ln63_fu_1369_p2 <= std_logic_vector(unsigned(nin_reg_738) + unsigned(ap_const_lv7_1));
    add_ln66_10_fu_1683_p2 <= std_logic_vector(unsigned(phi_mul12_reg_872) + unsigned(ap_const_lv13_55));
    add_ln66_11_fu_2040_p2 <= std_logic_vector(unsigned(phi_mul18_reg_1006) + unsigned(ap_const_lv13_55));
    add_ln66_3_fu_1693_p2 <= std_logic_vector(unsigned(tmp_22_reg_2768) + unsigned(zext_ln66_4_fu_1689_p1));
    add_ln66_6_fu_2050_p2 <= std_logic_vector(unsigned(tmp_24_reg_2934) + unsigned(zext_ln66_8_fu_2046_p1));
    add_ln66_9_fu_1339_p2 <= std_logic_vector(unsigned(phi_mul_reg_727) + unsigned(ap_const_lv13_55));
    add_ln66_fu_1349_p2 <= std_logic_vector(unsigned(tmp_20_reg_2572) + unsigned(zext_ln66_fu_1345_p1));
    add_ln82_fu_2310_p2 <= std_logic_vector(unsigned(nr_fu_194) + unsigned(ap_const_lv6_1));
    add_ln83_fu_2391_p2 <= std_logic_vector(unsigned(yr_reg_1095) + unsigned(ap_const_lv8_1));
    add_ln84_fu_2428_p2 <= std_logic_vector(unsigned(xr_reg_1106) + unsigned(ap_const_lv8_1));
    add_ln86_1_fu_2405_p2 <= std_logic_vector(unsigned(sub_ln86_1_reg_3121) + unsigned(zext_ln86_3_fu_2401_p1));
    add_ln86_fu_2358_p2 <= std_logic_vector(signed(sext_ln82_reg_3111) + signed(zext_ln86_2_fu_2354_p1));
    and_ln87_fu_2489_p2 <= (or_ln87_fu_2485_p2 and grp_fu_747_p_dout0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state87 <= ap_CS_fsm(86);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_ap_done)
    begin
        if ((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;
    ap_ST_fsm_state45_blk <= ap_const_logic_0;
    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_ap_done)
    begin
        if ((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_ap_done)
    begin
        if ((grp_load_buffer_tile_c2_fu_1117_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state53_blk <= ap_const_logic_0;
    ap_ST_fsm_state54_blk <= ap_const_logic_0;
    ap_ST_fsm_state55_blk <= ap_const_logic_0;
    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;
    ap_ST_fsm_state64_blk <= ap_const_logic_0;
    ap_ST_fsm_state65_blk <= ap_const_logic_0;
    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;
    ap_ST_fsm_state82_blk <= ap_const_logic_0;
    ap_ST_fsm_state83_blk <= ap_const_logic_0;
    ap_ST_fsm_state84_blk <= ap_const_logic_0;
    ap_ST_fsm_state85_blk <= ap_const_logic_0;
    ap_ST_fsm_state86_blk <= ap_const_logic_0;
    ap_ST_fsm_state87_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state75, icmp_ln82_fu_2304_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln82_fu_2304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state75)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state75, icmp_ln82_fu_2304_p2)
    begin
        if (((icmp_ln82_fu_2304_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state75))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln66_1_fu_1719_p1 <= reg_1159;
    bitcast_ln66_2_fu_2076_p1 <= reg_1159;
    bitcast_ln66_fu_1375_p1 <= reg_1159;
    bitcast_ln87_fu_2455_p1 <= reg_1173;
    conv2_biases_address0 <= zext_ln82_fu_2295_p1(5 - 1 downto 0);

    conv2_biases_ce0_assign_proc : process(ap_CS_fsm_state75)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            conv2_biases_ce0 <= ap_const_logic_1;
        else 
            conv2_biases_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_weights_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state36, ap_CS_fsm_state60, zext_ln66_1_fu_1354_p1, zext_ln66_5_fu_1698_p1, zext_ln66_9_fu_2055_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            conv2_weights_address0 <= zext_ln66_9_fu_2055_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_weights_address0 <= zext_ln66_5_fu_1698_p1(11 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv2_weights_address0 <= zext_ln66_1_fu_1354_p1(11 - 1 downto 0);
        else 
            conv2_weights_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    conv2_weights_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state36, ap_CS_fsm_state60)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            conv2_weights_ce0 <= ap_const_logic_1;
        else 
            conv2_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_77_fu_1232_p2 <= std_logic_vector(unsigned(empty_reg_660) + unsigned(ap_const_lv18_1));
    empty_78_fu_1281_p2 <= std_logic_vector(unsigned(phi_mul8_reg_682) + unsigned(ty_cast_fu_1277_p1));
    empty_79_fu_1317_p2 <= std_logic_vector(unsigned(mul_ln50_reg_2590) + unsigned(tx_7_cast_fu_1313_p1));
    empty_81_fu_1474_p2 <= std_logic_vector(unsigned(zext_ln132_1_fu_1458_p1) + unsigned(phi_mul24_fu_178));
    empty_83_fu_1559_p2 <= std_logic_vector(unsigned(empty_82_reg_794) + unsigned(ap_const_lv18_1));
    empty_84_fu_2350_p1 <= conv2_biases_q0;
    empty_86_fu_1576_p2 <= std_logic_vector(unsigned(empty_85_reg_805) + unsigned(ap_const_lv18_1));
    empty_87_fu_1625_p2 <= std_logic_vector(unsigned(phi_mul14_reg_827) + unsigned(ty_5_cast_fu_1621_p1));
    empty_88_fu_1661_p2 <= std_logic_vector(unsigned(mul_ln50_1_reg_2786) + unsigned(tx_8_cast_fu_1657_p1));
    empty_89_fu_1818_p2 <= std_logic_vector(unsigned(zext_ln132_3_fu_1802_p1) + unsigned(phi_mul24_fu_178));
    empty_91_fu_1916_p2 <= std_logic_vector(unsigned(empty_90_reg_939) + unsigned(ap_const_lv18_1));
    empty_93_fu_1933_p2 <= std_logic_vector(unsigned(empty_92_reg_950) + unsigned(ap_const_lv18_1));
    empty_94_fu_1982_p2 <= std_logic_vector(unsigned(phi_mul20_reg_972) + unsigned(ty_6_cast_fu_1978_p1));
    empty_95_fu_2018_p2 <= std_logic_vector(unsigned(mul_ln50_2_reg_2952) + unsigned(tx_9_cast_fu_2014_p1));
    empty_96_fu_2175_p2 <= std_logic_vector(unsigned(zext_ln132_5_fu_2159_p1) + unsigned(phi_mul24_fu_178));
    empty_98_fu_2273_p2 <= std_logic_vector(unsigned(empty_97_reg_1084) + unsigned(ap_const_lv18_1));
    exitcond11212_fu_1553_p2 <= "1" when (empty_82_reg_794 = ap_const_lv18_38720) else "0";
    exitcond11313_fu_1570_p2 <= "1" when (empty_85_reg_805 = ap_const_lv18_38720) else "0";
    exitcond13721_fu_1910_p2 <= "1" when (empty_90_reg_939 = ap_const_lv18_38720) else "0";
    exitcond13822_fu_1927_p2 <= "1" when (empty_92_reg_950 = ap_const_lv18_38720) else "0";
    exitcond16230_fu_2267_p2 <= "1" when (empty_97_reg_1084 = ap_const_lv18_38720) else "0";
    exitcond894_fu_1226_p2 <= "1" when (empty_reg_660 = ap_const_lv18_38720) else "0";

    grp_fu_1143_p0_assign_proc : process(tmp_reg_3182, empty_80_reg_716, add51_127_reg_861, add51_228_reg_1028, ap_CS_fsm_state17, ap_CS_fsm_state41, ap_CS_fsm_state65, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_fu_1143_p0 <= tmp_reg_3182;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            grp_fu_1143_p0 <= add51_228_reg_1028;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            grp_fu_1143_p0 <= add51_127_reg_861;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_1143_p0 <= empty_80_reg_716;
        else 
            grp_fu_1143_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1143_p1_assign_proc : process(reg_1168, empty_84_reg_3116, ap_CS_fsm_state17, ap_CS_fsm_state41, ap_CS_fsm_state65, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            grp_fu_1143_p1 <= empty_84_reg_3116;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_fu_1143_p1 <= reg_1168;
        else 
            grp_fu_1143_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1150_p0_assign_proc : process(bitcast_ln66_fu_1375_p1, ap_CS_fsm_state14, bitcast_ln66_1_fu_1719_p1, ap_CS_fsm_state38, bitcast_ln66_2_fu_2076_p1, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            grp_fu_1150_p0 <= bitcast_ln66_2_fu_2076_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_1150_p0 <= bitcast_ln66_1_fu_1719_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1150_p0 <= bitcast_ln66_fu_1375_p1;
        else 
            grp_fu_1150_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_2495_p1 <= ty_cast28_reg_2585(7 - 1 downto 0);
    grp_fu_2495_p2 <= ap_const_lv19_55(7 - 1 downto 0);
    grp_fu_2495_p3 <= tx_7_cast29_reg_2603(7 - 1 downto 0);
    grp_fu_2504_p1 <= ty_5_cast33_reg_2781(7 - 1 downto 0);
    grp_fu_2504_p2 <= ap_const_lv19_55(7 - 1 downto 0);
    grp_fu_2504_p3 <= tx_8_cast34_reg_2799(7 - 1 downto 0);
    grp_fu_2513_p1 <= ty_6_cast38_reg_2947(7 - 1 downto 0);
    grp_fu_2513_p2 <= ap_const_lv19_55(7 - 1 downto 0);
    grp_fu_2513_p3 <= tx_9_cast39_reg_2965(7 - 1 downto 0);
    grp_fu_739_p_ce <= ap_const_logic_1;
    grp_fu_739_p_din0 <= grp_fu_1143_p0;
    grp_fu_739_p_din1 <= grp_fu_1143_p1;
    grp_fu_739_p_opcode <= ap_const_lv2_0;
    grp_fu_743_p_ce <= ap_const_logic_1;
    grp_fu_743_p_din0 <= grp_fu_1150_p0;
    grp_fu_743_p_din1 <= reg_1163;
    grp_fu_747_p_ce <= ap_const_logic_1;
    grp_fu_747_p_din0 <= reg_1173;
    grp_fu_747_p_din1 <= ap_const_lv32_0;
    grp_fu_747_p_opcode <= ap_const_lv5_4;
    grp_load_buffer_tile_c2_fu_1117_ap_start <= grp_load_buffer_tile_c2_fu_1117_ap_start_reg;

    grp_load_buffer_tile_c2_fu_1117_tx0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            grp_load_buffer_tile_c2_fu_1117_tx0 <= ap_const_lv8_AA;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            grp_load_buffer_tile_c2_fu_1117_tx0 <= ap_const_lv8_55;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_load_buffer_tile_c2_fu_1117_tx0 <= ap_const_lv8_0;
        else 
            grp_load_buffer_tile_c2_fu_1117_tx0 <= "XXXXXXXX";
        end if; 
    end process;

    icmp_ln131_1_fu_1734_p2 <= "1" when (nout_3_reg_894 = ap_const_lv6_20) else "0";
    icmp_ln131_2_fu_2091_p2 <= "1" when (nout_5_reg_1039 = ap_const_lv6_20) else "0";
    icmp_ln131_fu_1390_p2 <= "1" when (nout_1_reg_749 = ap_const_lv6_20) else "0";
    icmp_ln132_1_fu_1806_p2 <= "1" when (ty_3_reg_917 = ap_const_lv7_55) else "0";
    icmp_ln132_2_fu_2163_p2 <= "1" when (ty_4_reg_1062 = ap_const_lv7_55) else "0";
    icmp_ln132_fu_1462_p2 <= "1" when (ty_2_reg_772 = ap_const_lv7_55) else "0";
    icmp_ln133_1_fu_1872_p2 <= "1" when (tx_3_reg_928 = ap_const_lv7_55) else "0";
    icmp_ln133_2_fu_2229_p2 <= "1" when (tx_5_reg_1073 = ap_const_lv7_55) else "0";
    icmp_ln133_fu_1541_p2 <= "1" when (tx_reg_783 = ap_const_lv7_55) else "0";
    icmp_ln32_fu_1209_p2 <= "1" when (tj_fu_182 = ap_const_lv2_3) else "0";
    icmp_ln48_1_fu_1605_p2 <= "1" when (nout_2_reg_816 = ap_const_lv6_20) else "0";
    icmp_ln48_2_fu_1962_p2 <= "1" when (nout_4_reg_961 = ap_const_lv6_20) else "0";
    icmp_ln48_fu_1261_p2 <= "1" when (nout_reg_671 = ap_const_lv6_20) else "0";
    icmp_ln50_1_fu_1641_p2 <= "1" when (ty_5_reg_839 = ap_const_lv7_55) else "0";
    icmp_ln50_2_fu_1998_p2 <= "1" when (ty_6_reg_984 = ap_const_lv7_55) else "0";
    icmp_ln50_fu_1297_p2 <= "1" when (ty_reg_694 = ap_const_lv7_55) else "0";
    icmp_ln51_1_fu_1671_p2 <= "1" when (tx_8_reg_850 = ap_const_lv7_55) else "0";
    icmp_ln51_2_fu_2028_p2 <= "1" when (tx_9_reg_995 = ap_const_lv7_55) else "0";
    icmp_ln51_fu_1327_p2 <= "1" when (tx_7_reg_705 = ap_const_lv7_55) else "0";
    icmp_ln63_1_fu_1707_p2 <= "1" when (nin_2_reg_883 = ap_const_lv7_40) else "0";
    icmp_ln63_2_fu_2064_p2 <= "1" when (nin_3_reg_1017 = ap_const_lv7_40) else "0";
    icmp_ln63_fu_1363_p2 <= "1" when (nin_reg_738 = ap_const_lv7_40) else "0";
    icmp_ln82_fu_2304_p2 <= "1" when (nr_fu_194 = ap_const_lv6_20) else "0";
    icmp_ln83_fu_2385_p2 <= "1" when (yr_reg_1095 = ap_const_lv8_FF) else "0";
    icmp_ln84_fu_2422_p2 <= "1" when (xr_reg_1106 = ap_const_lv8_FF) else "0";
    icmp_ln87_1_fu_2479_p2 <= "1" when (trunc_ln87_fu_2469_p1 = ap_const_lv23_0) else "0";
    icmp_ln87_fu_2473_p2 <= "0" when (tmp_3_fu_2459_p4 = ap_const_lv8_FF) else "1";

    input_fm_buffer_1_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state36, ap_CS_fsm_state60, grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_address0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52, zext_ln66_3_fu_1359_p1, zext_ln66_7_fu_1703_p1, zext_ln66_11_fu_2060_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            input_fm_buffer_1_address0 <= zext_ln66_11_fu_2060_p1(19 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            input_fm_buffer_1_address0 <= zext_ln66_7_fu_1703_p1(19 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            input_fm_buffer_1_address0 <= zext_ln66_3_fu_1359_p1(19 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_fm_buffer_1_address0 <= grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_address0;
        else 
            input_fm_buffer_1_address0 <= "XXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_fm_buffer_1_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state36, ap_CS_fsm_state60, grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            input_fm_buffer_1_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_fm_buffer_1_ce0 <= grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_ce0;
        else 
            input_fm_buffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_fm_buffer_1_we0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_we0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            input_fm_buffer_1_we0 <= grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_we0;
        else 
            input_fm_buffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln132_1_fu_1796_p0 <= mul_ln132_1_fu_1796_p00(12 - 1 downto 0);
    mul_ln132_1_fu_1796_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_6_fu_1786_p2),18));
    mul_ln132_1_fu_1796_p1 <= ap_const_lv18_55(8 - 1 downto 0);
    mul_ln132_2_fu_2153_p0 <= mul_ln132_2_fu_2153_p00(12 - 1 downto 0);
    mul_ln132_2_fu_2153_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_10_fu_2143_p2),18));
    mul_ln132_2_fu_2153_p1 <= ap_const_lv18_55(8 - 1 downto 0);
    mul_ln132_fu_1452_p0 <= mul_ln132_fu_1452_p00(12 - 1 downto 0);
    mul_ln132_fu_1452_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_2_fu_1442_p2),18));
    mul_ln132_fu_1452_p1 <= ap_const_lv18_55(8 - 1 downto 0);
    mul_ln50_1_fu_1635_p0 <= mul_ln50_1_fu_1635_p00(12 - 1 downto 0);
    mul_ln50_1_fu_1635_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_87_fu_1625_p2),18));
    mul_ln50_1_fu_1635_p1 <= ap_const_lv18_55(8 - 1 downto 0);
    mul_ln50_2_fu_1992_p0 <= mul_ln50_2_fu_1992_p00(12 - 1 downto 0);
    mul_ln50_2_fu_1992_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_94_fu_1982_p2),18));
    mul_ln50_2_fu_1992_p1 <= ap_const_lv18_55(8 - 1 downto 0);
    mul_ln50_fu_1291_p0 <= mul_ln50_fu_1291_p00(12 - 1 downto 0);
    mul_ln50_fu_1291_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_78_fu_1281_p2),18));
    mul_ln50_fu_1291_p1 <= ap_const_lv18_55(8 - 1 downto 0);
    or_ln87_fu_2485_p2 <= (icmp_ln87_reg_3187 or icmp_ln87_1_reg_3192);

    output_fm_buffer_address0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, output_fm_buffer_addr_3_reg_2608, ap_CS_fsm_state12, ap_CS_fsm_state23, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state31, output_fm_buffer_addr_7_reg_2804, ap_CS_fsm_state36, ap_CS_fsm_state47, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state55, output_fm_buffer_addr_10_reg_2970, ap_CS_fsm_state60, ap_CS_fsm_state71, ap_CS_fsm_state74, p_cast40_fu_1238_p1, p_cast43_fu_1322_p1, zext_ln135_6_fu_1536_p1, p_cast44_fu_1565_p1, p_cast46_fu_1582_p1, p_cast48_fu_1666_p1, zext_ln135_12_fu_1863_p1, p_cast49_fu_1922_p1, p_cast52_fu_1939_p1, p_cast54_fu_2023_p1, zext_ln135_20_fu_2220_p1, p_cast55_fu_2279_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            output_fm_buffer_address0 <= p_cast55_fu_2279_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            output_fm_buffer_address0 <= zext_ln135_20_fu_2220_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            output_fm_buffer_address0 <= output_fm_buffer_addr_10_reg_2970;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            output_fm_buffer_address0 <= p_cast54_fu_2023_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            output_fm_buffer_address0 <= p_cast52_fu_1939_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            output_fm_buffer_address0 <= p_cast49_fu_1922_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            output_fm_buffer_address0 <= zext_ln135_12_fu_1863_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            output_fm_buffer_address0 <= output_fm_buffer_addr_7_reg_2804;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            output_fm_buffer_address0 <= p_cast48_fu_1666_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            output_fm_buffer_address0 <= p_cast46_fu_1582_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            output_fm_buffer_address0 <= p_cast44_fu_1565_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            output_fm_buffer_address0 <= zext_ln135_6_fu_1536_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_fm_buffer_address0 <= output_fm_buffer_addr_3_reg_2608;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            output_fm_buffer_address0 <= p_cast43_fu_1322_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            output_fm_buffer_address0 <= p_cast40_fu_1238_p1(18 - 1 downto 0);
        else 
            output_fm_buffer_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_fm_buffer_ce0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state7, ap_CS_fsm_state12, ap_CS_fsm_state23, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state31, ap_CS_fsm_state36, ap_CS_fsm_state47, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state55, ap_CS_fsm_state60, ap_CS_fsm_state71, ap_CS_fsm_state74)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            output_fm_buffer_ce0 <= ap_const_logic_1;
        else 
            output_fm_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_fm_buffer_d0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state12, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state36, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state60, ap_CS_fsm_state74, empty_80_reg_716, add51_127_reg_861, add51_228_reg_1028)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            output_fm_buffer_d0 <= add51_228_reg_1028;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            output_fm_buffer_d0 <= add51_127_reg_861;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            output_fm_buffer_d0 <= empty_80_reg_716;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            output_fm_buffer_d0 <= ap_const_lv32_0;
        else 
            output_fm_buffer_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_fm_buffer_we0_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state12, ap_CS_fsm_state26, ap_CS_fsm_state27, ap_CS_fsm_state36, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state60, ap_CS_fsm_state74, exitcond894_fu_1226_p2, icmp_ln63_fu_1363_p2, exitcond11212_fu_1553_p2, exitcond11313_fu_1570_p2, icmp_ln63_1_fu_1707_p2, exitcond13721_fu_1910_p2, exitcond13822_fu_1927_p2, icmp_ln63_2_fu_2064_p2, exitcond16230_fu_2267_p2)
    begin
        if ((((icmp_ln63_2_fu_2064_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state60)) or ((exitcond13822_fu_1927_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state51)) or ((exitcond13721_fu_1910_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state50)) or ((icmp_ln63_1_fu_1707_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36)) or ((exitcond11313_fu_1570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((exitcond11212_fu_1553_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((icmp_ln63_fu_1363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((exitcond894_fu_1226_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((ap_const_logic_1 = ap_CS_fsm_state74) and (exitcond16230_fu_2267_p2 = ap_const_lv1_0)))) then 
            output_fm_buffer_we0 <= ap_const_logic_1;
        else 
            output_fm_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_cast40_fu_1238_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_660),64));
    p_cast43_fu_1322_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_79_fu_1317_p2),64));
    p_cast44_fu_1565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_82_reg_794),64));
    p_cast46_fu_1582_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_85_reg_805),64));
    p_cast48_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_88_fu_1661_p2),64));
    p_cast49_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_90_reg_939),64));
    p_cast52_fu_1939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_92_reg_950),64));
    p_cast54_fu_2023_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_95_fu_2018_p2),64));
    p_cast55_fu_2279_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_97_reg_1084),64));
    p_shl1_fu_1496_p3 <= (trunc_ln135_fu_1492_p1 & ap_const_lv8_0);
    p_shl3_fu_2371_p3 <= (trunc_ln86_fu_2367_p1 & ap_const_lv8_0);
    p_shl5_fu_1840_p3 <= (trunc_ln135_1_fu_1836_p1 & ap_const_lv8_0);
    p_shl7_fu_2197_p3 <= (trunc_ln135_2_fu_2193_p1 & ap_const_lv8_0);
        sext_ln131_1_fu_1768_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln135_2_fu_1762_p2),12));

        sext_ln131_2_fu_2125_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln135_4_fu_2119_p2),12));

        sext_ln131_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln135_fu_1418_p2),12));

        sext_ln135_1_fu_1832_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln135_7_fu_1827_p2),18));

        sext_ln135_2_fu_2189_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln135_11_fu_2184_p2),18));

        sext_ln135_fu_1488_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln135_3_fu_1483_p2),18));

        sext_ln82_fu_2346_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln86_fu_2340_p2),12));

        sext_ln86_fu_2363_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln86_fu_2358_p2),18));

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_70_reg_2724, ap_CS_fsm_state78, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_78_reg_3164, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_78_reg_3164;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_70_reg_2724;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((trunc_ln_reg_3101 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_1) and (ap_const_logic_1 = ap_CS_fsm_state86)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_69_reg_2719, ap_CS_fsm_state78, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_77_reg_3159, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_77_reg_3159;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_69_reg_2719;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((trunc_ln_reg_3101 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_7) and (ap_const_logic_1 = ap_CS_fsm_state86)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_68_reg_2714, ap_CS_fsm_state78, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_76_reg_3154, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_76_reg_3154;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_68_reg_2714;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state86)) or ((trunc_ln_reg_3101 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_6) and (ap_const_logic_1 = ap_CS_fsm_state24)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_67_reg_2709, ap_CS_fsm_state78, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_75_reg_3149, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_75_reg_3149;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_67_reg_2709;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((trunc_ln_reg_3101 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_5) and (ap_const_logic_1 = ap_CS_fsm_state86)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_66_reg_2704, ap_CS_fsm_state78, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_74_reg_3144, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_74_reg_3144;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_66_reg_2704;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((trunc_ln_reg_3101 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_4) and (ap_const_logic_1 = ap_CS_fsm_state86)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_65_reg_2699, ap_CS_fsm_state78, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_73_reg_3139, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_73_reg_3139;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_65_reg_2699;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((trunc_ln_reg_3101 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_3) and (ap_const_logic_1 = ap_CS_fsm_state86)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_2694, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_72_reg_3134, ap_CS_fsm_state78, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_72_reg_3134;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_2694;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((trunc_ln_reg_3101 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_0) and (ap_const_logic_1 = ap_CS_fsm_state86)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0;

    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0_assign_proc : process(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0, ap_CS_fsm_state4, ap_CS_fsm_state28, ap_CS_fsm_state52)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 <= grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0_assign_proc : process(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_71_reg_2729, ap_CS_fsm_state78, srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_79_reg_3169, ap_CS_fsm_state86, zext_ln135_14_fu_1899_p1, ap_CS_fsm_state48, zext_ln135_22_fu_2256_p1, ap_CS_fsm_state72, zext_ln86_4_fu_2410_p1, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state84))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_79_reg_3169;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= zext_ln86_4_fu_2410_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= zext_ln135_22_fu_2256_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= zext_ln135_14_fu_1899_p1(18 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_71_reg_2729;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 <= "XXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0_assign_proc : process(ap_CS_fsm_state78, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0_assign_proc : process(reg_1173, output_fm_buffer_q0, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 <= reg_1173;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state48))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 <= output_fm_buffer_q0;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0_assign_proc : process(trunc_ln4_reg_2672, trunc_ln131_1_reg_2873, trunc_ln131_2_reg_3039, trunc_ln_reg_3101, and_ln87_fu_2489_p2, ap_CS_fsm_state86, ap_CS_fsm_state48, ap_CS_fsm_state72, ap_CS_fsm_state24, ap_CS_fsm_state84)
    begin
        if ((((trunc_ln_reg_3101 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state84)) or ((trunc_ln131_2_reg_3039 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state72)) or ((trunc_ln131_1_reg_2873 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state48)) or ((trunc_ln4_reg_2672 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state24)) or ((ap_const_lv1_1 = and_ln87_fu_2489_p2) and (trunc_ln_reg_3101 = ap_const_lv3_2) and (ap_const_logic_1 = ap_CS_fsm_state86)))) then 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 <= ap_const_logic_1;
        else 
            srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln135_1_fu_1504_p2 <= std_logic_vector(unsigned(p_shl1_fu_1496_p3) - unsigned(sext_ln135_fu_1488_p1));
    sub_ln135_2_fu_1762_p2 <= std_logic_vector(unsigned(zext_ln135_8_fu_1758_p1) - unsigned(zext_ln135_7_fu_1746_p1));
    sub_ln135_3_fu_1848_p2 <= std_logic_vector(unsigned(p_shl5_fu_1840_p3) - unsigned(sext_ln135_1_fu_1832_p1));
    sub_ln135_4_fu_2119_p2 <= std_logic_vector(unsigned(zext_ln135_16_fu_2115_p1) - unsigned(zext_ln135_15_fu_2103_p1));
    sub_ln135_5_fu_2205_p2 <= std_logic_vector(unsigned(p_shl7_fu_2197_p3) - unsigned(sext_ln135_2_fu_2189_p1));
    sub_ln135_fu_1418_p2 <= std_logic_vector(unsigned(zext_ln135_1_fu_1414_p1) - unsigned(zext_ln135_fu_1402_p1));
    sub_ln86_1_fu_2379_p2 <= std_logic_vector(unsigned(p_shl3_fu_2371_p3) - unsigned(sext_ln86_fu_2363_p1));
    sub_ln86_fu_2340_p2 <= std_logic_vector(unsigned(zext_ln86_1_fu_2336_p1) - unsigned(zext_ln86_fu_2326_p1));
    tmp_20_fu_1253_p3 <= (trunc_ln48_fu_1243_p1 & ap_const_lv6_0);
    tmp_21_fu_1406_p3 <= (trunc_ln131_fu_1386_p1 & ap_const_lv8_0);
    tmp_22_fu_1597_p3 <= (trunc_ln48_1_fu_1587_p1 & ap_const_lv6_0);
    tmp_23_fu_1750_p3 <= (trunc_ln131_3_fu_1730_p1 & ap_const_lv8_0);
    tmp_24_fu_1954_p3 <= (trunc_ln48_2_fu_1944_p1 & ap_const_lv6_0);
    tmp_25_fu_2107_p3 <= (trunc_ln131_4_fu_2087_p1 & ap_const_lv8_0);
    tmp_3_fu_2459_p4 <= bitcast_ln87_fu_2455_p1(30 downto 23);
    tmp_s_fu_2329_p3 <= (trunc_ln82_reg_3087 & ap_const_lv8_0);
    trunc_ln131_3_fu_1730_p1 <= nout_3_reg_894(2 - 1 downto 0);
    trunc_ln131_4_fu_2087_p1 <= nout_5_reg_1039(2 - 1 downto 0);
    trunc_ln131_fu_1386_p1 <= nout_1_reg_749(2 - 1 downto 0);
    trunc_ln135_1_fu_1836_p1 <= add_ln135_7_fu_1827_p2(10 - 1 downto 0);
    trunc_ln135_2_fu_2193_p1 <= add_ln135_11_fu_2184_p2(10 - 1 downto 0);
    trunc_ln135_fu_1492_p1 <= add_ln135_3_fu_1483_p2(10 - 1 downto 0);
    trunc_ln48_1_fu_1587_p1 <= nout_2_reg_816(5 - 1 downto 0);
    trunc_ln48_2_fu_1944_p1 <= nout_4_reg_961(5 - 1 downto 0);
    trunc_ln48_fu_1243_p1 <= nout_reg_671(5 - 1 downto 0);
    trunc_ln82_fu_2300_p1 <= nr_fu_194(2 - 1 downto 0);
    trunc_ln86_fu_2367_p1 <= add_ln86_fu_2358_p2(10 - 1 downto 0);
    trunc_ln87_fu_2469_p1 <= bitcast_ln87_fu_2455_p1(23 - 1 downto 0);
    tx_7_cast29_fu_1309_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_7_reg_705),19));
    tx_7_cast_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_7_reg_705),18));
    tx_8_cast34_fu_1653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_8_reg_850),19));
    tx_8_cast_fu_1657_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_8_reg_850),18));
    tx_9_cast39_fu_2010_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_9_reg_995),19));
    tx_9_cast_fu_2014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_9_reg_995),18));
    ty_5_cast33_fu_1617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_5_reg_839),13));
    ty_5_cast_fu_1621_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_5_reg_839),12));
    ty_6_cast38_fu_1974_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_6_reg_984),13));
    ty_6_cast_fu_1978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_6_reg_984),12));
    ty_cast28_fu_1273_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_reg_694),13));
    ty_cast_fu_1277_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_reg_694),12));
    zext_ln132_1_fu_1458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_2_reg_772),8));
    zext_ln132_3_fu_1802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_3_reg_917),8));
    zext_ln132_5_fu_2159_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_4_reg_1062),8));
    zext_ln133_1_fu_2225_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_5_reg_1073),8));
    zext_ln133_fu_1868_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_3_reg_928),8));
    zext_ln135_10_fu_1823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_89_fu_1818_p2),12));
    zext_ln135_11_fu_1854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_3_reg_928),18));
    zext_ln135_12_fu_1863_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_8_fu_1858_p2),64));
    zext_ln135_13_fu_1890_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_fu_1884_p2),18));
    zext_ln135_14_fu_1899_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_9_reg_2908),64));
    zext_ln135_15_fu_2103_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln131_4_fu_2087_p1),11));
    zext_ln135_16_fu_2115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_25_fu_2107_p3),11));
    zext_ln135_17_fu_2139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_4_reg_1062),12));
    zext_ln135_18_fu_2180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_96_fu_2175_p2),12));
    zext_ln135_19_fu_2211_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_5_reg_1073),18));
    zext_ln135_1_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_21_fu_1406_p3),11));
    zext_ln135_20_fu_2220_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_12_fu_2215_p2),64));
    zext_ln135_21_fu_2247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_1_fu_2241_p2),18));
    zext_ln135_22_fu_2256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_13_reg_3074),64));
    zext_ln135_2_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_2_reg_772),12));
    zext_ln135_3_fu_1479_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_81_fu_1474_p2),12));
    zext_ln135_4_fu_1510_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tx_reg_783),18));
    zext_ln135_5_fu_1519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_4_fu_1514_p2),64));
    zext_ln135_6_fu_1536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln135_5_fu_1531_p2),64));
    zext_ln135_7_fu_1746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln131_3_fu_1730_p1),11));
    zext_ln135_8_fu_1758_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_23_fu_1750_p3),11));
    zext_ln135_9_fu_1782_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ty_3_reg_917),12));
    zext_ln135_fu_1402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln131_fu_1386_p1),11));
    zext_ln66_11_fu_2060_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2513_p4),64));
    zext_ln66_1_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_fu_1349_p2),64));
    zext_ln66_3_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2495_p4),64));
    zext_ln66_4_fu_1689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nin_2_reg_883),11));
    zext_ln66_5_fu_1698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_3_fu_1693_p2),64));
    zext_ln66_7_fu_1703_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_2504_p4),64));
    zext_ln66_8_fu_2046_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nin_3_reg_1017),11));
    zext_ln66_9_fu_2055_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln66_6_fu_2050_p2),64));
    zext_ln66_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nin_reg_738),11));
    zext_ln82_fu_2295_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nr_fu_194),64));
    zext_ln86_1_fu_2336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_2329_p3),11));
    zext_ln86_2_fu_2354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(yr_reg_1095),12));
    zext_ln86_3_fu_2401_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xr_reg_1106),18));
    zext_ln86_4_fu_2410_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln86_1_fu_2405_p2),64));
    zext_ln86_fu_2326_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln82_reg_3087),11));
end behav;
