-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_i3_AWVALID : OUT STD_LOGIC;
    m_axi_i3_AWREADY : IN STD_LOGIC;
    m_axi_i3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_WVALID : OUT STD_LOGIC;
    m_axi_i3_WREADY : IN STD_LOGIC;
    m_axi_i3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_WLAST : OUT STD_LOGIC;
    m_axi_i3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_ARVALID : OUT STD_LOGIC;
    m_axi_i3_ARREADY : IN STD_LOGIC;
    m_axi_i3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_RVALID : IN STD_LOGIC;
    m_axi_i3_RREADY : OUT STD_LOGIC;
    m_axi_i3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i3_RLAST : IN STD_LOGIC;
    m_axi_i3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_BVALID : IN STD_LOGIC;
    m_axi_i3_BREADY : OUT STD_LOGIC;
    m_axi_i3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w3_AWVALID : OUT STD_LOGIC;
    m_axi_w3_AWREADY : IN STD_LOGIC;
    m_axi_w3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_WVALID : OUT STD_LOGIC;
    m_axi_w3_WREADY : IN STD_LOGIC;
    m_axi_w3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_WLAST : OUT STD_LOGIC;
    m_axi_w3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_ARVALID : OUT STD_LOGIC;
    m_axi_w3_ARREADY : IN STD_LOGIC;
    m_axi_w3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_w3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_w3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_w3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_RVALID : IN STD_LOGIC;
    m_axi_w3_RREADY : OUT STD_LOGIC;
    m_axi_w3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_w3_RLAST : IN STD_LOGIC;
    m_axi_w3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_w3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_BVALID : IN STD_LOGIC;
    m_axi_w3_BREADY : OUT STD_LOGIC;
    m_axi_w3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_w3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_w3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv3_weights : IN STD_LOGIC_VECTOR (63 downto 0);
    conv3_biases_0_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_o_AWVALID : OUT STD_LOGIC;
    m_axi_o_AWREADY : IN STD_LOGIC;
    m_axi_o_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_o_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_o_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_o_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_o_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_o_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_o_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_o_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_o_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_o_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_WVALID : OUT STD_LOGIC;
    m_axi_o_WREADY : IN STD_LOGIC;
    m_axi_o_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_o_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_o_WLAST : OUT STD_LOGIC;
    m_axi_o_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_ARVALID : OUT STD_LOGIC;
    m_axi_o_ARREADY : IN STD_LOGIC;
    m_axi_o_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_o_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_o_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_o_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_o_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_o_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_o_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_o_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_o_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_o_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_RVALID : IN STD_LOGIC;
    m_axi_o_RREADY : OUT STD_LOGIC;
    m_axi_o_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_o_RLAST : IN STD_LOGIC;
    m_axi_o_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_o_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_o_BVALID : IN STD_LOGIC;
    m_axi_o_BREADY : OUT STD_LOGIC;
    m_axi_o_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_o_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_o_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_561_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_561_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_561_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_561_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_561_p_ce : OUT STD_LOGIC;
    grp_fu_565_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_565_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_565_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_565_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_565_p_ce : OUT STD_LOGIC;
    grp_fu_569_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_569_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_569_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_569_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_569_p_ce : OUT STD_LOGIC;
    grp_fu_573_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_573_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_573_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_573_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_573_p_ce : OUT STD_LOGIC;
    grp_fu_577_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_577_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_577_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_577_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_577_p_ce : OUT STD_LOGIC;
    grp_fu_581_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_581_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_581_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_581_p_ce : OUT STD_LOGIC;
    grp_fu_585_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_585_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_585_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_585_p_ce : OUT STD_LOGIC;
    grp_fu_589_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_589_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_589_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_589_p_ce : OUT STD_LOGIC;
    grp_fu_593_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_593_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_593_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_593_p_ce : OUT STD_LOGIC;
    grp_fu_597_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_597_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_597_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_597_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_597_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (36 downto 0) := "0000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (36 downto 0) := "0000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (36 downto 0) := "0000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (36 downto 0) := "0000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (36 downto 0) := "0000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (36 downto 0) := "0000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (36 downto 0) := "0000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (36 downto 0) := "0001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (36 downto 0) := "0010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (36 downto 0) := "0100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (36 downto 0) := "1000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_320 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001100100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (36 downto 0) := "0000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buffer_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal weight_buffer_0_ce0 : STD_LOGIC;
    signal weight_buffer_0_we0 : STD_LOGIC;
    signal weight_buffer_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buffer_0_ce1 : STD_LOGIC;
    signal weight_buffer_0_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1 : STD_LOGIC;
    signal conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal w3_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal o_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal o_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln136_reg_604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal trunc_ln_fu_322_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln_reg_582 : STD_LOGIC_VECTOR (61 downto 0);
    signal w3_addr_reg_587 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln132_fu_356_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln132_reg_598 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal icmp_ln136_fu_359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal trunc_ln4_reg_608 : STD_LOGIC_VECTOR (61 downto 0);
    signal or_ln139_fu_423_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln139_reg_614 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln139_3_fu_472_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln139_3_reg_621 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln149_1_reg_634 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln136_1_fu_487_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln136_fu_501_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln136_reg_640 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln72_fu_517_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln72_reg_650 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal add_ln72_fu_523_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln72_reg_654 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal add_ln72_1_fu_530_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln72_1_reg_659 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal add_ln72_2_fu_542_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln72_2_reg_667 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln72_1_fu_536_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c3_fu_213_ap_start : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_ap_done : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_ap_idle : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_ap_ready : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWVALID : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_WVALID : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_WLAST : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARVALID : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_RREADY : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_m_axi_i3_BREADY : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1 : STD_LOGIC;
    signal grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WLAST : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_RREADY : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_BREADY : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1 : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_WVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_WLAST : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_RREADY : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_m_axi_o_BREADY : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_ce : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_WVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_WLAST : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARVALID : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_RREADY : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_m_axi_o_BREADY : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_CLEARW2_fu_304_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_CLEARW3_fu_313_ap_start : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_ap_done : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_ap_idle : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_ap_ready : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bh_reg_189 : STD_LOGIC_VECTOR (2 downto 0);
    signal h_reg_201 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_block_state23 : BOOLEAN;
    signal grp_load_input_buffer_c3_fu_213_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (36 downto 0);
    signal ap_NS_fsm_state13 : STD_LOGIC;
    signal grp_conv3_Pipeline_RELU_fu_248_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv3_Pipeline_4_fu_259_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_conv3_Pipeline_RELU1_fu_272_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state23_ignore_call0 : BOOLEAN;
    signal grp_conv3_Pipeline_6_fu_282_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_conv3_Pipeline_CLEARW_fu_294_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_conv3_Pipeline_CLEARW2_fu_304_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv3_Pipeline_CLEARW3_fu_313_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal sext_ln119_fu_332_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln149_fu_477_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln149_1_fu_507_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal h_1_fu_138 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln32_fu_548_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state35_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln136_fu_365_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln139_fu_369_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_374_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln139_1_fu_386_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln139_fu_382_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln139_1_fu_394_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln139_fu_398_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln139_fu_404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln139_1_fu_408_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln139_2_fu_429_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln139_2_fu_433_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln139_2_fu_438_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln139_3_fu_450_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln139_3_fu_446_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln139_4_fu_458_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln139_1_fu_462_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln139_1_fu_468_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln32_fu_350_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_672_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_672_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_672_ce : STD_LOGIC;
    signal grp_fu_676_ce : STD_LOGIC;
    signal grp_fu_680_ce : STD_LOGIC;
    signal grp_fu_684_ce : STD_LOGIC;
    signal grp_fu_688_ce : STD_LOGIC;
    signal grp_fu_692_ce : STD_LOGIC;
    signal grp_fu_696_ce : STD_LOGIC;
    signal grp_fu_700_ce : STD_LOGIC;
    signal grp_fu_704_ce : STD_LOGIC;
    signal grp_fu_708_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_708_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_708_ce : STD_LOGIC;
    signal grp_fu_708_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_load_input_buffer_c3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i3_AWVALID : OUT STD_LOGIC;
        m_axi_i3_AWREADY : IN STD_LOGIC;
        m_axi_i3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_WVALID : OUT STD_LOGIC;
        m_axi_i3_WREADY : IN STD_LOGIC;
        m_axi_i3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_WLAST : OUT STD_LOGIC;
        m_axi_i3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_ARVALID : OUT STD_LOGIC;
        m_axi_i3_ARREADY : IN STD_LOGIC;
        m_axi_i3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RVALID : IN STD_LOGIC;
        m_axi_i3_RREADY : OUT STD_LOGIC;
        m_axi_i3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i3_RLAST : IN STD_LOGIC;
        m_axi_i3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_BVALID : IN STD_LOGIC;
        m_axi_i3_BREADY : OUT STD_LOGIC;
        m_axi_i3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        h : IN STD_LOGIC_VECTOR (7 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_Pipeline_WEIGHTI_WEIGHTK_L IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_w3_AWVALID : OUT STD_LOGIC;
        m_axi_w3_AWREADY : IN STD_LOGIC;
        m_axi_w3_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_w3_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w3_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w3_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w3_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w3_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w3_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w3_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w3_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w3_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_WVALID : OUT STD_LOGIC;
        m_axi_w3_WREADY : IN STD_LOGIC;
        m_axi_w3_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w3_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w3_WLAST : OUT STD_LOGIC;
        m_axi_w3_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_ARVALID : OUT STD_LOGIC;
        m_axi_w3_ARREADY : IN STD_LOGIC;
        m_axi_w3_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_w3_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w3_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w3_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w3_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w3_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w3_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_w3_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w3_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_w3_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_RVALID : IN STD_LOGIC;
        m_axi_w3_RREADY : OUT STD_LOGIC;
        m_axi_w3_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_w3_RLAST : IN STD_LOGIC;
        m_axi_w3_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_w3_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w3_BVALID : IN STD_LOGIC;
        m_axi_w3_BREADY : OUT STD_LOGIC;
        m_axi_w3_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_w3_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_w3_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln119 : IN STD_LOGIC_VECTOR (61 downto 0);
        weight_buffer_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weight_buffer_0_ce0 : OUT STD_LOGIC;
        weight_buffer_0_we0 : OUT STD_LOGIC;
        weight_buffer_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_Pipeline_IN_ROW_COL IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buffer_0_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weight_buffer_0_ce0 : OUT STD_LOGIC;
        weight_buffer_0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        weight_buffer_0_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        weight_buffer_0_ce1 : OUT STD_LOGIC;
        weight_buffer_0_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_672_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_ce : OUT STD_LOGIC;
        grp_fu_676_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_676_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_676_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_676_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_676_p_ce : OUT STD_LOGIC;
        grp_fu_680_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_680_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_680_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_680_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_680_p_ce : OUT STD_LOGIC;
        grp_fu_684_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_684_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_684_p_ce : OUT STD_LOGIC;
        grp_fu_688_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_688_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_688_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_688_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_688_p_ce : OUT STD_LOGIC;
        grp_fu_692_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_692_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_692_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_692_p_ce : OUT STD_LOGIC;
        grp_fu_696_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_696_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_696_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_696_p_ce : OUT STD_LOGIC;
        grp_fu_700_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_700_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_700_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_700_p_ce : OUT STD_LOGIC;
        grp_fu_704_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_704_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_704_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_704_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv3_Pipeline_RELU IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bh : IN STD_LOGIC_VECTOR (2 downto 0);
        conv3_biases_0_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_672_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_ce : OUT STD_LOGIC;
        grp_fu_708_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_708_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_708_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_708_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_708_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv3_Pipeline_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_o_AWVALID : OUT STD_LOGIC;
        m_axi_o_AWREADY : IN STD_LOGIC;
        m_axi_o_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_o_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_WVALID : OUT STD_LOGIC;
        m_axi_o_WREADY : IN STD_LOGIC;
        m_axi_o_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_WLAST : OUT STD_LOGIC;
        m_axi_o_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_ARVALID : OUT STD_LOGIC;
        m_axi_o_ARREADY : IN STD_LOGIC;
        m_axi_o_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_o_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_RVALID : IN STD_LOGIC;
        m_axi_o_RREADY : OUT STD_LOGIC;
        m_axi_o_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_RLAST : IN STD_LOGIC;
        m_axi_o_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_o_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_BVALID : IN STD_LOGIC;
        m_axi_o_BREADY : OUT STD_LOGIC;
        m_axi_o_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln149 : IN STD_LOGIC_VECTOR (61 downto 0);
        bh : IN STD_LOGIC_VECTOR (2 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_Pipeline_RELU1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        or_ln139 : IN STD_LOGIC_VECTOR (2 downto 0);
        conv3_biases_0_0_val : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_672_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_672_p_ce : OUT STD_LOGIC;
        grp_fu_708_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_708_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_708_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_708_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_708_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv3_Pipeline_6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_o_AWVALID : OUT STD_LOGIC;
        m_axi_o_AWREADY : IN STD_LOGIC;
        m_axi_o_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_o_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_WVALID : OUT STD_LOGIC;
        m_axi_o_WREADY : IN STD_LOGIC;
        m_axi_o_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_WLAST : OUT STD_LOGIC;
        m_axi_o_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_ARVALID : OUT STD_LOGIC;
        m_axi_o_ARREADY : IN STD_LOGIC;
        m_axi_o_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_o_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_o_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_o_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_RVALID : IN STD_LOGIC;
        m_axi_o_RREADY : OUT STD_LOGIC;
        m_axi_o_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_o_RLAST : IN STD_LOGIC;
        m_axi_o_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_o_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_BVALID : IN STD_LOGIC;
        m_axi_o_BREADY : OUT STD_LOGIC;
        m_axi_o_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_o_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_o_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln149_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        or_ln139 : IN STD_LOGIC_VECTOR (2 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_Pipeline_CLEARW IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        h : IN STD_LOGIC_VECTOR (2 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_Pipeline_CLEARW2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln72 : IN STD_LOGIC_VECTOR (2 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_Pipeline_CLEARW3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln72_1 : IN STD_LOGIC_VECTOR (2 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_conv3_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_weight_buffer_0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv3_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_RAM_T2P_BRAM_1VhK IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_U : component srcnn_conv3_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 37440,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0,
        ce0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0,
        we0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0,
        d0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d0,
        q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q0,
        address1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1,
        ce1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1,
        we1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1,
        d1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d1,
        q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q1);

    conv3_float_255_255_float_32_5_5_float_float_255_255_i_U : component srcnn_conv3_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 37440,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0,
        ce0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0,
        we0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0,
        d0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_d0,
        q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_q0,
        address1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1,
        ce1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1,
        we1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1,
        d1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_d1,
        q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_q1);

    weight_buffer_0_U : component srcnn_conv3_weight_buffer_0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 800,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer_0_address0,
        ce0 => weight_buffer_0_ce0,
        we0 => weight_buffer_0_we0,
        d0 => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_d0,
        q0 => weight_buffer_0_q0,
        address1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_address1,
        ce1 => weight_buffer_0_ce1,
        q1 => weight_buffer_0_q1);

    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_U : component srcnn_conv3_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_RAM_T2P_BRAM_1VhK
    generic map (
        DataWidth => 32,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        ce0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        we0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0,
        d0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0,
        q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0,
        address1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1,
        ce1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1,
        we1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1,
        d1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d1,
        q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1);

    conv3_float_255_255_float_32_5_5_float_float_255_255_o_U : component srcnn_conv3_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_RAM_T2P_BRAM_1VhK
    generic map (
        DataWidth => 32,
        AddressRange => 640,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        ce0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        we0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0,
        d0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0,
        q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0,
        address1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1,
        ce1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1,
        we1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1,
        d1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d1,
        q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1);

    grp_load_input_buffer_c3_fu_213 : component srcnn_load_input_buffer_c3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_load_input_buffer_c3_fu_213_ap_start,
        ap_done => grp_load_input_buffer_c3_fu_213_ap_done,
        ap_idle => grp_load_input_buffer_c3_fu_213_ap_idle,
        ap_ready => grp_load_input_buffer_c3_fu_213_ap_ready,
        m_axi_i3_AWVALID => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWVALID,
        m_axi_i3_AWREADY => ap_const_logic_0,
        m_axi_i3_AWADDR => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWADDR,
        m_axi_i3_AWID => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWID,
        m_axi_i3_AWLEN => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWLEN,
        m_axi_i3_AWSIZE => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWSIZE,
        m_axi_i3_AWBURST => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWBURST,
        m_axi_i3_AWLOCK => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWLOCK,
        m_axi_i3_AWCACHE => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWCACHE,
        m_axi_i3_AWPROT => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWPROT,
        m_axi_i3_AWQOS => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWQOS,
        m_axi_i3_AWREGION => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWREGION,
        m_axi_i3_AWUSER => grp_load_input_buffer_c3_fu_213_m_axi_i3_AWUSER,
        m_axi_i3_WVALID => grp_load_input_buffer_c3_fu_213_m_axi_i3_WVALID,
        m_axi_i3_WREADY => ap_const_logic_0,
        m_axi_i3_WDATA => grp_load_input_buffer_c3_fu_213_m_axi_i3_WDATA,
        m_axi_i3_WSTRB => grp_load_input_buffer_c3_fu_213_m_axi_i3_WSTRB,
        m_axi_i3_WLAST => grp_load_input_buffer_c3_fu_213_m_axi_i3_WLAST,
        m_axi_i3_WID => grp_load_input_buffer_c3_fu_213_m_axi_i3_WID,
        m_axi_i3_WUSER => grp_load_input_buffer_c3_fu_213_m_axi_i3_WUSER,
        m_axi_i3_ARVALID => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARVALID,
        m_axi_i3_ARREADY => m_axi_i3_ARREADY,
        m_axi_i3_ARADDR => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARADDR,
        m_axi_i3_ARID => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARID,
        m_axi_i3_ARLEN => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARLEN,
        m_axi_i3_ARSIZE => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARSIZE,
        m_axi_i3_ARBURST => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARBURST,
        m_axi_i3_ARLOCK => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARLOCK,
        m_axi_i3_ARCACHE => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARCACHE,
        m_axi_i3_ARPROT => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARPROT,
        m_axi_i3_ARQOS => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARQOS,
        m_axi_i3_ARREGION => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARREGION,
        m_axi_i3_ARUSER => grp_load_input_buffer_c3_fu_213_m_axi_i3_ARUSER,
        m_axi_i3_RVALID => m_axi_i3_RVALID,
        m_axi_i3_RREADY => grp_load_input_buffer_c3_fu_213_m_axi_i3_RREADY,
        m_axi_i3_RDATA => m_axi_i3_RDATA,
        m_axi_i3_RLAST => m_axi_i3_RLAST,
        m_axi_i3_RID => m_axi_i3_RID,
        m_axi_i3_RFIFONUM => m_axi_i3_RFIFONUM,
        m_axi_i3_RUSER => m_axi_i3_RUSER,
        m_axi_i3_RRESP => m_axi_i3_RRESP,
        m_axi_i3_BVALID => ap_const_logic_0,
        m_axi_i3_BREADY => grp_load_input_buffer_c3_fu_213_m_axi_i3_BREADY,
        m_axi_i3_BRESP => ap_const_lv2_0,
        m_axi_i3_BID => ap_const_lv1_0,
        m_axi_i3_BUSER => ap_const_lv1_0,
        input_ftmap => input_ftmap,
        h => h_1_fu_138,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_d1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_d0 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_d1 => grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_d1);

    grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225 : component srcnn_conv3_Pipeline_WEIGHTI_WEIGHTK_L
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start,
        ap_done => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_done,
        ap_idle => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_idle,
        ap_ready => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_ready,
        m_axi_w3_AWVALID => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWVALID,
        m_axi_w3_AWREADY => ap_const_logic_0,
        m_axi_w3_AWADDR => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWADDR,
        m_axi_w3_AWID => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWID,
        m_axi_w3_AWLEN => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWLEN,
        m_axi_w3_AWSIZE => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWSIZE,
        m_axi_w3_AWBURST => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWBURST,
        m_axi_w3_AWLOCK => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWLOCK,
        m_axi_w3_AWCACHE => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWCACHE,
        m_axi_w3_AWPROT => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWPROT,
        m_axi_w3_AWQOS => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWQOS,
        m_axi_w3_AWREGION => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWREGION,
        m_axi_w3_AWUSER => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_AWUSER,
        m_axi_w3_WVALID => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WVALID,
        m_axi_w3_WREADY => ap_const_logic_0,
        m_axi_w3_WDATA => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WDATA,
        m_axi_w3_WSTRB => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WSTRB,
        m_axi_w3_WLAST => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WLAST,
        m_axi_w3_WID => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WID,
        m_axi_w3_WUSER => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_WUSER,
        m_axi_w3_ARVALID => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARVALID,
        m_axi_w3_ARREADY => m_axi_w3_ARREADY,
        m_axi_w3_ARADDR => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARADDR,
        m_axi_w3_ARID => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARID,
        m_axi_w3_ARLEN => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLEN,
        m_axi_w3_ARSIZE => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARSIZE,
        m_axi_w3_ARBURST => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARBURST,
        m_axi_w3_ARLOCK => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLOCK,
        m_axi_w3_ARCACHE => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARCACHE,
        m_axi_w3_ARPROT => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARPROT,
        m_axi_w3_ARQOS => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARQOS,
        m_axi_w3_ARREGION => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARREGION,
        m_axi_w3_ARUSER => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARUSER,
        m_axi_w3_RVALID => m_axi_w3_RVALID,
        m_axi_w3_RREADY => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_RREADY,
        m_axi_w3_RDATA => m_axi_w3_RDATA,
        m_axi_w3_RLAST => m_axi_w3_RLAST,
        m_axi_w3_RID => m_axi_w3_RID,
        m_axi_w3_RFIFONUM => m_axi_w3_RFIFONUM,
        m_axi_w3_RUSER => m_axi_w3_RUSER,
        m_axi_w3_RRESP => m_axi_w3_RRESP,
        m_axi_w3_BVALID => ap_const_logic_0,
        m_axi_w3_BREADY => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_BREADY,
        m_axi_w3_BRESP => ap_const_lv2_0,
        m_axi_w3_BID => ap_const_lv1_0,
        m_axi_w3_BUSER => ap_const_lv1_0,
        sext_ln119 => trunc_ln_reg_582,
        weight_buffer_0_address0 => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_address0,
        weight_buffer_0_ce0 => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_ce0,
        weight_buffer_0_we0 => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_we0,
        weight_buffer_0_d0 => grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_d0);

    grp_conv3_Pipeline_IN_ROW_COL_fu_234 : component srcnn_conv3_Pipeline_IN_ROW_COL
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start,
        ap_done => grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_done,
        ap_idle => grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_idle,
        ap_ready => grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_ready,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1,
        weight_buffer_0_address0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_address0,
        weight_buffer_0_ce0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce0,
        weight_buffer_0_q0 => weight_buffer_0_q0,
        weight_buffer_0_address1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_address1,
        weight_buffer_0_ce1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce1,
        weight_buffer_0_q1 => weight_buffer_0_q1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_q1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_q0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_i_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_i_q1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1,
        grp_fu_672_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din0,
        grp_fu_672_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din1,
        grp_fu_672_p_opcode => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_opcode,
        grp_fu_672_p_dout0 => grp_fu_561_p_dout0,
        grp_fu_672_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_ce,
        grp_fu_676_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_din0,
        grp_fu_676_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_din1,
        grp_fu_676_p_opcode => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_opcode,
        grp_fu_676_p_dout0 => grp_fu_565_p_dout0,
        grp_fu_676_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_ce,
        grp_fu_680_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_din0,
        grp_fu_680_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_din1,
        grp_fu_680_p_opcode => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_opcode,
        grp_fu_680_p_dout0 => grp_fu_569_p_dout0,
        grp_fu_680_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_ce,
        grp_fu_684_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_din0,
        grp_fu_684_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_din1,
        grp_fu_684_p_opcode => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_opcode,
        grp_fu_684_p_dout0 => grp_fu_573_p_dout0,
        grp_fu_684_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_ce,
        grp_fu_688_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_din0,
        grp_fu_688_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_din1,
        grp_fu_688_p_opcode => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_opcode,
        grp_fu_688_p_dout0 => grp_fu_577_p_dout0,
        grp_fu_688_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_ce,
        grp_fu_692_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_din0,
        grp_fu_692_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_din1,
        grp_fu_692_p_dout0 => grp_fu_581_p_dout0,
        grp_fu_692_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_ce,
        grp_fu_696_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_din0,
        grp_fu_696_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_din1,
        grp_fu_696_p_dout0 => grp_fu_585_p_dout0,
        grp_fu_696_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_ce,
        grp_fu_700_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_din0,
        grp_fu_700_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_din1,
        grp_fu_700_p_dout0 => grp_fu_589_p_dout0,
        grp_fu_700_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_ce,
        grp_fu_704_p_din0 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_din0,
        grp_fu_704_p_din1 => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_din1,
        grp_fu_704_p_dout0 => grp_fu_593_p_dout0,
        grp_fu_704_p_ce => grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_ce);

    grp_conv3_Pipeline_RELU_fu_248 : component srcnn_conv3_Pipeline_RELU
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_RELU_fu_248_ap_start,
        ap_done => grp_conv3_Pipeline_RELU_fu_248_ap_done,
        ap_idle => grp_conv3_Pipeline_RELU_fu_248_ap_idle,
        ap_ready => grp_conv3_Pipeline_RELU_fu_248_ap_ready,
        bh => bh_reg_189,
        conv3_biases_0_0_val => conv3_biases_0_0_val,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 => grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1,
        grp_fu_672_p_din0 => grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din0,
        grp_fu_672_p_din1 => grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din1,
        grp_fu_672_p_opcode => grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_opcode,
        grp_fu_672_p_dout0 => grp_fu_561_p_dout0,
        grp_fu_672_p_ce => grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_ce,
        grp_fu_708_p_din0 => grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din0,
        grp_fu_708_p_din1 => grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din1,
        grp_fu_708_p_opcode => grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_opcode,
        grp_fu_708_p_dout0 => grp_fu_597_p_dout0,
        grp_fu_708_p_ce => grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_ce);

    grp_conv3_Pipeline_4_fu_259 : component srcnn_conv3_Pipeline_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_4_fu_259_ap_start,
        ap_done => grp_conv3_Pipeline_4_fu_259_ap_done,
        ap_idle => grp_conv3_Pipeline_4_fu_259_ap_idle,
        ap_ready => grp_conv3_Pipeline_4_fu_259_ap_ready,
        m_axi_o_AWVALID => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWVALID,
        m_axi_o_AWREADY => m_axi_o_AWREADY,
        m_axi_o_AWADDR => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWADDR,
        m_axi_o_AWID => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWID,
        m_axi_o_AWLEN => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLEN,
        m_axi_o_AWSIZE => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWSIZE,
        m_axi_o_AWBURST => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWBURST,
        m_axi_o_AWLOCK => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLOCK,
        m_axi_o_AWCACHE => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWCACHE,
        m_axi_o_AWPROT => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWPROT,
        m_axi_o_AWQOS => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWQOS,
        m_axi_o_AWREGION => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWREGION,
        m_axi_o_AWUSER => grp_conv3_Pipeline_4_fu_259_m_axi_o_AWUSER,
        m_axi_o_WVALID => grp_conv3_Pipeline_4_fu_259_m_axi_o_WVALID,
        m_axi_o_WREADY => m_axi_o_WREADY,
        m_axi_o_WDATA => grp_conv3_Pipeline_4_fu_259_m_axi_o_WDATA,
        m_axi_o_WSTRB => grp_conv3_Pipeline_4_fu_259_m_axi_o_WSTRB,
        m_axi_o_WLAST => grp_conv3_Pipeline_4_fu_259_m_axi_o_WLAST,
        m_axi_o_WID => grp_conv3_Pipeline_4_fu_259_m_axi_o_WID,
        m_axi_o_WUSER => grp_conv3_Pipeline_4_fu_259_m_axi_o_WUSER,
        m_axi_o_ARVALID => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARVALID,
        m_axi_o_ARREADY => ap_const_logic_0,
        m_axi_o_ARADDR => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARADDR,
        m_axi_o_ARID => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARID,
        m_axi_o_ARLEN => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARLEN,
        m_axi_o_ARSIZE => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARSIZE,
        m_axi_o_ARBURST => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARBURST,
        m_axi_o_ARLOCK => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARLOCK,
        m_axi_o_ARCACHE => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARCACHE,
        m_axi_o_ARPROT => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARPROT,
        m_axi_o_ARQOS => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARQOS,
        m_axi_o_ARREGION => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARREGION,
        m_axi_o_ARUSER => grp_conv3_Pipeline_4_fu_259_m_axi_o_ARUSER,
        m_axi_o_RVALID => ap_const_logic_0,
        m_axi_o_RREADY => grp_conv3_Pipeline_4_fu_259_m_axi_o_RREADY,
        m_axi_o_RDATA => ap_const_lv32_0,
        m_axi_o_RLAST => ap_const_logic_0,
        m_axi_o_RID => ap_const_lv1_0,
        m_axi_o_RFIFONUM => ap_const_lv13_0,
        m_axi_o_RUSER => ap_const_lv1_0,
        m_axi_o_RRESP => ap_const_lv2_0,
        m_axi_o_BVALID => m_axi_o_BVALID,
        m_axi_o_BREADY => grp_conv3_Pipeline_4_fu_259_m_axi_o_BREADY,
        m_axi_o_BRESP => m_axi_o_BRESP,
        m_axi_o_BID => m_axi_o_BID,
        m_axi_o_BUSER => m_axi_o_BUSER,
        sext_ln149 => trunc_ln4_reg_608,
        bh => bh_reg_189,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0);

    grp_conv3_Pipeline_RELU1_fu_272 : component srcnn_conv3_Pipeline_RELU1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_RELU1_fu_272_ap_start,
        ap_done => grp_conv3_Pipeline_RELU1_fu_272_ap_done,
        ap_idle => grp_conv3_Pipeline_RELU1_fu_272_ap_idle,
        ap_ready => grp_conv3_Pipeline_RELU1_fu_272_ap_ready,
        or_ln139 => or_ln139_reg_614,
        conv3_biases_0_0_val => conv3_biases_0_0_val,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 => grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q1,
        grp_fu_672_p_din0 => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din0,
        grp_fu_672_p_din1 => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din1,
        grp_fu_672_p_opcode => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_opcode,
        grp_fu_672_p_dout0 => grp_fu_561_p_dout0,
        grp_fu_672_p_ce => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_ce,
        grp_fu_708_p_din0 => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din0,
        grp_fu_708_p_din1 => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din1,
        grp_fu_708_p_opcode => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_opcode,
        grp_fu_708_p_dout0 => grp_fu_597_p_dout0,
        grp_fu_708_p_ce => grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_ce);

    grp_conv3_Pipeline_6_fu_282 : component srcnn_conv3_Pipeline_6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_6_fu_282_ap_start,
        ap_done => grp_conv3_Pipeline_6_fu_282_ap_done,
        ap_idle => grp_conv3_Pipeline_6_fu_282_ap_idle,
        ap_ready => grp_conv3_Pipeline_6_fu_282_ap_ready,
        m_axi_o_AWVALID => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWVALID,
        m_axi_o_AWREADY => m_axi_o_AWREADY,
        m_axi_o_AWADDR => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWADDR,
        m_axi_o_AWID => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWID,
        m_axi_o_AWLEN => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLEN,
        m_axi_o_AWSIZE => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWSIZE,
        m_axi_o_AWBURST => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWBURST,
        m_axi_o_AWLOCK => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLOCK,
        m_axi_o_AWCACHE => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWCACHE,
        m_axi_o_AWPROT => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWPROT,
        m_axi_o_AWQOS => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWQOS,
        m_axi_o_AWREGION => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWREGION,
        m_axi_o_AWUSER => grp_conv3_Pipeline_6_fu_282_m_axi_o_AWUSER,
        m_axi_o_WVALID => grp_conv3_Pipeline_6_fu_282_m_axi_o_WVALID,
        m_axi_o_WREADY => m_axi_o_WREADY,
        m_axi_o_WDATA => grp_conv3_Pipeline_6_fu_282_m_axi_o_WDATA,
        m_axi_o_WSTRB => grp_conv3_Pipeline_6_fu_282_m_axi_o_WSTRB,
        m_axi_o_WLAST => grp_conv3_Pipeline_6_fu_282_m_axi_o_WLAST,
        m_axi_o_WID => grp_conv3_Pipeline_6_fu_282_m_axi_o_WID,
        m_axi_o_WUSER => grp_conv3_Pipeline_6_fu_282_m_axi_o_WUSER,
        m_axi_o_ARVALID => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARVALID,
        m_axi_o_ARREADY => ap_const_logic_0,
        m_axi_o_ARADDR => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARADDR,
        m_axi_o_ARID => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARID,
        m_axi_o_ARLEN => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARLEN,
        m_axi_o_ARSIZE => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARSIZE,
        m_axi_o_ARBURST => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARBURST,
        m_axi_o_ARLOCK => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARLOCK,
        m_axi_o_ARCACHE => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARCACHE,
        m_axi_o_ARPROT => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARPROT,
        m_axi_o_ARQOS => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARQOS,
        m_axi_o_ARREGION => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARREGION,
        m_axi_o_ARUSER => grp_conv3_Pipeline_6_fu_282_m_axi_o_ARUSER,
        m_axi_o_RVALID => ap_const_logic_0,
        m_axi_o_RREADY => grp_conv3_Pipeline_6_fu_282_m_axi_o_RREADY,
        m_axi_o_RDATA => ap_const_lv32_0,
        m_axi_o_RLAST => ap_const_logic_0,
        m_axi_o_RID => ap_const_lv1_0,
        m_axi_o_RFIFONUM => ap_const_lv13_0,
        m_axi_o_RUSER => ap_const_lv1_0,
        m_axi_o_RRESP => ap_const_lv2_0,
        m_axi_o_BVALID => m_axi_o_BVALID,
        m_axi_o_BREADY => grp_conv3_Pipeline_6_fu_282_m_axi_o_BREADY,
        m_axi_o_BRESP => m_axi_o_BRESP,
        m_axi_o_BID => m_axi_o_BID,
        m_axi_o_BUSER => m_axi_o_BUSER,
        sext_ln149_1 => trunc_ln149_1_reg_634,
        or_ln139 => or_ln139_reg_614,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_q0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0 => conv3_float_255_255_float_32_5_5_float_float_255_255_o_q0);

    grp_conv3_Pipeline_CLEARW_fu_294 : component srcnn_conv3_Pipeline_CLEARW
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_CLEARW_fu_294_ap_start,
        ap_done => grp_conv3_Pipeline_CLEARW_fu_294_ap_done,
        ap_idle => grp_conv3_Pipeline_CLEARW_fu_294_ap_idle,
        ap_ready => grp_conv3_Pipeline_CLEARW_fu_294_ap_ready,
        h => h_reg_201,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 => grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0);

    grp_conv3_Pipeline_CLEARW2_fu_304 : component srcnn_conv3_Pipeline_CLEARW2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_CLEARW2_fu_304_ap_start,
        ap_done => grp_conv3_Pipeline_CLEARW2_fu_304_ap_done,
        ap_idle => grp_conv3_Pipeline_CLEARW2_fu_304_ap_idle,
        ap_ready => grp_conv3_Pipeline_CLEARW2_fu_304_ap_ready,
        add_ln72 => add_ln72_reg_654,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 => grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0);

    grp_conv3_Pipeline_CLEARW3_fu_313 : component srcnn_conv3_Pipeline_CLEARW3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv3_Pipeline_CLEARW3_fu_313_ap_start,
        ap_done => grp_conv3_Pipeline_CLEARW3_fu_313_ap_done,
        ap_idle => grp_conv3_Pipeline_CLEARW3_fu_313_ap_idle,
        ap_ready => grp_conv3_Pipeline_CLEARW3_fu_313_ap_ready,
        add_ln72_1 => add_ln72_1_reg_659,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0,
        conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 => grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_4_fu_259_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_4_fu_259_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                    grp_conv3_Pipeline_4_fu_259_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_4_fu_259_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_4_fu_259_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_6_fu_282_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_6_fu_282_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
                    grp_conv3_Pipeline_6_fu_282_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_6_fu_282_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_6_fu_282_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_CLEARW2_fu_304_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_CLEARW2_fu_304_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                    grp_conv3_Pipeline_CLEARW2_fu_304_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_CLEARW2_fu_304_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_CLEARW2_fu_304_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_CLEARW3_fu_313_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_CLEARW3_fu_313_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    grp_conv3_Pipeline_CLEARW3_fu_313_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_CLEARW3_fu_313_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_CLEARW3_fu_313_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_CLEARW_fu_294_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_CLEARW_fu_294_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln72_fu_517_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state32))) then 
                    grp_conv3_Pipeline_CLEARW_fu_294_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_CLEARW_fu_294_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_CLEARW_fu_294_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state13) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_RELU1_fu_272_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_RELU1_fu_272_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0))) and (icmp_ln136_1_fu_487_p2 = ap_const_lv1_1) and (icmp_ln136_reg_604 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                    grp_conv3_Pipeline_RELU1_fu_272_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_RELU1_fu_272_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_RELU1_fu_272_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_RELU_fu_248_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_RELU_fu_248_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln136_fu_359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                    grp_conv3_Pipeline_RELU_fu_248_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_RELU_fu_248_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_RELU_fu_248_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_ready = ap_const_logic_1)) then 
                    grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_load_input_buffer_c3_fu_213_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_load_input_buffer_c3_fu_213_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_load_input_buffer_c3_fu_213_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_load_input_buffer_c3_fu_213_ap_ready = ap_const_logic_1)) then 
                    grp_load_input_buffer_c3_fu_213_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bh_reg_189_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                bh_reg_189 <= ap_const_lv3_0;
            elsif (((m_axi_o_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                bh_reg_189 <= add_ln136_reg_640;
            end if; 
        end if;
    end process;

    h_1_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_1_fu_138 <= ap_const_lv8_0;
            elsif (((ap_const_boolean_0 = ap_block_state35_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state35) and ((icmp_ln72_1_fu_536_p2 = ap_const_lv1_0) or (icmp_ln72_reg_650 = ap_const_lv1_0)))) then 
                h_1_fu_138 <= add_ln32_fu_548_p2;
            end if; 
        end if;
    end process;

    h_reg_201_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state23) and ((icmp_ln136_1_fu_487_p2 = ap_const_lv1_0) or (icmp_ln136_reg_604 = ap_const_lv1_0)))) then 
                h_reg_201 <= ap_const_lv3_0;
            elsif (((grp_conv3_Pipeline_CLEARW3_fu_313_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                h_reg_201 <= add_ln72_2_reg_667;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln136_1_fu_487_p2 = ap_const_lv1_1) and (icmp_ln136_reg_604 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                add_ln136_reg_640 <= add_ln136_fu_501_p2;
                trunc_ln149_1_reg_634 <= add_ln139_3_reg_621(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln136_fu_359_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                add_ln139_3_reg_621 <= add_ln139_3_fu_472_p2;
                    or_ln139_reg_614(2 downto 1) <= or_ln139_fu_423_p2(2 downto 1);
                trunc_ln4_reg_608 <= add_ln139_1_fu_408_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                add_ln72_1_reg_659 <= add_ln72_1_fu_530_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_1_fu_536_p2 = ap_const_lv1_1) and (icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                add_ln72_2_reg_667 <= add_ln72_2_fu_542_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                add_ln72_reg_654 <= add_ln72_fu_523_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                icmp_ln136_reg_604 <= icmp_ln136_fu_359_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                icmp_ln72_reg_650 <= icmp_ln72_fu_517_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                trunc_ln_reg_582 <= conv3_weights(63 downto 2);
                w3_addr_reg_587 <= sext_ln119_fu_332_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                    zext_ln132_reg_598(7 downto 0) <= zext_ln132_fu_356_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln132_reg_598(8) <= '0';
    or_ln139_reg_614(0) <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_w3_ARREADY, m_axi_o_AWREADY, m_axi_o_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state16, ap_CS_fsm_state23, icmp_ln136_reg_604, ap_CS_fsm_state24, ap_CS_fsm_state31, ap_CS_fsm_state14, icmp_ln136_fu_359_p2, ap_CS_fsm_state15, icmp_ln136_1_fu_487_p2, icmp_ln72_fu_517_p2, icmp_ln72_reg_650, ap_CS_fsm_state32, ap_CS_fsm_state35, icmp_ln72_1_fu_536_p2, grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_done, grp_conv3_Pipeline_RELU_fu_248_ap_done, grp_conv3_Pipeline_4_fu_259_ap_done, grp_conv3_Pipeline_RELU1_fu_272_ap_done, grp_conv3_Pipeline_6_fu_282_ap_done, grp_conv3_Pipeline_CLEARW_fu_294_ap_done, grp_conv3_Pipeline_CLEARW3_fu_313_ap_done, ap_CS_fsm_state37, ap_CS_fsm_state12, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state33, ap_block_state35_on_subcall_done, ap_CS_fsm_state2, icmp_ln32_fu_350_p2, ap_block_state12_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln32_fu_350_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (m_axi_w3_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((icmp_ln136_fu_359_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                if ((not(((grp_conv3_Pipeline_RELU_fu_248_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                if (((grp_conv3_Pipeline_4_fu_259_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state19;
                else
                    ap_NS_fsm <= ap_ST_fsm_state18;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if ((not(((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state23) and ((icmp_ln136_1_fu_487_p2 = ap_const_lv1_0) or (icmp_ln136_reg_604 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                elsif ((not(((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0))) and (icmp_ln136_1_fu_487_p2 = ap_const_lv1_1) and (icmp_ln136_reg_604 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                if ((not(((grp_conv3_Pipeline_RELU1_fu_272_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if (((grp_conv3_Pipeline_6_fu_282_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((m_axi_o_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                if (((icmp_ln72_fu_517_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state32))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state33 => 
                if (((grp_conv3_Pipeline_CLEARW_fu_294_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state34;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                if (((ap_const_boolean_0 = ap_block_state35_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state35) and ((icmp_ln72_1_fu_536_p2 = ap_const_lv1_0) or (icmp_ln72_reg_650 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_const_boolean_0 = ap_block_state35_on_subcall_done) and (icmp_ln72_1_fu_536_p2 = ap_const_lv1_1) and (icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_conv3_Pipeline_CLEARW3_fu_313_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln136_fu_501_p2 <= std_logic_vector(unsigned(bh_reg_189) + unsigned(ap_const_lv3_2));
    add_ln139_1_fu_408_p2 <= std_logic_vector(signed(sext_ln139_fu_404_p1) + signed(output_ftmap));
    add_ln139_2_fu_433_p2 <= std_logic_vector(unsigned(zext_ln139_2_fu_429_p1) + unsigned(zext_ln132_reg_598));
    add_ln139_3_fu_472_p2 <= std_logic_vector(signed(sext_ln139_1_fu_468_p1) + signed(output_ftmap));
    add_ln139_fu_369_p2 <= std_logic_vector(unsigned(zext_ln136_fu_365_p1) + unsigned(zext_ln132_reg_598));
    add_ln32_fu_548_p2 <= std_logic_vector(unsigned(h_1_fu_138) + unsigned(ap_const_lv8_5));
    add_ln72_1_fu_530_p2 <= std_logic_vector(unsigned(h_reg_201) + unsigned(ap_const_lv3_2));
    add_ln72_2_fu_542_p2 <= std_logic_vector(unsigned(h_reg_201) + unsigned(ap_const_lv3_3));
    add_ln72_fu_523_p2 <= std_logic_vector(unsigned(h_reg_201) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_NS_fsm_state13 <= ap_NS_fsm(12);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;

    ap_ST_fsm_state14_blk_assign_proc : process(grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_done)
    begin
        if ((grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;

    ap_ST_fsm_state16_blk_assign_proc : process(m_axi_o_AWREADY, grp_conv3_Pipeline_RELU_fu_248_ap_done)
    begin
        if (((grp_conv3_Pipeline_RELU_fu_248_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state16_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state16_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state17_blk <= ap_const_logic_0;

    ap_ST_fsm_state18_blk_assign_proc : process(grp_conv3_Pipeline_4_fu_259_ap_done)
    begin
        if ((grp_conv3_Pipeline_4_fu_259_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state18_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state18_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(m_axi_o_BVALID, icmp_ln136_reg_604)
    begin
        if (((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state24_blk_assign_proc : process(m_axi_o_AWREADY, grp_conv3_Pipeline_RELU1_fu_272_ap_done)
    begin
        if (((grp_conv3_Pipeline_RELU1_fu_272_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state24_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state24_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(grp_conv3_Pipeline_6_fu_282_ap_done)
    begin
        if ((grp_conv3_Pipeline_6_fu_282_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;

    ap_ST_fsm_state31_blk_assign_proc : process(m_axi_o_BVALID)
    begin
        if ((m_axi_o_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(grp_conv3_Pipeline_CLEARW_fu_294_ap_done)
    begin
        if ((grp_conv3_Pipeline_CLEARW_fu_294_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state34_blk <= ap_const_logic_0;

    ap_ST_fsm_state35_blk_assign_proc : process(ap_block_state35_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state35_on_subcall_done)) then 
            ap_ST_fsm_state35_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state35_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state36_blk <= ap_const_logic_0;

    ap_ST_fsm_state37_blk_assign_proc : process(grp_conv3_Pipeline_CLEARW3_fu_313_ap_done)
    begin
        if ((grp_conv3_Pipeline_CLEARW3_fu_313_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state37_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state37_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_w3_ARREADY)
    begin
        if ((m_axi_w3_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state12_on_subcall_done_assign_proc : process(grp_load_input_buffer_c3_fu_213_ap_done, grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_done)
    begin
                ap_block_state12_on_subcall_done <= ((grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_done = ap_const_logic_0) or (grp_load_input_buffer_c3_fu_213_ap_done = ap_const_logic_0));
    end process;


    ap_block_state23_assign_proc : process(m_axi_o_BVALID, icmp_ln136_reg_604)
    begin
                ap_block_state23 <= ((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0));
    end process;


    ap_block_state23_ignore_call0_assign_proc : process(m_axi_o_BVALID, icmp_ln136_reg_604)
    begin
                ap_block_state23_ignore_call0 <= ((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0));
    end process;


    ap_block_state35_on_subcall_done_assign_proc : process(icmp_ln72_reg_650, grp_conv3_Pipeline_CLEARW2_fu_304_ap_done)
    begin
                ap_block_state35_on_subcall_done <= ((grp_conv3_Pipeline_CLEARW2_fu_304_ap_done = ap_const_logic_0) and (icmp_ln72_reg_650 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln32_fu_350_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln32_fu_350_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln32_fu_350_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln32_fu_350_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0_assign_proc : process(grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1_assign_proc : process(grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1_assign_proc : process(ap_CS_fsm_state14, grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0_assign_proc : process(grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1_assign_proc : process(grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1 <= grp_load_input_buffer_c3_fu_213_conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_i_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0, ap_CS_fsm_state37, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0, ap_CS_fsm_state37, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0, ap_CS_fsm_state37, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0, ap_CS_fsm_state37, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0, ap_CS_fsm_state37, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0, ap_CS_fsm_state37, ap_CS_fsm_state18, ap_CS_fsm_state26, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_6_fu_282_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_4_fu_259_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0, ap_CS_fsm_state37, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, icmp_ln72_reg_650, ap_CS_fsm_state35, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0, grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0, grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0, grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0, grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0, grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0, ap_CS_fsm_state37, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 <= grp_conv3_Pipeline_CLEARW3_fu_313_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0;
        elsif (((icmp_ln72_reg_650 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 <= grp_conv3_Pipeline_CLEARW2_fu_304_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 <= grp_conv3_Pipeline_CLEARW_fu_294_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 <= grp_conv3_Pipeline_RELU1_fu_272_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 <= grp_conv3_Pipeline_RELU_fu_248_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1;
        else 
            conv3_float_255_255_float_32_5_5_float_float_255_255_o_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_conv3_Pipeline_4_fu_259_ap_start <= grp_conv3_Pipeline_4_fu_259_ap_start_reg;
    grp_conv3_Pipeline_6_fu_282_ap_start <= grp_conv3_Pipeline_6_fu_282_ap_start_reg;
    grp_conv3_Pipeline_CLEARW2_fu_304_ap_start <= grp_conv3_Pipeline_CLEARW2_fu_304_ap_start_reg;
    grp_conv3_Pipeline_CLEARW3_fu_313_ap_start <= grp_conv3_Pipeline_CLEARW3_fu_313_ap_start_reg;
    grp_conv3_Pipeline_CLEARW_fu_294_ap_start <= grp_conv3_Pipeline_CLEARW_fu_294_ap_start_reg;
    grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_ap_start_reg;
    grp_conv3_Pipeline_RELU1_fu_272_ap_start <= grp_conv3_Pipeline_RELU1_fu_272_ap_start_reg;
    grp_conv3_Pipeline_RELU_fu_248_ap_start <= grp_conv3_Pipeline_RELU_fu_248_ap_start_reg;
    grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_ap_start_reg;
    grp_fu_561_p_ce <= grp_fu_672_ce;
    grp_fu_561_p_din0 <= grp_fu_672_p0;
    grp_fu_561_p_din1 <= grp_fu_672_p1;
    grp_fu_561_p_opcode <= ap_const_lv2_0;
    grp_fu_565_p_ce <= grp_fu_676_ce;
    grp_fu_565_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_din0;
    grp_fu_565_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_din1;
    grp_fu_565_p_opcode <= ap_const_lv2_0;
    grp_fu_569_p_ce <= grp_fu_680_ce;
    grp_fu_569_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_din0;
    grp_fu_569_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_din1;
    grp_fu_569_p_opcode <= ap_const_lv2_0;
    grp_fu_573_p_ce <= grp_fu_684_ce;
    grp_fu_573_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_din0;
    grp_fu_573_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_din1;
    grp_fu_573_p_opcode <= ap_const_lv2_0;
    grp_fu_577_p_ce <= grp_fu_688_ce;
    grp_fu_577_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_din0;
    grp_fu_577_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_din1;
    grp_fu_577_p_opcode <= ap_const_lv2_0;
    grp_fu_581_p_ce <= grp_fu_692_ce;
    grp_fu_581_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_din0;
    grp_fu_581_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_din1;
    grp_fu_585_p_ce <= grp_fu_696_ce;
    grp_fu_585_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_din0;
    grp_fu_585_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_din1;
    grp_fu_589_p_ce <= grp_fu_700_ce;
    grp_fu_589_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_din0;
    grp_fu_589_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_din1;
    grp_fu_593_p_ce <= grp_fu_704_ce;
    grp_fu_593_p_din0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_din0;
    grp_fu_593_p_din1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_din1;
    grp_fu_597_p_ce <= grp_fu_708_ce;
    grp_fu_597_p_din0 <= grp_fu_708_p0;
    grp_fu_597_p_din1 <= grp_fu_708_p1;
    grp_fu_597_p_opcode <= grp_fu_708_opcode;

    grp_fu_672_ce_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_ce, grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_ce, grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_672_ce <= grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_672_ce <= grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_672_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_ce;
        else 
            grp_fu_672_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_672_p0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din0, grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din0, grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_672_p0 <= grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_672_p0 <= grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_672_p0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din0;
        else 
            grp_fu_672_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_672_p1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din1, grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din1, grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_672_p1 <= grp_conv3_Pipeline_RELU1_fu_272_grp_fu_672_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_672_p1 <= grp_conv3_Pipeline_RELU_fu_248_grp_fu_672_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_672_p1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_672_p_din1;
        else 
            grp_fu_672_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_676_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_676_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_676_p_ce;
        else 
            grp_fu_676_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_680_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_680_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_680_p_ce;
        else 
            grp_fu_680_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_684_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_684_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_684_p_ce;
        else 
            grp_fu_684_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_688_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_688_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_688_p_ce;
        else 
            grp_fu_688_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_692_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_692_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_692_p_ce;
        else 
            grp_fu_692_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_696_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_696_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_696_p_ce;
        else 
            grp_fu_696_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_700_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_700_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_700_p_ce;
        else 
            grp_fu_700_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_704_ce_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_704_ce <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_grp_fu_704_p_ce;
        else 
            grp_fu_704_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_708_ce_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_ce, grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_708_ce <= grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_708_ce <= grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_ce;
        else 
            grp_fu_708_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_708_opcode_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_opcode, grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_708_opcode <= grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_708_opcode <= grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_opcode;
        else 
            grp_fu_708_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_708_p0_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din0, grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_708_p0 <= grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_708_p0 <= grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din0;
        else 
            grp_fu_708_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_708_p1_assign_proc : process(ap_CS_fsm_state16, ap_CS_fsm_state24, grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din1, grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            grp_fu_708_p1 <= grp_conv3_Pipeline_RELU1_fu_272_grp_fu_708_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            grp_fu_708_p1 <= grp_conv3_Pipeline_RELU_fu_248_grp_fu_708_p_din1;
        else 
            grp_fu_708_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_load_input_buffer_c3_fu_213_ap_start <= grp_load_input_buffer_c3_fu_213_ap_start_reg;
    icmp_ln136_1_fu_487_p2 <= "1" when (unsigned(or_ln139_reg_614) < unsigned(ap_const_lv3_5)) else "0";
    icmp_ln136_fu_359_p2 <= "1" when (unsigned(bh_reg_189) < unsigned(ap_const_lv3_5)) else "0";
    icmp_ln32_fu_350_p2 <= "1" when (h_1_fu_138 = ap_const_lv8_FF) else "0";
    icmp_ln72_1_fu_536_p2 <= "1" when (unsigned(add_ln72_1_fu_530_p2) < unsigned(ap_const_lv3_5)) else "0";
    icmp_ln72_fu_517_p2 <= "1" when (unsigned(h_reg_201) < unsigned(ap_const_lv3_5)) else "0";
    m_axi_i3_ARADDR <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARADDR;
    m_axi_i3_ARBURST <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARBURST;
    m_axi_i3_ARCACHE <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARCACHE;
    m_axi_i3_ARID <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARID;
    m_axi_i3_ARLEN <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARLEN;
    m_axi_i3_ARLOCK <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARLOCK;
    m_axi_i3_ARPROT <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARPROT;
    m_axi_i3_ARQOS <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARQOS;
    m_axi_i3_ARREGION <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARREGION;
    m_axi_i3_ARSIZE <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARSIZE;
    m_axi_i3_ARUSER <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARUSER;

    m_axi_i3_ARVALID_assign_proc : process(grp_load_input_buffer_c3_fu_213_m_axi_i3_ARVALID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_i3_ARVALID <= grp_load_input_buffer_c3_fu_213_m_axi_i3_ARVALID;
        else 
            m_axi_i3_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i3_AWADDR <= ap_const_lv64_0;
    m_axi_i3_AWBURST <= ap_const_lv2_0;
    m_axi_i3_AWCACHE <= ap_const_lv4_0;
    m_axi_i3_AWID <= ap_const_lv1_0;
    m_axi_i3_AWLEN <= ap_const_lv32_0;
    m_axi_i3_AWLOCK <= ap_const_lv2_0;
    m_axi_i3_AWPROT <= ap_const_lv3_0;
    m_axi_i3_AWQOS <= ap_const_lv4_0;
    m_axi_i3_AWREGION <= ap_const_lv4_0;
    m_axi_i3_AWSIZE <= ap_const_lv3_0;
    m_axi_i3_AWUSER <= ap_const_lv1_0;
    m_axi_i3_AWVALID <= ap_const_logic_0;
    m_axi_i3_BREADY <= ap_const_logic_0;

    m_axi_i3_RREADY_assign_proc : process(grp_load_input_buffer_c3_fu_213_m_axi_i3_RREADY, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_i3_RREADY <= grp_load_input_buffer_c3_fu_213_m_axi_i3_RREADY;
        else 
            m_axi_i3_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i3_WDATA <= ap_const_lv32_0;
    m_axi_i3_WID <= ap_const_lv1_0;
    m_axi_i3_WLAST <= ap_const_logic_0;
    m_axi_i3_WSTRB <= ap_const_lv4_0;
    m_axi_i3_WUSER <= ap_const_lv1_0;
    m_axi_i3_WVALID <= ap_const_logic_0;
    m_axi_o_ARADDR <= ap_const_lv64_0;
    m_axi_o_ARBURST <= ap_const_lv2_0;
    m_axi_o_ARCACHE <= ap_const_lv4_0;
    m_axi_o_ARID <= ap_const_lv1_0;
    m_axi_o_ARLEN <= ap_const_lv32_0;
    m_axi_o_ARLOCK <= ap_const_lv2_0;
    m_axi_o_ARPROT <= ap_const_lv3_0;
    m_axi_o_ARQOS <= ap_const_lv4_0;
    m_axi_o_ARREGION <= ap_const_lv4_0;
    m_axi_o_ARSIZE <= ap_const_lv3_0;
    m_axi_o_ARUSER <= ap_const_lv1_0;
    m_axi_o_ARVALID <= ap_const_logic_0;

    m_axi_o_AWADDR_assign_proc : process(m_axi_o_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state24, grp_conv3_Pipeline_RELU_fu_248_ap_done, grp_conv3_Pipeline_4_fu_259_m_axi_o_AWADDR, grp_conv3_Pipeline_RELU1_fu_272_ap_done, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWADDR, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26, sext_ln149_fu_477_p1, sext_ln149_1_fu_507_p1)
    begin
        if ((not(((grp_conv3_Pipeline_RELU1_fu_272_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            m_axi_o_AWADDR <= sext_ln149_1_fu_507_p1;
        elsif ((not(((grp_conv3_Pipeline_RELU_fu_248_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            m_axi_o_AWADDR <= sext_ln149_fu_477_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWADDR <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWADDR <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWADDR;
        else 
            m_axi_o_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_o_AWBURST_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWBURST, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWBURST, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWBURST <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWBURST <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWBURST;
        else 
            m_axi_o_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_o_AWCACHE_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWCACHE, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWCACHE, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWCACHE <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWCACHE <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWCACHE;
        else 
            m_axi_o_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_o_AWID_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWID, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWID, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWID <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWID <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWID;
        else 
            m_axi_o_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_o_AWLEN_assign_proc : process(m_axi_o_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state24, grp_conv3_Pipeline_RELU_fu_248_ap_done, grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLEN, grp_conv3_Pipeline_RELU1_fu_272_ap_done, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLEN, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((not(((grp_conv3_Pipeline_RELU1_fu_272_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state24)) or (not(((grp_conv3_Pipeline_RELU_fu_248_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_o_AWLEN <= ap_const_lv32_FF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWLEN <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWLEN <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLEN;
        else 
            m_axi_o_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_o_AWLOCK_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLOCK, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLOCK, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWLOCK <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWLOCK <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWLOCK;
        else 
            m_axi_o_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_o_AWPROT_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWPROT, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWPROT, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWPROT <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWPROT <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWPROT;
        else 
            m_axi_o_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_o_AWQOS_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWQOS, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWQOS, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWQOS <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWQOS <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWQOS;
        else 
            m_axi_o_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_o_AWREGION_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWREGION, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWREGION, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWREGION <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWREGION <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWREGION;
        else 
            m_axi_o_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_o_AWSIZE_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWSIZE, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWSIZE, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWSIZE <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWSIZE <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWSIZE;
        else 
            m_axi_o_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_o_AWUSER_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_AWUSER, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWUSER, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWUSER <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWUSER <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWUSER;
        else 
            m_axi_o_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_o_AWVALID_assign_proc : process(m_axi_o_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state24, grp_conv3_Pipeline_RELU_fu_248_ap_done, grp_conv3_Pipeline_4_fu_259_m_axi_o_AWVALID, grp_conv3_Pipeline_RELU1_fu_272_ap_done, grp_conv3_Pipeline_6_fu_282_m_axi_o_AWVALID, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((not(((grp_conv3_Pipeline_RELU1_fu_272_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state24)) or (not(((grp_conv3_Pipeline_RELU_fu_248_ap_done = ap_const_logic_0) or (m_axi_o_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state16)))) then 
            m_axi_o_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_AWVALID <= grp_conv3_Pipeline_6_fu_282_m_axi_o_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_AWVALID <= grp_conv3_Pipeline_4_fu_259_m_axi_o_AWVALID;
        else 
            m_axi_o_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_o_BREADY_assign_proc : process(m_axi_o_BVALID, ap_CS_fsm_state23, icmp_ln136_reg_604, ap_CS_fsm_state31, grp_conv3_Pipeline_4_fu_259_m_axi_o_BREADY, grp_conv3_Pipeline_6_fu_282_m_axi_o_BREADY, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((not(((icmp_ln136_reg_604 = ap_const_lv1_1) and (m_axi_o_BVALID = ap_const_logic_0))) and (icmp_ln136_reg_604 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)) or ((m_axi_o_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            m_axi_o_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_BREADY <= grp_conv3_Pipeline_6_fu_282_m_axi_o_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_BREADY <= grp_conv3_Pipeline_4_fu_259_m_axi_o_BREADY;
        else 
            m_axi_o_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_o_RREADY <= ap_const_logic_0;

    m_axi_o_WDATA_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_WDATA, grp_conv3_Pipeline_6_fu_282_m_axi_o_WDATA, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_WDATA <= grp_conv3_Pipeline_6_fu_282_m_axi_o_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_WDATA <= grp_conv3_Pipeline_4_fu_259_m_axi_o_WDATA;
        else 
            m_axi_o_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_o_WID_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_WID, grp_conv3_Pipeline_6_fu_282_m_axi_o_WID, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_WID <= grp_conv3_Pipeline_6_fu_282_m_axi_o_WID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_WID <= grp_conv3_Pipeline_4_fu_259_m_axi_o_WID;
        else 
            m_axi_o_WID <= "X";
        end if; 
    end process;


    m_axi_o_WLAST_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_WLAST, grp_conv3_Pipeline_6_fu_282_m_axi_o_WLAST, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_WLAST <= grp_conv3_Pipeline_6_fu_282_m_axi_o_WLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_WLAST <= grp_conv3_Pipeline_4_fu_259_m_axi_o_WLAST;
        else 
            m_axi_o_WLAST <= 'X';
        end if; 
    end process;


    m_axi_o_WSTRB_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_WSTRB, grp_conv3_Pipeline_6_fu_282_m_axi_o_WSTRB, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_WSTRB <= grp_conv3_Pipeline_6_fu_282_m_axi_o_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_WSTRB <= grp_conv3_Pipeline_4_fu_259_m_axi_o_WSTRB;
        else 
            m_axi_o_WSTRB <= "XXXX";
        end if; 
    end process;


    m_axi_o_WUSER_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_WUSER, grp_conv3_Pipeline_6_fu_282_m_axi_o_WUSER, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_WUSER <= grp_conv3_Pipeline_6_fu_282_m_axi_o_WUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_WUSER <= grp_conv3_Pipeline_4_fu_259_m_axi_o_WUSER;
        else 
            m_axi_o_WUSER <= "X";
        end if; 
    end process;


    m_axi_o_WVALID_assign_proc : process(grp_conv3_Pipeline_4_fu_259_m_axi_o_WVALID, grp_conv3_Pipeline_6_fu_282_m_axi_o_WVALID, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state25, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            m_axi_o_WVALID <= grp_conv3_Pipeline_6_fu_282_m_axi_o_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_o_WVALID <= grp_conv3_Pipeline_4_fu_259_m_axi_o_WVALID;
        else 
            m_axi_o_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_w3_ARADDR_assign_proc : process(m_axi_w3_ARREADY, ap_CS_fsm_state3, w3_addr_reg_587, grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARADDR, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (m_axi_w3_ARREADY = ap_const_logic_1))) then 
            m_axi_w3_ARADDR <= w3_addr_reg_587;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARADDR <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARADDR;
        else 
            m_axi_w3_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_w3_ARBURST_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARBURST, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARBURST <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARBURST;
        else 
            m_axi_w3_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_w3_ARCACHE_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARCACHE, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARCACHE <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARCACHE;
        else 
            m_axi_w3_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w3_ARID_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARID <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARID;
        else 
            m_axi_w3_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_w3_ARLEN_assign_proc : process(m_axi_w3_ARREADY, ap_CS_fsm_state3, grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLEN, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (m_axi_w3_ARREADY = ap_const_logic_1))) then 
            m_axi_w3_ARLEN <= ap_const_lv32_320;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARLEN <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLEN;
        else 
            m_axi_w3_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_w3_ARLOCK_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLOCK, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARLOCK <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARLOCK;
        else 
            m_axi_w3_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_w3_ARPROT_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARPROT, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARPROT <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARPROT;
        else 
            m_axi_w3_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_w3_ARQOS_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARQOS, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARQOS <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARQOS;
        else 
            m_axi_w3_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w3_ARREGION_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARREGION, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARREGION <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARREGION;
        else 
            m_axi_w3_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_w3_ARSIZE_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARSIZE, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARSIZE <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARSIZE;
        else 
            m_axi_w3_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_w3_ARUSER_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARUSER, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARUSER <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARUSER;
        else 
            m_axi_w3_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_w3_ARVALID_assign_proc : process(m_axi_w3_ARREADY, ap_CS_fsm_state3, grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARVALID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (m_axi_w3_ARREADY = ap_const_logic_1))) then 
            m_axi_w3_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_ARVALID <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_ARVALID;
        else 
            m_axi_w3_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w3_AWADDR <= ap_const_lv64_0;
    m_axi_w3_AWBURST <= ap_const_lv2_0;
    m_axi_w3_AWCACHE <= ap_const_lv4_0;
    m_axi_w3_AWID <= ap_const_lv1_0;
    m_axi_w3_AWLEN <= ap_const_lv32_0;
    m_axi_w3_AWLOCK <= ap_const_lv2_0;
    m_axi_w3_AWPROT <= ap_const_lv3_0;
    m_axi_w3_AWQOS <= ap_const_lv4_0;
    m_axi_w3_AWREGION <= ap_const_lv4_0;
    m_axi_w3_AWSIZE <= ap_const_lv3_0;
    m_axi_w3_AWUSER <= ap_const_lv1_0;
    m_axi_w3_AWVALID <= ap_const_logic_0;
    m_axi_w3_BREADY <= ap_const_logic_0;

    m_axi_w3_RREADY_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_RREADY, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_w3_RREADY <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_m_axi_w3_RREADY;
        else 
            m_axi_w3_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_w3_WDATA <= ap_const_lv32_0;
    m_axi_w3_WID <= ap_const_lv1_0;
    m_axi_w3_WLAST <= ap_const_logic_0;
    m_axi_w3_WSTRB <= ap_const_lv4_0;
    m_axi_w3_WUSER <= ap_const_lv1_0;
    m_axi_w3_WVALID <= ap_const_logic_0;

    o_blk_n_AW_assign_proc : process(m_axi_o_AWREADY, ap_CS_fsm_state16, ap_CS_fsm_state24)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
            o_blk_n_AW <= m_axi_o_AWREADY;
        else 
            o_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    o_blk_n_B_assign_proc : process(m_axi_o_BVALID, ap_CS_fsm_state23, icmp_ln136_reg_604, ap_CS_fsm_state31)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state31) or ((icmp_ln136_reg_604 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            o_blk_n_B <= m_axi_o_BVALID;
        else 
            o_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    or_ln139_fu_423_p2 <= (bh_reg_189 or ap_const_lv3_1);
        sext_ln119_fu_332_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_322_p4),64));

        sext_ln139_1_fu_468_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln139_1_fu_462_p2),64));

        sext_ln139_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln139_fu_398_p2),64));

        sext_ln149_1_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln149_1_reg_634),64));

        sext_ln149_fu_477_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_reg_608),64));

    shl_ln139_1_fu_386_p3 <= (add_ln139_fu_369_p2 & ap_const_lv2_0);
    shl_ln139_2_fu_438_p3 <= (add_ln139_2_fu_433_p2 & ap_const_lv10_0);
    shl_ln139_3_fu_450_p3 <= (add_ln139_2_fu_433_p2 & ap_const_lv2_0);
    shl_ln_fu_374_p3 <= (add_ln139_fu_369_p2 & ap_const_lv10_0);
    sub_ln139_1_fu_462_p2 <= std_logic_vector(unsigned(zext_ln139_3_fu_446_p1) - unsigned(zext_ln139_4_fu_458_p1));
    sub_ln139_fu_398_p2 <= std_logic_vector(unsigned(zext_ln139_fu_382_p1) - unsigned(zext_ln139_1_fu_394_p1));
    trunc_ln_fu_322_p4 <= conv3_weights(63 downto 2);

    w3_blk_n_AR_assign_proc : process(m_axi_w3_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            w3_blk_n_AR <= m_axi_w3_ARREADY;
        else 
            w3_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    weight_buffer_0_address0_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_address0, grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_address0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_buffer_0_address0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_0_address0 <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_address0;
        else 
            weight_buffer_0_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    weight_buffer_0_ce0_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_ce0, grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_buffer_0_ce0 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_0_ce0 <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_ce0;
        else 
            weight_buffer_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_0_ce1_assign_proc : process(ap_CS_fsm_state14, grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            weight_buffer_0_ce1 <= grp_conv3_Pipeline_IN_ROW_COL_fu_234_weight_buffer_0_ce1;
        else 
            weight_buffer_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_0_we0_assign_proc : process(grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_0_we0 <= grp_conv3_Pipeline_WEIGHTI_WEIGHTK_L_fu_225_weight_buffer_0_we0;
        else 
            weight_buffer_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln132_fu_356_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_1_fu_138),9));
    zext_ln136_fu_365_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_189),9));
    zext_ln139_1_fu_394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln139_1_fu_386_p3),20));
    zext_ln139_2_fu_429_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln139_fu_423_p2),9));
    zext_ln139_3_fu_446_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln139_2_fu_438_p3),20));
    zext_ln139_4_fu_458_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln139_3_fu_450_p3),20));
    zext_ln139_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_374_p3),20));
end behav;
