-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_export_output_buffer_c1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_i2_AWVALID : OUT STD_LOGIC;
    m_axi_i2_AWREADY : IN STD_LOGIC;
    m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WVALID : OUT STD_LOGIC;
    m_axi_i2_WREADY : IN STD_LOGIC;
    m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_WLAST : OUT STD_LOGIC;
    m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARVALID : OUT STD_LOGIC;
    m_axi_i2_ARREADY : IN STD_LOGIC;
    m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RVALID : IN STD_LOGIC;
    m_axi_i2_RREADY : OUT STD_LOGIC;
    m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_RLAST : IN STD_LOGIC;
    m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BVALID : IN STD_LOGIC;
    m_axi_i2_BREADY : OUT STD_LOGIC;
    m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    conv1_biases_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    conv1_biases_ce0 : OUT STD_LOGIC;
    conv1_biases_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    out_r : IN STD_LOGIC_VECTOR (5 downto 0);
    h : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2181_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2181_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2181_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_2181_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2181_p_ce : OUT STD_LOGIC;
    grp_fu_2189_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2189_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_2189_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_2189_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_2189_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_export_output_buffer_c1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (26 downto 0) := "000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (26 downto 0) := "000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (26 downto 0) := "000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (26 downto 0) := "000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (26 downto 0) := "000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (26 downto 0) := "000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (26 downto 0) := "000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (26 downto 0) := "000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (26 downto 0) := "000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (26 downto 0) := "000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (26 downto 0) := "001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (26 downto 0) := "010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (26 downto 0) := "100000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv25_3F804 : STD_LOGIC_VECTOR (24 downto 0) := "0000000111111100000000100";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (26 downto 0) := "000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i2_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i2_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal i2_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal icmp_ln126_reg_1390 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln126_1_reg_1459 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal zext_ln125_fu_622_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln125_reg_1335 : STD_LOGIC_VECTOR (8 downto 0);
    signal out_cast_fu_626_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal out_cast_reg_1340 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln126_1_fu_636_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln126_1_reg_1345 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln125_fu_654_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln125_reg_1356 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln125_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln126_fu_701_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln126_reg_1366 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln125_2_fu_718_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln125_2_reg_1379 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal empty_71_fu_722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_71_reg_1384 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln126_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln126_2_fu_732_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln126_2_reg_1394 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln126_1_fu_736_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln126_1_reg_1399 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln132_fu_776_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln132_reg_1407 : STD_LOGIC_VECTOR (11 downto 0);
    signal i2_addr_reg_1415 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln126_fu_847_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln126_reg_1421 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal empty_74_fu_874_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_74_reg_1449 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln126_4_fu_918_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln126_4_reg_1454 : STD_LOGIC_VECTOR (63 downto 0);
    signal exitcond348_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln126_1_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_934_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1463 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal empty_79_fu_1004_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_79_reg_1497 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln126_5_fu_1010_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln126_5_reg_1502 : STD_LOGIC_VECTOR (4 downto 0);
    signal exitcond3810_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_1016_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1507 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal o_1_reg_1512 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal trunc_ln70_fu_1042_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln70_reg_1517 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln65_fu_1054_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln65_reg_1523 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln65_fu_1064_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln65_reg_1531 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln66_fu_1070_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln66_reg_1536 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal sub_ln70_fu_1108_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln70_reg_1544 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln66_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln68_fu_1144_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal sub_ln70_1_fu_1188_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln70_1_reg_1560 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln68_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln68_1_fu_1220_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal sub_ln70_2_fu_1270_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln70_2_reg_1576 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln68_1_fu_1214_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln68_2_fu_1302_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal add_ln66_2_fu_1312_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln68_2_fu_1296_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_ce : STD_LOGIC;
    signal bh_reg_513 : STD_LOGIC_VECTOR (4 downto 0);
    signal loop_index_0_reg_525 : STD_LOGIC_VECTOR (7 downto 0);
    signal loop_index_1_reg_536 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal h_1_reg_547 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln65_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal w_reg_559 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_1_reg_570 : STD_LOGIC_VECTOR (7 downto 0);
    signal w_2_reg_581 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start_reg : STD_LOGIC := '0';
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state13_ignore_call0 : BOOLEAN;
    signal ap_predicate_op140_writereq_state13 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal p_cast9_fu_686_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast246_fu_860_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast248_fu_990_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_2_fu_1127_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_5_fu_1203_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln70_9_fu_1285_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln139_fu_837_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln139_1_fu_966_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state13 : BOOLEAN;
    signal empty_75_fu_953_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_80_fu_1035_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bout_fu_162 : STD_LOGIC_VECTOR (3 downto 0);
    signal o_fu_166 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln66_fu_1150_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln66_2_fu_1308_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln66_1_fu_1226_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln126_6_fu_630_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_fu_664_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln125_1_fu_660_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_69_fu_672_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal bout_cast_cast_fu_668_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal empty_70_fu_681_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal mul_ln126_fu_691_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln126_fu_691_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln126_fu_691_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln126_fu_697_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_fu_711_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln_fu_741_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln132_fu_751_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln132_fu_755_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln132_fu_764_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl_fu_768_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln132_3_fu_760_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln126_1_fu_783_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_788_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln126_1_fu_800_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln126_3_fu_796_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln126_4_fu_808_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln126_fu_812_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln126_fu_818_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln126_2_fu_822_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln4_fu_827_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal loop_index_0_cast238_fu_851_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_73_fu_855_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln126_3_fu_880_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln126_2_fu_884_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln126_3_fu_896_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln126_5_fu_892_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln126_6_fu_904_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln126_1_fu_908_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln126_1_fu_914_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal or_ln126_fu_923_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln139_1_fu_957_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal loop_index_1_cast239_fu_981_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal empty_78_fu_985_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_1046_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_1080_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_1088_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_fu_1099_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln70_fu_1095_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln70_1_fu_1118_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln70_fu_1122_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln66_fu_1154_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_fu_1160_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_1168_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_6_fu_1179_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln70_3_fu_1175_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln70_4_fu_1194_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln70_1_fu_1198_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln66_1_fu_1230_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal lshr_ln68_1_fu_1235_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln70_6_fu_1245_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln70_2_fu_1249_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln70_1_fu_1258_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_shl3_fu_1262_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln70_7_fu_1254_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln70_8_fu_1276_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln70_3_fu_1280_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_1597_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1597_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1597_ce : STD_LOGIC;
    signal grp_fu_1601_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1601_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1601_ce : STD_LOGIC;
    signal grp_fu_1601_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal mul_ln126_fu_691_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_export_output_buffer_c1_Pipeline_RELU IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln132 : IN STD_LOGIC_VECTOR (11 downto 0);
        trunc_ln126_1 : IN STD_LOGIC_VECTOR (2 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1597_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_ce : OUT STD_LOGIC;
        grp_fu_1601_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1601_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1601_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1601_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1601_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_export_output_buffer_c1_Pipeline_RELU1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln132 : IN STD_LOGIC_VECTOR (11 downto 0);
        trunc_ln126_1 : IN STD_LOGIC_VECTOR (2 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1597_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1597_p_ce : OUT STD_LOGIC;
        grp_fu_1601_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1601_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1601_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1601_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1601_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_mul_7ns_19ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component srcnn_mux_7_3_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_export_output_buffer_c1_Pipeline_RELU_fu_592 : component srcnn_export_output_buffer_c1_Pipeline_RELU
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_ready,
        sub_ln132 => sub_ln132_reg_1407,
        trunc_ln126_1 => trunc_ln126_1_reg_1399,
        empty => empty_71_reg_1384,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1,
        grp_fu_1597_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din0,
        grp_fu_1597_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din1,
        grp_fu_1597_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_opcode,
        grp_fu_1597_p_dout0 => grp_fu_2181_p_dout0,
        grp_fu_1597_p_ce => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_ce,
        grp_fu_1601_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din0,
        grp_fu_1601_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din1,
        grp_fu_1601_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_opcode,
        grp_fu_1601_p_dout0 => grp_fu_2189_p_dout0,
        grp_fu_1601_p_ce => grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_ce);

    grp_export_output_buffer_c1_Pipeline_RELU1_fu_607 : component srcnn_export_output_buffer_c1_Pipeline_RELU1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_ready,
        sub_ln132 => sub_ln132_reg_1407,
        trunc_ln126_1 => trunc_ln126_1_reg_1399,
        empty => empty_71_reg_1384,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1,
        grp_fu_1597_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din0,
        grp_fu_1597_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din1,
        grp_fu_1597_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_opcode,
        grp_fu_1597_p_dout0 => grp_fu_2181_p_dout0,
        grp_fu_1597_p_ce => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_ce,
        grp_fu_1601_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din0,
        grp_fu_1601_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din1,
        grp_fu_1601_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_opcode,
        grp_fu_1601_p_dout0 => grp_fu_2189_p_dout0,
        grp_fu_1601_p_ce => grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_ce);

    mul_7ns_19ns_25_1_1_U75 : component srcnn_mul_7ns_19ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 19,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln126_fu_691_p0,
        din1 => mul_ln126_fu_691_p1,
        dout => mul_ln126_fu_691_p2);

    mux_7_3_32_1_1_U76 : component srcnn_mux_7_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q0,
        din1 => ap_const_lv32_0,
        din2 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q0,
        din3 => ap_const_lv32_0,
        din4 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q0,
        din5 => ap_const_lv32_0,
        din6 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        din7 => trunc_ln126_1_reg_1399,
        dout => tmp_s_fu_934_p9);

    mux_7_3_32_1_1_U77 : component srcnn_mux_7_3_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q0,
        din1 => ap_const_lv32_0,
        din2 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q0,
        din3 => ap_const_lv32_0,
        din4 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q0,
        din5 => ap_const_lv32_0,
        din6 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0,
        din7 => trunc_ln126_1_reg_1399,
        dout => tmp_2_fu_1016_p9);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) and (icmp_ln126_1_reg_1459 = ap_const_lv1_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                    grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln126_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                    grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bh_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                bh_reg_513 <= ap_const_lv5_0;
            elsif (((m_axi_i2_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                bh_reg_513 <= add_ln126_5_reg_1502;
            end if; 
        end if;
    end process;

    bout_fu_162_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bout_fu_162 <= ap_const_lv4_0;
            elsif ((not(((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln126_1_reg_1459 = ap_const_lv1_1) or (icmp_ln126_reg_1390 = ap_const_lv1_0)))) then 
                bout_fu_162 <= add_ln125_reg_1356;
            end if; 
        end if;
    end process;

    h_1_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln65_fu_1058_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                h_1_reg_547 <= ap_const_lv4_0;
            elsif (((icmp_ln68_2_fu_1296_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                h_1_reg_547 <= add_ln66_2_fu_1312_p2;
            end if; 
        end if;
    end process;

    loop_index_0_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_axi_i2_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                loop_index_0_reg_525 <= empty_74_reg_1449;
            elsif ((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                loop_index_0_reg_525 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    loop_index_1_reg_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_axi_i2_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                loop_index_1_reg_536 <= empty_79_reg_1497;
            elsif (((grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                loop_index_1_reg_536 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    o_fu_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_fu_648_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                o_fu_166 <= ap_const_lv4_0;
            elsif (((icmp_ln66_fu_1074_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                o_fu_166 <= add_ln65_reg_1531;
            end if; 
        end if;
    end process;

    w_1_reg_570_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln68_fu_1138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                w_1_reg_570 <= ap_const_lv8_0;
            elsif (((icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                w_1_reg_570 <= add_ln68_1_fu_1220_p2;
            end if; 
        end if;
    end process;

    w_2_reg_581_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln68_1_fu_1214_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                w_2_reg_581 <= ap_const_lv8_0;
            elsif (((icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                w_2_reg_581 <= add_ln68_2_fu_1302_p2;
            end if; 
        end if;
    end process;

    w_reg_559_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln66_fu_1074_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then 
                w_reg_559 <= ap_const_lv8_0;
            elsif (((icmp_ln68_fu_1138_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                w_reg_559 <= add_ln68_fu_1144_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln125_reg_1356 <= add_ln125_fu_654_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond348_fu_868_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                add_ln126_4_reg_1454 <= add_ln126_4_fu_918_p2;
                icmp_ln126_1_reg_1459 <= icmp_ln126_1_fu_928_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond3810_fu_998_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                add_ln126_5_reg_1502 <= add_ln126_5_fu_1010_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln125_fu_648_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                add_ln126_reg_1366 <= add_ln126_fu_701_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                add_ln65_reg_1531 <= add_ln65_fu_1064_p2;
                o_1_reg_1512 <= o_fu_166;
                trunc_ln70_reg_1517 <= trunc_ln70_fu_1042_p1;
                    zext_ln65_reg_1523(4 downto 1) <= zext_ln65_fu_1054_p1(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                empty_71_reg_1384 <= empty_71_fu_722_p1;
                    zext_ln125_2_reg_1379(4 downto 1) <= zext_ln125_2_fu_718_p1(4 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                empty_74_reg_1449 <= empty_74_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                empty_79_reg_1497 <= empty_79_fu_1004_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln126_fu_726_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                i2_addr_reg_1415 <= sext_ln139_fu_837_p1;
                sub_ln132_reg_1407 <= sub_ln132_fu_776_p2;
                trunc_ln126_1_reg_1399 <= trunc_ln126_1_fu_736_p1;
                    zext_ln126_2_reg_1394(4 downto 0) <= zext_ln126_2_fu_732_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                icmp_ln126_reg_1390 <= icmp_ln126_fu_726_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    out_cast_reg_1340(5 downto 0) <= out_cast_fu_626_p1(5 downto 0);
                    zext_ln125_reg_1335(7 downto 0) <= zext_ln125_fu_622_p1(7 downto 0);
                    zext_ln126_1_reg_1345(7 downto 0) <= zext_ln126_1_fu_636_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln68_fu_1138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                sub_ln70_1_reg_1560 <= sub_ln70_1_fu_1188_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln68_1_fu_1214_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                sub_ln70_2_reg_1576 <= sub_ln70_2_fu_1270_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln66_fu_1074_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                sub_ln70_reg_1544 <= sub_ln70_fu_1108_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                tmp_2_reg_1507 <= tmp_2_fu_1016_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                tmp_s_reg_1463 <= tmp_s_fu_934_p9;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                trunc_ln126_reg_1421 <= trunc_ln126_fu_847_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                    zext_ln66_reg_1536(3 downto 0) <= zext_ln66_fu_1070_p1(3 downto 0);
            end if;
        end if;
    end process;
    zext_ln125_reg_1335(8) <= '0';
    out_cast_reg_1340(6) <= '0';
    zext_ln126_1_reg_1345(8) <= '0';
    zext_ln125_2_reg_1379(0) <= '0';
    zext_ln125_2_reg_1379(5) <= '0';
    zext_ln126_2_reg_1394(8 downto 5) <= "0000";
    zext_ln65_reg_1523(0) <= '0';
    zext_ln65_reg_1523(5) <= '0';
    zext_ln66_reg_1536(4) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_i2_AWREADY, m_axi_i2_WREADY, m_axi_i2_BVALID, ap_CS_fsm_state5, ap_CS_fsm_state8, ap_CS_fsm_state13, icmp_ln126_reg_1390, icmp_ln126_1_reg_1459, ap_CS_fsm_state17, ap_CS_fsm_state22, ap_CS_fsm_state2, icmp_ln125_fu_648_p2, icmp_ln126_fu_726_p2, ap_CS_fsm_state4, ap_CS_fsm_state6, exitcond348_fu_868_p2, ap_CS_fsm_state15, exitcond3810_fu_998_p2, ap_CS_fsm_state23, ap_CS_fsm_state24, icmp_ln66_fu_1074_p2, ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_done, ap_CS_fsm_state14, icmp_ln65_fu_1058_p2, ap_block_state13_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln125_fu_648_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((icmp_ln126_fu_726_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((exitcond348_fu_868_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((m_axi_i2_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if ((not(((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) and (ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln126_1_reg_1459 = ap_const_lv1_1) or (icmp_ln126_reg_1390 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) and (icmp_ln126_1_reg_1459 = ap_const_lv1_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                if (((grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((exitcond3810_fu_998_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((m_axi_i2_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((m_axi_i2_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((icmp_ln65_fu_1058_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                if (((icmp_ln66_fu_1074_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state24))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state25 => 
                if (((icmp_ln68_fu_1138_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((icmp_ln68_1_fu_1214_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if (((icmp_ln68_2_fu_1296_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln125_fu_654_p2 <= std_logic_vector(unsigned(bout_fu_162) + unsigned(ap_const_lv4_1));
    add_ln126_1_fu_783_p2 <= std_logic_vector(unsigned(zext_ln126_2_fu_732_p1) + unsigned(zext_ln125_reg_1335));
    add_ln126_2_fu_822_p2 <= std_logic_vector(signed(sext_ln126_fu_818_p1) + signed(add_ln126_reg_1366));
    add_ln126_3_fu_880_p2 <= std_logic_vector(unsigned(zext_ln126_1_reg_1345) + unsigned(zext_ln126_2_reg_1394));
    add_ln126_4_fu_918_p2 <= std_logic_vector(signed(sext_ln126_1_fu_914_p1) + signed(add_ln126_reg_1366));
    add_ln126_5_fu_1010_p2 <= std_logic_vector(unsigned(bh_reg_513) + unsigned(ap_const_lv5_2));
    add_ln126_6_fu_630_p2 <= std_logic_vector(unsigned(h) + unsigned(ap_const_lv8_1));
    add_ln126_fu_701_p2 <= std_logic_vector(unsigned(zext_ln126_fu_697_p1) + unsigned(output_ftmap));
    add_ln132_fu_755_p2 <= std_logic_vector(unsigned(zext_ln125_2_reg_1379) + unsigned(zext_ln132_fu_751_p1));
    add_ln65_fu_1064_p2 <= std_logic_vector(unsigned(o_fu_166) + unsigned(ap_const_lv4_1));
    add_ln66_1_fu_1230_p2 <= std_logic_vector(unsigned(zext_ln66_reg_1536) + unsigned(ap_const_lv5_2));
    add_ln66_2_fu_1312_p2 <= std_logic_vector(unsigned(h_1_reg_547) + unsigned(ap_const_lv4_3));
    add_ln66_fu_1154_p2 <= std_logic_vector(unsigned(h_1_reg_547) + unsigned(ap_const_lv4_1));
    add_ln68_1_fu_1220_p2 <= std_logic_vector(unsigned(w_1_reg_570) + unsigned(ap_const_lv8_1));
    add_ln68_2_fu_1302_p2 <= std_logic_vector(unsigned(w_2_reg_581) + unsigned(ap_const_lv8_1));
    add_ln68_fu_1144_p2 <= std_logic_vector(unsigned(w_reg_559) + unsigned(ap_const_lv8_1));
    add_ln70_1_fu_1198_p2 <= std_logic_vector(unsigned(sub_ln70_1_reg_1560) + unsigned(zext_ln70_4_fu_1194_p1));
    add_ln70_2_fu_1249_p2 <= std_logic_vector(unsigned(zext_ln65_reg_1523) + unsigned(zext_ln70_6_fu_1245_p1));
    add_ln70_3_fu_1280_p2 <= std_logic_vector(unsigned(sub_ln70_2_reg_1576) + unsigned(zext_ln70_8_fu_1276_p1));
    add_ln70_fu_1122_p2 <= std_logic_vector(unsigned(sub_ln70_reg_1544) + unsigned(zext_ln70_1_fu_1118_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(m_axi_i2_BVALID, icmp_ln126_reg_1390, ap_block_state13_io)
    begin
        if (((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state14_blk_assign_proc : process(grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_done)
    begin
        if ((grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state14_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state14_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(m_axi_i2_WREADY)
    begin
        if ((m_axi_i2_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(m_axi_i2_BVALID)
    begin
        if ((m_axi_i2_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state5_blk_assign_proc : process(m_axi_i2_AWREADY, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done)
    begin
        if (((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(m_axi_i2_WREADY)
    begin
        if ((m_axi_i2_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state13_assign_proc : process(m_axi_i2_BVALID, icmp_ln126_reg_1390)
    begin
                ap_block_state13 <= ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1));
    end process;


    ap_block_state13_ignore_call0_assign_proc : process(m_axi_i2_BVALID, icmp_ln126_reg_1390)
    begin
                ap_block_state13_ignore_call0 <= ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1));
    end process;


    ap_block_state13_io_assign_proc : process(m_axi_i2_AWREADY, ap_predicate_op140_writereq_state13)
    begin
                ap_block_state13_io <= ((ap_predicate_op140_writereq_state13 = ap_const_boolean_1) and (m_axi_i2_AWREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state23, icmp_ln65_fu_1058_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln65_fu_1058_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_predicate_op140_writereq_state13_assign_proc : process(icmp_ln126_reg_1390, icmp_ln126_1_reg_1459)
    begin
                ap_predicate_op140_writereq_state13 <= ((icmp_ln126_1_reg_1459 = ap_const_lv1_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state23, icmp_ln65_fu_1058_p2)
    begin
        if (((icmp_ln65_fu_1058_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    bout_cast_cast_fu_668_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_664_p1),6));
    conv1_biases_address0 <= p_cast9_fu_686_p1(6 - 1 downto 0);

    conv1_biases_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            conv1_biases_ce0 <= ap_const_logic_1;
        else 
            conv1_biases_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, p_cast246_fu_860_p1, zext_ln70_2_fu_1127_p1, zext_ln70_5_fu_1203_p1, zext_ln70_9_fu_1285_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= zext_ln70_9_fu_1285_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= zext_ln70_5_fu_1203_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= zext_ln70_2_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= p_cast246_fu_860_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, trunc_ln66_fu_1150_p1, trunc_ln66_2_fu_1308_p1, trunc_ln66_1_fu_1226_p1)
    begin
        if ((((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_4) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_5) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((trunc_ln66_fu_1150_p1 = ap_const_lv3_6) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0, ap_CS_fsm_state14, p_cast248_fu_990_p1, zext_ln70_2_fu_1127_p1, zext_ln70_5_fu_1203_p1, zext_ln70_9_fu_1285_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= zext_ln70_9_fu_1285_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= zext_ln70_5_fu_1203_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= zext_ln70_2_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= p_cast248_fu_990_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1_assign_proc : process(grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0_assign_proc : process(ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0, ap_CS_fsm_state14, trunc_ln66_fu_1150_p1, trunc_ln66_2_fu_1308_p1, trunc_ln66_1_fu_1226_p1)
    begin
        if ((((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_3) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_4) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((trunc_ln66_fu_1150_p1 = ap_const_lv3_5) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0, p_cast246_fu_860_p1, zext_ln70_2_fu_1127_p1, zext_ln70_5_fu_1203_p1, zext_ln70_9_fu_1285_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= zext_ln70_9_fu_1285_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= zext_ln70_5_fu_1203_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= zext_ln70_2_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= p_cast246_fu_860_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0, trunc_ln66_fu_1150_p1, trunc_ln66_2_fu_1308_p1, trunc_ln66_1_fu_1226_p1)
    begin
        if ((((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_2) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_3) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((trunc_ln66_fu_1150_p1 = ap_const_lv3_4) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0, ap_CS_fsm_state14, p_cast248_fu_990_p1, zext_ln70_2_fu_1127_p1, zext_ln70_5_fu_1203_p1, zext_ln70_9_fu_1285_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= zext_ln70_9_fu_1285_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= zext_ln70_5_fu_1203_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= zext_ln70_2_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= p_cast248_fu_990_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1_assign_proc : process(grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0_assign_proc : process(ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0, ap_CS_fsm_state14, trunc_ln66_fu_1150_p1, trunc_ln66_2_fu_1308_p1, trunc_ln66_1_fu_1226_p1)
    begin
        if ((((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_1) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_2) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((trunc_ln66_fu_1150_p1 = ap_const_lv3_3) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0, p_cast246_fu_860_p1, zext_ln70_2_fu_1127_p1, zext_ln70_5_fu_1203_p1, zext_ln70_9_fu_1285_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= zext_ln70_9_fu_1285_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= zext_ln70_5_fu_1203_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= zext_ln70_2_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= p_cast246_fu_860_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0, trunc_ln66_fu_1150_p1, trunc_ln66_2_fu_1308_p1, trunc_ln66_1_fu_1226_p1)
    begin
        if ((((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_0) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_1) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((trunc_ln66_fu_1150_p1 = ap_const_lv3_2) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state26, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0, ap_CS_fsm_state14, p_cast248_fu_990_p1, zext_ln70_2_fu_1127_p1, zext_ln70_5_fu_1203_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= zext_ln70_5_fu_1203_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= zext_ln70_2_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= p_cast248_fu_990_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state25, ap_CS_fsm_state26, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1_assign_proc : process(grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state26, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0_assign_proc : process(ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0, ap_CS_fsm_state14, trunc_ln66_fu_1150_p1, trunc_ln66_1_fu_1226_p1)
    begin
        if ((((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_0) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state26)) or ((trunc_ln66_fu_1150_p1 = ap_const_lv3_1) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state25)))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0, p_cast246_fu_860_p1, zext_ln70_2_fu_1127_p1, zext_ln70_9_fu_1285_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= zext_ln70_9_fu_1285_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= zext_ln70_2_fu_1127_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= p_cast246_fu_860_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state25, icmp_ln68_fu_1138_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0, trunc_ln66_fu_1150_p1, trunc_ln66_2_fu_1308_p1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state27) and (((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_6) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0)) or ((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_7) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (((trunc_ln66_fu_1150_p1 = ap_const_lv3_0) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0)) or ((trunc_ln66_fu_1150_p1 = ap_const_lv3_7) and (icmp_ln68_fu_1138_p2 = ap_const_lv1_0)))))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, ap_CS_fsm_state14, p_cast248_fu_990_p1, zext_ln70_5_fu_1203_p1, zext_ln70_9_fu_1285_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= zext_ln70_9_fu_1285_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= zext_ln70_5_fu_1203_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= p_cast248_fu_990_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1;

    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1_assign_proc : process(grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0_assign_proc : process(ap_CS_fsm_state26, ap_CS_fsm_state27, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0_assign_proc : process(ap_CS_fsm_state26, icmp_ln68_1_fu_1214_p2, ap_CS_fsm_state27, icmp_ln68_2_fu_1296_p2, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, ap_CS_fsm_state14, trunc_ln66_2_fu_1308_p1, trunc_ln66_1_fu_1226_p1)
    begin
        if ((((trunc_ln66_2_fu_1308_p1 = ap_const_lv3_5) and (icmp_ln68_2_fu_1296_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_const_logic_1 = ap_CS_fsm_state26) and (((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_6) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0)) or ((trunc_ln66_1_fu_1226_p1 = ap_const_lv3_7) and (icmp_ln68_1_fu_1214_p2 = ap_const_lv1_0)))))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_69_fu_672_p2 <= std_logic_vector(unsigned(zext_ln125_1_fu_660_p1) + unsigned(out_cast_reg_1340));
    empty_70_fu_681_p2 <= std_logic_vector(unsigned(bout_cast_cast_fu_668_p1) + unsigned(out_r));
    empty_71_fu_722_p1 <= conv1_biases_q0;
    empty_73_fu_855_p2 <= std_logic_vector(unsigned(sub_ln132_reg_1407) + unsigned(loop_index_0_cast238_fu_851_p1));
    empty_74_fu_874_p2 <= std_logic_vector(unsigned(loop_index_0_reg_525) + unsigned(ap_const_lv8_1));
    empty_75_fu_953_p1 <= tmp_s_reg_1463;
    empty_78_fu_985_p2 <= std_logic_vector(unsigned(sub_ln132_reg_1407) + unsigned(loop_index_1_cast239_fu_981_p1));
    empty_79_fu_1004_p2 <= std_logic_vector(unsigned(loop_index_1_reg_536) + unsigned(ap_const_lv8_1));
    empty_80_fu_1035_p1 <= tmp_2_reg_1507;
    empty_fu_664_p1 <= bout_fu_162(3 - 1 downto 0);
    exitcond348_fu_868_p2 <= "1" when (loop_index_0_reg_525 = ap_const_lv8_FF) else "0";
    exitcond3810_fu_998_p2 <= "1" when (loop_index_1_reg_536 = ap_const_lv8_FF) else "0";
    grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_ap_start_reg;
    grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_start_reg;

    grp_fu_1597_ce_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_ce, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_ce, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1597_ce <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1597_ce <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_ce;
        else 
            grp_fu_1597_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1597_p0_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1597_p0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1597_p0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din0;
        else 
            grp_fu_1597_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1597_p1_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1597_p1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1597_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1597_p1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1597_p_din1;
        else 
            grp_fu_1597_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1601_ce_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_ce, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_ce, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1601_ce <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1601_ce <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_ce;
        else 
            grp_fu_1601_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1601_opcode_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_opcode, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_opcode, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1601_opcode <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1601_opcode <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_opcode;
        else 
            grp_fu_1601_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1601_p0_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1601_p0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1601_p0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din0;
        else 
            grp_fu_1601_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1601_p1_assign_proc : process(ap_CS_fsm_state5, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din1, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            grp_fu_1601_p1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_607_grp_fu_1601_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_1601_p1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_592_grp_fu_1601_p_din1;
        else 
            grp_fu_1601_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_2181_p_ce <= grp_fu_1597_ce;
    grp_fu_2181_p_din0 <= grp_fu_1597_p0;
    grp_fu_2181_p_din1 <= grp_fu_1597_p1;
    grp_fu_2181_p_opcode <= ap_const_lv2_0;
    grp_fu_2189_p_ce <= grp_fu_1601_ce;
    grp_fu_2189_p_din0 <= grp_fu_1601_p0;
    grp_fu_2189_p_din1 <= grp_fu_1601_p1;
    grp_fu_2189_p_opcode <= grp_fu_1601_opcode;

    i2_blk_n_AW_assign_proc : process(m_axi_i2_AWREADY, ap_CS_fsm_state5, ap_CS_fsm_state13, icmp_ln126_reg_1390, icmp_ln126_1_reg_1459)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((icmp_ln126_1_reg_1459 = ap_const_lv1_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            i2_blk_n_AW <= m_axi_i2_AWREADY;
        else 
            i2_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    i2_blk_n_B_assign_proc : process(m_axi_i2_BVALID, ap_CS_fsm_state13, icmp_ln126_reg_1390, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or ((icmp_ln126_reg_1390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            i2_blk_n_B <= m_axi_i2_BVALID;
        else 
            i2_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    i2_blk_n_W_assign_proc : process(m_axi_i2_WREADY, ap_CS_fsm_state8, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            i2_blk_n_W <= m_axi_i2_WREADY;
        else 
            i2_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln125_fu_648_p2 <= "1" when (bout_fu_162 = ap_const_lv4_8) else "0";
    icmp_ln126_1_fu_928_p2 <= "1" when (or_ln126_fu_923_p2 = ap_const_lv4_F) else "0";
    icmp_ln126_fu_726_p2 <= "1" when (unsigned(bh_reg_513) < unsigned(ap_const_lv5_F)) else "0";
    icmp_ln65_fu_1058_p2 <= "1" when (o_fu_166 = ap_const_lv4_8) else "0";
    icmp_ln66_fu_1074_p2 <= "1" when (h_1_reg_547 = ap_const_lv4_F) else "0";
    icmp_ln68_1_fu_1214_p2 <= "1" when (w_1_reg_570 = ap_const_lv8_FF) else "0";
    icmp_ln68_2_fu_1296_p2 <= "1" when (w_2_reg_581 = ap_const_lv8_FF) else "0";
    icmp_ln68_fu_1138_p2 <= "1" when (w_reg_559 = ap_const_lv8_FF) else "0";
    loop_index_0_cast238_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index_0_reg_525),12));
    loop_index_1_cast239_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_index_1_reg_536),12));
    lshr_ln68_1_fu_1235_p4 <= add_ln66_1_fu_1230_p2(4 downto 3);
    lshr_ln_fu_741_p4 <= bh_reg_513(4 downto 3);
    m_axi_i2_ARADDR <= ap_const_lv64_0;
    m_axi_i2_ARBURST <= ap_const_lv2_0;
    m_axi_i2_ARCACHE <= ap_const_lv4_0;
    m_axi_i2_ARID <= ap_const_lv1_0;
    m_axi_i2_ARLEN <= ap_const_lv32_0;
    m_axi_i2_ARLOCK <= ap_const_lv2_0;
    m_axi_i2_ARPROT <= ap_const_lv3_0;
    m_axi_i2_ARQOS <= ap_const_lv4_0;
    m_axi_i2_ARREGION <= ap_const_lv4_0;
    m_axi_i2_ARSIZE <= ap_const_lv3_0;
    m_axi_i2_ARUSER <= ap_const_lv1_0;
    m_axi_i2_ARVALID <= ap_const_logic_0;

    m_axi_i2_AWADDR_assign_proc : process(m_axi_i2_AWREADY, m_axi_i2_BVALID, ap_CS_fsm_state5, ap_CS_fsm_state13, icmp_ln126_reg_1390, i2_addr_reg_1415, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done, ap_predicate_op140_writereq_state13, ap_block_state13_io, sext_ln139_1_fu_966_p1)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) and (ap_predicate_op140_writereq_state13 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            m_axi_i2_AWADDR <= sext_ln139_1_fu_966_p1;
        elsif ((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            m_axi_i2_AWADDR <= i2_addr_reg_1415;
        else 
            m_axi_i2_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i2_AWBURST <= ap_const_lv2_0;
    m_axi_i2_AWCACHE <= ap_const_lv4_0;
    m_axi_i2_AWID <= ap_const_lv1_0;
    m_axi_i2_AWLEN <= ap_const_lv32_FF;
    m_axi_i2_AWLOCK <= ap_const_lv2_0;
    m_axi_i2_AWPROT <= ap_const_lv3_0;
    m_axi_i2_AWQOS <= ap_const_lv4_0;
    m_axi_i2_AWREGION <= ap_const_lv4_0;
    m_axi_i2_AWSIZE <= ap_const_lv3_0;
    m_axi_i2_AWUSER <= ap_const_lv1_0;

    m_axi_i2_AWVALID_assign_proc : process(m_axi_i2_AWREADY, m_axi_i2_BVALID, ap_CS_fsm_state5, ap_CS_fsm_state13, icmp_ln126_reg_1390, grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done, ap_predicate_op140_writereq_state13, ap_block_state13_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) and (ap_predicate_op140_writereq_state13 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or (not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_592_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
            m_axi_i2_AWVALID <= ap_const_logic_1;
        else 
            m_axi_i2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_i2_BREADY_assign_proc : process(m_axi_i2_BVALID, ap_CS_fsm_state13, icmp_ln126_reg_1390, ap_CS_fsm_state22, ap_block_state13_io)
    begin
        if (((not(((ap_const_boolean_1 = ap_block_state13_io) or ((m_axi_i2_BVALID = ap_const_logic_0) and (icmp_ln126_reg_1390 = ap_const_lv1_1)))) and (icmp_ln126_reg_1390 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((m_axi_i2_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            m_axi_i2_BREADY <= ap_const_logic_1;
        else 
            m_axi_i2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i2_RREADY <= ap_const_logic_0;

    m_axi_i2_WDATA_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state17, empty_75_fu_953_p1, empty_80_fu_1035_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            m_axi_i2_WDATA <= empty_80_fu_1035_p1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            m_axi_i2_WDATA <= empty_75_fu_953_p1;
        else 
            m_axi_i2_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_i2_WID <= ap_const_lv1_0;
    m_axi_i2_WLAST <= ap_const_logic_0;
    m_axi_i2_WSTRB <= ap_const_lv4_F;
    m_axi_i2_WUSER <= ap_const_lv1_0;

    m_axi_i2_WVALID_assign_proc : process(m_axi_i2_WREADY, ap_CS_fsm_state8, ap_CS_fsm_state17)
    begin
        if ((((m_axi_i2_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((m_axi_i2_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            m_axi_i2_WVALID <= ap_const_logic_1;
        else 
            m_axi_i2_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln126_fu_691_p0 <= mul_ln126_fu_691_p00(7 - 1 downto 0);
    mul_ln126_fu_691_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_69_fu_672_p2),25));
    mul_ln126_fu_691_p1 <= ap_const_lv25_3F804(19 - 1 downto 0);
    or_ln126_fu_923_p2 <= (trunc_ln126_reg_1421 or ap_const_lv4_1);
    out_cast_fu_626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_r),7));
    p_cast246_fu_860_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_73_fu_855_p2),64));
    p_cast248_fu_990_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_78_fu_985_p2),64));
    p_cast9_fu_686_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_70_fu_681_p2),64));
    p_shl3_fu_1262_p3 <= (trunc_ln70_1_fu_1258_p1 & ap_const_lv8_0);
    p_shl_fu_768_p3 <= (trunc_ln132_fu_764_p1 & ap_const_lv8_0);
        sext_ln126_1_fu_914_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln126_1_fu_908_p2),64));

        sext_ln126_fu_818_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln126_fu_812_p2),64));

        sext_ln139_1_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln139_1_fu_957_p4),64));

        sext_ln139_fu_837_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_827_p4),64));

    shl_ln126_1_fu_800_p3 <= (add_ln126_1_fu_783_p2 & ap_const_lv2_0);
    shl_ln126_2_fu_884_p3 <= (add_ln126_3_fu_880_p2 & ap_const_lv10_0);
    shl_ln126_3_fu_896_p3 <= (add_ln126_3_fu_880_p2 & ap_const_lv2_0);
    shl_ln_fu_788_p3 <= (add_ln126_1_fu_783_p2 & ap_const_lv10_0);
    sub_ln126_1_fu_908_p2 <= std_logic_vector(unsigned(zext_ln126_5_fu_892_p1) - unsigned(zext_ln126_6_fu_904_p1));
    sub_ln126_fu_812_p2 <= std_logic_vector(unsigned(zext_ln126_3_fu_796_p1) - unsigned(zext_ln126_4_fu_808_p1));
    sub_ln132_fu_776_p2 <= std_logic_vector(unsigned(p_shl_fu_768_p3) - unsigned(zext_ln132_3_fu_760_p1));
    sub_ln70_1_fu_1188_p2 <= std_logic_vector(unsigned(tmp_6_fu_1179_p4) - unsigned(zext_ln70_3_fu_1175_p1));
    sub_ln70_2_fu_1270_p2 <= std_logic_vector(unsigned(p_shl3_fu_1262_p3) - unsigned(zext_ln70_7_fu_1254_p1));
    sub_ln70_fu_1108_p2 <= std_logic_vector(unsigned(tmp_3_fu_1099_p4) - unsigned(zext_ln70_fu_1095_p1));
    tmp_1_fu_1088_p3 <= (o_fu_166 & tmp_fu_1080_p3);
    tmp_3_fu_1099_p4 <= ((trunc_ln70_reg_1517 & tmp_fu_1080_p3) & ap_const_lv8_0);
    tmp_4_fu_1160_p3 <= add_ln66_fu_1154_p2(3 downto 3);
    tmp_5_fu_1168_p3 <= (o_1_reg_1512 & tmp_4_fu_1160_p3);
    tmp_6_fu_1179_p4 <= ((trunc_ln70_reg_1517 & tmp_4_fu_1160_p3) & ap_const_lv8_0);
    tmp_7_fu_711_p3 <= (bout_fu_162 & ap_const_lv1_0);
    tmp_8_fu_1046_p3 <= (o_fu_166 & ap_const_lv1_0);
    tmp_fu_1080_p3 <= h_1_reg_547(3 downto 3);
    trunc_ln126_1_fu_736_p1 <= bh_reg_513(3 - 1 downto 0);
    trunc_ln126_fu_847_p1 <= bh_reg_513(4 - 1 downto 0);
    trunc_ln132_fu_764_p1 <= add_ln132_fu_755_p2(4 - 1 downto 0);
    trunc_ln139_1_fu_957_p4 <= add_ln126_4_reg_1454(63 downto 2);
    trunc_ln4_fu_827_p4 <= add_ln126_2_fu_822_p2(63 downto 2);
    trunc_ln66_1_fu_1226_p1 <= h_1_reg_547(3 - 1 downto 0);
    trunc_ln66_2_fu_1308_p1 <= h_1_reg_547(3 - 1 downto 0);
    trunc_ln66_fu_1150_p1 <= h_1_reg_547(3 - 1 downto 0);
    trunc_ln70_1_fu_1258_p1 <= add_ln70_2_fu_1249_p2(4 - 1 downto 0);
    trunc_ln70_fu_1042_p1 <= o_fu_166(3 - 1 downto 0);
    zext_ln125_1_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_fu_162),7));
    zext_ln125_2_fu_718_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_711_p3),6));
    zext_ln125_fu_622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h),9));
    zext_ln126_1_fu_636_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln126_6_fu_630_p2),9));
    zext_ln126_2_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_513),9));
    zext_ln126_3_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_788_p3),20));
    zext_ln126_4_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln126_1_fu_800_p3),20));
    zext_ln126_5_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln126_2_fu_884_p3),20));
    zext_ln126_6_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln126_3_fu_896_p3),20));
    zext_ln126_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln126_fu_691_p2),64));
    zext_ln132_3_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln132_fu_755_p2),12));
    zext_ln132_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_741_p4),6));
    zext_ln65_fu_1054_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1046_p3),6));
    zext_ln66_fu_1070_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_1_reg_547),5));
    zext_ln70_1_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_reg_559),12));
    zext_ln70_2_fu_1127_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln70_fu_1122_p2),64));
    zext_ln70_3_fu_1175_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1168_p3),12));
    zext_ln70_4_fu_1194_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_1_reg_570),12));
    zext_ln70_5_fu_1203_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln70_1_fu_1198_p2),64));
    zext_ln70_6_fu_1245_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln68_1_fu_1235_p4),6));
    zext_ln70_7_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln70_2_fu_1249_p2),12));
    zext_ln70_8_fu_1276_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(w_2_reg_581),12));
    zext_ln70_9_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln70_3_fu_1280_p2),64));
    zext_ln70_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1088_p3),12));
end behav;
