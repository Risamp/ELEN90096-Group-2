// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2_Pipeline_OUT_ROW_COL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1,
        weight_buffer_address0,
        weight_buffer_ce0,
        weight_buffer_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1,
        grp_fu_1011_p_din0,
        grp_fu_1011_p_din1,
        grp_fu_1011_p_opcode,
        grp_fu_1011_p_dout0,
        grp_fu_1011_p_ce,
        grp_fu_1015_p_din0,
        grp_fu_1015_p_din1,
        grp_fu_1015_p_dout0,
        grp_fu_1015_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 9'd1;
parameter    ap_ST_fsm_pp0_stage1 = 9'd2;
parameter    ap_ST_fsm_pp0_stage2 = 9'd4;
parameter    ap_ST_fsm_pp0_stage3 = 9'd8;
parameter    ap_ST_fsm_pp0_stage4 = 9'd16;
parameter    ap_ST_fsm_pp0_stage5 = 9'd32;
parameter    ap_ST_fsm_pp0_stage6 = 9'd64;
parameter    ap_ST_fsm_pp0_stage7 = 9'd128;
parameter    ap_ST_fsm_pp0_stage8 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0;
output  [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1;
output  [7:0] weight_buffer_address0;
output   weight_buffer_ce0;
input  [31:0] weight_buffer_q0;
output  [13:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0;
output  [13:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0;
output  [13:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0;
output  [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0;
output  [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1;
output  [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0;
output  [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1;
input  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1;
output  [31:0] grp_fu_1011_p_din0;
output  [31:0] grp_fu_1011_p_din1;
output  [1:0] grp_fu_1011_p_opcode;
input  [31:0] grp_fu_1011_p_dout0;
output   grp_fu_1011_p_ce;
output  [31:0] grp_fu_1015_p_din0;
output  [31:0] grp_fu_1015_p_din1;
input  [31:0] grp_fu_1015_p_dout0;
output   grp_fu_1015_p_ce;

reg ap_idle;
reg[9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
reg[9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1;
reg weight_buffer_ce0;
reg[13:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0;
reg[13:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0;
reg[13:0] conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0;
reg[9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
reg[9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1;
reg[9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
reg[9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_state18_pp0_stage8_iter1;
wire    ap_block_pp0_stage8_subdone;
reg   [0:0] icmp_ln40_reg_1074;
reg    ap_condition_exit_pp0_iter0_stage8;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_349;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state13_pp0_stage3_iter1;
wire    ap_block_state22_pp0_stage3_iter2;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state14_pp0_stage4_iter1;
wire    ap_block_state23_pp0_stage4_iter2;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state15_pp0_stage5_iter1;
wire    ap_block_state24_pp0_stage5_iter2;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state19_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln40_fu_400_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_state20_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln40_reg_1074_pp0_iter1_reg;
wire   [0:0] icmp_ln41_fu_418_p2;
reg   [0:0] icmp_ln41_reg_1078;
wire   [0:0] and_ln40_1_fu_442_p2;
reg   [0:0] and_ln40_1_reg_1085;
wire   [7:0] select_ln45_fu_504_p3;
reg   [7:0] select_ln45_reg_1091;
reg   [7:0] select_ln45_reg_1091_pp0_iter1_reg;
wire   [1:0] select_ln45_1_fu_512_p3;
reg   [1:0] select_ln45_1_reg_1099;
reg   [1:0] select_ln45_1_reg_1099_pp0_iter1_reg;
wire   [7:0] add_ln46_fu_585_p2;
reg   [7:0] add_ln46_reg_1105;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_state21_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
reg   [7:0] add_ln46_reg_1105_pp0_iter1_reg;
wire   [8:0] add_ln46_1_fu_599_p2;
reg   [8:0] add_ln46_1_reg_1111;
reg   [8:0] add_ln46_1_reg_1111_pp0_iter1_reg;
wire   [2:0] select_ln40_1_fu_646_p3;
reg   [2:0] select_ln40_1_reg_1117;
wire   [13:0] mul_ln50_fu_752_p2;
reg   [13:0] mul_ln50_reg_1128;
wire   [31:0] bitcast_ln41_fu_768_p1;
reg   [31:0] bitcast_ln41_reg_1135;
reg   [1:0] trunc_ln_reg_1140;
reg   [1:0] trunc_ln_reg_1140_pp0_iter2_reg;
wire   [7:0] grp_fu_520_p2;
reg   [7:0] urem_ln46_reg_1146;
reg   [1:0] trunc_ln1_reg_1166;
reg   [1:0] trunc_ln1_reg_1166_pp0_iter2_reg;
wire   [31:0] tmp_s_fu_826_p5;
reg   [31:0] tmp_s_reg_1172;
wire   [7:0] grp_fu_590_p2;
reg   [7:0] urem_ln50_reg_1177;
reg   [1:0] trunc_ln50_1_reg_1197;
reg   [1:0] trunc_ln50_1_reg_1197_pp0_iter2_reg;
wire   [9:0] mul_ln45_fu_909_p2;
reg   [9:0] mul_ln45_reg_1203;
wire   [31:0] tmp_2_fu_915_p5;
reg   [31:0] tmp_2_reg_1210;
wire   [9:0] add_ln50_3_fu_929_p2;
reg   [9:0] add_ln50_3_reg_1215;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state16_pp0_stage6_iter1;
wire    ap_block_state25_pp0_stage6_iter2;
wire    ap_block_pp0_stage6_11001;
wire   [9:0] add_ln50_5_fu_937_p2;
reg   [9:0] add_ln50_5_reg_1220;
wire   [9:0] add_ln50_7_fu_962_p2;
reg   [9:0] add_ln50_7_reg_1240;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_15_reg_1245;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state17_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_11001;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_16_reg_1251;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_17_reg_1257;
reg   [31:0] mul_reg_1263;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_21_reg_1268;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_22_reg_1273;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_23_reg_1278;
wire   [31:0] tmp_3_fu_979_p5;
reg   [31:0] tmp_3_reg_1283;
reg   [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_18_reg_1288;
wire    ap_block_pp0_stage8_11001;
reg   [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_19_reg_1293;
reg   [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_20_reg_1298;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_24_reg_1303;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_25_reg_1309;
reg   [9:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_26_reg_1315;
reg   [31:0] mul_1_reg_1321;
reg   [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_27_reg_1326;
reg   [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_28_reg_1331;
reg   [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_29_reg_1336;
wire   [31:0] tmp_1_fu_996_p5;
wire   [31:0] tmp_5_fu_1005_p5;
reg   [31:0] tmp_5_reg_1346;
reg   [31:0] mul_2_reg_1351;
wire   [31:0] tmp_4_fu_1016_p5;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter1_stage1;
wire    ap_block_pp0_stage6_subdone;
wire   [63:0] zext_ln41_fu_734_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln50_8_fu_800_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln50_12_fu_846_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln50_17_fu_955_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln50_9_fu_967_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln50_13_fu_973_p1;
wire   [63:0] zext_ln50_18_fu_990_p1;
wire    ap_block_pp0_stage8;
reg   [7:0] c_fu_114;
wire   [7:0] add_ln46_2_fu_526_p2;
wire    ap_loop_init;
reg   [1:0] r_fu_118;
reg   [8:0] indvar_flatten31_fu_122;
wire   [8:0] select_ln45_2_fu_538_p3;
reg   [6:0] i_fu_126;
wire   [6:0] select_ln41_1_fu_678_p3;
reg   [14:0] indvar_flatten45_fu_130;
wire   [14:0] select_ln41_3_fu_552_p3;
reg   [2:0] o_fu_134;
reg   [15:0] indvar_flatten86_fu_138;
wire   [15:0] add_ln40_1_fu_406_p2;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage0;
reg   [31:0] grp_fu_341_p0;
reg   [31:0] grp_fu_341_p1;
wire    ap_block_pp0_stage2;
reg   [31:0] grp_fu_345_p1;
wire   [0:0] icmp_ln45_fu_436_p2;
wire   [0:0] xor_ln40_fu_424_p2;
wire   [0:0] or_ln41_fu_448_p2;
wire   [0:0] xor_ln41_fu_462_p2;
wire   [0:0] or_ln41_1_fu_468_p2;
wire   [0:0] and_ln40_fu_474_p2;
wire   [0:0] icmp_ln46_fu_430_p2;
wire   [1:0] select_ln41_fu_454_p3;
wire   [0:0] and_ln41_fu_480_p2;
wire   [0:0] or_ln45_fu_492_p2;
wire   [0:0] or_ln45_1_fu_498_p2;
wire   [1:0] add_ln45_fu_486_p2;
wire   [8:0] add_ln45_1_fu_532_p2;
wire   [14:0] add_ln41_1_fu_546_p2;
wire   [7:0] grp_fu_590_p0;
wire   [8:0] zext_ln46_fu_596_p1;
wire   [8:0] grp_fu_605_p0;
wire   [7:0] grp_fu_605_p1;
wire   [1:0] trunc_ln43_1_fu_621_p1;
wire   [5:0] trunc_ln43_fu_617_p1;
wire   [2:0] add_ln40_fu_633_p2;
wire   [1:0] trunc_ln43_2_fu_653_p1;
wire   [7:0] lshr_ln43_mid_fu_657_p3;
wire   [7:0] lshr_ln_fu_625_p3;
wire   [6:0] select_ln40_fu_639_p3;
wire   [6:0] add_ln41_fu_672_p2;
wire   [8:0] p_shl1_fu_689_p3;
wire   [9:0] zext_ln50_3_fu_697_p1;
wire   [9:0] zext_ln50_2_fu_685_p1;
wire   [9:0] sub_ln50_1_fu_701_p2;
wire   [1:0] trunc_ln43_4_fu_715_p1;
wire   [5:0] trunc_ln43_3_fu_711_p1;
wire   [7:0] lshr_ln43_mid1_fu_719_p3;
wire   [7:0] select_ln40_2_fu_665_p3;
wire   [7:0] select_ln41_2_fu_727_p3;
wire  signed [10:0] sext_ln43_fu_707_p1;
wire   [10:0] zext_ln50_5_fu_739_p1;
wire  signed [10:0] add_ln50_fu_742_p2;
wire   [7:0] mul_ln50_fu_752_p1;
wire   [7:0] mul_ln46_fu_775_p0;
wire   [9:0] mul_ln46_fu_775_p1;
wire   [16:0] mul_ln46_fu_775_p2;
wire   [13:0] zext_ln50_7_fu_791_p1;
wire   [13:0] add_ln50_2_fu_795_p2;
wire   [7:0] mul_ln50_1_fu_810_p0;
wire   [9:0] mul_ln50_1_fu_810_p1;
wire   [16:0] mul_ln50_1_fu_810_p2;
wire   [13:0] zext_ln50_11_fu_837_p1;
wire   [13:0] add_ln50_4_fu_841_p2;
wire   [8:0] mul_ln50_2_fu_856_p0;
wire   [10:0] mul_ln50_2_fu_856_p1;
wire   [18:0] mul_ln50_2_fu_856_p2;
wire   [4:0] tmp_29_fu_875_p3;
wire   [5:0] zext_ln50_1_fu_882_p1;
wire   [5:0] zext_ln50_fu_872_p1;
wire   [5:0] sub_ln50_fu_886_p2;
wire  signed [6:0] sext_ln40_fu_892_p1;
wire   [6:0] zext_ln50_4_fu_896_p1;
wire  signed [6:0] add_ln50_1_fu_899_p2;
wire   [7:0] mul_ln45_fu_909_p1;
wire   [9:0] zext_ln50_6_fu_926_p1;
wire   [9:0] zext_ln50_10_fu_934_p1;
wire   [8:0] grp_fu_605_p2;
wire   [13:0] zext_ln50_16_fu_946_p1;
wire   [13:0] add_ln50_6_fu_950_p2;
wire   [9:0] zext_ln50_15_fu_942_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter1_stage6;
reg    ap_idle_pp0_0to0;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage2_00001;
wire   [16:0] mul_ln46_fu_775_p00;
wire   [16:0] mul_ln50_1_fu_810_p00;
wire   [18:0] mul_ln50_2_fu_856_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_urem_8ns_8ns_8_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_8ns_8ns_8_12_1_U280(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln45_fu_504_p3),
    .din1(8'd85),
    .ce(1'b1),
    .dout(grp_fu_520_p2)
);

srcnn_urem_8ns_8ns_8_12_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
urem_8ns_8ns_8_12_1_U281(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_590_p0),
    .din1(8'd85),
    .ce(1'b1),
    .dout(grp_fu_590_p2)
);

srcnn_urem_9ns_8ns_9_13_1 #(
    .ID( 1 ),
    .NUM_STAGE( 13 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 9 ))
urem_9ns_8ns_9_13_1_U282(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_605_p0),
    .din1(grp_fu_605_p1),
    .ce(1'b1),
    .dout(grp_fu_605_p2)
);

srcnn_mul_11s_8ns_14_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 14 ))
mul_11s_8ns_14_1_1_U283(
    .din0(add_ln50_fu_742_p2),
    .din1(mul_ln50_fu_752_p1),
    .dout(mul_ln50_fu_752_p2)
);

srcnn_mul_8ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_1_1_U284(
    .din0(mul_ln46_fu_775_p0),
    .din1(mul_ln46_fu_775_p1),
    .dout(mul_ln46_fu_775_p2)
);

srcnn_mul_8ns_10ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 17 ))
mul_8ns_10ns_17_1_1_U285(
    .din0(mul_ln50_1_fu_810_p0),
    .din1(mul_ln50_1_fu_810_p1),
    .dout(mul_ln50_1_fu_810_p2)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U286(
    .din0(conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0),
    .din1(conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0),
    .din2(conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0),
    .din3(trunc_ln_reg_1140),
    .dout(tmp_s_fu_826_p5)
);

srcnn_mul_9ns_11ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 19 ))
mul_9ns_11ns_19_1_1_U287(
    .din0(mul_ln50_2_fu_856_p0),
    .din1(mul_ln50_2_fu_856_p1),
    .dout(mul_ln50_2_fu_856_p2)
);

srcnn_mul_7s_8ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 10 ))
mul_7s_8ns_10_1_1_U288(
    .din0(add_ln50_1_fu_899_p2),
    .din1(mul_ln45_fu_909_p1),
    .dout(mul_ln45_fu_909_p2)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U289(
    .din0(conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0),
    .din1(conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0),
    .din2(conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0),
    .din3(trunc_ln1_reg_1166),
    .dout(tmp_2_fu_915_p5)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U290(
    .din0(conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0),
    .din1(conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0),
    .din2(conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0),
    .din3(trunc_ln50_1_reg_1197),
    .dout(tmp_3_fu_979_p5)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U291(
    .din0(conv2_float_255_255_float_64_1_1_float_float_255_255_o_18_reg_1288),
    .din1(conv2_float_255_255_float_64_1_1_float_float_255_255_o_19_reg_1293),
    .din2(conv2_float_255_255_float_64_1_1_float_float_255_255_o_20_reg_1298),
    .din3(trunc_ln_reg_1140),
    .dout(tmp_1_fu_996_p5)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U292(
    .din0(conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1),
    .din1(conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1),
    .din2(conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1),
    .din3(trunc_ln50_1_reg_1197),
    .dout(tmp_5_fu_1005_p5)
);

srcnn_mux_3_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_3_2_32_1_1_U293(
    .din0(conv2_float_255_255_float_64_1_1_float_float_255_255_o_27_reg_1326),
    .din1(conv2_float_255_255_float_64_1_1_float_float_255_255_o_28_reg_1331),
    .din2(conv2_float_255_255_float_64_1_1_float_float_255_255_o_29_reg_1336),
    .din3(trunc_ln1_reg_1166),
    .dout(tmp_4_fu_1016_p5)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage8),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage8_subdone) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage6))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_fu_114 <= 8'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln40_fu_400_p2 == 1'd0))) begin
        c_fu_114 <= add_ln46_2_fu_526_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_126 <= 7'd0;
    end else if (((icmp_ln40_reg_1074 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_fu_126 <= select_ln41_1_fu_678_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten31_fu_122 <= 9'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln40_fu_400_p2 == 1'd0))) begin
        indvar_flatten31_fu_122 <= select_ln45_2_fu_538_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten45_fu_130 <= 15'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln40_fu_400_p2 == 1'd0))) begin
        indvar_flatten45_fu_130 <= select_ln41_3_fu_552_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten86_fu_138 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln40_fu_400_p2 == 1'd0))) begin
        indvar_flatten86_fu_138 <= add_ln40_1_fu_406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        o_fu_134 <= 3'd0;
    end else if (((icmp_ln40_reg_1074 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        o_fu_134 <= select_ln40_1_fu_646_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_fu_118 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln40_fu_400_p2 == 1'd0))) begin
        r_fu_118 <= select_ln45_1_fu_512_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_reg_1074 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln46_1_reg_1111 <= add_ln46_1_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln46_1_reg_1111_pp0_iter1_reg <= add_ln46_1_reg_1111;
        trunc_ln1_reg_1166_pp0_iter2_reg <= trunc_ln1_reg_1166;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_reg_1074 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln46_reg_1105 <= add_ln46_fu_585_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln46_reg_1105_pp0_iter1_reg <= add_ln46_reg_1105;
        trunc_ln_reg_1140_pp0_iter2_reg <= trunc_ln_reg_1140;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        add_ln50_3_reg_1215 <= add_ln50_3_fu_929_p2;
        add_ln50_5_reg_1220 <= add_ln50_5_fu_937_p2;
        add_ln50_7_reg_1240 <= add_ln50_7_fu_962_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln40_fu_400_p2 == 1'd0))) begin
        and_ln40_1_reg_1085 <= and_ln40_1_fu_442_p2;
        icmp_ln41_reg_1078 <= icmp_ln41_fu_418_p2;
        select_ln45_1_reg_1099 <= select_ln45_1_fu_512_p3;
        select_ln45_reg_1091 <= select_ln45_fu_504_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        bitcast_ln41_reg_1135 <= bitcast_ln41_fu_768_p1;
        trunc_ln_reg_1140 <= {{mul_ln46_fu_775_p2[16:15]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_15_reg_1245 <= zext_ln50_9_fu_967_p1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_16_reg_1251 <= zext_ln50_9_fu_967_p1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_17_reg_1257 <= zext_ln50_9_fu_967_p1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_21_reg_1268 <= zext_ln50_13_fu_973_p1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_22_reg_1273 <= zext_ln50_13_fu_973_p1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_23_reg_1278 <= zext_ln50_13_fu_973_p1;
        tmp_3_reg_1283 <= tmp_3_fu_979_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_18_reg_1288 <= conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_19_reg_1293 <= conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_20_reg_1298 <= conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_27_reg_1326 <= conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_28_reg_1331 <= conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_29_reg_1336 <= conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0;
        mul_1_reg_1321 <= grp_fu_1015_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_24_reg_1303 <= zext_ln50_18_fu_990_p1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_25_reg_1309 <= zext_ln50_18_fu_990_p1;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_26_reg_1315 <= zext_ln50_18_fu_990_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln40_reg_1074 <= icmp_ln40_fu_400_p2;
        icmp_ln40_reg_1074_pp0_iter1_reg <= icmp_ln40_reg_1074;
        select_ln45_1_reg_1099_pp0_iter1_reg <= select_ln45_1_reg_1099;
        select_ln45_reg_1091_pp0_iter1_reg <= select_ln45_reg_1091;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_2_reg_1351 <= grp_fu_1015_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        mul_ln45_reg_1203 <= mul_ln45_fu_909_p2;
        tmp_2_reg_1210 <= tmp_2_fu_915_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln40_reg_1074 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln50_reg_1128 <= mul_ln50_fu_752_p2;
        select_ln40_1_reg_1117 <= select_ln40_1_fu_646_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        mul_reg_1263 <= grp_fu_1015_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_349 <= grp_fu_1011_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        tmp_5_reg_1346 <= tmp_5_fu_1005_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        tmp_s_reg_1172 <= tmp_s_fu_826_p5;
        trunc_ln50_1_reg_1197 <= {{mul_ln50_2_fu_856_p2[17:16]}};
        urem_ln50_reg_1177 <= grp_fu_590_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd0))) begin
        trunc_ln1_reg_1166 <= {{mul_ln50_1_fu_810_p2[16:15]}};
        urem_ln46_reg_1146 <= grp_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        trunc_ln50_1_reg_1197_pp0_iter2_reg <= trunc_ln50_1_reg_1197;
    end
end

always @ (*) begin
    if (((icmp_ln40_reg_1074 == 1'd1) & (1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage8 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln40_reg_1074 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln40_reg_1074_pp0_iter1_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter1_stage6 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage8_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 = zext_ln50_17_fu_955_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 = zext_ln50_12_fu_846_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 = zext_ln50_8_fu_800_p1;
        end else begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 = 'bx;
        end
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 = zext_ln50_17_fu_955_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 = zext_ln50_12_fu_846_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 = zext_ln50_8_fu_800_p1;
        end else begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 = 'bx;
        end
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 = zext_ln50_17_fu_955_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 = zext_ln50_12_fu_846_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 = zext_ln50_8_fu_800_p1;
        end else begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 = 'bx;
        end
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_25_reg_1309;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_22_reg_1273;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_16_reg_1251;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 = zext_ln50_13_fu_973_p1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 = zext_ln50_18_fu_990_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 = zext_ln50_9_fu_967_p1;
        end else begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 = 'bx;
        end
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln50_1_reg_1197_pp0_iter2_reg == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln1_reg_1166_pp0_iter2_reg == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln_reg_1140_pp0_iter2_reg == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_24_reg_1303;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_21_reg_1268;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_15_reg_1245;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 = zext_ln50_13_fu_973_p1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 = zext_ln50_18_fu_990_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 = zext_ln50_9_fu_967_p1;
        end else begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 = 'bx;
        end
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln50_1_reg_1197_pp0_iter2_reg == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln1_reg_1166_pp0_iter2_reg == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (trunc_ln_reg_1140_pp0_iter2_reg == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_26_reg_1315;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_23_reg_1278;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 = conv2_float_255_255_float_64_1_1_float_float_255_255_o_17_reg_1257;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 = zext_ln50_13_fu_973_p1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 = zext_ln50_18_fu_990_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 = zext_ln50_9_fu_967_p1;
        end else begin
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 = 'bx;
        end
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln50_1_reg_1197_pp0_iter2_reg == 2'd1) & ~(trunc_ln50_1_reg_1197_pp0_iter2_reg == 2'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | (~(trunc_ln1_reg_1166_pp0_iter2_reg == 2'd1) & ~(trunc_ln1_reg_1166_pp0_iter2_reg == 2'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | (~(trunc_ln_reg_1140_pp0_iter2_reg == 2'd1) & ~(trunc_ln_reg_1140_pp0_iter2_reg == 2'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_341_p0 = tmp_5_reg_1346;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_341_p0 = tmp_4_fu_1016_p5;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_341_p0 = tmp_1_fu_996_p5;
        end else begin
            grp_fu_341_p0 = 'bx;
        end
    end else begin
        grp_fu_341_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_341_p1 = mul_2_reg_1351;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            grp_fu_341_p1 = mul_1_reg_1321;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_fu_341_p1 = mul_reg_1263;
        end else begin
            grp_fu_341_p1 = 'bx;
        end
    end else begin
        grp_fu_341_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            grp_fu_345_p1 = tmp_3_reg_1283;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            grp_fu_345_p1 = tmp_2_reg_1210;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_345_p1 = tmp_s_reg_1172;
        end else begin
            grp_fu_345_p1 = 'bx;
        end
    end else begin
        grp_fu_345_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weight_buffer_ce0 = 1'b1;
    end else begin
        weight_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to2 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if (((ap_idle_pp0_0to0 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter1_stage6))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln40_1_fu_406_p2 = (indvar_flatten86_fu_138 + 16'd1);

assign add_ln40_fu_633_p2 = (o_fu_134 + 3'd1);

assign add_ln41_1_fu_546_p2 = (indvar_flatten45_fu_130 + 15'd1);

assign add_ln41_fu_672_p2 = (select_ln40_fu_639_p3 + 7'd1);

assign add_ln45_1_fu_532_p2 = (indvar_flatten31_fu_122 + 9'd1);

assign add_ln45_fu_486_p2 = (select_ln41_fu_454_p3 + 2'd1);

assign add_ln46_1_fu_599_p2 = (zext_ln46_fu_596_p1 + 9'd2);

assign add_ln46_2_fu_526_p2 = (select_ln45_fu_504_p3 + 8'd3);

assign add_ln46_fu_585_p2 = (select_ln45_reg_1091 + 8'd1);

assign add_ln50_1_fu_899_p2 = ($signed(sext_ln40_fu_892_p1) + $signed(zext_ln50_4_fu_896_p1));

assign add_ln50_2_fu_795_p2 = (mul_ln50_reg_1128 + zext_ln50_7_fu_791_p1);

assign add_ln50_3_fu_929_p2 = (mul_ln45_reg_1203 + zext_ln50_6_fu_926_p1);

assign add_ln50_4_fu_841_p2 = (mul_ln50_reg_1128 + zext_ln50_11_fu_837_p1);

assign add_ln50_5_fu_937_p2 = (mul_ln45_reg_1203 + zext_ln50_10_fu_934_p1);

assign add_ln50_6_fu_950_p2 = (mul_ln50_reg_1128 + zext_ln50_16_fu_946_p1);

assign add_ln50_7_fu_962_p2 = (mul_ln45_reg_1203 + zext_ln50_15_fu_942_p1);

assign add_ln50_fu_742_p2 = ($signed(sext_ln43_fu_707_p1) + $signed(zext_ln50_5_fu_739_p1));

assign and_ln40_1_fu_442_p2 = (xor_ln40_fu_424_p2 & icmp_ln45_fu_436_p2);

assign and_ln40_fu_474_p2 = (xor_ln40_fu_424_p2 & or_ln41_1_fu_468_p2);

assign and_ln41_fu_480_p2 = (icmp_ln46_fu_430_p2 & and_ln40_fu_474_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage8_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage8;

assign bitcast_ln41_fu_768_p1 = weight_buffer_q0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 = reg_349;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 = reg_349;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 = reg_349;

assign grp_fu_1011_p_ce = 1'b1;

assign grp_fu_1011_p_din0 = grp_fu_341_p0;

assign grp_fu_1011_p_din1 = grp_fu_341_p1;

assign grp_fu_1011_p_opcode = 2'd0;

assign grp_fu_1015_p_ce = 1'b1;

assign grp_fu_1015_p_din0 = bitcast_ln41_reg_1135;

assign grp_fu_1015_p_din1 = grp_fu_345_p1;

assign grp_fu_590_p0 = (select_ln45_reg_1091 + 8'd1);

assign grp_fu_605_p0 = (zext_ln46_fu_596_p1 + 9'd2);

assign grp_fu_605_p1 = 9'd85;

assign icmp_ln40_fu_400_p2 = ((indvar_flatten86_fu_138 == 16'd65280) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_418_p2 = ((indvar_flatten45_fu_130 == 15'd16320) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_436_p2 = ((indvar_flatten31_fu_122 == 9'd255) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_430_p2 = ((c_fu_114 == 8'd255) ? 1'b1 : 1'b0);

assign lshr_ln43_mid1_fu_719_p3 = {{trunc_ln43_4_fu_715_p1}, {trunc_ln43_3_fu_711_p1}};

assign lshr_ln43_mid_fu_657_p3 = {{trunc_ln43_2_fu_653_p1}, {6'd0}};

assign lshr_ln_fu_625_p3 = {{trunc_ln43_1_fu_621_p1}, {trunc_ln43_fu_617_p1}};

assign mul_ln45_fu_909_p1 = 10'd85;

assign mul_ln46_fu_775_p0 = mul_ln46_fu_775_p00;

assign mul_ln46_fu_775_p00 = select_ln45_reg_1091_pp0_iter1_reg;

assign mul_ln46_fu_775_p1 = 17'd386;

assign mul_ln50_1_fu_810_p0 = mul_ln50_1_fu_810_p00;

assign mul_ln50_1_fu_810_p00 = add_ln46_reg_1105_pp0_iter1_reg;

assign mul_ln50_1_fu_810_p1 = 17'd386;

assign mul_ln50_2_fu_856_p0 = mul_ln50_2_fu_856_p00;

assign mul_ln50_2_fu_856_p00 = add_ln46_1_reg_1111_pp0_iter1_reg;

assign mul_ln50_2_fu_856_p1 = 19'd772;

assign mul_ln50_fu_752_p1 = 14'd85;

assign or_ln41_1_fu_468_p2 = (xor_ln41_fu_462_p2 | icmp_ln41_fu_418_p2);

assign or_ln41_fu_448_p2 = (icmp_ln41_fu_418_p2 | and_ln40_1_fu_442_p2);

assign or_ln45_1_fu_498_p2 = (or_ln45_fu_492_p2 | icmp_ln41_fu_418_p2);

assign or_ln45_fu_492_p2 = (and_ln41_fu_480_p2 | and_ln40_1_fu_442_p2);

assign p_shl1_fu_689_p3 = {{select_ln41_1_fu_678_p3}, {2'd0}};

assign select_ln40_1_fu_646_p3 = ((icmp_ln41_reg_1078[0:0] == 1'b1) ? add_ln40_fu_633_p2 : o_fu_134);

assign select_ln40_2_fu_665_p3 = ((icmp_ln41_reg_1078[0:0] == 1'b1) ? lshr_ln43_mid_fu_657_p3 : lshr_ln_fu_625_p3);

assign select_ln40_fu_639_p3 = ((icmp_ln41_reg_1078[0:0] == 1'b1) ? 7'd0 : i_fu_126);

assign select_ln41_1_fu_678_p3 = ((and_ln40_1_reg_1085[0:0] == 1'b1) ? add_ln41_fu_672_p2 : select_ln40_fu_639_p3);

assign select_ln41_2_fu_727_p3 = ((and_ln40_1_reg_1085[0:0] == 1'b1) ? lshr_ln43_mid1_fu_719_p3 : select_ln40_2_fu_665_p3);

assign select_ln41_3_fu_552_p3 = ((icmp_ln41_fu_418_p2[0:0] == 1'b1) ? 15'd1 : add_ln41_1_fu_546_p2);

assign select_ln41_fu_454_p3 = ((or_ln41_fu_448_p2[0:0] == 1'b1) ? 2'd0 : r_fu_118);

assign select_ln45_1_fu_512_p3 = ((and_ln41_fu_480_p2[0:0] == 1'b1) ? add_ln45_fu_486_p2 : select_ln41_fu_454_p3);

assign select_ln45_2_fu_538_p3 = ((or_ln41_fu_448_p2[0:0] == 1'b1) ? 9'd1 : add_ln45_1_fu_532_p2);

assign select_ln45_fu_504_p3 = ((or_ln45_1_fu_498_p2[0:0] == 1'b1) ? 8'd0 : c_fu_114);

assign sext_ln40_fu_892_p1 = $signed(sub_ln50_fu_886_p2);

assign sext_ln43_fu_707_p1 = $signed(sub_ln50_1_fu_701_p2);

assign sub_ln50_1_fu_701_p2 = (zext_ln50_3_fu_697_p1 - zext_ln50_2_fu_685_p1);

assign sub_ln50_fu_886_p2 = (zext_ln50_1_fu_882_p1 - zext_ln50_fu_872_p1);

assign tmp_29_fu_875_p3 = {{select_ln40_1_reg_1117}, {2'd0}};

assign trunc_ln43_1_fu_621_p1 = o_fu_134[1:0];

assign trunc_ln43_2_fu_653_p1 = add_ln40_fu_633_p2[1:0];

assign trunc_ln43_3_fu_711_p1 = add_ln41_fu_672_p2[5:0];

assign trunc_ln43_4_fu_715_p1 = select_ln40_1_fu_646_p3[1:0];

assign trunc_ln43_fu_617_p1 = i_fu_126[5:0];

assign weight_buffer_address0 = zext_ln41_fu_734_p1;

assign xor_ln40_fu_424_p2 = (icmp_ln41_fu_418_p2 ^ 1'd1);

assign xor_ln41_fu_462_p2 = (icmp_ln45_fu_436_p2 ^ 1'd1);

assign zext_ln41_fu_734_p1 = select_ln41_2_fu_727_p3;

assign zext_ln46_fu_596_p1 = select_ln45_reg_1091;

assign zext_ln50_10_fu_934_p1 = urem_ln50_reg_1177;

assign zext_ln50_11_fu_837_p1 = grp_fu_590_p2;

assign zext_ln50_12_fu_846_p1 = add_ln50_4_fu_841_p2;

assign zext_ln50_13_fu_973_p1 = add_ln50_5_reg_1220;

assign zext_ln50_15_fu_942_p1 = grp_fu_605_p2;

assign zext_ln50_16_fu_946_p1 = grp_fu_605_p2;

assign zext_ln50_17_fu_955_p1 = add_ln50_6_fu_950_p2;

assign zext_ln50_18_fu_990_p1 = add_ln50_7_reg_1240;

assign zext_ln50_1_fu_882_p1 = tmp_29_fu_875_p3;

assign zext_ln50_2_fu_685_p1 = select_ln41_1_fu_678_p3;

assign zext_ln50_3_fu_697_p1 = p_shl1_fu_689_p3;

assign zext_ln50_4_fu_896_p1 = select_ln45_1_reg_1099_pp0_iter1_reg;

assign zext_ln50_5_fu_739_p1 = select_ln45_1_reg_1099;

assign zext_ln50_6_fu_926_p1 = urem_ln46_reg_1146;

assign zext_ln50_7_fu_791_p1 = grp_fu_520_p2;

assign zext_ln50_8_fu_800_p1 = add_ln50_2_fu_795_p2;

assign zext_ln50_9_fu_967_p1 = add_ln50_3_reg_1215;

assign zext_ln50_fu_872_p1 = select_ln40_1_reg_1117;

endmodule //srcnn_conv2_Pipeline_OUT_ROW_COL
