// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_export_output_buffer_c1_Pipeline_RELU1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sub_ln134_1,
        trunc_ln127_1,
        empty,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1,
        grp_fu_993_p_din0,
        grp_fu_993_p_din1,
        grp_fu_993_p_opcode,
        grp_fu_993_p_dout0,
        grp_fu_993_p_ce,
        grp_fu_997_p_din0,
        grp_fu_997_p_din1,
        grp_fu_997_p_opcode,
        grp_fu_997_p_dout0,
        grp_fu_997_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [11:0] sub_ln134_1;
input  [2:0] trunc_ln127_1;
input  [31:0] empty;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
output  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
output  [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1;
output   conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;
input  [31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1;
output  [31:0] grp_fu_993_p_din0;
output  [31:0] grp_fu_993_p_din1;
output  [1:0] grp_fu_993_p_opcode;
input  [31:0] grp_fu_993_p_dout0;
output   grp_fu_993_p_ce;
output  [31:0] grp_fu_997_p_din0;
output  [31:0] grp_fu_997_p_din1;
output  [4:0] grp_fu_997_p_opcode;
input  [0:0] grp_fu_997_p_dout0;
output   grp_fu_997_p_ce;

reg ap_idle;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
reg[11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
reg[31:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
reg conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state4_pp0_stage1_iter1;
wire    ap_block_state6_pp0_stage1_iter2;
wire    ap_block_state8_pp0_stage1_iter3;
wire    ap_block_pp0_stage1_subdone;
reg   [0:0] icmp_ln131_reg_379;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state7_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] trunc_ln127_1_read_reg_374;
wire   [0:0] icmp_ln131_fu_263_p2;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter3_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter3_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter3_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter3_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter3_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter3_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter3_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter1_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter2_reg;
reg   [11:0] conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter3_reg;
wire   [31:0] tmp_2_fu_302_p10;
reg   [31:0] tmp_2_reg_431;
wire    ap_block_pp0_stage1_11001;
reg   [31:0] add15_1_reg_436;
wire   [0:0] icmp_ln136_fu_340_p2;
reg   [0:0] icmp_ln136_reg_450;
wire   [0:0] icmp_ln136_1_fu_346_p2;
reg   [0:0] icmp_ln136_1_reg_455;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln134_1_fu_285_p1;
wire    ap_block_pp0_stage0;
reg   [7:0] bw_fu_80;
wire   [7:0] add_ln131_fu_269_p2;
wire    ap_loop_init;
reg   [7:0] ap_sig_allocacmp_bw_1;
wire   [0:0] and_ln136_fu_356_p2;
wire    ap_block_pp0_stage1;
wire   [11:0] zext_ln134_fu_275_p1;
wire   [11:0] add_ln134_fu_279_p2;
wire   [31:0] bitcast_ln136_fu_323_p1;
wire   [7:0] tmp_6_fu_326_p4;
wire   [22:0] trunc_ln136_fu_336_p1;
wire   [0:0] or_ln136_fu_352_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [1:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to3;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U60(
    .din0(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_q1),
    .din1(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_q1),
    .din2(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_q1),
    .din3(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_q1),
    .din4(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_q1),
    .din5(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_q1),
    .din6(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1),
    .din7(conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1),
    .din8(trunc_ln127_1),
    .dout(tmp_2_fu_302_p10)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln131_fu_263_p2 == 1'd0))) begin
            bw_fu_80 <= add_ln131_fu_269_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            bw_fu_80 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add15_1_reg_436 <= grp_fu_993_p_dout0;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln131_fu_263_p2 == 1'd0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395 <= zext_ln134_1_fu_285_p1;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401 <= zext_ln134_1_fu_285_p1;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407 <= zext_ln134_1_fu_285_p1;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413 <= zext_ln134_1_fu_285_p1;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419 <= zext_ln134_1_fu_285_p1;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425 <= zext_ln134_1_fu_285_p1;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383 <= zext_ln134_1_fu_285_p1;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389 <= zext_ln134_1_fu_285_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter2_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter2_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter2_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter2_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter2_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter2_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter2_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter1_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter2_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter1_reg;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter3_reg <= conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter2_reg;
        icmp_ln131_reg_379 <= icmp_ln131_fu_263_p2;
        icmp_ln136_1_reg_455 <= icmp_ln136_1_fu_346_p2;
        icmp_ln136_reg_450 <= icmp_ln136_fu_340_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_reg_379 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_2_reg_431 <= tmp_2_fu_302_p10;
    end
end

always @ (*) begin
    if (((icmp_ln131_reg_379 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to3 = 1'b1;
    end else begin
        ap_idle_pp0_1to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_bw_1 = 8'd0;
    end else begin
        ap_sig_allocacmp_bw_1 = bw_fu_80;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_14_reg_419_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd6)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd6)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_13_reg_413_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd5)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_12_reg_407_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd4)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_11_reg_401_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd3)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_10_reg_395_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd2)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_9_reg_389_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd1)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_8_reg_383_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter3_reg;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 = conv1_float_255_255_float_1_9_9_float_float_255_255_ou_15_reg_425_pp0_iter2_reg;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 = 32'd0;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 = add15_1_reg_436;
        end else begin
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 = 'bx;
        end
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln136_fu_356_p2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln127_1_read_reg_374 == 3'd7)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln127_1_read_reg_374 == 3'd7)))) begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 = 1'b1;
    end else begin
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to3 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln131_fu_269_p2 = (ap_sig_allocacmp_bw_1 + 8'd1);

assign add_ln134_fu_279_p2 = (sub_ln134_1 + zext_ln134_fu_275_p1);

assign and_ln136_fu_356_p2 = (or_ln136_fu_352_p2 & grp_fu_997_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign bitcast_ln136_fu_323_p1 = add15_1_reg_436;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 = zext_ln134_1_fu_285_p1;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_2_address1 = zext_ln134_1_fu_285_p1;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_3_address1 = zext_ln134_1_fu_285_p1;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_4_address1 = zext_ln134_1_fu_285_p1;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_5_address1 = zext_ln134_1_fu_285_p1;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_6_address1 = zext_ln134_1_fu_285_p1;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_7_address1 = zext_ln134_1_fu_285_p1;

assign conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 = zext_ln134_1_fu_285_p1;

assign grp_fu_993_p_ce = 1'b1;

assign grp_fu_993_p_din0 = tmp_2_reg_431;

assign grp_fu_993_p_din1 = empty;

assign grp_fu_993_p_opcode = 2'd0;

assign grp_fu_997_p_ce = 1'b1;

assign grp_fu_997_p_din0 = add15_1_reg_436;

assign grp_fu_997_p_din1 = 32'd0;

assign grp_fu_997_p_opcode = 5'd4;

assign icmp_ln131_fu_263_p2 = ((ap_sig_allocacmp_bw_1 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln136_1_fu_346_p2 = ((trunc_ln136_fu_336_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_340_p2 = ((tmp_6_fu_326_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln136_fu_352_p2 = (icmp_ln136_reg_450 | icmp_ln136_1_reg_455);

assign tmp_6_fu_326_p4 = {{bitcast_ln136_fu_323_p1[30:23]}};

assign trunc_ln127_1_read_reg_374 = trunc_ln127_1;

assign trunc_ln136_fu_336_p1 = bitcast_ln136_fu_323_p1[22:0];

assign zext_ln134_1_fu_285_p1 = add_ln134_fu_279_p2;

assign zext_ln134_fu_275_p1 = ap_sig_allocacmp_bw_1;

endmodule //srcnn_export_output_buffer_c1_Pipeline_RELU1
