// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2_Pipeline_BW6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        add_ln64_1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_d0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_address0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_ce0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_we0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_d0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_address0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_ce0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_we0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_d0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_address0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_ce0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_we0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_d0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_address0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_ce0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_we0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_d0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_address0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_ce0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_we0,
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] add_ln64_1;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_d0;
output  [7:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_address0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_ce0;
output   conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_we0;
output  [31:0] conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_d0;
output  [7:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_address0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_ce0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_we0;
output  [31:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_d0;
output  [7:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_address0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_ce0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_we0;
output  [31:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_d0;
output  [7:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_address0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_ce0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_we0;
output  [31:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_d0;
output  [7:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_address0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_ce0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_we0;
output  [31:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_d0;
output  [7:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_address0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_ce0;
output   p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_we0;
output  [31:0] p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_d0;

reg ap_idle;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_we0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_ce0;
reg conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_we0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_ce0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_we0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_ce0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_we0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_ce0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_we0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_ce0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_we0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_ce0;
reg p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln62_fu_356_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln64_fu_379_p1;
wire    ap_block_pp0_stage0;
reg   [7:0] phi_urem4793_fu_110;
wire   [7:0] select_ln62_fu_429_p3;
wire    ap_loop_init;
reg   [16:0] phi_mul4791_fu_114;
wire   [16:0] add_ln62_1_fu_398_p2;
reg   [7:0] w_fu_118;
wire   [7:0] add_ln62_fu_362_p2;
wire   [3:0] trunc_ln62_2_fu_404_p4;
wire   [7:0] add_ln64_fu_374_p2;
wire   [7:0] add_ln62_2_fu_417_p2;
wire   [0:0] icmp_ln62_1_fu_423_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul4791_fu_114 <= 17'd0;
        end else if (((icmp_ln62_fu_356_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_mul4791_fu_114 <= add_ln62_1_fu_398_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem4793_fu_110 <= 8'd0;
        end else if (((icmp_ln62_fu_356_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            phi_urem4793_fu_110 <= select_ln62_fu_429_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            w_fu_118 <= 8'd0;
        end else if (((icmp_ln62_fu_356_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            w_fu_118 <= add_ln62_fu_362_p2;
        end
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd5) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd8) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd7) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 = 1'b1;
    end else begin
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_ce0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd10) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_we0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_ce0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_we0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_ce0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd12) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_we0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_ce0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln62_fu_356_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln62_2_fu_404_p4 == 4'd13) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_we0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_ce0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (((icmp_ln62_fu_356_p2 == 1'd0) & (trunc_ln62_2_fu_404_p4 == 4'd14)) | ((icmp_ln62_fu_356_p2 == 1'd0) & (trunc_ln62_2_fu_404_p4 == 4'd15))))) begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_we0 = 1'b1;
    end else begin
        p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln62_1_fu_398_p2 = (phi_mul4791_fu_114 + 17'd482);

assign add_ln62_2_fu_417_p2 = (phi_urem4793_fu_110 + 8'd1);

assign add_ln62_fu_362_p2 = (w_fu_118 + 8'd1);

assign add_ln64_fu_374_p2 = (add_ln64_1 + phi_urem4793_fu_110);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_3_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_4_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_5_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_6_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_7_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_8_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_9_d0 = 32'd0;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 = zext_ln64_fu_379_p1;

assign conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 = 32'd0;

assign icmp_ln62_1_fu_423_p2 = ((add_ln62_2_fu_417_p2 < 8'd17) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_356_p2 = ((w_fu_118 == 8'd255) ? 1'b1 : 1'b0);

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_address0 = zext_ln64_fu_379_p1;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_10_d0 = 32'd0;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_address0 = zext_ln64_fu_379_p1;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_11_d0 = 32'd0;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_address0 = zext_ln64_fu_379_p1;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_12_d0 = 32'd0;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_address0 = zext_ln64_fu_379_p1;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_13_d0 = 32'd0;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_address0 = zext_ln64_fu_379_p1;

assign p_ZZ5conv2PA255_A255_fPA64_A1_A1_fPfS1_E16output_fm_buffer_14_d0 = 32'd0;

assign select_ln62_fu_429_p3 = ((icmp_ln62_1_fu_423_p2[0:0] == 1'b1) ? add_ln62_2_fu_417_p2 : 8'd0);

assign trunc_ln62_2_fu_404_p4 = {{phi_mul4791_fu_114[16:13]}};

assign zext_ln64_fu_379_p1 = add_ln64_fu_374_p2;

endmodule //srcnn_conv2_Pipeline_BW6
