// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2_Pipeline_NOUT_TY_TX (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weights_buffer_0_0_0_address0,
        weights_buffer_0_0_0_ce0,
        weights_buffer_0_0_0_q0,
        weights_buffer_0_0_1_address0,
        weights_buffer_0_0_1_ce0,
        weights_buffer_0_0_1_q0,
        weights_buffer_0_0_2_address0,
        weights_buffer_0_0_2_ce0,
        weights_buffer_0_0_2_q0,
        weights_buffer_0_0_3_address0,
        weights_buffer_0_0_3_ce0,
        weights_buffer_0_0_3_q0,
        weights_buffer_0_0_4_address0,
        weights_buffer_0_0_4_ce0,
        weights_buffer_0_0_4_q0,
        weights_buffer_0_0_5_address0,
        weights_buffer_0_0_5_ce0,
        weights_buffer_0_0_5_q0,
        weights_buffer_0_0_6_address0,
        weights_buffer_0_0_6_ce0,
        weights_buffer_0_0_6_q0,
        weights_buffer_0_0_7_address0,
        weights_buffer_0_0_7_ce0,
        weights_buffer_0_0_7_q0,
        output_fm_buffer_address0,
        output_fm_buffer_ce0,
        output_fm_buffer_we0,
        output_fm_buffer_d0,
        output_fm_buffer_address1,
        output_fm_buffer_ce1,
        output_fm_buffer_q1,
        input_fm_buffer_1_address0,
        input_fm_buffer_1_ce0,
        input_fm_buffer_1_q0,
        input_fm_buffer_1_address1,
        input_fm_buffer_1_ce1,
        input_fm_buffer_1_q1,
        grp_fu_500_p_din0,
        grp_fu_500_p_din1,
        grp_fu_500_p_opcode,
        grp_fu_500_p_dout0,
        grp_fu_500_p_ce,
        grp_fu_504_p_din0,
        grp_fu_504_p_din1,
        grp_fu_504_p_dout0,
        grp_fu_504_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] weights_buffer_0_0_0_address0;
output   weights_buffer_0_0_0_ce0;
input  [31:0] weights_buffer_0_0_0_q0;
output  [4:0] weights_buffer_0_0_1_address0;
output   weights_buffer_0_0_1_ce0;
input  [31:0] weights_buffer_0_0_1_q0;
output  [4:0] weights_buffer_0_0_2_address0;
output   weights_buffer_0_0_2_ce0;
input  [31:0] weights_buffer_0_0_2_q0;
output  [4:0] weights_buffer_0_0_3_address0;
output   weights_buffer_0_0_3_ce0;
input  [31:0] weights_buffer_0_0_3_q0;
output  [4:0] weights_buffer_0_0_4_address0;
output   weights_buffer_0_0_4_ce0;
input  [31:0] weights_buffer_0_0_4_q0;
output  [4:0] weights_buffer_0_0_5_address0;
output   weights_buffer_0_0_5_ce0;
input  [31:0] weights_buffer_0_0_5_q0;
output  [4:0] weights_buffer_0_0_6_address0;
output   weights_buffer_0_0_6_ce0;
input  [31:0] weights_buffer_0_0_6_q0;
output  [4:0] weights_buffer_0_0_7_address0;
output   weights_buffer_0_0_7_ce0;
input  [31:0] weights_buffer_0_0_7_q0;
output  [13:0] output_fm_buffer_address0;
output   output_fm_buffer_ce0;
output   output_fm_buffer_we0;
output  [31:0] output_fm_buffer_d0;
output  [13:0] output_fm_buffer_address1;
output   output_fm_buffer_ce1;
input  [31:0] output_fm_buffer_q1;
output  [11:0] input_fm_buffer_1_address0;
output   input_fm_buffer_1_ce0;
input  [31:0] input_fm_buffer_1_q0;
output  [11:0] input_fm_buffer_1_address1;
output   input_fm_buffer_1_ce1;
input  [31:0] input_fm_buffer_1_q1;
output  [31:0] grp_fu_500_p_din0;
output  [31:0] grp_fu_500_p_din1;
output  [1:0] grp_fu_500_p_opcode;
input  [31:0] grp_fu_500_p_dout0;
output   grp_fu_500_p_ce;
output  [31:0] grp_fu_504_p_din0;
output  [31:0] grp_fu_504_p_din1;
input  [31:0] grp_fu_504_p_dout0;
output   grp_fu_504_p_ce;

reg ap_idle;
reg weights_buffer_0_0_0_ce0;
reg weights_buffer_0_0_1_ce0;
reg weights_buffer_0_0_2_ce0;
reg weights_buffer_0_0_3_ce0;
reg weights_buffer_0_0_4_ce0;
reg weights_buffer_0_0_5_ce0;
reg weights_buffer_0_0_6_ce0;
reg weights_buffer_0_0_7_ce0;
reg output_fm_buffer_ce0;
reg output_fm_buffer_we0;
reg output_fm_buffer_ce1;
reg[11:0] input_fm_buffer_1_address0;
reg input_fm_buffer_1_ce0;
reg[11:0] input_fm_buffer_1_address1;
reg input_fm_buffer_1_ce1;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_state32_pp0_stage3_iter7;
wire    ap_block_state36_pp0_stage3_iter8;
wire    ap_block_state40_pp0_stage3_iter9;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln55_reg_776;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] icmp_ln55_fu_348_p2;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_state30_pp0_stage1_iter7;
wire    ap_block_state34_pp0_stage1_iter8;
wire    ap_block_state38_pp0_stage1_iter9;
wire    ap_block_state42_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln55_reg_776_pp0_iter1_reg;
reg   [0:0] icmp_ln55_reg_776_pp0_iter2_reg;
reg   [0:0] icmp_ln55_reg_776_pp0_iter3_reg;
reg   [0:0] icmp_ln55_reg_776_pp0_iter4_reg;
reg   [0:0] icmp_ln55_reg_776_pp0_iter5_reg;
reg   [0:0] icmp_ln55_reg_776_pp0_iter6_reg;
reg   [0:0] icmp_ln55_reg_776_pp0_iter7_reg;
reg   [0:0] icmp_ln55_reg_776_pp0_iter8_reg;
wire   [9:0] add_ln72_fu_500_p2;
reg   [9:0] add_ln72_reg_820;
wire   [10:0] zext_ln72_235_fu_506_p1;
reg   [10:0] zext_ln72_235_reg_825;
wire   [11:0] zext_ln72_240_fu_552_p1;
reg   [11:0] zext_ln72_240_reg_831;
reg   [13:0] output_fm_buffer_addr_reg_851;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter1_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter2_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter3_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter4_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter5_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter6_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter7_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter8_reg;
reg   [13:0] output_fm_buffer_addr_reg_851_pp0_iter9_reg;
reg   [31:0] weights_buffer_0_0_0_load_reg_857;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_state31_pp0_stage2_iter7;
wire    ap_block_state35_pp0_stage2_iter8;
wire    ap_block_state39_pp0_stage2_iter9;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] weights_buffer_0_0_1_load_reg_862;
reg   [31:0] weights_buffer_0_0_2_load_reg_867;
reg   [31:0] weights_buffer_0_0_3_load_reg_872;
reg   [31:0] weights_buffer_0_0_4_load_reg_877;
reg   [31:0] weights_buffer_0_0_5_load_reg_882;
reg   [31:0] weights_buffer_0_0_6_load_reg_887;
reg   [31:0] weights_buffer_0_0_7_load_reg_892;
reg   [31:0] output_fm_buffer_load_reg_907;
reg   [31:0] input_fm_buffer_1_load_reg_912;
reg   [31:0] input_fm_buffer_1_load_1_reg_917;
wire   [11:0] zext_ln72_234_fu_676_p1;
reg   [11:0] zext_ln72_234_reg_922;
wire    ap_block_pp0_stage3_11001;
reg   [31:0] input_fm_buffer_1_load_2_reg_938;
reg   [31:0] input_fm_buffer_1_load_3_reg_943;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_state29_pp0_stage0_iter7;
wire    ap_block_state33_pp0_stage0_iter8;
wire    ap_block_state37_pp0_stage0_iter9;
wire    ap_block_state41_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [31:0] input_fm_buffer_1_load_4_reg_958;
reg   [31:0] input_fm_buffer_1_load_5_reg_963;
reg   [31:0] mul_reg_968;
wire   [31:0] grp_fu_316_p2;
reg   [31:0] mul49_1_reg_973;
reg   [31:0] mul49_1_reg_973_pp0_iter2_reg;
reg   [31:0] input_fm_buffer_1_load_6_reg_978;
reg   [31:0] input_fm_buffer_1_load_7_reg_983;
reg   [31:0] mul49_2_reg_988;
reg   [31:0] mul49_2_reg_988_pp0_iter2_reg;
reg   [31:0] mul49_2_reg_988_pp0_iter3_reg;
reg   [31:0] mul49_3_reg_993;
reg   [31:0] mul49_3_reg_993_pp0_iter2_reg;
reg   [31:0] mul49_3_reg_993_pp0_iter3_reg;
reg   [31:0] mul49_3_reg_993_pp0_iter4_reg;
reg   [31:0] mul49_4_reg_998;
reg   [31:0] mul49_4_reg_998_pp0_iter2_reg;
reg   [31:0] mul49_4_reg_998_pp0_iter3_reg;
reg   [31:0] mul49_4_reg_998_pp0_iter4_reg;
reg   [31:0] mul49_4_reg_998_pp0_iter5_reg;
reg   [31:0] mul49_5_reg_1003;
reg   [31:0] mul49_5_reg_1003_pp0_iter2_reg;
reg   [31:0] mul49_5_reg_1003_pp0_iter3_reg;
reg   [31:0] mul49_5_reg_1003_pp0_iter4_reg;
reg   [31:0] mul49_5_reg_1003_pp0_iter5_reg;
reg   [31:0] mul49_5_reg_1003_pp0_iter6_reg;
reg   [31:0] mul49_6_reg_1008;
reg   [31:0] mul49_6_reg_1008_pp0_iter3_reg;
reg   [31:0] mul49_6_reg_1008_pp0_iter4_reg;
reg   [31:0] mul49_6_reg_1008_pp0_iter5_reg;
reg   [31:0] mul49_6_reg_1008_pp0_iter6_reg;
reg   [31:0] mul49_6_reg_1008_pp0_iter7_reg;
reg   [31:0] mul49_6_reg_1008_pp0_iter8_reg;
reg   [31:0] mul49_7_reg_1013;
reg   [31:0] mul49_7_reg_1013_pp0_iter3_reg;
reg   [31:0] mul49_7_reg_1013_pp0_iter4_reg;
reg   [31:0] mul49_7_reg_1013_pp0_iter5_reg;
reg   [31:0] mul49_7_reg_1013_pp0_iter6_reg;
reg   [31:0] mul49_7_reg_1013_pp0_iter7_reg;
reg   [31:0] mul49_7_reg_1013_pp0_iter8_reg;
reg   [31:0] mul49_7_reg_1013_pp0_iter9_reg;
reg   [31:0] add_reg_1018;
wire   [31:0] grp_fu_308_p2;
reg   [31:0] add56_1_reg_1023;
reg   [31:0] add56_2_reg_1028;
reg   [31:0] add56_3_reg_1033;
reg   [31:0] add56_4_reg_1038;
reg   [31:0] add56_5_reg_1043;
reg   [31:0] add56_6_reg_1048;
reg   [31:0] add56_7_reg_1053;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln55_fu_400_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln72_242_fu_566_p1;
wire   [63:0] zext_ln72_243_fu_577_p1;
wire   [63:0] p_cast6_fu_588_p1;
wire   [63:0] zext_ln72_244_fu_661_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln72_245_fu_671_p1;
wire   [63:0] zext_ln72_246_fu_696_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln72_247_fu_706_p1;
wire   [63:0] zext_ln72_248_fu_726_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln72_249_fu_736_p1;
reg   [4:0] bx_fu_90;
wire   [4:0] add_ln58_fu_593_p2;
wire    ap_loop_init;
reg   [4:0] ty_3_fu_94;
wire   [4:0] select_ln57_1_fu_472_p3;
reg   [9:0] indvar_flatten11_fu_98;
wire   [9:0] select_ln57_2_fu_605_p3;
reg   [5:0] nout_fu_102;
wire   [5:0] select_ln55_1_fu_392_p3;
reg   [13:0] indvar_flatten32_fu_106;
wire   [13:0] add_ln55_1_fu_354_p2;
reg   [31:0] grp_fu_304_p0;
reg   [31:0] grp_fu_304_p1;
reg   [31:0] grp_fu_308_p0;
reg   [31:0] grp_fu_308_p1;
reg   [31:0] grp_fu_312_p0;
reg   [31:0] grp_fu_312_p1;
reg   [31:0] grp_fu_316_p0;
reg   [31:0] grp_fu_316_p1;
wire   [0:0] icmp_ln57_fu_378_p2;
wire   [5:0] add_ln55_fu_372_p2;
wire   [9:0] tmp_s_fu_416_p3;
wire   [10:0] tmp_18_cast_fu_424_p1;
wire   [10:0] select_ln55_1_cast_fu_412_p1;
wire   [0:0] icmp_ln58_fu_440_p2;
wire   [0:0] xor_ln55_fu_434_p2;
wire   [4:0] select_ln55_fu_384_p3;
wire   [0:0] and_ln55_fu_446_p2;
wire   [0:0] or_ln57_fu_458_p2;
wire   [4:0] add_ln57_fu_452_p2;
wire   [8:0] p_shl2_fu_488_p3;
wire   [9:0] zext_ln72_233_fu_496_p1;
wire   [9:0] zext_ln72_232_fu_484_p1;
wire   [10:0] add_ln72_395_fu_510_p2;
wire   [10:0] empty_fu_428_p2;
wire   [10:0] zext_ln72_fu_480_p1;
wire   [10:0] empty_101_fu_520_p2;
wire   [9:0] empty_102_fu_530_p1;
wire   [13:0] p_shl3_fu_534_p3;
wire   [13:0] p_cast_fu_526_p1;
wire   [4:0] select_ln57_fu_464_p3;
wire   [10:0] zext_ln72_241_fu_556_p1;
wire   [10:0] add_ln72_402_fu_560_p2;
wire   [11:0] zext_ln72_236_fu_516_p1;
wire   [11:0] add_ln72_403_fu_571_p2;
wire   [13:0] empty_103_fu_542_p2;
wire   [13:0] zext_ln72_239_fu_548_p1;
wire   [13:0] empty_104_fu_582_p2;
wire   [9:0] add_ln57_1_fu_599_p2;
wire   [10:0] add_ln72_396_fu_638_p2;
wire   [10:0] add_ln72_397_fu_647_p2;
wire   [11:0] zext_ln72_237_fu_643_p1;
wire   [11:0] add_ln72_404_fu_656_p2;
wire   [11:0] zext_ln72_238_fu_652_p1;
wire   [11:0] add_ln72_405_fu_666_p2;
wire   [11:0] add_ln72_398_fu_679_p2;
wire   [11:0] add_ln72_406_fu_691_p2;
wire   [11:0] add_ln72_399_fu_685_p2;
wire   [11:0] add_ln72_407_fu_701_p2;
wire   [11:0] add_ln72_400_fu_711_p2;
wire   [11:0] add_ln72_408_fu_721_p2;
wire   [11:0] add_ln72_401_fu_716_p2;
wire   [11:0] add_ln72_409_fu_731_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter9_stage1;
reg    ap_idle_pp0_0to8;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to10;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

srcnn_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U42(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_308_p0),
    .din1(grp_fu_308_p1),
    .ce(1'b1),
    .dout(grp_fu_308_p2)
);

srcnn_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U44(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_316_p0),
    .din1(grp_fu_316_p1),
    .ce(1'b1),
    .dout(grp_fu_316_p2)
);

srcnn_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bx_fu_90 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_fu_348_p2 == 1'd0))) begin
        bx_fu_90 <= add_ln58_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten11_fu_98 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_fu_348_p2 == 1'd0))) begin
        indvar_flatten11_fu_98 <= select_ln57_2_fu_605_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten32_fu_106 <= 14'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_fu_348_p2 == 1'd0))) begin
        indvar_flatten32_fu_106 <= add_ln55_1_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        nout_fu_102 <= 6'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_fu_348_p2 == 1'd0))) begin
        nout_fu_102 <= select_ln55_1_fu_392_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ty_3_fu_94 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_fu_348_p2 == 1'd0))) begin
        ty_3_fu_94 <= select_ln57_1_fu_472_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add56_1_reg_1023 <= grp_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add56_2_reg_1028 <= grp_fu_500_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add56_3_reg_1033 <= grp_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add56_4_reg_1038 <= grp_fu_500_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add56_5_reg_1043 <= grp_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add56_6_reg_1048 <= grp_fu_500_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add56_7_reg_1053 <= grp_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_fu_348_p2 == 1'd0))) begin
        add_ln72_reg_820 <= add_ln72_fu_500_p2;
        output_fm_buffer_addr_reg_851 <= p_cast6_fu_588_p1;
        zext_ln72_235_reg_825[9 : 0] <= zext_ln72_235_fu_506_p1[9 : 0];
        zext_ln72_240_reg_831[4 : 0] <= zext_ln72_240_fu_552_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_reg_1018 <= grp_fu_500_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        icmp_ln55_reg_776 <= icmp_ln55_fu_348_p2;
        icmp_ln55_reg_776_pp0_iter1_reg <= icmp_ln55_reg_776;
        icmp_ln55_reg_776_pp0_iter2_reg <= icmp_ln55_reg_776_pp0_iter1_reg;
        icmp_ln55_reg_776_pp0_iter3_reg <= icmp_ln55_reg_776_pp0_iter2_reg;
        icmp_ln55_reg_776_pp0_iter4_reg <= icmp_ln55_reg_776_pp0_iter3_reg;
        icmp_ln55_reg_776_pp0_iter5_reg <= icmp_ln55_reg_776_pp0_iter4_reg;
        icmp_ln55_reg_776_pp0_iter6_reg <= icmp_ln55_reg_776_pp0_iter5_reg;
        icmp_ln55_reg_776_pp0_iter7_reg <= icmp_ln55_reg_776_pp0_iter6_reg;
        icmp_ln55_reg_776_pp0_iter8_reg <= icmp_ln55_reg_776_pp0_iter7_reg;
        mul49_1_reg_973_pp0_iter2_reg <= mul49_1_reg_973;
        output_fm_buffer_addr_reg_851_pp0_iter1_reg <= output_fm_buffer_addr_reg_851;
        output_fm_buffer_addr_reg_851_pp0_iter2_reg <= output_fm_buffer_addr_reg_851_pp0_iter1_reg;
        output_fm_buffer_addr_reg_851_pp0_iter3_reg <= output_fm_buffer_addr_reg_851_pp0_iter2_reg;
        output_fm_buffer_addr_reg_851_pp0_iter4_reg <= output_fm_buffer_addr_reg_851_pp0_iter3_reg;
        output_fm_buffer_addr_reg_851_pp0_iter5_reg <= output_fm_buffer_addr_reg_851_pp0_iter4_reg;
        output_fm_buffer_addr_reg_851_pp0_iter6_reg <= output_fm_buffer_addr_reg_851_pp0_iter5_reg;
        output_fm_buffer_addr_reg_851_pp0_iter7_reg <= output_fm_buffer_addr_reg_851_pp0_iter6_reg;
        output_fm_buffer_addr_reg_851_pp0_iter8_reg <= output_fm_buffer_addr_reg_851_pp0_iter7_reg;
        output_fm_buffer_addr_reg_851_pp0_iter9_reg <= output_fm_buffer_addr_reg_851_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_reg_776 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_fm_buffer_1_load_1_reg_917 <= input_fm_buffer_1_q0;
        input_fm_buffer_1_load_reg_912 <= input_fm_buffer_1_q1;
        output_fm_buffer_load_reg_907 <= output_fm_buffer_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_reg_776 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_fm_buffer_1_load_2_reg_938 <= input_fm_buffer_1_q1;
        input_fm_buffer_1_load_3_reg_943 <= input_fm_buffer_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_reg_776 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_fm_buffer_1_load_4_reg_958 <= input_fm_buffer_1_q1;
        input_fm_buffer_1_load_5_reg_963 <= input_fm_buffer_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_fm_buffer_1_load_6_reg_978 <= input_fm_buffer_1_q1;
        input_fm_buffer_1_load_7_reg_983 <= input_fm_buffer_1_q0;
        mul49_1_reg_973 <= grp_fu_316_p2;
        mul_reg_968 <= grp_fu_504_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul49_2_reg_988 <= grp_fu_504_p_dout0;
        mul49_3_reg_993 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul49_2_reg_988_pp0_iter2_reg <= mul49_2_reg_988;
        mul49_2_reg_988_pp0_iter3_reg <= mul49_2_reg_988_pp0_iter2_reg;
        mul49_3_reg_993_pp0_iter2_reg <= mul49_3_reg_993;
        mul49_3_reg_993_pp0_iter3_reg <= mul49_3_reg_993_pp0_iter2_reg;
        mul49_3_reg_993_pp0_iter4_reg <= mul49_3_reg_993_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul49_4_reg_998 <= grp_fu_504_p_dout0;
        mul49_5_reg_1003 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul49_4_reg_998_pp0_iter2_reg <= mul49_4_reg_998;
        mul49_4_reg_998_pp0_iter3_reg <= mul49_4_reg_998_pp0_iter2_reg;
        mul49_4_reg_998_pp0_iter4_reg <= mul49_4_reg_998_pp0_iter3_reg;
        mul49_4_reg_998_pp0_iter5_reg <= mul49_4_reg_998_pp0_iter4_reg;
        mul49_5_reg_1003_pp0_iter2_reg <= mul49_5_reg_1003;
        mul49_5_reg_1003_pp0_iter3_reg <= mul49_5_reg_1003_pp0_iter2_reg;
        mul49_5_reg_1003_pp0_iter4_reg <= mul49_5_reg_1003_pp0_iter3_reg;
        mul49_5_reg_1003_pp0_iter5_reg <= mul49_5_reg_1003_pp0_iter4_reg;
        mul49_5_reg_1003_pp0_iter6_reg <= mul49_5_reg_1003_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul49_6_reg_1008 <= grp_fu_504_p_dout0;
        mul49_7_reg_1013 <= grp_fu_316_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul49_6_reg_1008_pp0_iter3_reg <= mul49_6_reg_1008;
        mul49_6_reg_1008_pp0_iter4_reg <= mul49_6_reg_1008_pp0_iter3_reg;
        mul49_6_reg_1008_pp0_iter5_reg <= mul49_6_reg_1008_pp0_iter4_reg;
        mul49_6_reg_1008_pp0_iter6_reg <= mul49_6_reg_1008_pp0_iter5_reg;
        mul49_6_reg_1008_pp0_iter7_reg <= mul49_6_reg_1008_pp0_iter6_reg;
        mul49_6_reg_1008_pp0_iter8_reg <= mul49_6_reg_1008_pp0_iter7_reg;
        mul49_7_reg_1013_pp0_iter3_reg <= mul49_7_reg_1013;
        mul49_7_reg_1013_pp0_iter4_reg <= mul49_7_reg_1013_pp0_iter3_reg;
        mul49_7_reg_1013_pp0_iter5_reg <= mul49_7_reg_1013_pp0_iter4_reg;
        mul49_7_reg_1013_pp0_iter6_reg <= mul49_7_reg_1013_pp0_iter5_reg;
        mul49_7_reg_1013_pp0_iter7_reg <= mul49_7_reg_1013_pp0_iter6_reg;
        mul49_7_reg_1013_pp0_iter8_reg <= mul49_7_reg_1013_pp0_iter7_reg;
        mul49_7_reg_1013_pp0_iter9_reg <= mul49_7_reg_1013_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_reg_776 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        weights_buffer_0_0_0_load_reg_857 <= weights_buffer_0_0_0_q0;
        weights_buffer_0_0_1_load_reg_862 <= weights_buffer_0_0_1_q0;
        weights_buffer_0_0_2_load_reg_867 <= weights_buffer_0_0_2_q0;
        weights_buffer_0_0_3_load_reg_872 <= weights_buffer_0_0_3_q0;
        weights_buffer_0_0_4_load_reg_877 <= weights_buffer_0_0_4_q0;
        weights_buffer_0_0_5_load_reg_882 <= weights_buffer_0_0_5_q0;
        weights_buffer_0_0_6_load_reg_887 <= weights_buffer_0_0_6_q0;
        weights_buffer_0_0_7_load_reg_892 <= weights_buffer_0_0_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln55_reg_776 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        zext_ln72_234_reg_922[9 : 0] <= zext_ln72_234_fu_676_p1[9 : 0];
    end
end

always @ (*) begin
    if (((icmp_ln55_reg_776 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln55_reg_776_pp0_iter8_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter9_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter9_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter9_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to8 = 1'b1;
    end else begin
        ap_idle_pp0_0to8 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_304_p0 = add56_5_reg_1043;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_304_p0 = add56_3_reg_1033;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_304_p0 = add56_1_reg_1023;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_304_p0 = output_fm_buffer_load_reg_907;
    end else begin
        grp_fu_304_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_304_p1 = mul49_6_reg_1008_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_304_p1 = mul49_4_reg_998_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_304_p1 = mul49_2_reg_988_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_304_p1 = mul_reg_968;
    end else begin
        grp_fu_304_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_308_p0 = add56_6_reg_1048;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_308_p0 = add56_4_reg_1038;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_308_p0 = add56_2_reg_1028;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_308_p0 = add_reg_1018;
    end else begin
        grp_fu_308_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_308_p1 = mul49_7_reg_1013_pp0_iter9_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_308_p1 = mul49_5_reg_1003_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_308_p1 = mul49_3_reg_993_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_308_p1 = mul49_1_reg_973_pp0_iter2_reg;
    end else begin
        grp_fu_308_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_312_p0 = weights_buffer_0_0_6_load_reg_887;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_312_p0 = weights_buffer_0_0_4_load_reg_877;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_312_p0 = weights_buffer_0_0_2_load_reg_867;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_312_p0 = weights_buffer_0_0_0_load_reg_857;
    end else begin
        grp_fu_312_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_312_p1 = input_fm_buffer_1_load_6_reg_978;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_312_p1 = input_fm_buffer_1_load_4_reg_958;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_312_p1 = input_fm_buffer_1_load_2_reg_938;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_312_p1 = input_fm_buffer_1_load_reg_912;
    end else begin
        grp_fu_312_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_316_p0 = weights_buffer_0_0_7_load_reg_892;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_316_p0 = weights_buffer_0_0_5_load_reg_882;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_316_p0 = weights_buffer_0_0_3_load_reg_872;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_316_p0 = weights_buffer_0_0_1_load_reg_862;
    end else begin
        grp_fu_316_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_316_p1 = input_fm_buffer_1_load_7_reg_983;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_316_p1 = input_fm_buffer_1_load_5_reg_963;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_316_p1 = input_fm_buffer_1_load_3_reg_943;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_316_p1 = input_fm_buffer_1_load_1_reg_917;
    end else begin
        grp_fu_316_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_fm_buffer_1_address0 = zext_ln72_249_fu_736_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_fm_buffer_1_address0 = zext_ln72_247_fu_706_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_fm_buffer_1_address0 = zext_ln72_245_fu_671_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_fm_buffer_1_address0 = zext_ln72_243_fu_577_p1;
    end else begin
        input_fm_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_fm_buffer_1_address1 = zext_ln72_248_fu_726_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        input_fm_buffer_1_address1 = zext_ln72_246_fu_696_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        input_fm_buffer_1_address1 = zext_ln72_244_fu_661_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_fm_buffer_1_address1 = zext_ln72_242_fu_566_p1;
    end else begin
        input_fm_buffer_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_fm_buffer_1_ce0 = 1'b1;
    end else begin
        input_fm_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        input_fm_buffer_1_ce1 = 1'b1;
    end else begin
        input_fm_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_fm_buffer_ce0 = 1'b1;
    end else begin
        output_fm_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_fm_buffer_ce1 = 1'b1;
    end else begin
        output_fm_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_fm_buffer_we0 = 1'b1;
    end else begin
        output_fm_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_0_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_1_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_2_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_3_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_4_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_5_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_6_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        weights_buffer_0_0_7_ce0 = 1'b1;
    end else begin
        weights_buffer_0_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to8 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter9_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln55_1_fu_354_p2 = (indvar_flatten32_fu_106 + 14'd1);

assign add_ln55_fu_372_p2 = (nout_fu_102 + 6'd1);

assign add_ln57_1_fu_599_p2 = (indvar_flatten11_fu_98 + 10'd1);

assign add_ln57_fu_452_p2 = (select_ln55_fu_384_p3 + 5'd1);

assign add_ln58_fu_593_p2 = (select_ln57_fu_464_p3 + 5'd1);

assign add_ln72_395_fu_510_p2 = (zext_ln72_235_fu_506_p1 + 11'd289);

assign add_ln72_396_fu_638_p2 = (zext_ln72_235_reg_825 + 11'd578);

assign add_ln72_397_fu_647_p2 = (zext_ln72_235_reg_825 + 11'd867);

assign add_ln72_398_fu_679_p2 = (zext_ln72_234_fu_676_p1 + 12'd1156);

assign add_ln72_399_fu_685_p2 = (zext_ln72_234_fu_676_p1 + 12'd1445);

assign add_ln72_400_fu_711_p2 = (zext_ln72_234_reg_922 + 12'd1734);

assign add_ln72_401_fu_716_p2 = (zext_ln72_234_reg_922 + 12'd2023);

assign add_ln72_402_fu_560_p2 = (zext_ln72_235_fu_506_p1 + zext_ln72_241_fu_556_p1);

assign add_ln72_403_fu_571_p2 = (zext_ln72_236_fu_516_p1 + zext_ln72_240_fu_552_p1);

assign add_ln72_404_fu_656_p2 = (zext_ln72_237_fu_643_p1 + zext_ln72_240_reg_831);

assign add_ln72_405_fu_666_p2 = (zext_ln72_238_fu_652_p1 + zext_ln72_240_reg_831);

assign add_ln72_406_fu_691_p2 = (add_ln72_398_fu_679_p2 + zext_ln72_240_reg_831);

assign add_ln72_407_fu_701_p2 = (add_ln72_399_fu_685_p2 + zext_ln72_240_reg_831);

assign add_ln72_408_fu_721_p2 = (add_ln72_400_fu_711_p2 + zext_ln72_240_reg_831);

assign add_ln72_409_fu_731_p2 = (add_ln72_401_fu_716_p2 + zext_ln72_240_reg_831);

assign add_ln72_fu_500_p2 = (zext_ln72_233_fu_496_p1 + zext_ln72_232_fu_484_p1);

assign and_ln55_fu_446_p2 = (xor_ln55_fu_434_p2 & icmp_ln58_fu_440_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign empty_101_fu_520_p2 = (empty_fu_428_p2 + zext_ln72_fu_480_p1);

assign empty_102_fu_530_p1 = empty_101_fu_520_p2[9:0];

assign empty_103_fu_542_p2 = (p_shl3_fu_534_p3 + p_cast_fu_526_p1);

assign empty_104_fu_582_p2 = (empty_103_fu_542_p2 + zext_ln72_239_fu_548_p1);

assign empty_fu_428_p2 = (tmp_18_cast_fu_424_p1 + select_ln55_1_cast_fu_412_p1);

assign grp_fu_500_p_ce = 1'b1;

assign grp_fu_500_p_din0 = grp_fu_304_p0;

assign grp_fu_500_p_din1 = grp_fu_304_p1;

assign grp_fu_500_p_opcode = 2'd0;

assign grp_fu_504_p_ce = 1'b1;

assign grp_fu_504_p_din0 = grp_fu_312_p0;

assign grp_fu_504_p_din1 = grp_fu_312_p1;

assign icmp_ln55_fu_348_p2 = ((indvar_flatten32_fu_106 == 14'd9248) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_378_p2 = ((indvar_flatten11_fu_98 == 10'd289) ? 1'b1 : 1'b0);

assign icmp_ln58_fu_440_p2 = ((bx_fu_90 == 5'd17) ? 1'b1 : 1'b0);

assign or_ln57_fu_458_p2 = (icmp_ln57_fu_378_p2 | and_ln55_fu_446_p2);

assign output_fm_buffer_address0 = output_fm_buffer_addr_reg_851_pp0_iter9_reg;

assign output_fm_buffer_address1 = p_cast6_fu_588_p1;

assign output_fm_buffer_d0 = add56_7_reg_1053;

assign p_cast6_fu_588_p1 = empty_104_fu_582_p2;

assign p_cast_fu_526_p1 = empty_101_fu_520_p2;

assign p_shl2_fu_488_p3 = {{select_ln57_1_fu_472_p3}, {4'd0}};

assign p_shl3_fu_534_p3 = {{empty_102_fu_530_p1}, {4'd0}};

assign select_ln55_1_cast_fu_412_p1 = select_ln55_1_fu_392_p3;

assign select_ln55_1_fu_392_p3 = ((icmp_ln57_fu_378_p2[0:0] == 1'b1) ? add_ln55_fu_372_p2 : nout_fu_102);

assign select_ln55_fu_384_p3 = ((icmp_ln57_fu_378_p2[0:0] == 1'b1) ? 5'd0 : ty_3_fu_94);

assign select_ln57_1_fu_472_p3 = ((and_ln55_fu_446_p2[0:0] == 1'b1) ? add_ln57_fu_452_p2 : select_ln55_fu_384_p3);

assign select_ln57_2_fu_605_p3 = ((icmp_ln57_fu_378_p2[0:0] == 1'b1) ? 10'd1 : add_ln57_1_fu_599_p2);

assign select_ln57_fu_464_p3 = ((or_ln57_fu_458_p2[0:0] == 1'b1) ? 5'd0 : bx_fu_90);

assign tmp_18_cast_fu_424_p1 = tmp_s_fu_416_p3;

assign tmp_s_fu_416_p3 = {{select_ln55_1_fu_392_p3}, {4'd0}};

assign weights_buffer_0_0_0_address0 = zext_ln55_fu_400_p1;

assign weights_buffer_0_0_1_address0 = zext_ln55_fu_400_p1;

assign weights_buffer_0_0_2_address0 = zext_ln55_fu_400_p1;

assign weights_buffer_0_0_3_address0 = zext_ln55_fu_400_p1;

assign weights_buffer_0_0_4_address0 = zext_ln55_fu_400_p1;

assign weights_buffer_0_0_5_address0 = zext_ln55_fu_400_p1;

assign weights_buffer_0_0_6_address0 = zext_ln55_fu_400_p1;

assign weights_buffer_0_0_7_address0 = zext_ln55_fu_400_p1;

assign xor_ln55_fu_434_p2 = (icmp_ln57_fu_378_p2 ^ 1'd1);

assign zext_ln55_fu_400_p1 = select_ln55_1_fu_392_p3;

assign zext_ln72_232_fu_484_p1 = select_ln57_1_fu_472_p3;

assign zext_ln72_233_fu_496_p1 = p_shl2_fu_488_p3;

assign zext_ln72_234_fu_676_p1 = add_ln72_reg_820;

assign zext_ln72_235_fu_506_p1 = add_ln72_fu_500_p2;

assign zext_ln72_236_fu_516_p1 = add_ln72_395_fu_510_p2;

assign zext_ln72_237_fu_643_p1 = add_ln72_396_fu_638_p2;

assign zext_ln72_238_fu_652_p1 = add_ln72_397_fu_647_p2;

assign zext_ln72_239_fu_548_p1 = select_ln57_fu_464_p3;

assign zext_ln72_240_fu_552_p1 = select_ln57_fu_464_p3;

assign zext_ln72_241_fu_556_p1 = select_ln57_fu_464_p3;

assign zext_ln72_242_fu_566_p1 = add_ln72_402_fu_560_p2;

assign zext_ln72_243_fu_577_p1 = add_ln72_403_fu_571_p2;

assign zext_ln72_244_fu_661_p1 = add_ln72_404_fu_656_p2;

assign zext_ln72_245_fu_671_p1 = add_ln72_405_fu_666_p2;

assign zext_ln72_246_fu_696_p1 = add_ln72_406_fu_691_p2;

assign zext_ln72_247_fu_706_p1 = add_ln72_407_fu_701_p2;

assign zext_ln72_248_fu_726_p1 = add_ln72_408_fu_721_p2;

assign zext_ln72_249_fu_736_p1 = add_ln72_409_fu_731_p2;

assign zext_ln72_fu_480_p1 = select_ln57_1_fu_472_p3;

always @ (posedge ap_clk) begin
    zext_ln72_235_reg_825[10] <= 1'b0;
    zext_ln72_240_reg_831[11:5] <= 7'b0000000;
    zext_ln72_234_reg_922[11:10] <= 2'b00;
end

endmodule //srcnn_conv2_Pipeline_NOUT_TY_TX
