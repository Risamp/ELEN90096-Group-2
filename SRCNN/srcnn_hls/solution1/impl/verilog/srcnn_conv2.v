// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        conv2_weights_address0,
        conv2_weights_ce0,
        conv2_weights_q0,
        conv2_biases_address0,
        conv2_biases_ce0,
        conv2_biases_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0,
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0,
        grp_fu_739_p_din0,
        grp_fu_739_p_din1,
        grp_fu_739_p_opcode,
        grp_fu_739_p_dout0,
        grp_fu_739_p_ce,
        grp_fu_743_p_din0,
        grp_fu_743_p_din1,
        grp_fu_743_p_dout0,
        grp_fu_743_p_ce,
        grp_fu_747_p_din0,
        grp_fu_747_p_din1,
        grp_fu_747_p_opcode,
        grp_fu_747_p_dout0,
        grp_fu_747_p_ce
);

parameter    ap_ST_fsm_state1 = 87'd1;
parameter    ap_ST_fsm_state2 = 87'd2;
parameter    ap_ST_fsm_state3 = 87'd4;
parameter    ap_ST_fsm_state4 = 87'd8;
parameter    ap_ST_fsm_state5 = 87'd16;
parameter    ap_ST_fsm_state6 = 87'd32;
parameter    ap_ST_fsm_state7 = 87'd64;
parameter    ap_ST_fsm_state8 = 87'd128;
parameter    ap_ST_fsm_state9 = 87'd256;
parameter    ap_ST_fsm_state10 = 87'd512;
parameter    ap_ST_fsm_state11 = 87'd1024;
parameter    ap_ST_fsm_state12 = 87'd2048;
parameter    ap_ST_fsm_state13 = 87'd4096;
parameter    ap_ST_fsm_state14 = 87'd8192;
parameter    ap_ST_fsm_state15 = 87'd16384;
parameter    ap_ST_fsm_state16 = 87'd32768;
parameter    ap_ST_fsm_state17 = 87'd65536;
parameter    ap_ST_fsm_state18 = 87'd131072;
parameter    ap_ST_fsm_state19 = 87'd262144;
parameter    ap_ST_fsm_state20 = 87'd524288;
parameter    ap_ST_fsm_state21 = 87'd1048576;
parameter    ap_ST_fsm_state22 = 87'd2097152;
parameter    ap_ST_fsm_state23 = 87'd4194304;
parameter    ap_ST_fsm_state24 = 87'd8388608;
parameter    ap_ST_fsm_state25 = 87'd16777216;
parameter    ap_ST_fsm_state26 = 87'd33554432;
parameter    ap_ST_fsm_state27 = 87'd67108864;
parameter    ap_ST_fsm_state28 = 87'd134217728;
parameter    ap_ST_fsm_state29 = 87'd268435456;
parameter    ap_ST_fsm_state30 = 87'd536870912;
parameter    ap_ST_fsm_state31 = 87'd1073741824;
parameter    ap_ST_fsm_state32 = 87'd2147483648;
parameter    ap_ST_fsm_state33 = 87'd4294967296;
parameter    ap_ST_fsm_state34 = 87'd8589934592;
parameter    ap_ST_fsm_state35 = 87'd17179869184;
parameter    ap_ST_fsm_state36 = 87'd34359738368;
parameter    ap_ST_fsm_state37 = 87'd68719476736;
parameter    ap_ST_fsm_state38 = 87'd137438953472;
parameter    ap_ST_fsm_state39 = 87'd274877906944;
parameter    ap_ST_fsm_state40 = 87'd549755813888;
parameter    ap_ST_fsm_state41 = 87'd1099511627776;
parameter    ap_ST_fsm_state42 = 87'd2199023255552;
parameter    ap_ST_fsm_state43 = 87'd4398046511104;
parameter    ap_ST_fsm_state44 = 87'd8796093022208;
parameter    ap_ST_fsm_state45 = 87'd17592186044416;
parameter    ap_ST_fsm_state46 = 87'd35184372088832;
parameter    ap_ST_fsm_state47 = 87'd70368744177664;
parameter    ap_ST_fsm_state48 = 87'd140737488355328;
parameter    ap_ST_fsm_state49 = 87'd281474976710656;
parameter    ap_ST_fsm_state50 = 87'd562949953421312;
parameter    ap_ST_fsm_state51 = 87'd1125899906842624;
parameter    ap_ST_fsm_state52 = 87'd2251799813685248;
parameter    ap_ST_fsm_state53 = 87'd4503599627370496;
parameter    ap_ST_fsm_state54 = 87'd9007199254740992;
parameter    ap_ST_fsm_state55 = 87'd18014398509481984;
parameter    ap_ST_fsm_state56 = 87'd36028797018963968;
parameter    ap_ST_fsm_state57 = 87'd72057594037927936;
parameter    ap_ST_fsm_state58 = 87'd144115188075855872;
parameter    ap_ST_fsm_state59 = 87'd288230376151711744;
parameter    ap_ST_fsm_state60 = 87'd576460752303423488;
parameter    ap_ST_fsm_state61 = 87'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 87'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 87'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 87'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 87'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 87'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 87'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 87'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 87'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 87'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 87'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 87'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 87'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 87'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 87'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 87'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 87'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 87'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 87'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 87'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 87'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 87'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 87'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 87'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 87'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 87'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 87'd77371252455336267181195264;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] conv2_weights_address0;
output   conv2_weights_ce0;
input  [31:0] conv2_weights_q0;
output  [4:0] conv2_biases_address0;
output   conv2_biases_ce0;
input  [31:0] conv2_biases_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0;
output  [18:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0;
output  [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0;
output   srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0;
output  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0;
input  [31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0;
output  [31:0] grp_fu_739_p_din0;
output  [31:0] grp_fu_739_p_din1;
output  [1:0] grp_fu_739_p_opcode;
input  [31:0] grp_fu_739_p_dout0;
output   grp_fu_739_p_ce;
output  [31:0] grp_fu_743_p_din0;
output  [31:0] grp_fu_743_p_din1;
input  [31:0] grp_fu_743_p_dout0;
output   grp_fu_743_p_ce;
output  [31:0] grp_fu_747_p_din0;
output  [31:0] grp_fu_747_p_din1;
output  [4:0] grp_fu_747_p_opcode;
input  [0:0] grp_fu_747_p_dout0;
output   grp_fu_747_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] conv2_weights_address0;
reg conv2_weights_ce0;
reg conv2_biases_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0;
reg[17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0;
reg srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0;
reg[31:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0;

(* fsm_encoding = "none" *) reg   [86:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] reg_1159;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state61;
wire   [31:0] input_fm_buffer_1_q0;
reg   [31:0] reg_1163;
reg   [31:0] reg_1168;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state64;
reg   [31:0] reg_1173;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state83;
wire   [7:0] add_ln44_fu_1203_p2;
reg   [7:0] add_ln44_reg_2539;
wire    ap_CS_fsm_state2;
wire   [1:0] add_ln32_fu_1215_p2;
reg   [1:0] add_ln32_reg_2547;
wire   [17:0] empty_77_fu_1232_p2;
wire    ap_CS_fsm_state3;
wire   [11:0] add_ln48_3_fu_1247_p2;
reg   [11:0] add_ln48_3_reg_2567;
wire    ap_CS_fsm_state5;
wire   [10:0] tmp_20_fu_1253_p3;
reg   [10:0] tmp_20_reg_2572;
wire   [5:0] add_ln48_fu_1267_p2;
reg   [5:0] add_ln48_reg_2580;
wire   [12:0] ty_cast28_fu_1273_p1;
reg   [12:0] ty_cast28_reg_2585;
wire    ap_CS_fsm_state6;
wire   [17:0] mul_ln50_fu_1291_p2;
reg   [17:0] mul_ln50_reg_2590;
wire   [6:0] add_ln50_fu_1303_p2;
reg   [6:0] add_ln50_reg_2598;
wire   [18:0] tx_7_cast29_fu_1309_p1;
reg   [18:0] tx_7_cast29_reg_2603;
wire    ap_CS_fsm_state7;
reg   [17:0] output_fm_buffer_addr_3_reg_2608;
wire   [6:0] add_ln51_fu_1333_p2;
reg   [6:0] add_ln51_reg_2616;
wire   [31:0] output_fm_buffer_q0;
wire    ap_CS_fsm_state8;
wire   [12:0] add_ln66_9_fu_1339_p2;
reg   [12:0] add_ln66_9_reg_2626;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire   [6:0] add_ln63_fu_1369_p2;
reg   [6:0] add_ln63_reg_2644;
wire   [31:0] bitcast_ln66_fu_1375_p1;
wire    ap_CS_fsm_state14;
wire   [11:0] add_ln131_3_fu_1380_p2;
reg   [11:0] add_ln131_3_reg_2654;
wire    ap_CS_fsm_state21;
wire   [5:0] add_ln131_fu_1396_p2;
reg   [5:0] add_ln131_reg_2662;
wire  signed [11:0] sext_ln131_fu_1424_p1;
reg  signed [11:0] sext_ln131_reg_2667;
wire   [0:0] icmp_ln131_fu_1390_p2;
reg   [2:0] trunc_ln4_reg_2672;
wire   [17:0] mul_ln132_fu_1452_p2;
reg   [17:0] mul_ln132_reg_2676;
wire    ap_CS_fsm_state22;
wire   [6:0] add_ln132_fu_1468_p2;
reg   [6:0] add_ln132_reg_2684;
wire   [17:0] sub_ln135_1_fu_1504_p2;
reg   [17:0] sub_ln135_1_reg_2689;
wire   [0:0] icmp_ln132_fu_1462_p2;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_2694;
wire    ap_CS_fsm_state23;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_65_reg_2699;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_66_reg_2704;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_67_reg_2709;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_68_reg_2714;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_69_reg_2719;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_70_reg_2724;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_71_reg_2729;
wire   [6:0] add_ln133_fu_1547_p2;
reg   [6:0] add_ln133_reg_2742;
wire   [17:0] empty_83_fu_1559_p2;
wire    ap_CS_fsm_state26;
wire   [17:0] empty_86_fu_1576_p2;
wire    ap_CS_fsm_state27;
wire   [11:0] add_ln48_4_fu_1591_p2;
reg   [11:0] add_ln48_4_reg_2763;
wire    ap_CS_fsm_state29;
wire   [10:0] tmp_22_fu_1597_p3;
reg   [10:0] tmp_22_reg_2768;
wire   [5:0] add_ln48_1_fu_1611_p2;
reg   [5:0] add_ln48_1_reg_2776;
wire   [12:0] ty_5_cast33_fu_1617_p1;
reg   [12:0] ty_5_cast33_reg_2781;
wire    ap_CS_fsm_state30;
wire   [17:0] mul_ln50_1_fu_1635_p2;
reg   [17:0] mul_ln50_1_reg_2786;
wire   [6:0] add_ln50_1_fu_1647_p2;
reg   [6:0] add_ln50_1_reg_2794;
wire   [18:0] tx_8_cast34_fu_1653_p1;
reg   [18:0] tx_8_cast34_reg_2799;
wire    ap_CS_fsm_state31;
reg   [17:0] output_fm_buffer_addr_7_reg_2804;
wire   [6:0] add_ln51_1_fu_1677_p2;
reg   [6:0] add_ln51_1_reg_2812;
wire    ap_CS_fsm_state32;
wire   [12:0] add_ln66_10_fu_1683_p2;
reg   [12:0] add_ln66_10_reg_2822;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state36;
wire   [6:0] add_ln63_1_fu_1713_p2;
reg   [6:0] add_ln63_1_reg_2840;
wire   [31:0] bitcast_ln66_1_fu_1719_p1;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state44;
wire   [11:0] add_ln131_4_fu_1724_p2;
reg   [11:0] add_ln131_4_reg_2855;
wire    ap_CS_fsm_state45;
wire   [5:0] add_ln131_1_fu_1740_p2;
reg   [5:0] add_ln131_1_reg_2863;
wire  signed [11:0] sext_ln131_1_fu_1768_p1;
reg  signed [11:0] sext_ln131_1_reg_2868;
wire   [0:0] icmp_ln131_1_fu_1734_p2;
reg   [2:0] trunc_ln131_1_reg_2873;
wire   [17:0] mul_ln132_1_fu_1796_p2;
reg   [17:0] mul_ln132_1_reg_2877;
wire    ap_CS_fsm_state46;
wire   [6:0] add_ln132_1_fu_1812_p2;
reg   [6:0] add_ln132_1_reg_2885;
wire   [17:0] sub_ln135_3_fu_1848_p2;
reg   [17:0] sub_ln135_3_reg_2890;
wire   [0:0] icmp_ln132_1_fu_1806_p2;
wire    ap_CS_fsm_state47;
wire   [6:0] add_ln133_1_fu_1878_p2;
reg   [6:0] add_ln133_1_reg_2903;
wire   [17:0] add_ln135_9_fu_1894_p2;
reg   [17:0] add_ln135_9_reg_2908;
wire   [0:0] icmp_ln133_1_fu_1872_p2;
wire   [17:0] empty_91_fu_1916_p2;
wire    ap_CS_fsm_state50;
wire   [17:0] empty_93_fu_1933_p2;
wire    ap_CS_fsm_state51;
wire   [11:0] add_ln48_5_fu_1948_p2;
reg   [11:0] add_ln48_5_reg_2929;
wire    ap_CS_fsm_state53;
wire   [10:0] tmp_24_fu_1954_p3;
reg   [10:0] tmp_24_reg_2934;
wire   [5:0] add_ln48_2_fu_1968_p2;
reg   [5:0] add_ln48_2_reg_2942;
wire   [12:0] ty_6_cast38_fu_1974_p1;
reg   [12:0] ty_6_cast38_reg_2947;
wire    ap_CS_fsm_state54;
wire   [17:0] mul_ln50_2_fu_1992_p2;
reg   [17:0] mul_ln50_2_reg_2952;
wire   [6:0] add_ln50_2_fu_2004_p2;
reg   [6:0] add_ln50_2_reg_2960;
wire   [18:0] tx_9_cast39_fu_2010_p1;
reg   [18:0] tx_9_cast39_reg_2965;
wire    ap_CS_fsm_state55;
reg   [17:0] output_fm_buffer_addr_10_reg_2970;
wire   [6:0] add_ln51_2_fu_2034_p2;
reg   [6:0] add_ln51_2_reg_2978;
wire    ap_CS_fsm_state56;
wire   [12:0] add_ln66_11_fu_2040_p2;
reg   [12:0] add_ln66_11_reg_2988;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state60;
wire   [6:0] add_ln63_2_fu_2070_p2;
reg   [6:0] add_ln63_2_reg_3006;
wire   [31:0] bitcast_ln66_2_fu_2076_p1;
wire    ap_CS_fsm_state62;
wire    ap_CS_fsm_state68;
wire   [11:0] add_ln131_5_fu_2081_p2;
reg   [11:0] add_ln131_5_reg_3021;
wire    ap_CS_fsm_state69;
wire   [5:0] add_ln131_2_fu_2097_p2;
reg   [5:0] add_ln131_2_reg_3029;
wire  signed [11:0] sext_ln131_2_fu_2125_p1;
reg  signed [11:0] sext_ln131_2_reg_3034;
wire   [0:0] icmp_ln131_2_fu_2091_p2;
reg   [2:0] trunc_ln131_2_reg_3039;
wire   [17:0] mul_ln132_2_fu_2153_p2;
reg   [17:0] mul_ln132_2_reg_3043;
wire    ap_CS_fsm_state70;
wire   [6:0] add_ln132_2_fu_2169_p2;
reg   [6:0] add_ln132_2_reg_3051;
wire   [17:0] sub_ln135_5_fu_2205_p2;
reg   [17:0] sub_ln135_5_reg_3056;
wire   [0:0] icmp_ln132_2_fu_2163_p2;
wire    ap_CS_fsm_state71;
wire   [6:0] add_ln133_2_fu_2235_p2;
reg   [6:0] add_ln133_2_reg_3069;
wire   [17:0] add_ln135_13_fu_2251_p2;
reg   [17:0] add_ln135_13_reg_3074;
wire   [0:0] icmp_ln133_2_fu_2229_p2;
wire   [17:0] empty_98_fu_2273_p2;
wire    ap_CS_fsm_state74;
wire   [1:0] trunc_ln82_fu_2300_p1;
reg   [1:0] trunc_ln82_reg_3087;
wire    ap_CS_fsm_state75;
wire   [5:0] add_ln82_fu_2310_p2;
reg   [5:0] add_ln82_reg_3096;
reg   [2:0] trunc_ln_reg_3101;
wire   [0:0] icmp_ln82_fu_2304_p2;
wire  signed [11:0] sext_ln82_fu_2346_p1;
reg  signed [11:0] sext_ln82_reg_3111;
wire    ap_CS_fsm_state76;
wire   [31:0] empty_84_fu_2350_p1;
reg   [31:0] empty_84_reg_3116;
wire   [17:0] sub_ln86_1_fu_2379_p2;
reg   [17:0] sub_ln86_1_reg_3121;
wire    ap_CS_fsm_state77;
wire   [7:0] add_ln83_fu_2391_p2;
reg   [7:0] add_ln83_reg_3129;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_72_reg_3134;
wire    ap_CS_fsm_state78;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_73_reg_3139;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_74_reg_3144;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_75_reg_3149;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_76_reg_3154;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_77_reg_3159;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_78_reg_3164;
reg   [17:0] srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_79_reg_3169;
wire   [7:0] add_ln84_fu_2428_p2;
reg   [7:0] add_ln84_reg_3177;
wire   [31:0] tmp_fu_2434_p10;
reg   [31:0] tmp_reg_3182;
wire    ap_CS_fsm_state79;
wire   [0:0] icmp_ln87_fu_2473_p2;
reg   [0:0] icmp_ln87_reg_3187;
wire    ap_CS_fsm_state85;
wire   [0:0] icmp_ln87_1_fu_2479_p2;
reg   [0:0] icmp_ln87_1_reg_3192;
wire   [0:0] and_ln87_fu_2489_p2;
wire    ap_CS_fsm_state86;
reg   [18:0] input_fm_buffer_1_address0;
reg    input_fm_buffer_1_ce0;
reg    input_fm_buffer_1_we0;
reg   [17:0] output_fm_buffer_address0;
reg    output_fm_buffer_ce0;
reg    output_fm_buffer_we0;
reg   [31:0] output_fm_buffer_d0;
wire    grp_load_buffer_tile_c2_fu_1117_ap_start;
wire    grp_load_buffer_tile_c2_fu_1117_ap_done;
wire    grp_load_buffer_tile_c2_fu_1117_ap_idle;
wire    grp_load_buffer_tile_c2_fu_1117_ap_ready;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_address0;
wire    grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_ce0;
wire    grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_we0;
wire   [31:0] grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_d0;
reg   [7:0] grp_load_buffer_tile_c2_fu_1117_tx0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
wire   [18:0] grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0;
wire    grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;
reg   [17:0] empty_reg_660;
wire   [0:0] icmp_ln32_fu_1209_p2;
wire   [0:0] exitcond894_fu_1226_p2;
reg   [5:0] nout_reg_671;
wire   [0:0] icmp_ln50_fu_1297_p2;
wire    ap_CS_fsm_state4;
reg   [11:0] phi_mul8_reg_682;
reg   [6:0] ty_reg_694;
wire   [0:0] icmp_ln51_fu_1327_p2;
wire   [0:0] icmp_ln48_fu_1261_p2;
reg   [6:0] tx_7_reg_705;
wire   [0:0] icmp_ln63_fu_1363_p2;
reg   [31:0] empty_80_reg_716;
reg   [12:0] phi_mul_reg_727;
reg   [6:0] nin_reg_738;
reg   [5:0] nout_1_reg_749;
reg   [11:0] phi_mul10_reg_760;
reg   [6:0] ty_2_reg_772;
wire   [0:0] icmp_ln133_fu_1541_p2;
reg   [6:0] tx_reg_783;
wire    ap_CS_fsm_state25;
reg   [17:0] empty_82_reg_794;
wire   [0:0] exitcond11212_fu_1553_p2;
reg   [17:0] empty_85_reg_805;
wire   [0:0] exitcond11313_fu_1570_p2;
reg   [5:0] nout_2_reg_816;
wire   [0:0] icmp_ln50_1_fu_1641_p2;
wire    ap_CS_fsm_state28;
reg   [11:0] phi_mul14_reg_827;
reg   [6:0] ty_5_reg_839;
wire   [0:0] icmp_ln51_1_fu_1671_p2;
wire   [0:0] icmp_ln48_1_fu_1605_p2;
reg   [6:0] tx_8_reg_850;
wire   [0:0] icmp_ln63_1_fu_1707_p2;
reg   [31:0] add51_127_reg_861;
reg   [12:0] phi_mul12_reg_872;
reg   [6:0] nin_2_reg_883;
reg   [5:0] nout_3_reg_894;
reg   [11:0] phi_mul16_reg_905;
reg   [6:0] ty_3_reg_917;
reg   [6:0] tx_3_reg_928;
wire    ap_CS_fsm_state49;
reg   [17:0] empty_90_reg_939;
wire   [0:0] exitcond13721_fu_1910_p2;
reg   [17:0] empty_92_reg_950;
wire   [0:0] exitcond13822_fu_1927_p2;
reg   [5:0] nout_4_reg_961;
wire   [0:0] icmp_ln50_2_fu_1998_p2;
wire    ap_CS_fsm_state52;
reg   [11:0] phi_mul20_reg_972;
reg   [6:0] ty_6_reg_984;
wire   [0:0] icmp_ln51_2_fu_2028_p2;
wire   [0:0] icmp_ln48_2_fu_1962_p2;
reg   [6:0] tx_9_reg_995;
wire   [0:0] icmp_ln63_2_fu_2064_p2;
reg   [12:0] phi_mul18_reg_1006;
reg   [6:0] nin_3_reg_1017;
reg   [31:0] add51_228_reg_1028;
reg   [5:0] nout_5_reg_1039;
reg   [11:0] phi_mul22_reg_1050;
reg   [6:0] ty_4_reg_1062;
reg   [6:0] tx_5_reg_1073;
wire    ap_CS_fsm_state73;
reg   [17:0] empty_97_reg_1084;
wire   [0:0] exitcond16230_fu_2267_p2;
reg   [7:0] yr_reg_1095;
wire   [0:0] icmp_ln84_fu_2422_p2;
reg   [7:0] xr_reg_1106;
wire   [0:0] icmp_ln83_fu_2385_p2;
wire    ap_CS_fsm_state87;
reg    grp_load_buffer_tile_c2_fu_1117_ap_start_reg;
wire   [63:0] p_cast40_fu_1238_p1;
wire   [63:0] p_cast43_fu_1322_p1;
wire   [63:0] zext_ln66_1_fu_1354_p1;
wire   [63:0] zext_ln66_3_fu_1359_p1;
wire   [63:0] zext_ln135_5_fu_1519_p1;
wire   [63:0] zext_ln135_6_fu_1536_p1;
wire   [63:0] p_cast44_fu_1565_p1;
wire   [63:0] p_cast46_fu_1582_p1;
wire   [63:0] p_cast48_fu_1666_p1;
wire   [63:0] zext_ln66_5_fu_1698_p1;
wire   [63:0] zext_ln66_7_fu_1703_p1;
wire   [63:0] zext_ln135_12_fu_1863_p1;
wire   [63:0] zext_ln135_14_fu_1899_p1;
wire    ap_CS_fsm_state48;
wire   [63:0] p_cast49_fu_1922_p1;
wire   [63:0] p_cast52_fu_1939_p1;
wire   [63:0] p_cast54_fu_2023_p1;
wire   [63:0] zext_ln66_9_fu_2055_p1;
wire   [63:0] zext_ln66_11_fu_2060_p1;
wire   [63:0] zext_ln135_20_fu_2220_p1;
wire   [63:0] zext_ln135_22_fu_2256_p1;
wire    ap_CS_fsm_state72;
wire   [63:0] p_cast55_fu_2279_p1;
wire   [63:0] zext_ln82_fu_2295_p1;
wire   [63:0] zext_ln86_4_fu_2410_p1;
reg   [7:0] phi_mul24_fu_178;
reg   [1:0] tj_fu_182;
reg   [5:0] nr_fu_194;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state84;
reg   [31:0] grp_fu_1143_p0;
reg   [31:0] grp_fu_1143_p1;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state65;
wire    ap_CS_fsm_state80;
reg   [31:0] grp_fu_1150_p0;
wire   [4:0] trunc_ln48_fu_1243_p1;
wire   [11:0] ty_cast_fu_1277_p1;
wire   [11:0] empty_78_fu_1281_p2;
wire   [11:0] mul_ln50_fu_1291_p0;
wire   [7:0] mul_ln50_fu_1291_p1;
wire   [17:0] tx_7_cast_fu_1313_p1;
wire   [17:0] empty_79_fu_1317_p2;
wire   [10:0] zext_ln66_fu_1345_p1;
wire   [10:0] add_ln66_fu_1349_p2;
wire   [18:0] grp_fu_2495_p4;
wire   [1:0] trunc_ln131_fu_1386_p1;
wire   [9:0] tmp_21_fu_1406_p3;
wire   [10:0] zext_ln135_1_fu_1414_p1;
wire   [10:0] zext_ln135_fu_1402_p1;
wire   [10:0] sub_ln135_fu_1418_p2;
wire   [11:0] zext_ln135_2_fu_1438_p1;
wire   [11:0] add_ln135_2_fu_1442_p2;
wire   [11:0] mul_ln132_fu_1452_p0;
wire   [7:0] mul_ln132_fu_1452_p1;
wire   [7:0] zext_ln132_1_fu_1458_p1;
wire   [7:0] empty_81_fu_1474_p2;
wire   [11:0] zext_ln135_3_fu_1479_p1;
wire  signed [11:0] add_ln135_3_fu_1483_p2;
wire   [9:0] trunc_ln135_fu_1492_p1;
wire   [17:0] p_shl1_fu_1496_p3;
wire  signed [17:0] sext_ln135_fu_1488_p1;
wire   [17:0] zext_ln135_4_fu_1510_p1;
wire   [17:0] add_ln135_4_fu_1514_p2;
wire   [17:0] add_ln135_5_fu_1531_p2;
wire   [4:0] trunc_ln48_1_fu_1587_p1;
wire   [11:0] ty_5_cast_fu_1621_p1;
wire   [11:0] empty_87_fu_1625_p2;
wire   [11:0] mul_ln50_1_fu_1635_p0;
wire   [7:0] mul_ln50_1_fu_1635_p1;
wire   [17:0] tx_8_cast_fu_1657_p1;
wire   [17:0] empty_88_fu_1661_p2;
wire   [10:0] zext_ln66_4_fu_1689_p1;
wire   [10:0] add_ln66_3_fu_1693_p2;
wire   [18:0] grp_fu_2504_p4;
wire   [1:0] trunc_ln131_3_fu_1730_p1;
wire   [9:0] tmp_23_fu_1750_p3;
wire   [10:0] zext_ln135_8_fu_1758_p1;
wire   [10:0] zext_ln135_7_fu_1746_p1;
wire   [10:0] sub_ln135_2_fu_1762_p2;
wire   [11:0] zext_ln135_9_fu_1782_p1;
wire   [11:0] add_ln135_6_fu_1786_p2;
wire   [11:0] mul_ln132_1_fu_1796_p0;
wire   [7:0] mul_ln132_1_fu_1796_p1;
wire   [7:0] zext_ln132_3_fu_1802_p1;
wire   [7:0] empty_89_fu_1818_p2;
wire   [11:0] zext_ln135_10_fu_1823_p1;
wire  signed [11:0] add_ln135_7_fu_1827_p2;
wire   [9:0] trunc_ln135_1_fu_1836_p1;
wire   [17:0] p_shl5_fu_1840_p3;
wire  signed [17:0] sext_ln135_1_fu_1832_p1;
wire   [17:0] zext_ln135_11_fu_1854_p1;
wire   [17:0] add_ln135_8_fu_1858_p2;
wire   [7:0] zext_ln133_fu_1868_p1;
wire   [7:0] add_ln135_fu_1884_p2;
wire   [17:0] zext_ln135_13_fu_1890_p1;
wire   [4:0] trunc_ln48_2_fu_1944_p1;
wire   [11:0] ty_6_cast_fu_1978_p1;
wire   [11:0] empty_94_fu_1982_p2;
wire   [11:0] mul_ln50_2_fu_1992_p0;
wire   [7:0] mul_ln50_2_fu_1992_p1;
wire   [17:0] tx_9_cast_fu_2014_p1;
wire   [17:0] empty_95_fu_2018_p2;
wire   [10:0] zext_ln66_8_fu_2046_p1;
wire   [10:0] add_ln66_6_fu_2050_p2;
wire   [18:0] grp_fu_2513_p4;
wire   [1:0] trunc_ln131_4_fu_2087_p1;
wire   [9:0] tmp_25_fu_2107_p3;
wire   [10:0] zext_ln135_16_fu_2115_p1;
wire   [10:0] zext_ln135_15_fu_2103_p1;
wire   [10:0] sub_ln135_4_fu_2119_p2;
wire   [11:0] zext_ln135_17_fu_2139_p1;
wire   [11:0] add_ln135_10_fu_2143_p2;
wire   [11:0] mul_ln132_2_fu_2153_p0;
wire   [7:0] mul_ln132_2_fu_2153_p1;
wire   [7:0] zext_ln132_5_fu_2159_p1;
wire   [7:0] empty_96_fu_2175_p2;
wire   [11:0] zext_ln135_18_fu_2180_p1;
wire  signed [11:0] add_ln135_11_fu_2184_p2;
wire   [9:0] trunc_ln135_2_fu_2193_p1;
wire   [17:0] p_shl7_fu_2197_p3;
wire  signed [17:0] sext_ln135_2_fu_2189_p1;
wire   [17:0] zext_ln135_19_fu_2211_p1;
wire   [17:0] add_ln135_12_fu_2215_p2;
wire   [7:0] zext_ln133_1_fu_2225_p1;
wire   [7:0] add_ln135_1_fu_2241_p2;
wire   [17:0] zext_ln135_21_fu_2247_p1;
wire   [9:0] tmp_s_fu_2329_p3;
wire   [10:0] zext_ln86_1_fu_2336_p1;
wire   [10:0] zext_ln86_fu_2326_p1;
wire   [10:0] sub_ln86_fu_2340_p2;
wire   [11:0] zext_ln86_2_fu_2354_p1;
wire  signed [11:0] add_ln86_fu_2358_p2;
wire   [9:0] trunc_ln86_fu_2367_p1;
wire   [17:0] p_shl3_fu_2371_p3;
wire  signed [17:0] sext_ln86_fu_2363_p1;
wire   [17:0] zext_ln86_3_fu_2401_p1;
wire   [17:0] add_ln86_1_fu_2405_p2;
wire   [31:0] bitcast_ln87_fu_2455_p1;
wire   [7:0] tmp_3_fu_2459_p4;
wire   [22:0] trunc_ln87_fu_2469_p1;
wire   [0:0] or_ln87_fu_2485_p2;
wire   [6:0] grp_fu_2495_p1;
wire   [6:0] grp_fu_2495_p2;
wire   [6:0] grp_fu_2495_p3;
wire    ap_CS_fsm_state11;
wire   [6:0] grp_fu_2504_p1;
wire   [6:0] grp_fu_2504_p2;
wire   [6:0] grp_fu_2504_p3;
wire    ap_CS_fsm_state35;
wire   [6:0] grp_fu_2513_p1;
wire   [6:0] grp_fu_2513_p2;
wire   [6:0] grp_fu_2513_p3;
wire    ap_CS_fsm_state59;
reg   [86:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
reg    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire   [17:0] mul_ln132_1_fu_1796_p00;
wire   [17:0] mul_ln132_2_fu_2153_p00;
wire   [17:0] mul_ln132_fu_1452_p00;
wire   [17:0] mul_ln50_1_fu_1635_p00;
wire   [17:0] mul_ln50_2_fu_1992_p00;
wire   [17:0] mul_ln50_fu_1291_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 87'd1;
#0 grp_load_buffer_tile_c2_fu_1117_ap_start_reg = 1'b0;
end

srcnn_conv2_input_fm_buffer_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 462400 ),
    .AddressWidth( 19 ))
input_fm_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_fm_buffer_1_address0),
    .ce0(input_fm_buffer_1_ce0),
    .we0(input_fm_buffer_1_we0),
    .d0(grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_d0),
    .q0(input_fm_buffer_1_q0)
);

srcnn_conv2_output_fm_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 231200 ),
    .AddressWidth( 18 ))
output_fm_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_fm_buffer_address0),
    .ce0(output_fm_buffer_ce0),
    .we0(output_fm_buffer_we0),
    .d0(output_fm_buffer_d0),
    .q0(output_fm_buffer_q0)
);

srcnn_load_buffer_tile_c2 grp_load_buffer_tile_c2_fu_1117(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_load_buffer_tile_c2_fu_1117_ap_start),
    .ap_done(grp_load_buffer_tile_c2_fu_1117_ap_done),
    .ap_idle(grp_load_buffer_tile_c2_fu_1117_ap_idle),
    .ap_ready(grp_load_buffer_tile_c2_fu_1117_ap_ready),
    .input_fm_buffer_address0(grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_address0),
    .input_fm_buffer_ce0(grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_ce0),
    .input_fm_buffer_we0(grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_we0),
    .input_fm_buffer_d0(grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_d0),
    .tx0(grp_load_buffer_tile_c2_fu_1117_tx0),
    .ty0(phi_mul24_fu_178),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_q0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_q0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_q0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_q0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_q0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_q0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_q0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0(grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0),
    .srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_q0)
);

srcnn_mul_12ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_12ns_8ns_18_1_1_U51(
    .din0(mul_ln50_fu_1291_p0),
    .din1(mul_ln50_fu_1291_p1),
    .dout(mul_ln50_fu_1291_p2)
);

srcnn_mul_12ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_12ns_8ns_18_1_1_U52(
    .din0(mul_ln132_fu_1452_p0),
    .din1(mul_ln132_fu_1452_p1),
    .dout(mul_ln132_fu_1452_p2)
);

srcnn_mul_12ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_12ns_8ns_18_1_1_U53(
    .din0(mul_ln50_1_fu_1635_p0),
    .din1(mul_ln50_1_fu_1635_p1),
    .dout(mul_ln50_1_fu_1635_p2)
);

srcnn_mul_12ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_12ns_8ns_18_1_1_U54(
    .din0(mul_ln132_1_fu_1796_p0),
    .din1(mul_ln132_1_fu_1796_p1),
    .dout(mul_ln132_1_fu_1796_p2)
);

srcnn_mul_12ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_12ns_8ns_18_1_1_U55(
    .din0(mul_ln50_2_fu_1992_p0),
    .din1(mul_ln50_2_fu_1992_p1),
    .dout(mul_ln50_2_fu_1992_p2)
);

srcnn_mul_12ns_8ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 18 ))
mul_12ns_8ns_18_1_1_U56(
    .din0(mul_ln132_2_fu_2153_p0),
    .din1(mul_ln132_2_fu_2153_p1),
    .dout(mul_ln132_2_fu_2153_p2)
);

srcnn_mux_8_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_8_3_32_1_1_U57(
    .din0(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_q0),
    .din1(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_q0),
    .din2(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_q0),
    .din3(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_q0),
    .din4(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_q0),
    .din5(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_q0),
    .din6(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_q0),
    .din7(srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_q0),
    .din8(trunc_ln_reg_3101),
    .dout(tmp_fu_2434_p10)
);

srcnn_ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .dout_WIDTH( 19 ))
ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(phi_mul_reg_727),
    .din1(grp_fu_2495_p1),
    .din2(grp_fu_2495_p2),
    .din3(grp_fu_2495_p3),
    .ce(1'b1),
    .dout(grp_fu_2495_p4)
);

srcnn_ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .dout_WIDTH( 19 ))
ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(phi_mul12_reg_872),
    .din1(grp_fu_2504_p1),
    .din2(grp_fu_2504_p2),
    .din3(grp_fu_2504_p3),
    .ce(1'b1),
    .dout(grp_fu_2504_p4)
);

srcnn_ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .dout_WIDTH( 19 ))
ama_addmuladd_13ns_7ns_7ns_7ns_19_4_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(phi_mul18_reg_1006),
    .din1(grp_fu_2513_p1),
    .din2(grp_fu_2513_p2),
    .din3(grp_fu_2513_p3),
    .ce(1'b1),
    .dout(grp_fu_2513_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_load_buffer_tile_c2_fu_1117_ap_start_reg <= 1'b0;
    end else begin
        if ((((exitcond13822_fu_1927_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state51)) | ((exitcond11313_fu_1570_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27)) | ((exitcond894_fu_1226_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
            grp_load_buffer_tile_c2_fu_1117_ap_start_reg <= 1'b1;
        end else if ((grp_load_buffer_tile_c2_fu_1117_ap_ready == 1'b1)) begin
            grp_load_buffer_tile_c2_fu_1117_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add51_127_reg_861 <= output_fm_buffer_q0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        add51_127_reg_861 <= grp_fu_739_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        add51_228_reg_1028 <= output_fm_buffer_q0;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        add51_228_reg_1028 <= grp_fu_739_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        empty_80_reg_716 <= output_fm_buffer_q0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        empty_80_reg_716 <= grp_fu_739_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_1390_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        empty_82_reg_794 <= 18'd0;
    end else if (((exitcond11212_fu_1553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
        empty_82_reg_794 <= empty_83_fu_1559_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond11212_fu_1553_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        empty_85_reg_805 <= 18'd0;
    end else if (((exitcond11313_fu_1570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
        empty_85_reg_805 <= empty_86_fu_1576_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_1_fu_1734_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
        empty_90_reg_939 <= 18'd0;
    end else if (((exitcond13721_fu_1910_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50))) begin
        empty_90_reg_939 <= empty_91_fu_1916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond13721_fu_1910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
        empty_92_reg_950 <= 18'd0;
    end else if (((exitcond13822_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
        empty_92_reg_950 <= empty_93_fu_1933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_2_fu_2091_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
        empty_97_reg_1084 <= 18'd0;
    end else if (((1'b1 == ap_CS_fsm_state74) & (exitcond16230_fu_2267_p2 == 1'd0))) begin
        empty_97_reg_1084 <= empty_98_fu_2273_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond894_fu_1226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_reg_660 <= empty_77_fu_1232_p2;
    end else if (((icmp_ln32_fu_1209_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        empty_reg_660 <= 18'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        nin_2_reg_883 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        nin_2_reg_883 <= add_ln63_1_reg_2840;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        nin_3_reg_1017 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        nin_3_reg_1017 <= add_ln63_2_reg_3006;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        nin_reg_738 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        nin_reg_738 <= add_ln63_reg_2644;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        nout_1_reg_749 <= 6'd0;
    end else if (((icmp_ln132_fu_1462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        nout_1_reg_749 <= add_ln131_reg_2662;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        nout_2_reg_816 <= 6'd0;
    end else if (((icmp_ln50_1_fu_1641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        nout_2_reg_816 <= add_ln48_1_reg_2776;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_1_fu_1605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        nout_3_reg_894 <= 6'd0;
    end else if (((icmp_ln132_1_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        nout_3_reg_894 <= add_ln131_1_reg_2863;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        nout_4_reg_961 <= 6'd0;
    end else if (((icmp_ln50_2_fu_1998_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        nout_4_reg_961 <= add_ln48_2_reg_2942;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_2_fu_1962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        nout_5_reg_1039 <= 6'd0;
    end else if (((icmp_ln132_2_fu_2163_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        nout_5_reg_1039 <= add_ln131_2_reg_3029;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        nout_reg_671 <= 6'd0;
    end else if (((icmp_ln50_fu_1297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        nout_reg_671 <= add_ln48_reg_2580;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        nr_fu_194 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_state77) & (icmp_ln83_fu_2385_p2 == 1'd1))) begin
        nr_fu_194 <= add_ln82_reg_3096;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_mul10_reg_760 <= 12'd0;
    end else if (((icmp_ln132_fu_1462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
        phi_mul10_reg_760 <= add_ln131_3_reg_2654;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        phi_mul12_reg_872 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        phi_mul12_reg_872 <= add_ln66_10_reg_2822;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
        phi_mul14_reg_827 <= 12'd0;
    end else if (((icmp_ln50_1_fu_1641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
        phi_mul14_reg_827 <= add_ln48_4_reg_2763;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_1_fu_1605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        phi_mul16_reg_905 <= 12'd0;
    end else if (((icmp_ln132_1_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        phi_mul16_reg_905 <= add_ln131_4_reg_2855;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        phi_mul18_reg_1006 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state68)) begin
        phi_mul18_reg_1006 <= add_ln66_11_reg_2988;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
        phi_mul20_reg_972 <= 12'd0;
    end else if (((icmp_ln50_2_fu_1998_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
        phi_mul20_reg_972 <= add_ln48_5_reg_2929;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_2_fu_1962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
        phi_mul22_reg_1050 <= 12'd0;
    end else if (((icmp_ln132_2_fu_2163_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        phi_mul22_reg_1050 <= add_ln131_5_reg_3021;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        phi_mul24_fu_178 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state74) & (exitcond16230_fu_2267_p2 == 1'd1))) begin
        phi_mul24_fu_178 <= add_ln44_reg_2539;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul8_reg_682 <= 12'd0;
    end else if (((icmp_ln50_fu_1297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul8_reg_682 <= add_ln48_3_reg_2567;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        phi_mul_reg_727 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        phi_mul_reg_727 <= add_ln66_9_reg_2626;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tj_fu_182 <= 2'd0;
    end else if (((1'b1 == ap_CS_fsm_state74) & (exitcond16230_fu_2267_p2 == 1'd1))) begin
        tj_fu_182 <= add_ln32_reg_2547;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_1_fu_1806_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        tx_3_reg_928 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        tx_3_reg_928 <= add_ln133_1_reg_2903;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_2_fu_2163_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        tx_5_reg_1073 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state73)) begin
        tx_5_reg_1073 <= add_ln133_2_reg_3069;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln50_fu_1297_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        tx_7_reg_705 <= 7'd0;
    end else if (((icmp_ln63_fu_1363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        tx_7_reg_705 <= add_ln51_reg_2616;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln50_1_fu_1641_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state30))) begin
        tx_8_reg_850 <= 7'd0;
    end else if (((icmp_ln63_1_fu_1707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        tx_8_reg_850 <= add_ln51_1_reg_2812;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln50_2_fu_1998_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state54))) begin
        tx_9_reg_995 <= 7'd0;
    end else if (((icmp_ln63_2_fu_2064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
        tx_9_reg_995 <= add_ln51_2_reg_2978;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_1462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        tx_reg_783 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        tx_reg_783 <= add_ln133_reg_2742;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_1390_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        ty_2_reg_772 <= 7'd0;
    end else if (((icmp_ln133_fu_1541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        ty_2_reg_772 <= add_ln132_reg_2684;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_1_fu_1734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        ty_3_reg_917 <= 7'd0;
    end else if (((icmp_ln133_1_fu_1872_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
        ty_3_reg_917 <= add_ln132_1_reg_2885;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_2_fu_2091_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state69))) begin
        ty_4_reg_1062 <= 7'd0;
    end else if (((icmp_ln133_2_fu_2229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
        ty_4_reg_1062 <= add_ln132_2_reg_3051;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_1_fu_1605_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state29))) begin
        ty_5_reg_839 <= 7'd0;
    end else if (((icmp_ln51_1_fu_1671_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        ty_5_reg_839 <= add_ln50_1_reg_2794;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_2_fu_1962_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state53))) begin
        ty_6_reg_984 <= 7'd0;
    end else if (((icmp_ln51_2_fu_2028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
        ty_6_reg_984 <= add_ln50_2_reg_2960;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_1261_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        ty_reg_694 <= 7'd0;
    end else if (((icmp_ln51_fu_1327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
        ty_reg_694 <= add_ln50_reg_2598;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state87)) begin
        xr_reg_1106 <= add_ln84_reg_3177;
    end else if (((1'b1 == ap_CS_fsm_state77) & (icmp_ln83_fu_2385_p2 == 1'd0))) begin
        xr_reg_1106 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        yr_reg_1095 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state78) & (icmp_ln84_fu_2422_p2 == 1'd1))) begin
        yr_reg_1095 <= add_ln83_reg_3129;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        add_ln131_1_reg_2863 <= add_ln131_1_fu_1740_p2;
        add_ln131_4_reg_2855 <= add_ln131_4_fu_1724_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        add_ln131_2_reg_3029 <= add_ln131_2_fu_2097_p2;
        add_ln131_5_reg_3021 <= add_ln131_5_fu_2081_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        add_ln131_3_reg_2654 <= add_ln131_3_fu_1380_p2;
        add_ln131_reg_2662 <= add_ln131_fu_1396_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        add_ln132_1_reg_2885 <= add_ln132_1_fu_1812_p2;
        mul_ln132_1_reg_2877 <= mul_ln132_1_fu_1796_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        add_ln132_2_reg_3051 <= add_ln132_2_fu_2169_p2;
        mul_ln132_2_reg_3043 <= mul_ln132_2_fu_2153_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        add_ln132_reg_2684 <= add_ln132_fu_1468_p2;
        mul_ln132_reg_2676 <= mul_ln132_fu_1452_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        add_ln133_1_reg_2903 <= add_ln133_1_fu_1878_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state71)) begin
        add_ln133_2_reg_3069 <= add_ln133_2_fu_2235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        add_ln133_reg_2742 <= add_ln133_fu_1547_p2;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_2694 <= zext_ln135_5_fu_1519_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_65_reg_2699 <= zext_ln135_5_fu_1519_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_66_reg_2704 <= zext_ln135_5_fu_1519_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_67_reg_2709 <= zext_ln135_5_fu_1519_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_68_reg_2714 <= zext_ln135_5_fu_1519_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_69_reg_2719 <= zext_ln135_5_fu_1519_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_70_reg_2724 <= zext_ln135_5_fu_1519_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_71_reg_2729 <= zext_ln135_5_fu_1519_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_2_fu_2229_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state71))) begin
        add_ln135_13_reg_3074 <= add_ln135_13_fu_2251_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_1_fu_1872_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state47))) begin
        add_ln135_9_reg_2908 <= add_ln135_9_fu_1894_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln32_reg_2547 <= add_ln32_fu_1215_p2;
        add_ln44_reg_2539 <= add_ln44_fu_1203_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln48_1_reg_2776 <= add_ln48_1_fu_1611_p2;
        add_ln48_4_reg_2763 <= add_ln48_4_fu_1591_p2;
        tmp_22_reg_2768[10 : 6] <= tmp_22_fu_1597_p3[10 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        add_ln48_2_reg_2942 <= add_ln48_2_fu_1968_p2;
        add_ln48_5_reg_2929 <= add_ln48_5_fu_1948_p2;
        tmp_24_reg_2934[10 : 6] <= tmp_24_fu_1954_p3[10 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln48_3_reg_2567 <= add_ln48_3_fu_1247_p2;
        add_ln48_reg_2580 <= add_ln48_fu_1267_p2;
        tmp_20_reg_2572[10 : 6] <= tmp_20_fu_1253_p3[10 : 6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln50_1_reg_2794 <= add_ln50_1_fu_1647_p2;
        mul_ln50_1_reg_2786 <= mul_ln50_1_fu_1635_p2;
        ty_5_cast33_reg_2781[6 : 0] <= ty_5_cast33_fu_1617_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_ln50_2_reg_2960 <= add_ln50_2_fu_2004_p2;
        mul_ln50_2_reg_2952 <= mul_ln50_2_fu_1992_p2;
        ty_6_cast38_reg_2947[6 : 0] <= ty_6_cast38_fu_1974_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln50_reg_2598 <= add_ln50_fu_1303_p2;
        mul_ln50_reg_2590 <= mul_ln50_fu_1291_p2;
        ty_cast28_reg_2585[6 : 0] <= ty_cast28_fu_1273_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln51_1_reg_2812 <= add_ln51_1_fu_1677_p2;
        output_fm_buffer_addr_7_reg_2804 <= p_cast48_fu_1666_p1;
        tx_8_cast34_reg_2799[6 : 0] <= tx_8_cast34_fu_1653_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state55)) begin
        add_ln51_2_reg_2978 <= add_ln51_2_fu_2034_p2;
        output_fm_buffer_addr_10_reg_2970 <= p_cast54_fu_2023_p1;
        tx_9_cast39_reg_2965[6 : 0] <= tx_9_cast39_fu_2010_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln51_reg_2616 <= add_ln51_fu_1333_p2;
        output_fm_buffer_addr_3_reg_2608 <= p_cast43_fu_1322_p1;
        tx_7_cast29_reg_2603[6 : 0] <= tx_7_cast29_fu_1309_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        add_ln63_1_reg_2840 <= add_ln63_1_fu_1713_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        add_ln63_2_reg_3006 <= add_ln63_2_fu_2070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln63_reg_2644 <= add_ln63_fu_1369_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        add_ln66_10_reg_2822 <= add_ln66_10_fu_1683_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        add_ln66_11_reg_2988 <= add_ln66_11_fu_2040_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add_ln66_9_reg_2626 <= add_ln66_9_fu_1339_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        add_ln82_reg_3096 <= add_ln82_fu_2310_p2;
        trunc_ln82_reg_3087 <= trunc_ln82_fu_2300_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        add_ln83_reg_3129 <= add_ln83_fu_2391_p2;
        sub_ln86_1_reg_3121 <= sub_ln86_1_fu_2379_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state78)) begin
        add_ln84_reg_3177 <= add_ln84_fu_2428_p2;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_72_reg_3134 <= zext_ln86_4_fu_2410_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_73_reg_3139 <= zext_ln86_4_fu_2410_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_74_reg_3144 <= zext_ln86_4_fu_2410_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_75_reg_3149 <= zext_ln86_4_fu_2410_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_76_reg_3154 <= zext_ln86_4_fu_2410_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_77_reg_3159 <= zext_ln86_4_fu_2410_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_78_reg_3164 <= zext_ln86_4_fu_2410_p1;
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_79_reg_3169 <= zext_ln86_4_fu_2410_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        empty_84_reg_3116 <= empty_84_fu_2350_p1;
        sext_ln82_reg_3111 <= sext_ln82_fu_2346_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state85)) begin
        icmp_ln87_1_reg_3192 <= icmp_ln87_1_fu_2479_p2;
        icmp_ln87_reg_3187 <= icmp_ln87_fu_2473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state13))) begin
        reg_1159 <= conv2_weights_q0;
        reg_1163 <= input_fm_buffer_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_1168 <= grp_fu_743_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_1173 <= grp_fu_739_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_1_fu_1734_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45))) begin
        sext_ln131_1_reg_2868 <= sext_ln131_1_fu_1768_p1;
        trunc_ln131_1_reg_2873 <= {{nout_3_reg_894[4:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_2_fu_2091_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state69))) begin
        sext_ln131_2_reg_3034 <= sext_ln131_2_fu_2125_p1;
        trunc_ln131_2_reg_3039 <= {{nout_5_reg_1039[4:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln131_fu_1390_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        sext_ln131_reg_2667 <= sext_ln131_fu_1424_p1;
        trunc_ln4_reg_2672 <= {{nout_1_reg_749[4:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_1462_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        sub_ln135_1_reg_2689 <= sub_ln135_1_fu_1504_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_1_fu_1806_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state46))) begin
        sub_ln135_3_reg_2890 <= sub_ln135_3_fu_1848_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_2_fu_2163_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state70))) begin
        sub_ln135_5_reg_3056 <= sub_ln135_5_fu_2205_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state79)) begin
        tmp_reg_3182 <= tmp_fu_2434_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln82_fu_2304_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state75))) begin
        trunc_ln_reg_3101 <= {{nr_fu_194[4:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

always @ (*) begin
    if ((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b0)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

always @ (*) begin
    if ((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

always @ (*) begin
    if ((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b0)) begin
        ap_ST_fsm_state52_blk = 1'b1;
    end else begin
        ap_ST_fsm_state52_blk = 1'b0;
    end
end

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln82_fu_2304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln82_fu_2304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state75)) begin
        conv2_biases_ce0 = 1'b1;
    end else begin
        conv2_biases_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        conv2_weights_address0 = zext_ln66_9_fu_2055_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        conv2_weights_address0 = zext_ln66_5_fu_1698_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        conv2_weights_address0 = zext_ln66_1_fu_1354_p1;
    end else begin
        conv2_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state12))) begin
        conv2_weights_ce0 = 1'b1;
    end else begin
        conv2_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1143_p0 = tmp_reg_3182;
    end else if ((1'b1 == ap_CS_fsm_state65)) begin
        grp_fu_1143_p0 = add51_228_reg_1028;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        grp_fu_1143_p0 = add51_127_reg_861;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_fu_1143_p0 = empty_80_reg_716;
    end else begin
        grp_fu_1143_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        grp_fu_1143_p1 = empty_84_reg_3116;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_1143_p1 = reg_1168;
    end else begin
        grp_fu_1143_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        grp_fu_1150_p0 = bitcast_ln66_2_fu_2076_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_1150_p0 = bitcast_ln66_1_fu_1719_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_1150_p0 = bitcast_ln66_fu_1375_p1;
    end else begin
        grp_fu_1150_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        grp_load_buffer_tile_c2_fu_1117_tx0 = 8'd170;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        grp_load_buffer_tile_c2_fu_1117_tx0 = 8'd85;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_load_buffer_tile_c2_fu_1117_tx0 = 8'd0;
    end else begin
        grp_load_buffer_tile_c2_fu_1117_tx0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        input_fm_buffer_1_address0 = zext_ln66_11_fu_2060_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        input_fm_buffer_1_address0 = zext_ln66_7_fu_1703_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        input_fm_buffer_1_address0 = zext_ln66_3_fu_1359_p1;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        input_fm_buffer_1_address0 = grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_address0;
    end else begin
        input_fm_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state12))) begin
        input_fm_buffer_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        input_fm_buffer_1_ce0 = grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_ce0;
    end else begin
        input_fm_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        input_fm_buffer_1_we0 = grp_load_buffer_tile_c2_fu_1117_input_fm_buffer_we0;
    end else begin
        input_fm_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        output_fm_buffer_address0 = p_cast55_fu_2279_p1;
    end else if ((1'b1 == ap_CS_fsm_state71)) begin
        output_fm_buffer_address0 = zext_ln135_20_fu_2220_p1;
    end else if ((1'b1 == ap_CS_fsm_state60)) begin
        output_fm_buffer_address0 = output_fm_buffer_addr_10_reg_2970;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        output_fm_buffer_address0 = p_cast54_fu_2023_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        output_fm_buffer_address0 = p_cast52_fu_1939_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        output_fm_buffer_address0 = p_cast49_fu_1922_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        output_fm_buffer_address0 = zext_ln135_12_fu_1863_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_fm_buffer_address0 = output_fm_buffer_addr_7_reg_2804;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_fm_buffer_address0 = p_cast48_fu_1666_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        output_fm_buffer_address0 = p_cast46_fu_1582_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        output_fm_buffer_address0 = p_cast44_fu_1565_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        output_fm_buffer_address0 = zext_ln135_6_fu_1536_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_fm_buffer_address0 = output_fm_buffer_addr_3_reg_2608;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_fm_buffer_address0 = p_cast43_fu_1322_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_fm_buffer_address0 = p_cast40_fu_1238_p1;
    end else begin
        output_fm_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state71) | (1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state3))) begin
        output_fm_buffer_ce0 = 1'b1;
    end else begin
        output_fm_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        output_fm_buffer_d0 = add51_228_reg_1028;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_fm_buffer_d0 = add51_127_reg_861;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_fm_buffer_d0 = empty_80_reg_716;
    end else if (((1'b1 == ap_CS_fsm_state74) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state3))) begin
        output_fm_buffer_d0 = 32'd0;
    end else begin
        output_fm_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln63_2_fu_2064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60)) | ((exitcond13822_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51)) | ((exitcond13721_fu_1910_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state50)) | ((icmp_ln63_1_fu_1707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((exitcond11313_fu_1570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27)) | ((exitcond11212_fu_1553_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26)) | ((icmp_ln63_fu_1363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((exitcond894_fu_1226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)) | ((1'b1 == ap_CS_fsm_state74) & (exitcond16230_fu_2267_p2 == 1'd0)))) begin
        output_fm_buffer_we0 = 1'b1;
    end else begin
        output_fm_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_78_reg_3164;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_70_reg_2724;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln_reg_3101 == 3'd1) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd1) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd1) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd1) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd1) & (1'b1 == ap_CS_fsm_state86)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_77_reg_3159;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_69_reg_2719;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln_reg_3101 == 3'd7) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd7) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd7) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd7) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd7) & (1'b1 == ap_CS_fsm_state86)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_76_reg_3154;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_68_reg_2714;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd6) & (1'b1 == ap_CS_fsm_state86)) | ((trunc_ln_reg_3101 == 3'd6) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd6) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd6) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd6) & (1'b1 == ap_CS_fsm_state24)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_75_reg_3149;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_67_reg_2709;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln_reg_3101 == 3'd5) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd5) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd5) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd5) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd5) & (1'b1 == ap_CS_fsm_state86)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_74_reg_3144;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_66_reg_2704;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln_reg_3101 == 3'd4) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd4) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd4) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd4) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd4) & (1'b1 == ap_CS_fsm_state86)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_73_reg_3139;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_65_reg_2699;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln_reg_3101 == 3'd3) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd3) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd3) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd3) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd3) & (1'b1 == ap_CS_fsm_state86)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_72_reg_3134;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_64_reg_2694;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln_reg_3101 == 3'd0) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd0) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd0) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd0) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd0) & (1'b1 == ap_CS_fsm_state86)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state4))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state84))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_79_reg_3169;
    end else if ((1'b1 == ap_CS_fsm_state78)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 = zext_ln86_4_fu_2410_p1;
    end else if ((1'b1 == ap_CS_fsm_state72)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 = zext_ln135_22_fu_2256_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 = zext_ln135_14_fu_1899_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 = srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_71_reg_2729;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state86) | (1'b1 == ap_CS_fsm_state78) | (1'b1 == ap_CS_fsm_state84) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state86)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state84)) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 = reg_1173;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state72) | (1'b1 == ap_CS_fsm_state48))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 = output_fm_buffer_q0;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln_reg_3101 == 3'd2) & (1'b1 == ap_CS_fsm_state84)) | ((trunc_ln131_2_reg_3039 == 3'd2) & (1'b1 == ap_CS_fsm_state72)) | ((trunc_ln131_1_reg_2873 == 3'd2) & (1'b1 == ap_CS_fsm_state48)) | ((trunc_ln4_reg_2672 == 3'd2) & (1'b1 == ap_CS_fsm_state24)) | ((1'd1 == and_ln87_fu_2489_p2) & (trunc_ln_reg_3101 == 3'd2) & (1'b1 == ap_CS_fsm_state86)))) begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 = 1'b1;
    end else begin
        srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln32_fu_1209_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond894_fu_1226_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln48_fu_1261_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln50_fu_1297_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln51_fu_1327_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((icmp_ln63_fu_1363_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln131_fu_1390_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln132_fu_1462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln133_fu_1541_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state26 : begin
            if (((exitcond11212_fu_1553_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((exitcond11313_fu_1570_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln48_1_fu_1605_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((icmp_ln50_1_fu_1641_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state31 : begin
            if (((icmp_ln51_1_fu_1671_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln63_1_fu_1707_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state45 : begin
            if (((icmp_ln131_1_fu_1734_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((icmp_ln132_1_fu_1806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((icmp_ln133_1_fu_1872_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state50 : begin
            if (((exitcond13721_fu_1910_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            if (((exitcond13822_fu_1927_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state52 : begin
            if (((grp_load_buffer_tile_c2_fu_1117_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state52))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state53 : begin
            if (((icmp_ln48_2_fu_1962_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state53))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end
        end
        ap_ST_fsm_state54 : begin
            if (((icmp_ln50_2_fu_1998_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            if (((icmp_ln51_2_fu_2028_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state55))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((icmp_ln63_2_fu_2064_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state69 : begin
            if (((icmp_ln131_2_fu_2091_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state69))) begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end
        end
        ap_ST_fsm_state70 : begin
            if (((icmp_ln132_2_fu_2163_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
                ap_NS_fsm = ap_ST_fsm_state69;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state71;
            end
        end
        ap_ST_fsm_state71 : begin
            if (((icmp_ln133_2_fu_2229_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state71))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state72;
            end
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (exitcond16230_fu_2267_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            if (((icmp_ln82_fu_2304_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state76;
            end
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            if (((1'b1 == ap_CS_fsm_state77) & (icmp_ln83_fu_2385_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state78;
            end
        end
        ap_ST_fsm_state78 : begin
            if (((1'b1 == ap_CS_fsm_state78) & (icmp_ln84_fu_2422_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state77;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state79;
            end
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln131_1_fu_1740_p2 = (nout_3_reg_894 + 6'd1);

assign add_ln131_2_fu_2097_p2 = (nout_5_reg_1039 + 6'd1);

assign add_ln131_3_fu_1380_p2 = (phi_mul10_reg_760 + 12'd85);

assign add_ln131_4_fu_1724_p2 = (phi_mul16_reg_905 + 12'd85);

assign add_ln131_5_fu_2081_p2 = (phi_mul22_reg_1050 + 12'd85);

assign add_ln131_fu_1396_p2 = (nout_1_reg_749 + 6'd1);

assign add_ln132_1_fu_1812_p2 = (ty_3_reg_917 + 7'd1);

assign add_ln132_2_fu_2169_p2 = (ty_4_reg_1062 + 7'd1);

assign add_ln132_fu_1468_p2 = (ty_2_reg_772 + 7'd1);

assign add_ln133_1_fu_1878_p2 = (tx_3_reg_928 + 7'd1);

assign add_ln133_2_fu_2235_p2 = (tx_5_reg_1073 + 7'd1);

assign add_ln133_fu_1547_p2 = (tx_reg_783 + 7'd1);

assign add_ln135_10_fu_2143_p2 = (phi_mul22_reg_1050 + zext_ln135_17_fu_2139_p1);

assign add_ln135_11_fu_2184_p2 = ($signed(sext_ln131_2_reg_3034) + $signed(zext_ln135_18_fu_2180_p1));

assign add_ln135_12_fu_2215_p2 = (mul_ln132_2_reg_3043 + zext_ln135_19_fu_2211_p1);

assign add_ln135_13_fu_2251_p2 = (sub_ln135_5_reg_3056 + zext_ln135_21_fu_2247_p1);

assign add_ln135_1_fu_2241_p2 = ($signed(zext_ln133_1_fu_2225_p1) + $signed(8'd170));

assign add_ln135_2_fu_1442_p2 = (phi_mul10_reg_760 + zext_ln135_2_fu_1438_p1);

assign add_ln135_3_fu_1483_p2 = ($signed(sext_ln131_reg_2667) + $signed(zext_ln135_3_fu_1479_p1));

assign add_ln135_4_fu_1514_p2 = (sub_ln135_1_reg_2689 + zext_ln135_4_fu_1510_p1);

assign add_ln135_5_fu_1531_p2 = (mul_ln132_reg_2676 + zext_ln135_4_fu_1510_p1);

assign add_ln135_6_fu_1786_p2 = (phi_mul16_reg_905 + zext_ln135_9_fu_1782_p1);

assign add_ln135_7_fu_1827_p2 = ($signed(sext_ln131_1_reg_2868) + $signed(zext_ln135_10_fu_1823_p1));

assign add_ln135_8_fu_1858_p2 = (mul_ln132_1_reg_2877 + zext_ln135_11_fu_1854_p1);

assign add_ln135_9_fu_1894_p2 = (sub_ln135_3_reg_2890 + zext_ln135_13_fu_1890_p1);

assign add_ln135_fu_1884_p2 = (zext_ln133_fu_1868_p1 + 8'd85);

assign add_ln32_fu_1215_p2 = (tj_fu_182 + 2'd1);

assign add_ln44_fu_1203_p2 = (phi_mul24_fu_178 + 8'd85);

assign add_ln48_1_fu_1611_p2 = (nout_2_reg_816 + 6'd1);

assign add_ln48_2_fu_1968_p2 = (nout_4_reg_961 + 6'd1);

assign add_ln48_3_fu_1247_p2 = (phi_mul8_reg_682 + 12'd85);

assign add_ln48_4_fu_1591_p2 = (phi_mul14_reg_827 + 12'd85);

assign add_ln48_5_fu_1948_p2 = (phi_mul20_reg_972 + 12'd85);

assign add_ln48_fu_1267_p2 = (nout_reg_671 + 6'd1);

assign add_ln50_1_fu_1647_p2 = (ty_5_reg_839 + 7'd1);

assign add_ln50_2_fu_2004_p2 = (ty_6_reg_984 + 7'd1);

assign add_ln50_fu_1303_p2 = (ty_reg_694 + 7'd1);

assign add_ln51_1_fu_1677_p2 = (tx_8_reg_850 + 7'd1);

assign add_ln51_2_fu_2034_p2 = (tx_9_reg_995 + 7'd1);

assign add_ln51_fu_1333_p2 = (tx_7_reg_705 + 7'd1);

assign add_ln63_1_fu_1713_p2 = (nin_2_reg_883 + 7'd1);

assign add_ln63_2_fu_2070_p2 = (nin_3_reg_1017 + 7'd1);

assign add_ln63_fu_1369_p2 = (nin_reg_738 + 7'd1);

assign add_ln66_10_fu_1683_p2 = (phi_mul12_reg_872 + 13'd85);

assign add_ln66_11_fu_2040_p2 = (phi_mul18_reg_1006 + 13'd85);

assign add_ln66_3_fu_1693_p2 = (tmp_22_reg_2768 + zext_ln66_4_fu_1689_p1);

assign add_ln66_6_fu_2050_p2 = (tmp_24_reg_2934 + zext_ln66_8_fu_2046_p1);

assign add_ln66_9_fu_1339_p2 = (phi_mul_reg_727 + 13'd85);

assign add_ln66_fu_1349_p2 = (tmp_20_reg_2572 + zext_ln66_fu_1345_p1);

assign add_ln82_fu_2310_p2 = (nr_fu_194 + 6'd1);

assign add_ln83_fu_2391_p2 = (yr_reg_1095 + 8'd1);

assign add_ln84_fu_2428_p2 = (xr_reg_1106 + 8'd1);

assign add_ln86_1_fu_2405_p2 = (sub_ln86_1_reg_3121 + zext_ln86_3_fu_2401_p1);

assign add_ln86_fu_2358_p2 = ($signed(sext_ln82_reg_3111) + $signed(zext_ln86_2_fu_2354_p1));

assign and_ln87_fu_2489_p2 = (or_ln87_fu_2485_p2 & grp_fu_747_p_dout0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd67];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state71 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state72 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state73 = ap_CS_fsm[32'd72];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd75];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state78 = ap_CS_fsm[32'd77];

assign ap_CS_fsm_state79 = ap_CS_fsm[32'd78];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state85 = ap_CS_fsm[32'd84];

assign ap_CS_fsm_state86 = ap_CS_fsm[32'd85];

assign ap_CS_fsm_state87 = ap_CS_fsm[32'd86];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln66_1_fu_1719_p1 = reg_1159;

assign bitcast_ln66_2_fu_2076_p1 = reg_1159;

assign bitcast_ln66_fu_1375_p1 = reg_1159;

assign bitcast_ln87_fu_2455_p1 = reg_1173;

assign conv2_biases_address0 = zext_ln82_fu_2295_p1;

assign empty_77_fu_1232_p2 = (empty_reg_660 + 18'd1);

assign empty_78_fu_1281_p2 = (phi_mul8_reg_682 + ty_cast_fu_1277_p1);

assign empty_79_fu_1317_p2 = (mul_ln50_reg_2590 + tx_7_cast_fu_1313_p1);

assign empty_81_fu_1474_p2 = (zext_ln132_1_fu_1458_p1 + phi_mul24_fu_178);

assign empty_83_fu_1559_p2 = (empty_82_reg_794 + 18'd1);

assign empty_84_fu_2350_p1 = conv2_biases_q0;

assign empty_86_fu_1576_p2 = (empty_85_reg_805 + 18'd1);

assign empty_87_fu_1625_p2 = (phi_mul14_reg_827 + ty_5_cast_fu_1621_p1);

assign empty_88_fu_1661_p2 = (mul_ln50_1_reg_2786 + tx_8_cast_fu_1657_p1);

assign empty_89_fu_1818_p2 = (zext_ln132_3_fu_1802_p1 + phi_mul24_fu_178);

assign empty_91_fu_1916_p2 = (empty_90_reg_939 + 18'd1);

assign empty_93_fu_1933_p2 = (empty_92_reg_950 + 18'd1);

assign empty_94_fu_1982_p2 = (phi_mul20_reg_972 + ty_6_cast_fu_1978_p1);

assign empty_95_fu_2018_p2 = (mul_ln50_2_reg_2952 + tx_9_cast_fu_2014_p1);

assign empty_96_fu_2175_p2 = (zext_ln132_5_fu_2159_p1 + phi_mul24_fu_178);

assign empty_98_fu_2273_p2 = (empty_97_reg_1084 + 18'd1);

assign exitcond11212_fu_1553_p2 = ((empty_82_reg_794 == 18'd231200) ? 1'b1 : 1'b0);

assign exitcond11313_fu_1570_p2 = ((empty_85_reg_805 == 18'd231200) ? 1'b1 : 1'b0);

assign exitcond13721_fu_1910_p2 = ((empty_90_reg_939 == 18'd231200) ? 1'b1 : 1'b0);

assign exitcond13822_fu_1927_p2 = ((empty_92_reg_950 == 18'd231200) ? 1'b1 : 1'b0);

assign exitcond16230_fu_2267_p2 = ((empty_97_reg_1084 == 18'd231200) ? 1'b1 : 1'b0);

assign exitcond894_fu_1226_p2 = ((empty_reg_660 == 18'd231200) ? 1'b1 : 1'b0);

assign grp_fu_2495_p1 = ty_cast28_reg_2585;

assign grp_fu_2495_p2 = 19'd85;

assign grp_fu_2495_p3 = tx_7_cast29_reg_2603;

assign grp_fu_2504_p1 = ty_5_cast33_reg_2781;

assign grp_fu_2504_p2 = 19'd85;

assign grp_fu_2504_p3 = tx_8_cast34_reg_2799;

assign grp_fu_2513_p1 = ty_6_cast38_reg_2947;

assign grp_fu_2513_p2 = 19'd85;

assign grp_fu_2513_p3 = tx_9_cast39_reg_2965;

assign grp_fu_739_p_ce = 1'b1;

assign grp_fu_739_p_din0 = grp_fu_1143_p0;

assign grp_fu_739_p_din1 = grp_fu_1143_p1;

assign grp_fu_739_p_opcode = 2'd0;

assign grp_fu_743_p_ce = 1'b1;

assign grp_fu_743_p_din0 = grp_fu_1150_p0;

assign grp_fu_743_p_din1 = reg_1163;

assign grp_fu_747_p_ce = 1'b1;

assign grp_fu_747_p_din0 = reg_1173;

assign grp_fu_747_p_din1 = 32'd0;

assign grp_fu_747_p_opcode = 5'd4;

assign grp_load_buffer_tile_c2_fu_1117_ap_start = grp_load_buffer_tile_c2_fu_1117_ap_start_reg;

assign icmp_ln131_1_fu_1734_p2 = ((nout_3_reg_894 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln131_2_fu_2091_p2 = ((nout_5_reg_1039 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_1390_p2 = ((nout_1_reg_749 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln132_1_fu_1806_p2 = ((ty_3_reg_917 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln132_2_fu_2163_p2 = ((ty_4_reg_1062 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_1462_p2 = ((ty_2_reg_772 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln133_1_fu_1872_p2 = ((tx_3_reg_928 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln133_2_fu_2229_p2 = ((tx_5_reg_1073 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_1541_p2 = ((tx_reg_783 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1209_p2 = ((tj_fu_182 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln48_1_fu_1605_p2 = ((nout_2_reg_816 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln48_2_fu_1962_p2 = ((nout_4_reg_961 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_1261_p2 = ((nout_reg_671 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln50_1_fu_1641_p2 = ((ty_5_reg_839 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln50_2_fu_1998_p2 = ((ty_6_reg_984 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_1297_p2 = ((ty_reg_694 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln51_1_fu_1671_p2 = ((tx_8_reg_850 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln51_2_fu_2028_p2 = ((tx_9_reg_995 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_1327_p2 = ((tx_7_reg_705 == 7'd85) ? 1'b1 : 1'b0);

assign icmp_ln63_1_fu_1707_p2 = ((nin_2_reg_883 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln63_2_fu_2064_p2 = ((nin_3_reg_1017 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_1363_p2 = ((nin_reg_738 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln82_fu_2304_p2 = ((nr_fu_194 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_2385_p2 = ((yr_reg_1095 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_2422_p2 = ((xr_reg_1106 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln87_1_fu_2479_p2 = ((trunc_ln87_fu_2469_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_2473_p2 = ((tmp_3_fu_2459_p4 != 8'd255) ? 1'b1 : 1'b0);

assign mul_ln132_1_fu_1796_p0 = mul_ln132_1_fu_1796_p00;

assign mul_ln132_1_fu_1796_p00 = add_ln135_6_fu_1786_p2;

assign mul_ln132_1_fu_1796_p1 = 18'd85;

assign mul_ln132_2_fu_2153_p0 = mul_ln132_2_fu_2153_p00;

assign mul_ln132_2_fu_2153_p00 = add_ln135_10_fu_2143_p2;

assign mul_ln132_2_fu_2153_p1 = 18'd85;

assign mul_ln132_fu_1452_p0 = mul_ln132_fu_1452_p00;

assign mul_ln132_fu_1452_p00 = add_ln135_2_fu_1442_p2;

assign mul_ln132_fu_1452_p1 = 18'd85;

assign mul_ln50_1_fu_1635_p0 = mul_ln50_1_fu_1635_p00;

assign mul_ln50_1_fu_1635_p00 = empty_87_fu_1625_p2;

assign mul_ln50_1_fu_1635_p1 = 18'd85;

assign mul_ln50_2_fu_1992_p0 = mul_ln50_2_fu_1992_p00;

assign mul_ln50_2_fu_1992_p00 = empty_94_fu_1982_p2;

assign mul_ln50_2_fu_1992_p1 = 18'd85;

assign mul_ln50_fu_1291_p0 = mul_ln50_fu_1291_p00;

assign mul_ln50_fu_1291_p00 = empty_78_fu_1281_p2;

assign mul_ln50_fu_1291_p1 = 18'd85;

assign or_ln87_fu_2485_p2 = (icmp_ln87_reg_3187 | icmp_ln87_1_reg_3192);

assign p_cast40_fu_1238_p1 = empty_reg_660;

assign p_cast43_fu_1322_p1 = empty_79_fu_1317_p2;

assign p_cast44_fu_1565_p1 = empty_82_reg_794;

assign p_cast46_fu_1582_p1 = empty_85_reg_805;

assign p_cast48_fu_1666_p1 = empty_88_fu_1661_p2;

assign p_cast49_fu_1922_p1 = empty_90_reg_939;

assign p_cast52_fu_1939_p1 = empty_92_reg_950;

assign p_cast54_fu_2023_p1 = empty_95_fu_2018_p2;

assign p_cast55_fu_2279_p1 = empty_97_reg_1084;

assign p_shl1_fu_1496_p3 = {{trunc_ln135_fu_1492_p1}, {8'd0}};

assign p_shl3_fu_2371_p3 = {{trunc_ln86_fu_2367_p1}, {8'd0}};

assign p_shl5_fu_1840_p3 = {{trunc_ln135_1_fu_1836_p1}, {8'd0}};

assign p_shl7_fu_2197_p3 = {{trunc_ln135_2_fu_2193_p1}, {8'd0}};

assign sext_ln131_1_fu_1768_p1 = $signed(sub_ln135_2_fu_1762_p2);

assign sext_ln131_2_fu_2125_p1 = $signed(sub_ln135_4_fu_2119_p2);

assign sext_ln131_fu_1424_p1 = $signed(sub_ln135_fu_1418_p2);

assign sext_ln135_1_fu_1832_p1 = add_ln135_7_fu_1827_p2;

assign sext_ln135_2_fu_2189_p1 = add_ln135_11_fu_2184_p2;

assign sext_ln135_fu_1488_p1 = add_ln135_3_fu_1483_p2;

assign sext_ln82_fu_2346_p1 = $signed(sub_ln86_fu_2340_p2);

assign sext_ln86_fu_2363_p1 = add_ln86_fu_2358_p2;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_10_address0;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_11_address0;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_12_address0;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_13_address0;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_14_address0;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_15_address0;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_8_address0;

assign srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0 = grp_load_buffer_tile_c2_fu_1117_srcnn_float_255_255_float_1_9_9_float_float_64_1_1_f_9_address0;

assign sub_ln135_1_fu_1504_p2 = ($signed(p_shl1_fu_1496_p3) - $signed(sext_ln135_fu_1488_p1));

assign sub_ln135_2_fu_1762_p2 = (zext_ln135_8_fu_1758_p1 - zext_ln135_7_fu_1746_p1);

assign sub_ln135_3_fu_1848_p2 = ($signed(p_shl5_fu_1840_p3) - $signed(sext_ln135_1_fu_1832_p1));

assign sub_ln135_4_fu_2119_p2 = (zext_ln135_16_fu_2115_p1 - zext_ln135_15_fu_2103_p1);

assign sub_ln135_5_fu_2205_p2 = ($signed(p_shl7_fu_2197_p3) - $signed(sext_ln135_2_fu_2189_p1));

assign sub_ln135_fu_1418_p2 = (zext_ln135_1_fu_1414_p1 - zext_ln135_fu_1402_p1);

assign sub_ln86_1_fu_2379_p2 = ($signed(p_shl3_fu_2371_p3) - $signed(sext_ln86_fu_2363_p1));

assign sub_ln86_fu_2340_p2 = (zext_ln86_1_fu_2336_p1 - zext_ln86_fu_2326_p1);

assign tmp_20_fu_1253_p3 = {{trunc_ln48_fu_1243_p1}, {6'd0}};

assign tmp_21_fu_1406_p3 = {{trunc_ln131_fu_1386_p1}, {8'd0}};

assign tmp_22_fu_1597_p3 = {{trunc_ln48_1_fu_1587_p1}, {6'd0}};

assign tmp_23_fu_1750_p3 = {{trunc_ln131_3_fu_1730_p1}, {8'd0}};

assign tmp_24_fu_1954_p3 = {{trunc_ln48_2_fu_1944_p1}, {6'd0}};

assign tmp_25_fu_2107_p3 = {{trunc_ln131_4_fu_2087_p1}, {8'd0}};

assign tmp_3_fu_2459_p4 = {{bitcast_ln87_fu_2455_p1[30:23]}};

assign tmp_s_fu_2329_p3 = {{trunc_ln82_reg_3087}, {8'd0}};

assign trunc_ln131_3_fu_1730_p1 = nout_3_reg_894[1:0];

assign trunc_ln131_4_fu_2087_p1 = nout_5_reg_1039[1:0];

assign trunc_ln131_fu_1386_p1 = nout_1_reg_749[1:0];

assign trunc_ln135_1_fu_1836_p1 = add_ln135_7_fu_1827_p2[9:0];

assign trunc_ln135_2_fu_2193_p1 = add_ln135_11_fu_2184_p2[9:0];

assign trunc_ln135_fu_1492_p1 = add_ln135_3_fu_1483_p2[9:0];

assign trunc_ln48_1_fu_1587_p1 = nout_2_reg_816[4:0];

assign trunc_ln48_2_fu_1944_p1 = nout_4_reg_961[4:0];

assign trunc_ln48_fu_1243_p1 = nout_reg_671[4:0];

assign trunc_ln82_fu_2300_p1 = nr_fu_194[1:0];

assign trunc_ln86_fu_2367_p1 = add_ln86_fu_2358_p2[9:0];

assign trunc_ln87_fu_2469_p1 = bitcast_ln87_fu_2455_p1[22:0];

assign tx_7_cast29_fu_1309_p1 = tx_7_reg_705;

assign tx_7_cast_fu_1313_p1 = tx_7_reg_705;

assign tx_8_cast34_fu_1653_p1 = tx_8_reg_850;

assign tx_8_cast_fu_1657_p1 = tx_8_reg_850;

assign tx_9_cast39_fu_2010_p1 = tx_9_reg_995;

assign tx_9_cast_fu_2014_p1 = tx_9_reg_995;

assign ty_5_cast33_fu_1617_p1 = ty_5_reg_839;

assign ty_5_cast_fu_1621_p1 = ty_5_reg_839;

assign ty_6_cast38_fu_1974_p1 = ty_6_reg_984;

assign ty_6_cast_fu_1978_p1 = ty_6_reg_984;

assign ty_cast28_fu_1273_p1 = ty_reg_694;

assign ty_cast_fu_1277_p1 = ty_reg_694;

assign zext_ln132_1_fu_1458_p1 = ty_2_reg_772;

assign zext_ln132_3_fu_1802_p1 = ty_3_reg_917;

assign zext_ln132_5_fu_2159_p1 = ty_4_reg_1062;

assign zext_ln133_1_fu_2225_p1 = tx_5_reg_1073;

assign zext_ln133_fu_1868_p1 = tx_3_reg_928;

assign zext_ln135_10_fu_1823_p1 = empty_89_fu_1818_p2;

assign zext_ln135_11_fu_1854_p1 = tx_3_reg_928;

assign zext_ln135_12_fu_1863_p1 = add_ln135_8_fu_1858_p2;

assign zext_ln135_13_fu_1890_p1 = add_ln135_fu_1884_p2;

assign zext_ln135_14_fu_1899_p1 = add_ln135_9_reg_2908;

assign zext_ln135_15_fu_2103_p1 = trunc_ln131_4_fu_2087_p1;

assign zext_ln135_16_fu_2115_p1 = tmp_25_fu_2107_p3;

assign zext_ln135_17_fu_2139_p1 = ty_4_reg_1062;

assign zext_ln135_18_fu_2180_p1 = empty_96_fu_2175_p2;

assign zext_ln135_19_fu_2211_p1 = tx_5_reg_1073;

assign zext_ln135_1_fu_1414_p1 = tmp_21_fu_1406_p3;

assign zext_ln135_20_fu_2220_p1 = add_ln135_12_fu_2215_p2;

assign zext_ln135_21_fu_2247_p1 = add_ln135_1_fu_2241_p2;

assign zext_ln135_22_fu_2256_p1 = add_ln135_13_reg_3074;

assign zext_ln135_2_fu_1438_p1 = ty_2_reg_772;

assign zext_ln135_3_fu_1479_p1 = empty_81_fu_1474_p2;

assign zext_ln135_4_fu_1510_p1 = tx_reg_783;

assign zext_ln135_5_fu_1519_p1 = add_ln135_4_fu_1514_p2;

assign zext_ln135_6_fu_1536_p1 = add_ln135_5_fu_1531_p2;

assign zext_ln135_7_fu_1746_p1 = trunc_ln131_3_fu_1730_p1;

assign zext_ln135_8_fu_1758_p1 = tmp_23_fu_1750_p3;

assign zext_ln135_9_fu_1782_p1 = ty_3_reg_917;

assign zext_ln135_fu_1402_p1 = trunc_ln131_fu_1386_p1;

assign zext_ln66_11_fu_2060_p1 = grp_fu_2513_p4;

assign zext_ln66_1_fu_1354_p1 = add_ln66_fu_1349_p2;

assign zext_ln66_3_fu_1359_p1 = grp_fu_2495_p4;

assign zext_ln66_4_fu_1689_p1 = nin_2_reg_883;

assign zext_ln66_5_fu_1698_p1 = add_ln66_3_fu_1693_p2;

assign zext_ln66_7_fu_1703_p1 = grp_fu_2504_p4;

assign zext_ln66_8_fu_2046_p1 = nin_3_reg_1017;

assign zext_ln66_9_fu_2055_p1 = add_ln66_6_fu_2050_p2;

assign zext_ln66_fu_1345_p1 = nin_reg_738;

assign zext_ln82_fu_2295_p1 = nr_fu_194;

assign zext_ln86_1_fu_2336_p1 = tmp_s_fu_2329_p3;

assign zext_ln86_2_fu_2354_p1 = yr_reg_1095;

assign zext_ln86_3_fu_2401_p1 = xr_reg_1106;

assign zext_ln86_4_fu_2410_p1 = add_ln86_1_fu_2405_p2;

assign zext_ln86_fu_2326_p1 = trunc_ln82_reg_3087;

always @ (posedge ap_clk) begin
    tmp_20_reg_2572[5:0] <= 6'b000000;
    ty_cast28_reg_2585[12:7] <= 6'b000000;
    tx_7_cast29_reg_2603[18:7] <= 12'b000000000000;
    tmp_22_reg_2768[5:0] <= 6'b000000;
    ty_5_cast33_reg_2781[12:7] <= 6'b000000;
    tx_8_cast34_reg_2799[18:7] <= 12'b000000000000;
    tmp_24_reg_2934[5:0] <= 6'b000000;
    ty_6_cast38_reg_2947[12:7] <= 6'b000000;
    tx_9_cast39_reg_2965[18:7] <= 12'b000000000000;
end

endmodule //srcnn_conv2
