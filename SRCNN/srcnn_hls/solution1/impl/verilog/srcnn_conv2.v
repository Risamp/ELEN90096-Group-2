// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module srcnn_conv2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        input_ftmap,
        conv2_weights,
        conv2_biases,
        output_ftmap,
        grp_fu_597_p_din0,
        grp_fu_597_p_din1,
        grp_fu_597_p_opcode,
        grp_fu_597_p_dout0,
        grp_fu_597_p_ce,
        grp_fu_601_p_din0,
        grp_fu_601_p_din1,
        grp_fu_601_p_dout0,
        grp_fu_601_p_ce,
        grp_fu_605_p_din0,
        grp_fu_605_p_din1,
        grp_fu_605_p_opcode,
        grp_fu_605_p_dout0,
        grp_fu_605_p_ce
);

parameter    ap_ST_fsm_state1 = 63'd1;
parameter    ap_ST_fsm_state2 = 63'd2;
parameter    ap_ST_fsm_state3 = 63'd4;
parameter    ap_ST_fsm_state4 = 63'd8;
parameter    ap_ST_fsm_state5 = 63'd16;
parameter    ap_ST_fsm_state6 = 63'd32;
parameter    ap_ST_fsm_state7 = 63'd64;
parameter    ap_ST_fsm_state8 = 63'd128;
parameter    ap_ST_fsm_state9 = 63'd256;
parameter    ap_ST_fsm_state10 = 63'd512;
parameter    ap_ST_fsm_state11 = 63'd1024;
parameter    ap_ST_fsm_state12 = 63'd2048;
parameter    ap_ST_fsm_state13 = 63'd4096;
parameter    ap_ST_fsm_state14 = 63'd8192;
parameter    ap_ST_fsm_state15 = 63'd16384;
parameter    ap_ST_fsm_state16 = 63'd32768;
parameter    ap_ST_fsm_state17 = 63'd65536;
parameter    ap_ST_fsm_state18 = 63'd131072;
parameter    ap_ST_fsm_state19 = 63'd262144;
parameter    ap_ST_fsm_state20 = 63'd524288;
parameter    ap_ST_fsm_state21 = 63'd1048576;
parameter    ap_ST_fsm_state22 = 63'd2097152;
parameter    ap_ST_fsm_state23 = 63'd4194304;
parameter    ap_ST_fsm_state24 = 63'd8388608;
parameter    ap_ST_fsm_state25 = 63'd16777216;
parameter    ap_ST_fsm_state26 = 63'd33554432;
parameter    ap_ST_fsm_state27 = 63'd67108864;
parameter    ap_ST_fsm_state28 = 63'd134217728;
parameter    ap_ST_fsm_state29 = 63'd268435456;
parameter    ap_ST_fsm_state30 = 63'd536870912;
parameter    ap_ST_fsm_state31 = 63'd1073741824;
parameter    ap_ST_fsm_state32 = 63'd2147483648;
parameter    ap_ST_fsm_state33 = 63'd4294967296;
parameter    ap_ST_fsm_state34 = 63'd8589934592;
parameter    ap_ST_fsm_state35 = 63'd17179869184;
parameter    ap_ST_fsm_state36 = 63'd34359738368;
parameter    ap_ST_fsm_state37 = 63'd68719476736;
parameter    ap_ST_fsm_state38 = 63'd137438953472;
parameter    ap_ST_fsm_state39 = 63'd274877906944;
parameter    ap_ST_fsm_state40 = 63'd549755813888;
parameter    ap_ST_fsm_state41 = 63'd1099511627776;
parameter    ap_ST_fsm_state42 = 63'd2199023255552;
parameter    ap_ST_fsm_state43 = 63'd4398046511104;
parameter    ap_ST_fsm_state44 = 63'd8796093022208;
parameter    ap_ST_fsm_state45 = 63'd17592186044416;
parameter    ap_ST_fsm_state46 = 63'd35184372088832;
parameter    ap_ST_fsm_state47 = 63'd70368744177664;
parameter    ap_ST_fsm_state48 = 63'd140737488355328;
parameter    ap_ST_fsm_state49 = 63'd281474976710656;
parameter    ap_ST_fsm_state50 = 63'd562949953421312;
parameter    ap_ST_fsm_state51 = 63'd1125899906842624;
parameter    ap_ST_fsm_state52 = 63'd2251799813685248;
parameter    ap_ST_fsm_state53 = 63'd4503599627370496;
parameter    ap_ST_fsm_state54 = 63'd9007199254740992;
parameter    ap_ST_fsm_state55 = 63'd18014398509481984;
parameter    ap_ST_fsm_state56 = 63'd36028797018963968;
parameter    ap_ST_fsm_state57 = 63'd72057594037927936;
parameter    ap_ST_fsm_state58 = 63'd144115188075855872;
parameter    ap_ST_fsm_state59 = 63'd288230376151711744;
parameter    ap_ST_fsm_state60 = 63'd576460752303423488;
parameter    ap_ST_fsm_state61 = 63'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 63'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 63'd4611686018427387904;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [31:0] m_axi_gmem_WDATA;
output  [3:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [31:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] input_ftmap;
input  [63:0] conv2_weights;
input  [63:0] conv2_biases;
input  [63:0] output_ftmap;
output  [31:0] grp_fu_597_p_din0;
output  [31:0] grp_fu_597_p_din1;
output  [1:0] grp_fu_597_p_opcode;
input  [31:0] grp_fu_597_p_dout0;
output   grp_fu_597_p_ce;
output  [31:0] grp_fu_601_p_din0;
output  [31:0] grp_fu_601_p_din1;
input  [31:0] grp_fu_601_p_dout0;
output   grp_fu_601_p_ce;
output  [31:0] grp_fu_605_p_din0;
output  [31:0] grp_fu_605_p_din1;
output  [4:0] grp_fu_605_p_opcode;
input  [0:0] grp_fu_605_p_dout0;
output   grp_fu_605_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg[31:0] m_axi_gmem_ARLEN;
reg m_axi_gmem_RREADY;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [62:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [14:0] input_fm_buffer_1_address0;
reg    input_fm_buffer_1_ce0;
reg    input_fm_buffer_1_we0;
reg   [31:0] input_fm_buffer_1_d0;
wire   [31:0] input_fm_buffer_1_q0;
reg   [13:0] output_fm_buffer_address0;
reg    output_fm_buffer_ce0;
reg    output_fm_buffer_we0;
reg   [31:0] output_fm_buffer_d0;
wire   [31:0] output_fm_buffer_q0;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state38;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state47;
reg   [0:0] icmp_ln131_reg_1555;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
reg   [0:0] icmp_ln50_reg_1498;
wire    ap_CS_fsm_state30;
reg    gmem_blk_n_AW;
wire    ap_CS_fsm_state50;
reg    gmem_blk_n_W;
wire    ap_CS_fsm_state57;
reg    gmem_blk_n_B;
wire    ap_CS_fsm_state62;
reg   [63:0] gmem_addr_reg_1350;
wire   [3:0] add_ln32_fu_541_p2;
reg   [3:0] add_ln32_reg_1359;
wire    ap_CS_fsm_state2;
wire   [7:0] tmp_4_fu_547_p3;
reg   [7:0] tmp_4_reg_1364;
wire   [0:0] icmp_ln32_fu_535_p2;
wire   [3:0] add_ln33_fu_561_p2;
reg   [3:0] add_ln33_reg_1373;
wire    ap_CS_fsm_state3;
wire   [14:0] empty_91_fu_577_p2;
wire    ap_CS_fsm_state4;
wire   [4:0] zext_ln107_fu_588_p1;
reg   [4:0] zext_ln107_reg_1386;
wire   [0:0] exitcond6_fu_571_p2;
wire   [7:0] shl_ln_fu_592_p3;
reg   [7:0] shl_ln_reg_1391;
wire   [24:0] zext_ln109_fu_600_p1;
reg   [24:0] zext_ln109_reg_1396;
wire    ap_CS_fsm_state5;
wire   [23:0] add_ln109_1_fu_604_p2;
reg   [23:0] add_ln109_1_reg_1401;
wire   [11:0] add_ln118_fu_626_p2;
reg   [11:0] add_ln118_reg_1406;
wire   [6:0] add_ln109_fu_638_p2;
reg   [6:0] add_ln109_reg_1414;
wire   [14:0] add_ln118_2_fu_669_p2;
reg   [14:0] add_ln118_2_reg_1419;
wire    ap_CS_fsm_state6;
wire   [4:0] add_ln110_fu_685_p2;
reg   [4:0] add_ln110_reg_1427;
reg   [63:0] gmem_addr_8_reg_1432;
wire   [0:0] icmp_ln110_fu_679_p2;
reg   [14:0] input_fm_buffer_1_addr_1_reg_1438;
wire    ap_CS_fsm_state15;
wire   [4:0] add_ln111_fu_804_p2;
reg   [4:0] add_ln111_reg_1446;
reg   [31:0] gmem_addr_8_read_reg_1451;
wire   [10:0] empty_96_fu_830_p2;
reg   [10:0] empty_96_reg_1456;
wire    ap_CS_fsm_state18;
wire   [5:0] add_ln47_fu_842_p2;
reg   [5:0] add_ln47_reg_1464;
reg   [63:0] gmem_addr_7_reg_1469;
wire   [0:0] icmp_ln47_fu_836_p2;
wire   [11:0] ty_cast57_fu_889_p1;
reg   [11:0] ty_cast57_reg_1475;
wire    ap_CS_fsm_state19;
wire   [13:0] empty_99_fu_918_p2;
reg   [13:0] empty_99_reg_1480;
wire   [4:0] add_ln49_1_fu_930_p2;
reg   [4:0] add_ln49_1_reg_1488;
reg   [13:0] output_fm_buffer_addr_1_reg_1493;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln50_fu_950_p2;
wire   [4:0] add_ln50_fu_956_p2;
reg   [4:0] add_ln50_reg_1502;
wire   [14:0] tx_3_cast58_fu_962_p1;
reg   [14:0] tx_3_cast58_reg_1507;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire   [6:0] add_ln62_fu_1031_p2;
reg   [6:0] add_ln62_reg_1525;
reg   [31:0] gmem_addr_7_read_reg_1530;
reg   [31:0] input_fm_buffer_1_load_reg_1535;
wire   [31:0] bitcast_ln65_fu_1037_p1;
reg   [31:0] mul_reg_1545;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln131_fu_1041_p2;
wire    ap_CS_fsm_state46;
wire   [5:0] add_ln131_fu_1047_p2;
reg   [5:0] add_ln131_reg_1559;
wire   [22:0] add_ln131_2_fu_1053_p2;
reg   [22:0] add_ln131_2_reg_1564;
reg    ap_block_state47;
wire   [10:0] add_ln135_5_fu_1075_p2;
reg   [10:0] add_ln135_5_reg_1569;
wire   [31:0] empty_104_fu_1081_p1;
reg   [31:0] empty_104_reg_1574;
wire   [63:0] add_ln135_2_fu_1089_p2;
reg   [63:0] add_ln135_2_reg_1579;
wire   [13:0] add_ln135_7_fu_1119_p2;
reg   [13:0] add_ln135_7_reg_1584;
wire    ap_CS_fsm_state48;
wire   [4:0] add_ln132_fu_1135_p2;
reg   [4:0] add_ln132_reg_1592;
wire   [18:0] sub_ln135_fu_1170_p2;
reg   [18:0] sub_ln135_reg_1597;
wire   [0:0] icmp_ln132_fu_1129_p2;
wire    ap_CS_fsm_state49;
wire   [4:0] add_ln133_fu_1196_p2;
reg   [4:0] add_ln133_reg_1610;
reg   [63:0] gmem_addr_9_reg_1615;
wire   [0:0] icmp_ln133_fu_1190_p2;
reg   [31:0] output_fm_buffer_load_1_reg_1621;
reg   [31:0] add_i_reg_1626;
wire    ap_CS_fsm_state54;
wire   [31:0] select_ln136_fu_1303_p3;
reg   [31:0] select_ln136_reg_1632;
wire    ap_CS_fsm_state56;
wire   [13:0] empty_107_fu_1317_p2;
wire    ap_CS_fsm_state63;
reg   [3:0] ti_reg_314;
wire   [0:0] exitcond6017_fu_1311_p2;
reg   [14:0] empty_reg_326;
wire   [0:0] icmp_ln33_fu_555_p2;
reg   [6:0] nin_reg_337;
reg   [23:0] phi_mul_reg_348;
reg   [4:0] by_reg_359;
wire   [0:0] icmp_ln111_fu_798_p2;
wire   [0:0] icmp_ln109_fu_632_p2;
reg   [4:0] bx_reg_370;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state14;
reg   [5:0] nout_reg_381;
wire   [0:0] icmp_ln49_fu_924_p2;
reg   [4:0] ty_reg_392;
reg    ap_block_state21_io;
reg   [4:0] tx_3_reg_403;
wire   [0:0] icmp_ln62_fu_1025_p2;
reg   [6:0] nin_2_reg_415;
reg   [31:0] empty_102_reg_426;
reg   [5:0] nout_1_reg_437;
wire    ap_CS_fsm_state45;
reg   [22:0] phi_mul55_reg_449;
reg   [4:0] ty_2_reg_460;
reg   [4:0] tx_reg_471;
reg   [13:0] empty_106_reg_482;
wire   [63:0] p_cast59_fu_583_p1;
wire   [63:0] zext_ln118_5_fu_793_p1;
wire   [63:0] p_cast70_fu_945_p1;
wire   [63:0] zext_ln65_3_fu_1020_p1;
wire   [63:0] zext_ln135_9_fu_1185_p1;
wire   [63:0] p_cast71_fu_1323_p1;
wire  signed [63:0] sext_ln131_fu_517_p1;
wire  signed [63:0] sext_ln111_fu_774_p1;
wire  signed [63:0] sext_ln62_fu_879_p1;
wire  signed [63:0] sext_ln135_fu_1252_p1;
reg   [3:0] tj_fu_176;
wire   [31:0] bitcast_ln118_fu_810_p1;
wire    ap_CS_fsm_state27;
reg   [31:0] grp_fu_493_p0;
reg   [31:0] grp_fu_493_p1;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state51;
wire   [61:0] trunc_ln_fu_507_p4;
wire   [10:0] tmp_7_fu_614_p3;
wire   [11:0] zext_ln118_1_fu_622_p1;
wire   [11:0] zext_ln118_fu_610_p1;
wire   [11:0] zext_ln118_2_fu_644_p1;
wire   [11:0] add_ln118_1_fu_648_p2;
wire   [10:0] trunc_ln118_fu_657_p1;
wire   [14:0] p_shl1_fu_661_p3;
wire   [14:0] zext_ln118_3_fu_653_p1;
wire   [7:0] zext_ln110_fu_675_p1;
wire   [7:0] empty_92_fu_691_p2;
wire   [17:0] p_shl4_fu_696_p3;
wire   [9:0] p_shl5_fu_708_p3;
wire   [18:0] p_shl4_cast_fu_704_p1;
wire   [18:0] p_shl5_cast_fu_716_p1;
wire   [18:0] empty_93_fu_720_p2;
wire   [9:0] tmp_fu_730_p4;
wire  signed [24:0] p_cast10_fu_726_p1;
wire   [24:0] tmp2_fu_744_p2;
wire  signed [63:0] tmp2_cast_fu_749_p1;
wire   [63:0] tmp1_fu_753_p2;
wire   [63:0] tmp_cast_fu_740_p1;
wire   [63:0] empty_94_fu_758_p2;
wire   [61:0] trunc_ln9_fu_764_p4;
wire   [14:0] zext_ln118_4_fu_784_p1;
wire   [14:0] add_ln118_3_fu_788_p2;
wire   [9:0] tmp_8_fu_818_p3;
wire   [10:0] tmp_8_cast_fu_826_p1;
wire   [10:0] nout_cast_fu_814_p1;
wire   [4:0] trunc_ln49_fu_848_p1;
wire   [12:0] shl_ln3_fu_852_p3;
wire   [63:0] zext_ln49_fu_860_p1;
wire   [63:0] add_ln49_fu_864_p2;
wire   [61:0] trunc_ln8_fu_869_p4;
wire   [10:0] ty_cast_fu_893_p1;
wire   [10:0] empty_97_fu_897_p2;
wire   [9:0] empty_98_fu_906_p1;
wire   [13:0] p_shl6_fu_910_p3;
wire   [13:0] p_cast_fu_902_p1;
wire   [13:0] tx_3_cast_fu_936_p1;
wire   [13:0] empty_100_fu_940_p2;
wire   [10:0] tmp_1_fu_970_p3;
wire   [11:0] zext_ln65_1_fu_978_p1;
wire   [11:0] zext_ln65_fu_966_p1;
wire   [11:0] add_ln65_fu_982_p2;
wire   [11:0] add_ln65_1_fu_988_p2;
wire   [10:0] trunc_ln65_fu_997_p1;
wire   [14:0] p_shl7_fu_1001_p3;
wire   [14:0] zext_ln65_2_fu_993_p1;
wire   [14:0] add_ln65_2_fu_1009_p2;
wire   [14:0] add_ln65_3_fu_1015_p2;
wire   [9:0] tmp_s_fu_1063_p3;
wire   [10:0] zext_ln135_5_fu_1071_p1;
wire   [10:0] zext_ln135_fu_1059_p1;
wire   [63:0] zext_ln132_fu_1085_p1;
wire   [10:0] zext_ln135_6_fu_1094_p1;
wire   [10:0] add_ln135_6_fu_1098_p2;
wire   [9:0] trunc_ln135_fu_1107_p1;
wire   [13:0] p_shl_fu_1111_p3;
wire   [13:0] zext_ln135_7_fu_1103_p1;
wire   [7:0] zext_ln132_1_fu_1125_p1;
wire   [7:0] empty_105_fu_1141_p2;
wire   [17:0] shl_ln4_fu_1146_p3;
wire   [9:0] shl_ln135_1_fu_1158_p3;
wire   [18:0] zext_ln135_1_fu_1154_p1;
wire   [18:0] zext_ln135_2_fu_1166_p1;
wire   [13:0] zext_ln135_8_fu_1176_p1;
wire   [13:0] add_ln135_8_fu_1180_p2;
wire   [4:0] add_ln135_fu_1202_p2;
wire   [7:0] zext_ln135_3_fu_1207_p1;
wire   [7:0] add_ln135_1_fu_1211_p2;
wire   [9:0] shl_ln135_2_fu_1216_p3;
wire   [18:0] zext_ln135_4_fu_1224_p1;
wire   [18:0] add_ln135_4_fu_1228_p2;
wire  signed [63:0] sext_ln135_1_fu_1233_p1;
wire   [63:0] add_ln135_3_fu_1237_p2;
wire   [61:0] trunc_ln1_fu_1242_p4;
wire   [31:0] bitcast_ln135_fu_1262_p1;
wire   [7:0] tmp_5_fu_1265_p4;
wire   [22:0] trunc_ln136_fu_1275_p1;
wire   [0:0] icmp_ln136_1_fu_1285_p2;
wire   [0:0] icmp_ln136_fu_1279_p2;
wire   [0:0] or_ln136_fu_1291_p2;
wire   [0:0] and_ln136_fu_1297_p2;
reg   [62:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
reg    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
reg    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
reg    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
reg    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
reg    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
reg    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 63'd1;
end

srcnn_conv1_output_fm_buffer_1_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 18496 ),
    .AddressWidth( 15 ))
input_fm_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(input_fm_buffer_1_address0),
    .ce0(input_fm_buffer_1_ce0),
    .we0(input_fm_buffer_1_we0),
    .d0(input_fm_buffer_1_d0),
    .q0(input_fm_buffer_1_q0)
);

srcnn_conv2_output_fm_buffer_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 9248 ),
    .AddressWidth( 14 ))
output_fm_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(output_fm_buffer_address0),
    .ce0(output_fm_buffer_ce0),
    .we0(output_fm_buffer_we0),
    .d0(output_fm_buffer_d0),
    .q0(output_fm_buffer_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        bx_reg_370 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        bx_reg_370 <= add_ln111_reg_1446;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_632_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        by_reg_359 <= 5'd0;
    end else if (((icmp_ln111_fu_798_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        by_reg_359 <= add_ln110_reg_1427;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        empty_102_reg_426 <= output_fm_buffer_q0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        empty_102_reg_426 <= grp_fu_597_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state47) & (icmp_ln131_reg_1555 == 1'd1))) begin
        empty_106_reg_482 <= 14'd0;
    end else if (((exitcond6017_fu_1311_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63))) begin
        empty_106_reg_482 <= empty_107_fu_1317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        empty_reg_326 <= empty_91_fu_577_p2;
    end else if (((icmp_ln33_fu_555_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        empty_reg_326 <= 15'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        nin_2_reg_415 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        nin_2_reg_415 <= add_ln62_reg_1525;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        nin_reg_337 <= 7'd0;
    end else if (((icmp_ln110_fu_679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        nin_reg_337 <= add_ln109_reg_1414;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        nout_1_reg_437 <= 6'd0;
    end else if (((icmp_ln132_fu_1129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        nout_1_reg_437 <= add_ln131_reg_1559;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln109_fu_632_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        nout_reg_381 <= 6'd0;
    end else if (((icmp_ln49_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        nout_reg_381 <= add_ln47_reg_1464;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        phi_mul55_reg_449 <= 23'd0;
    end else if (((icmp_ln132_fu_1129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
        phi_mul55_reg_449 <= add_ln131_2_reg_1564;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_mul_reg_348 <= 24'd0;
    end else if (((icmp_ln110_fu_679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_mul_reg_348 <= add_ln109_1_reg_1401;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        ti_reg_314 <= 4'd0;
    end else if (((exitcond6017_fu_1311_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
        ti_reg_314 <= add_ln33_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        tj_fu_176 <= 4'd0;
    end else if (((icmp_ln33_fu_555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        tj_fu_176 <= add_ln32_reg_1359;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_fu_924_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        tx_3_reg_403 <= 5'd0;
    end else if (((icmp_ln62_fu_1025_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        tx_3_reg_403 <= add_ln50_reg_1502;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        tx_reg_471 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state62) & (m_axi_gmem_BVALID == 1'b1))) begin
        tx_reg_471 <= add_ln133_reg_1610;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state47) & (icmp_ln131_reg_1555 == 1'd0))) begin
        ty_2_reg_460 <= 5'd0;
    end else if (((icmp_ln133_fu_1190_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
        ty_2_reg_460 <= add_ln132_reg_1592;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        ty_reg_392 <= 5'd0;
    end else if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln50_reg_1498 == 1'd1))) begin
        ty_reg_392 <= add_ln49_1_reg_1488;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        add_i_reg_1626 <= grp_fu_597_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add_ln109_1_reg_1401 <= add_ln109_1_fu_604_p2;
        add_ln109_reg_1414 <= add_ln109_fu_638_p2;
        add_ln118_reg_1406 <= add_ln118_fu_626_p2;
        zext_ln109_reg_1396[23 : 0] <= zext_ln109_fu_600_p1[23 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add_ln110_reg_1427 <= add_ln110_fu_685_p2;
        add_ln118_2_reg_1419 <= add_ln118_2_fu_669_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln111_reg_1446 <= add_ln111_fu_804_p2;
        input_fm_buffer_1_addr_1_reg_1438 <= zext_ln118_5_fu_793_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state47))) begin
        add_ln131_2_reg_1564 <= add_ln131_2_fu_1053_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        add_ln131_reg_1559 <= add_ln131_fu_1047_p2;
        icmp_ln131_reg_1555 <= icmp_ln131_fu_1041_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        add_ln132_reg_1592 <= add_ln132_fu_1135_p2;
        add_ln135_7_reg_1584 <= add_ln135_7_fu_1119_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        add_ln133_reg_1610 <= add_ln133_fu_1196_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state47) & (icmp_ln131_reg_1555 == 1'd0))) begin
        add_ln135_2_reg_1579 <= add_ln135_2_fu_1089_p2;
        empty_104_reg_1574 <= empty_104_fu_1081_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        add_ln135_5_reg_1569 <= add_ln135_5_fu_1075_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln32_reg_1359 <= add_ln32_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln33_reg_1373 <= add_ln33_fu_561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        add_ln47_reg_1464 <= add_ln47_fu_842_p2;
        empty_96_reg_1456 <= empty_96_fu_830_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        add_ln49_1_reg_1488 <= add_ln49_1_fu_930_p2;
        empty_99_reg_1480 <= empty_99_fu_918_p2;
        ty_cast57_reg_1475[4 : 0] <= ty_cast57_fu_889_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        add_ln50_reg_1502 <= add_ln50_fu_956_p2;
        icmp_ln50_reg_1498 <= icmp_ln50_fu_950_p2;
        output_fm_buffer_addr_1_reg_1493 <= p_cast70_fu_945_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln62_reg_1525 <= add_ln62_fu_1031_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        gmem_addr_7_read_reg_1530 <= m_axi_gmem_RDATA;
        input_fm_buffer_1_load_reg_1535 <= input_fm_buffer_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
        gmem_addr_7_reg_1469 <= sext_ln62_fu_879_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        gmem_addr_8_read_reg_1451 <= m_axi_gmem_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln110_fu_679_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        gmem_addr_8_reg_1432 <= sext_ln111_fu_774_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_1190_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state49))) begin
        gmem_addr_9_reg_1615 <= sext_ln135_fu_1252_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        gmem_addr_reg_1350 <= sext_ln131_fu_517_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        mul_reg_1545 <= grp_fu_601_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        output_fm_buffer_load_1_reg_1621 <= output_fm_buffer_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        select_ln136_reg_1632 <= select_ln136_fu_1303_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond6_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        shl_ln_reg_1391[7 : 4] <= shl_ln_fu_592_p3[7 : 4];
        zext_ln107_reg_1386[3 : 0] <= zext_ln107_fu_588_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln132_fu_1129_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        sub_ln135_reg_1597[18 : 2] <= sub_ln135_fu_1170_p2[18 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln32_fu_535_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_4_reg_1364 <= tmp_4_fu_547_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        tx_3_cast58_reg_1507[4 : 0] <= tx_3_cast58_fu_962_p1[4 : 0];
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state21_io)) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state30_blk = 1'b1;
    end else begin
        ap_ST_fsm_state30_blk = 1'b0;
    end
end

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0))) begin
        ap_ST_fsm_state47_blk = 1'b1;
    end else begin
        ap_ST_fsm_state47_blk = 1'b0;
    end
end

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_AWREADY == 1'b0)) begin
        ap_ST_fsm_state50_blk = 1'b1;
    end else begin
        ap_ST_fsm_state50_blk = 1'b0;
    end
end

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_WREADY == 1'b0)) begin
        ap_ST_fsm_state57_blk = 1'b1;
    end else begin
        ap_ST_fsm_state57_blk = 1'b0;
    end
end

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_BVALID == 1'b0)) begin
        ap_ST_fsm_state62_blk = 1'b1;
    end else begin
        ap_ST_fsm_state62_blk = 1'b0;
    end
end

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln32_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state38) | ((1'b1 == ap_CS_fsm_state21) & (icmp_ln50_reg_1498 == 1'd0)))) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state62)) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state16) | ((1'b1 == ap_CS_fsm_state47) & (icmp_ln131_reg_1555 == 1'd0)))) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_493_p0 = output_fm_buffer_load_1_reg_1621;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_493_p0 = empty_102_reg_426;
    end else begin
        grp_fu_493_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        grp_fu_493_p1 = empty_104_reg_1574;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        grp_fu_493_p1 = mul_reg_1545;
    end else begin
        grp_fu_493_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_fm_buffer_1_address0 = zext_ln65_3_fu_1020_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        input_fm_buffer_1_address0 = input_fm_buffer_1_addr_1_reg_1438;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_fm_buffer_1_address0 = p_cast59_fu_583_p1;
    end else begin
        input_fm_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state4))) begin
        input_fm_buffer_1_ce0 = 1'b1;
    end else begin
        input_fm_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        input_fm_buffer_1_d0 = bitcast_ln118_fu_810_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        input_fm_buffer_1_d0 = 32'd0;
    end else begin
        input_fm_buffer_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((exitcond6_fu_571_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4)))) begin
        input_fm_buffer_1_we0 = 1'b1;
    end else begin
        input_fm_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARADDR = gmem_addr_reg_1350;
    end else if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln50_reg_1498 == 1'd0))) begin
        m_axi_gmem_ARADDR = gmem_addr_7_reg_1469;
    end else if (((1'b1 == ap_CS_fsm_state7) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARADDR = gmem_addr_8_reg_1432;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARLEN = 32'd32;
    end else if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln50_reg_1498 == 1'd0))) begin
        m_axi_gmem_ARLEN = 32'd64;
    end else if (((1'b1 == ap_CS_fsm_state7) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARLEN = 32'd17;
    end else begin
        m_axi_gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln50_reg_1498 == 1'd0)) | ((1'b1 == ap_CS_fsm_state7) & (m_axi_gmem_ARREADY == 1'b1)) | ((1'b1 == ap_CS_fsm_state38) & (m_axi_gmem_ARREADY == 1'b1)))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) & (m_axi_gmem_BVALID == 1'b1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((~((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state47) & (icmp_ln131_reg_1555 == 1'd0)) | ((1'b1 == ap_CS_fsm_state30) & (m_axi_gmem_RVALID == 1'b1)) | ((1'b1 == ap_CS_fsm_state16) & (m_axi_gmem_RVALID == 1'b1)))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) & (m_axi_gmem_WREADY == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        output_fm_buffer_address0 = p_cast71_fu_1323_p1;
    end else if ((1'b1 == ap_CS_fsm_state49)) begin
        output_fm_buffer_address0 = zext_ln135_9_fu_1185_p1;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state29))) begin
        output_fm_buffer_address0 = output_fm_buffer_addr_1_reg_1493;
    end else begin
        output_fm_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state63) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state29))) begin
        output_fm_buffer_ce0 = 1'b1;
    end else begin
        output_fm_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state63)) begin
        output_fm_buffer_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        output_fm_buffer_d0 = empty_102_reg_426;
    end else begin
        output_fm_buffer_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((exitcond6017_fu_1311_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state63)) | ((icmp_ln62_fu_1025_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29)))) begin
        output_fm_buffer_we0 = 1'b1;
    end else begin
        output_fm_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln32_fu_535_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln33_fu_555_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((exitcond6_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln109_fu_632_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln110_fu_679_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (m_axi_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((icmp_ln111_fu_798_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state18 : begin
            if (((icmp_ln47_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((icmp_ln49_fu_924_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln50_reg_1498 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((1'b0 == ap_block_state21_io) & (1'b1 == ap_CS_fsm_state21) & (icmp_ln50_reg_1498 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((icmp_ln62_fu_1025_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state30 : begin
            if (((1'b1 == ap_CS_fsm_state30) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b1 == ap_CS_fsm_state38) & (m_axi_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            if ((~((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state47) & (icmp_ln131_reg_1555 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end else if ((~((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state47) & (icmp_ln131_reg_1555 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((icmp_ln132_fu_1129_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((icmp_ln133_fu_1190_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((m_axi_gmem_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            if (((1'b1 == ap_CS_fsm_state57) & (m_axi_gmem_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((1'b1 == ap_CS_fsm_state62) & (m_axi_gmem_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        ap_ST_fsm_state63 : begin
            if (((exitcond6017_fu_1311_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state63))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state63;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_1_fu_604_p2 = (phi_mul_reg_348 + 24'd260100);

assign add_ln109_fu_638_p2 = (nin_reg_337 + 7'd1);

assign add_ln110_fu_685_p2 = (by_reg_359 + 5'd1);

assign add_ln111_fu_804_p2 = (bx_reg_370 + 5'd1);

assign add_ln118_1_fu_648_p2 = (add_ln118_reg_1406 + zext_ln118_2_fu_644_p1);

assign add_ln118_2_fu_669_p2 = (p_shl1_fu_661_p3 + zext_ln118_3_fu_653_p1);

assign add_ln118_3_fu_788_p2 = (add_ln118_2_reg_1419 + zext_ln118_4_fu_784_p1);

assign add_ln118_fu_626_p2 = (zext_ln118_1_fu_622_p1 + zext_ln118_fu_610_p1);

assign add_ln131_2_fu_1053_p2 = (phi_mul55_reg_449 + 23'd260100);

assign add_ln131_fu_1047_p2 = (nout_1_reg_437 + 6'd1);

assign add_ln132_fu_1135_p2 = (ty_2_reg_460 + 5'd1);

assign add_ln133_fu_1196_p2 = (tx_reg_471 + 5'd1);

assign add_ln135_1_fu_1211_p2 = (zext_ln135_3_fu_1207_p1 + shl_ln_reg_1391);

assign add_ln135_2_fu_1089_p2 = (zext_ln132_fu_1085_p1 + output_ftmap);

assign add_ln135_3_fu_1237_p2 = ($signed(sext_ln135_1_fu_1233_p1) + $signed(add_ln135_2_reg_1579));

assign add_ln135_4_fu_1228_p2 = (sub_ln135_reg_1597 + zext_ln135_4_fu_1224_p1);

assign add_ln135_5_fu_1075_p2 = (zext_ln135_5_fu_1071_p1 + zext_ln135_fu_1059_p1);

assign add_ln135_6_fu_1098_p2 = (add_ln135_5_reg_1569 + zext_ln135_6_fu_1094_p1);

assign add_ln135_7_fu_1119_p2 = (p_shl_fu_1111_p3 + zext_ln135_7_fu_1103_p1);

assign add_ln135_8_fu_1180_p2 = (add_ln135_7_reg_1584 + zext_ln135_8_fu_1176_p1);

assign add_ln135_fu_1202_p2 = (zext_ln107_reg_1386 + tx_reg_471);

assign add_ln32_fu_541_p2 = (tj_fu_176 + 4'd1);

assign add_ln33_fu_561_p2 = (ti_reg_314 + 4'd1);

assign add_ln47_fu_842_p2 = (nout_reg_381 + 6'd1);

assign add_ln49_1_fu_930_p2 = (ty_reg_392 + 5'd1);

assign add_ln49_fu_864_p2 = (zext_ln49_fu_860_p1 + conv2_weights);

assign add_ln50_fu_956_p2 = (tx_3_reg_403 + 5'd1);

assign add_ln62_fu_1031_p2 = (nin_2_reg_415 + 7'd1);

assign add_ln65_1_fu_988_p2 = (add_ln65_fu_982_p2 + ty_cast57_reg_1475);

assign add_ln65_2_fu_1009_p2 = (p_shl7_fu_1001_p3 + zext_ln65_2_fu_993_p1);

assign add_ln65_3_fu_1015_p2 = (add_ln65_2_fu_1009_p2 + tx_3_cast58_reg_1507);

assign add_ln65_fu_982_p2 = (zext_ln65_1_fu_978_p1 + zext_ln65_fu_966_p1);

assign and_ln136_fu_1297_p2 = (or_ln136_fu_1291_p2 & grp_fu_605_p_dout0);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state21_io = ((icmp_ln50_reg_1498 == 1'd0) & (m_axi_gmem_ARREADY == 1'b0));
end

always @ (*) begin
    ap_block_state47 = ((icmp_ln131_reg_1555 == 1'd0) & (m_axi_gmem_RVALID == 1'b0));
end

assign bitcast_ln118_fu_810_p1 = gmem_addr_8_read_reg_1451;

assign bitcast_ln135_fu_1262_p1 = add_i_reg_1626;

assign bitcast_ln65_fu_1037_p1 = gmem_addr_7_read_reg_1530;

assign empty_100_fu_940_p2 = (empty_99_reg_1480 + tx_3_cast_fu_936_p1);

assign empty_104_fu_1081_p1 = m_axi_gmem_RDATA;

assign empty_105_fu_1141_p2 = (zext_ln132_1_fu_1125_p1 + tmp_4_reg_1364);

assign empty_107_fu_1317_p2 = (empty_106_reg_482 + 14'd1);

assign empty_91_fu_577_p2 = (empty_reg_326 + 15'd1);

assign empty_92_fu_691_p2 = (zext_ln110_fu_675_p1 + tmp_4_reg_1364);

assign empty_93_fu_720_p2 = (p_shl4_cast_fu_704_p1 - p_shl5_cast_fu_716_p1);

assign empty_94_fu_758_p2 = (tmp1_fu_753_p2 + tmp_cast_fu_740_p1);

assign empty_96_fu_830_p2 = (tmp_8_cast_fu_826_p1 + nout_cast_fu_814_p1);

assign empty_97_fu_897_p2 = (empty_96_reg_1456 + ty_cast_fu_893_p1);

assign empty_98_fu_906_p1 = empty_97_fu_897_p2[9:0];

assign empty_99_fu_918_p2 = (p_shl6_fu_910_p3 + p_cast_fu_902_p1);

assign exitcond6017_fu_1311_p2 = ((empty_106_reg_482 == 14'd9248) ? 1'b1 : 1'b0);

assign exitcond6_fu_571_p2 = ((empty_reg_326 == 15'd18496) ? 1'b1 : 1'b0);

assign grp_fu_597_p_ce = 1'b1;

assign grp_fu_597_p_din0 = grp_fu_493_p0;

assign grp_fu_597_p_din1 = grp_fu_493_p1;

assign grp_fu_597_p_opcode = 2'd0;

assign grp_fu_601_p_ce = 1'b1;

assign grp_fu_601_p_din0 = bitcast_ln65_fu_1037_p1;

assign grp_fu_601_p_din1 = input_fm_buffer_1_load_reg_1535;

assign grp_fu_605_p_ce = 1'b1;

assign grp_fu_605_p_din0 = add_i_reg_1626;

assign grp_fu_605_p_din1 = 32'd0;

assign grp_fu_605_p_opcode = 5'd4;

assign icmp_ln109_fu_632_p2 = ((nin_reg_337 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln110_fu_679_p2 = ((by_reg_359 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_798_p2 = ((bx_reg_370 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln131_fu_1041_p2 = ((nout_1_reg_437 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_1129_p2 = ((ty_2_reg_460 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_1190_p2 = ((tx_reg_471 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln136_1_fu_1285_p2 = ((trunc_ln136_fu_1275_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln136_fu_1279_p2 = ((tmp_5_fu_1265_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_535_p2 = ((tj_fu_176 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_555_p2 = ((ti_reg_314 == 4'd15) ? 1'b1 : 1'b0);

assign icmp_ln47_fu_836_p2 = ((nout_reg_381 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_924_p2 = ((ty_reg_392 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_950_p2 = ((tx_3_reg_403 == 5'd17) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_1025_p2 = ((nin_2_reg_415 == 7'd64) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_AWADDR = gmem_addr_9_reg_1615;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd1;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_WDATA = select_ln136_reg_1632;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 4'd15;

assign m_axi_gmem_WUSER = 1'd0;

assign nout_cast_fu_814_p1 = nout_reg_381;

assign or_ln136_fu_1291_p2 = (icmp_ln136_fu_1279_p2 | icmp_ln136_1_fu_1285_p2);

assign p_cast10_fu_726_p1 = $signed(empty_93_fu_720_p2);

assign p_cast59_fu_583_p1 = empty_reg_326;

assign p_cast70_fu_945_p1 = empty_100_fu_940_p2;

assign p_cast71_fu_1323_p1 = empty_106_reg_482;

assign p_cast_fu_902_p1 = empty_97_fu_897_p2;

assign p_shl1_fu_661_p3 = {{trunc_ln118_fu_657_p1}, {4'd0}};

assign p_shl4_cast_fu_704_p1 = p_shl4_fu_696_p3;

assign p_shl4_fu_696_p3 = {{empty_92_fu_691_p2}, {10'd0}};

assign p_shl5_cast_fu_716_p1 = p_shl5_fu_708_p3;

assign p_shl5_fu_708_p3 = {{empty_92_fu_691_p2}, {2'd0}};

assign p_shl6_fu_910_p3 = {{empty_98_fu_906_p1}, {4'd0}};

assign p_shl7_fu_1001_p3 = {{trunc_ln65_fu_997_p1}, {4'd0}};

assign p_shl_fu_1111_p3 = {{trunc_ln135_fu_1107_p1}, {4'd0}};

assign select_ln136_fu_1303_p3 = ((and_ln136_fu_1297_p2[0:0] == 1'b1) ? 32'd0 : bitcast_ln135_fu_1262_p1);

assign sext_ln111_fu_774_p1 = $signed(trunc_ln9_fu_764_p4);

assign sext_ln131_fu_517_p1 = $signed(trunc_ln_fu_507_p4);

assign sext_ln135_1_fu_1233_p1 = $signed(add_ln135_4_fu_1228_p2);

assign sext_ln135_fu_1252_p1 = $signed(trunc_ln1_fu_1242_p4);

assign sext_ln62_fu_879_p1 = $signed(trunc_ln8_fu_869_p4);

assign shl_ln135_1_fu_1158_p3 = {{empty_105_fu_1141_p2}, {2'd0}};

assign shl_ln135_2_fu_1216_p3 = {{add_ln135_1_fu_1211_p2}, {2'd0}};

assign shl_ln3_fu_852_p3 = {{trunc_ln49_fu_848_p1}, {8'd0}};

assign shl_ln4_fu_1146_p3 = {{empty_105_fu_1141_p2}, {10'd0}};

assign shl_ln_fu_592_p3 = {{ti_reg_314}, {4'd0}};

assign sub_ln135_fu_1170_p2 = (zext_ln135_1_fu_1154_p1 - zext_ln135_2_fu_1166_p1);

assign tmp1_fu_753_p2 = ($signed(tmp2_cast_fu_749_p1) + $signed(input_ftmap));

assign tmp2_cast_fu_749_p1 = $signed(tmp2_fu_744_p2);

assign tmp2_fu_744_p2 = ($signed(zext_ln109_reg_1396) + $signed(p_cast10_fu_726_p1));

assign tmp_1_fu_970_p3 = {{nin_2_reg_415}, {4'd0}};

assign tmp_4_fu_547_p3 = {{tj_fu_176}, {tj_fu_176}};

assign tmp_5_fu_1265_p4 = {{bitcast_ln135_fu_1262_p1[30:23]}};

assign tmp_7_fu_614_p3 = {{nin_reg_337}, {4'd0}};

assign tmp_8_cast_fu_826_p1 = tmp_8_fu_818_p3;

assign tmp_8_fu_818_p3 = {{nout_reg_381}, {4'd0}};

assign tmp_cast_fu_740_p1 = tmp_fu_730_p4;

assign tmp_fu_730_p4 = {{{ti_reg_314}, {ti_reg_314}}, {2'd0}};

assign tmp_s_fu_1063_p3 = {{nout_1_reg_437}, {4'd0}};

assign trunc_ln118_fu_657_p1 = add_ln118_1_fu_648_p2[10:0];

assign trunc_ln135_fu_1107_p1 = add_ln135_6_fu_1098_p2[9:0];

assign trunc_ln136_fu_1275_p1 = bitcast_ln135_fu_1262_p1[22:0];

assign trunc_ln1_fu_1242_p4 = {{add_ln135_3_fu_1237_p2[63:2]}};

assign trunc_ln49_fu_848_p1 = nout_reg_381[4:0];

assign trunc_ln65_fu_997_p1 = add_ln65_1_fu_988_p2[10:0];

assign trunc_ln8_fu_869_p4 = {{add_ln49_fu_864_p2[63:2]}};

assign trunc_ln9_fu_764_p4 = {{empty_94_fu_758_p2[63:2]}};

assign trunc_ln_fu_507_p4 = {{conv2_biases[63:2]}};

assign tx_3_cast58_fu_962_p1 = tx_3_reg_403;

assign tx_3_cast_fu_936_p1 = tx_3_reg_403;

assign ty_cast57_fu_889_p1 = ty_reg_392;

assign ty_cast_fu_893_p1 = ty_reg_392;

assign zext_ln107_fu_588_p1 = ti_reg_314;

assign zext_ln109_fu_600_p1 = phi_mul_reg_348;

assign zext_ln110_fu_675_p1 = by_reg_359;

assign zext_ln118_1_fu_622_p1 = tmp_7_fu_614_p3;

assign zext_ln118_2_fu_644_p1 = by_reg_359;

assign zext_ln118_3_fu_653_p1 = add_ln118_1_fu_648_p2;

assign zext_ln118_4_fu_784_p1 = bx_reg_370;

assign zext_ln118_5_fu_793_p1 = add_ln118_3_fu_788_p2;

assign zext_ln118_fu_610_p1 = nin_reg_337;

assign zext_ln132_1_fu_1125_p1 = ty_2_reg_460;

assign zext_ln132_fu_1085_p1 = phi_mul55_reg_449;

assign zext_ln135_1_fu_1154_p1 = shl_ln4_fu_1146_p3;

assign zext_ln135_2_fu_1166_p1 = shl_ln135_1_fu_1158_p3;

assign zext_ln135_3_fu_1207_p1 = add_ln135_fu_1202_p2;

assign zext_ln135_4_fu_1224_p1 = shl_ln135_2_fu_1216_p3;

assign zext_ln135_5_fu_1071_p1 = tmp_s_fu_1063_p3;

assign zext_ln135_6_fu_1094_p1 = ty_2_reg_460;

assign zext_ln135_7_fu_1103_p1 = add_ln135_6_fu_1098_p2;

assign zext_ln135_8_fu_1176_p1 = tx_reg_471;

assign zext_ln135_9_fu_1185_p1 = add_ln135_8_fu_1180_p2;

assign zext_ln135_fu_1059_p1 = nout_1_reg_437;

assign zext_ln49_fu_860_p1 = shl_ln3_fu_852_p3;

assign zext_ln65_1_fu_978_p1 = tmp_1_fu_970_p3;

assign zext_ln65_2_fu_993_p1 = add_ln65_1_fu_988_p2;

assign zext_ln65_3_fu_1020_p1 = add_ln65_3_fu_1015_p2;

assign zext_ln65_fu_966_p1 = nin_2_reg_415;

always @ (posedge ap_clk) begin
    zext_ln107_reg_1386[4] <= 1'b0;
    shl_ln_reg_1391[3:0] <= 4'b0000;
    zext_ln109_reg_1396[24] <= 1'b0;
    ty_cast57_reg_1475[11:5] <= 7'b0000000;
    tx_3_cast58_reg_1507[14:5] <= 10'b0000000000;
    sub_ln135_reg_1597[1:0] <= 2'b00;
end

endmodule //srcnn_conv2
