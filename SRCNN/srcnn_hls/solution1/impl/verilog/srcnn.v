// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="srcnn_srcnn,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck26-sfvc784-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=-101724804,HLS_SYN_TPT=none,HLS_SYN_MEM=99,HLS_SYN_DSP=0,HLS_SYN_FF=39120,HLS_SYN_LUT=48235,HLS_VERSION=2023_1}" *)

module srcnn (
        ap_clk,
        ap_rst_n,
        m_axi_input_r_AWVALID,
        m_axi_input_r_AWREADY,
        m_axi_input_r_AWADDR,
        m_axi_input_r_AWID,
        m_axi_input_r_AWLEN,
        m_axi_input_r_AWSIZE,
        m_axi_input_r_AWBURST,
        m_axi_input_r_AWLOCK,
        m_axi_input_r_AWCACHE,
        m_axi_input_r_AWPROT,
        m_axi_input_r_AWQOS,
        m_axi_input_r_AWREGION,
        m_axi_input_r_AWUSER,
        m_axi_input_r_WVALID,
        m_axi_input_r_WREADY,
        m_axi_input_r_WDATA,
        m_axi_input_r_WSTRB,
        m_axi_input_r_WLAST,
        m_axi_input_r_WID,
        m_axi_input_r_WUSER,
        m_axi_input_r_ARVALID,
        m_axi_input_r_ARREADY,
        m_axi_input_r_ARADDR,
        m_axi_input_r_ARID,
        m_axi_input_r_ARLEN,
        m_axi_input_r_ARSIZE,
        m_axi_input_r_ARBURST,
        m_axi_input_r_ARLOCK,
        m_axi_input_r_ARCACHE,
        m_axi_input_r_ARPROT,
        m_axi_input_r_ARQOS,
        m_axi_input_r_ARREGION,
        m_axi_input_r_ARUSER,
        m_axi_input_r_RVALID,
        m_axi_input_r_RREADY,
        m_axi_input_r_RDATA,
        m_axi_input_r_RLAST,
        m_axi_input_r_RID,
        m_axi_input_r_RUSER,
        m_axi_input_r_RRESP,
        m_axi_input_r_BVALID,
        m_axi_input_r_BREADY,
        m_axi_input_r_BRESP,
        m_axi_input_r_BID,
        m_axi_input_r_BUSER,
        m_axi_params_AWVALID,
        m_axi_params_AWREADY,
        m_axi_params_AWADDR,
        m_axi_params_AWID,
        m_axi_params_AWLEN,
        m_axi_params_AWSIZE,
        m_axi_params_AWBURST,
        m_axi_params_AWLOCK,
        m_axi_params_AWCACHE,
        m_axi_params_AWPROT,
        m_axi_params_AWQOS,
        m_axi_params_AWREGION,
        m_axi_params_AWUSER,
        m_axi_params_WVALID,
        m_axi_params_WREADY,
        m_axi_params_WDATA,
        m_axi_params_WSTRB,
        m_axi_params_WLAST,
        m_axi_params_WID,
        m_axi_params_WUSER,
        m_axi_params_ARVALID,
        m_axi_params_ARREADY,
        m_axi_params_ARADDR,
        m_axi_params_ARID,
        m_axi_params_ARLEN,
        m_axi_params_ARSIZE,
        m_axi_params_ARBURST,
        m_axi_params_ARLOCK,
        m_axi_params_ARCACHE,
        m_axi_params_ARPROT,
        m_axi_params_ARQOS,
        m_axi_params_ARREGION,
        m_axi_params_ARUSER,
        m_axi_params_RVALID,
        m_axi_params_RREADY,
        m_axi_params_RDATA,
        m_axi_params_RLAST,
        m_axi_params_RID,
        m_axi_params_RUSER,
        m_axi_params_RRESP,
        m_axi_params_BVALID,
        m_axi_params_BREADY,
        m_axi_params_BRESP,
        m_axi_params_BID,
        m_axi_params_BUSER,
        m_axi_output_r_AWVALID,
        m_axi_output_r_AWREADY,
        m_axi_output_r_AWADDR,
        m_axi_output_r_AWID,
        m_axi_output_r_AWLEN,
        m_axi_output_r_AWSIZE,
        m_axi_output_r_AWBURST,
        m_axi_output_r_AWLOCK,
        m_axi_output_r_AWCACHE,
        m_axi_output_r_AWPROT,
        m_axi_output_r_AWQOS,
        m_axi_output_r_AWREGION,
        m_axi_output_r_AWUSER,
        m_axi_output_r_WVALID,
        m_axi_output_r_WREADY,
        m_axi_output_r_WDATA,
        m_axi_output_r_WSTRB,
        m_axi_output_r_WLAST,
        m_axi_output_r_WID,
        m_axi_output_r_WUSER,
        m_axi_output_r_ARVALID,
        m_axi_output_r_ARREADY,
        m_axi_output_r_ARADDR,
        m_axi_output_r_ARID,
        m_axi_output_r_ARLEN,
        m_axi_output_r_ARSIZE,
        m_axi_output_r_ARBURST,
        m_axi_output_r_ARLOCK,
        m_axi_output_r_ARCACHE,
        m_axi_output_r_ARPROT,
        m_axi_output_r_ARQOS,
        m_axi_output_r_ARREGION,
        m_axi_output_r_ARUSER,
        m_axi_output_r_RVALID,
        m_axi_output_r_RREADY,
        m_axi_output_r_RDATA,
        m_axi_output_r_RLAST,
        m_axi_output_r_RID,
        m_axi_output_r_RUSER,
        m_axi_output_r_RRESP,
        m_axi_output_r_BVALID,
        m_axi_output_r_BREADY,
        m_axi_output_r_BRESP,
        m_axi_output_r_BID,
        m_axi_output_r_BUSER,
        conv1_biases_address0,
        conv1_biases_ce0,
        conv1_biases_q0,
        conv2_biases_address0,
        conv2_biases_ce0,
        conv2_biases_q0,
        conv3_biases,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_state26 = 29'd33554432;
parameter    ap_ST_fsm_state27 = 29'd67108864;
parameter    ap_ST_fsm_state28 = 29'd134217728;
parameter    ap_ST_fsm_state29 = 29'd268435456;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_ADDR_WIDTH = 64;
parameter    C_M_AXI_INPUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_USER_VALUE = 0;
parameter    C_M_AXI_INPUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_ADDR_WIDTH = 64;
parameter    C_M_AXI_OUTPUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_PARAMS_ID_WIDTH = 1;
parameter    C_M_AXI_PARAMS_ADDR_WIDTH = 64;
parameter    C_M_AXI_PARAMS_DATA_WIDTH = 32;
parameter    C_M_AXI_PARAMS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_PARAMS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_PARAMS_WUSER_WIDTH = 1;
parameter    C_M_AXI_PARAMS_RUSER_WIDTH = 1;
parameter    C_M_AXI_PARAMS_BUSER_WIDTH = 1;
parameter    C_M_AXI_PARAMS_USER_VALUE = 0;
parameter    C_M_AXI_PARAMS_PROT_VALUE = 0;
parameter    C_M_AXI_PARAMS_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_INPUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUTPUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_PARAMS_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_input_r_AWVALID;
input   m_axi_input_r_AWREADY;
output  [C_M_AXI_INPUT_R_ADDR_WIDTH - 1:0] m_axi_input_r_AWADDR;
output  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_input_r_AWID;
output  [7:0] m_axi_input_r_AWLEN;
output  [2:0] m_axi_input_r_AWSIZE;
output  [1:0] m_axi_input_r_AWBURST;
output  [1:0] m_axi_input_r_AWLOCK;
output  [3:0] m_axi_input_r_AWCACHE;
output  [2:0] m_axi_input_r_AWPROT;
output  [3:0] m_axi_input_r_AWQOS;
output  [3:0] m_axi_input_r_AWREGION;
output  [C_M_AXI_INPUT_R_AWUSER_WIDTH - 1:0] m_axi_input_r_AWUSER;
output   m_axi_input_r_WVALID;
input   m_axi_input_r_WREADY;
output  [C_M_AXI_INPUT_R_DATA_WIDTH - 1:0] m_axi_input_r_WDATA;
output  [C_M_AXI_INPUT_R_WSTRB_WIDTH - 1:0] m_axi_input_r_WSTRB;
output   m_axi_input_r_WLAST;
output  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_input_r_WID;
output  [C_M_AXI_INPUT_R_WUSER_WIDTH - 1:0] m_axi_input_r_WUSER;
output   m_axi_input_r_ARVALID;
input   m_axi_input_r_ARREADY;
output  [C_M_AXI_INPUT_R_ADDR_WIDTH - 1:0] m_axi_input_r_ARADDR;
output  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_input_r_ARID;
output  [7:0] m_axi_input_r_ARLEN;
output  [2:0] m_axi_input_r_ARSIZE;
output  [1:0] m_axi_input_r_ARBURST;
output  [1:0] m_axi_input_r_ARLOCK;
output  [3:0] m_axi_input_r_ARCACHE;
output  [2:0] m_axi_input_r_ARPROT;
output  [3:0] m_axi_input_r_ARQOS;
output  [3:0] m_axi_input_r_ARREGION;
output  [C_M_AXI_INPUT_R_ARUSER_WIDTH - 1:0] m_axi_input_r_ARUSER;
input   m_axi_input_r_RVALID;
output   m_axi_input_r_RREADY;
input  [C_M_AXI_INPUT_R_DATA_WIDTH - 1:0] m_axi_input_r_RDATA;
input   m_axi_input_r_RLAST;
input  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_input_r_RID;
input  [C_M_AXI_INPUT_R_RUSER_WIDTH - 1:0] m_axi_input_r_RUSER;
input  [1:0] m_axi_input_r_RRESP;
input   m_axi_input_r_BVALID;
output   m_axi_input_r_BREADY;
input  [1:0] m_axi_input_r_BRESP;
input  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_input_r_BID;
input  [C_M_AXI_INPUT_R_BUSER_WIDTH - 1:0] m_axi_input_r_BUSER;
output   m_axi_params_AWVALID;
input   m_axi_params_AWREADY;
output  [C_M_AXI_PARAMS_ADDR_WIDTH - 1:0] m_axi_params_AWADDR;
output  [C_M_AXI_PARAMS_ID_WIDTH - 1:0] m_axi_params_AWID;
output  [7:0] m_axi_params_AWLEN;
output  [2:0] m_axi_params_AWSIZE;
output  [1:0] m_axi_params_AWBURST;
output  [1:0] m_axi_params_AWLOCK;
output  [3:0] m_axi_params_AWCACHE;
output  [2:0] m_axi_params_AWPROT;
output  [3:0] m_axi_params_AWQOS;
output  [3:0] m_axi_params_AWREGION;
output  [C_M_AXI_PARAMS_AWUSER_WIDTH - 1:0] m_axi_params_AWUSER;
output   m_axi_params_WVALID;
input   m_axi_params_WREADY;
output  [C_M_AXI_PARAMS_DATA_WIDTH - 1:0] m_axi_params_WDATA;
output  [C_M_AXI_PARAMS_WSTRB_WIDTH - 1:0] m_axi_params_WSTRB;
output   m_axi_params_WLAST;
output  [C_M_AXI_PARAMS_ID_WIDTH - 1:0] m_axi_params_WID;
output  [C_M_AXI_PARAMS_WUSER_WIDTH - 1:0] m_axi_params_WUSER;
output   m_axi_params_ARVALID;
input   m_axi_params_ARREADY;
output  [C_M_AXI_PARAMS_ADDR_WIDTH - 1:0] m_axi_params_ARADDR;
output  [C_M_AXI_PARAMS_ID_WIDTH - 1:0] m_axi_params_ARID;
output  [7:0] m_axi_params_ARLEN;
output  [2:0] m_axi_params_ARSIZE;
output  [1:0] m_axi_params_ARBURST;
output  [1:0] m_axi_params_ARLOCK;
output  [3:0] m_axi_params_ARCACHE;
output  [2:0] m_axi_params_ARPROT;
output  [3:0] m_axi_params_ARQOS;
output  [3:0] m_axi_params_ARREGION;
output  [C_M_AXI_PARAMS_ARUSER_WIDTH - 1:0] m_axi_params_ARUSER;
input   m_axi_params_RVALID;
output   m_axi_params_RREADY;
input  [C_M_AXI_PARAMS_DATA_WIDTH - 1:0] m_axi_params_RDATA;
input   m_axi_params_RLAST;
input  [C_M_AXI_PARAMS_ID_WIDTH - 1:0] m_axi_params_RID;
input  [C_M_AXI_PARAMS_RUSER_WIDTH - 1:0] m_axi_params_RUSER;
input  [1:0] m_axi_params_RRESP;
input   m_axi_params_BVALID;
output   m_axi_params_BREADY;
input  [1:0] m_axi_params_BRESP;
input  [C_M_AXI_PARAMS_ID_WIDTH - 1:0] m_axi_params_BID;
input  [C_M_AXI_PARAMS_BUSER_WIDTH - 1:0] m_axi_params_BUSER;
output   m_axi_output_r_AWVALID;
input   m_axi_output_r_AWREADY;
output  [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_output_r_AWADDR;
output  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_AWID;
output  [7:0] m_axi_output_r_AWLEN;
output  [2:0] m_axi_output_r_AWSIZE;
output  [1:0] m_axi_output_r_AWBURST;
output  [1:0] m_axi_output_r_AWLOCK;
output  [3:0] m_axi_output_r_AWCACHE;
output  [2:0] m_axi_output_r_AWPROT;
output  [3:0] m_axi_output_r_AWQOS;
output  [3:0] m_axi_output_r_AWREGION;
output  [C_M_AXI_OUTPUT_R_AWUSER_WIDTH - 1:0] m_axi_output_r_AWUSER;
output   m_axi_output_r_WVALID;
input   m_axi_output_r_WREADY;
output  [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_output_r_WDATA;
output  [C_M_AXI_OUTPUT_R_WSTRB_WIDTH - 1:0] m_axi_output_r_WSTRB;
output   m_axi_output_r_WLAST;
output  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_WID;
output  [C_M_AXI_OUTPUT_R_WUSER_WIDTH - 1:0] m_axi_output_r_WUSER;
output   m_axi_output_r_ARVALID;
input   m_axi_output_r_ARREADY;
output  [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_output_r_ARADDR;
output  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_ARID;
output  [7:0] m_axi_output_r_ARLEN;
output  [2:0] m_axi_output_r_ARSIZE;
output  [1:0] m_axi_output_r_ARBURST;
output  [1:0] m_axi_output_r_ARLOCK;
output  [3:0] m_axi_output_r_ARCACHE;
output  [2:0] m_axi_output_r_ARPROT;
output  [3:0] m_axi_output_r_ARQOS;
output  [3:0] m_axi_output_r_ARREGION;
output  [C_M_AXI_OUTPUT_R_ARUSER_WIDTH - 1:0] m_axi_output_r_ARUSER;
input   m_axi_output_r_RVALID;
output   m_axi_output_r_RREADY;
input  [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_output_r_RDATA;
input   m_axi_output_r_RLAST;
input  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_RID;
input  [C_M_AXI_OUTPUT_R_RUSER_WIDTH - 1:0] m_axi_output_r_RUSER;
input  [1:0] m_axi_output_r_RRESP;
input   m_axi_output_r_BVALID;
output   m_axi_output_r_BREADY;
input  [1:0] m_axi_output_r_BRESP;
input  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_output_r_BID;
input  [C_M_AXI_OUTPUT_R_BUSER_WIDTH - 1:0] m_axi_output_r_BUSER;
output  [5:0] conv1_biases_address0;
output   conv1_biases_ce0;
input  [31:0] conv1_biases_q0;
output  [4:0] conv2_biases_address0;
output   conv2_biases_ce0;
input  [31:0] conv2_biases_q0;
input  [31:0] conv3_biases;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] input_ftmap;
wire   [63:0] conv1_weights;
wire   [63:0] conv1_output_ftmap;
wire   [63:0] conv2_weights;
wire   [63:0] conv2_output_ftmap;
wire   [63:0] conv3_weights;
wire   [63:0] output_ftmap;
reg    output_r_blk_n_AW;
wire    ap_CS_fsm_state2;
reg    output_r_blk_n_B;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state23;
reg   [63:0] output_ftmap_read_reg_364;
reg   [63:0] conv3_weights_read_reg_369;
reg   [63:0] conv2_output_ftmap_read_reg_374;
reg   [63:0] conv2_weights_read_reg_380;
reg   [63:0] conv1_output_ftmap_read_reg_385;
reg   [63:0] conv1_weights_read_reg_391;
reg   [63:0] input_ftmap_read_reg_396;
reg   [61:0] trunc_ln_reg_401;
reg   [61:0] trunc_ln1_reg_407;
reg   [61:0] trunc_ln2_reg_413;
wire   [31:0] empty_57_fu_359_p1;
reg   [31:0] empty_57_reg_434;
wire    ap_CS_fsm_state28;
wire    grp_srcnn_Pipeline_1_fu_210_ap_start;
wire    grp_srcnn_Pipeline_1_fu_210_ap_done;
wire    grp_srcnn_Pipeline_1_fu_210_ap_idle;
wire    grp_srcnn_Pipeline_1_fu_210_ap_ready;
wire    grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWVALID;
wire   [63:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWADDR;
wire   [0:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWID;
wire   [31:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWLEN;
wire   [2:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWSIZE;
wire   [1:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWBURST;
wire   [1:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWLOCK;
wire   [3:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWCACHE;
wire   [2:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWPROT;
wire   [3:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWQOS;
wire   [3:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWREGION;
wire   [0:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWUSER;
wire    grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WVALID;
wire   [31:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WDATA;
wire   [3:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WSTRB;
wire    grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WLAST;
wire   [0:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WID;
wire   [0:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WUSER;
wire    grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARVALID;
wire   [63:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARADDR;
wire   [0:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARID;
wire   [31:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARLEN;
wire   [2:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARSIZE;
wire   [1:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARBURST;
wire   [1:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARLOCK;
wire   [3:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARCACHE;
wire   [2:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARPROT;
wire   [3:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARQOS;
wire   [3:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARREGION;
wire   [0:0] grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARUSER;
wire    grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_RREADY;
wire    grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_BREADY;
wire    grp_srcnn_Pipeline_2_fu_217_ap_start;
wire    grp_srcnn_Pipeline_2_fu_217_ap_done;
wire    grp_srcnn_Pipeline_2_fu_217_ap_idle;
wire    grp_srcnn_Pipeline_2_fu_217_ap_ready;
wire    grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWVALID;
wire   [63:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWADDR;
wire   [0:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWID;
wire   [31:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWLEN;
wire   [2:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWSIZE;
wire   [1:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWBURST;
wire   [1:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWLOCK;
wire   [3:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWCACHE;
wire   [2:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWPROT;
wire   [3:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWQOS;
wire   [3:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWREGION;
wire   [0:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWUSER;
wire    grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WVALID;
wire   [31:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WDATA;
wire   [3:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WSTRB;
wire    grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WLAST;
wire   [0:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WID;
wire   [0:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WUSER;
wire    grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARVALID;
wire   [63:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARADDR;
wire   [0:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARID;
wire   [31:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARLEN;
wire   [2:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARSIZE;
wire   [1:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARBURST;
wire   [1:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARLOCK;
wire   [3:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARCACHE;
wire   [2:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARPROT;
wire   [3:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARQOS;
wire   [3:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARREGION;
wire   [0:0] grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARUSER;
wire    grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_RREADY;
wire    grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_BREADY;
wire    grp_srcnn_Pipeline_3_fu_224_ap_start;
wire    grp_srcnn_Pipeline_3_fu_224_ap_done;
wire    grp_srcnn_Pipeline_3_fu_224_ap_idle;
wire    grp_srcnn_Pipeline_3_fu_224_ap_ready;
wire    grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWVALID;
wire   [63:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWADDR;
wire   [0:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWID;
wire   [31:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWLEN;
wire   [2:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWSIZE;
wire   [1:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWBURST;
wire   [1:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWLOCK;
wire   [3:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWCACHE;
wire   [2:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWPROT;
wire   [3:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWQOS;
wire   [3:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWREGION;
wire   [0:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWUSER;
wire    grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WVALID;
wire   [31:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WDATA;
wire   [3:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WSTRB;
wire    grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WLAST;
wire   [0:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WID;
wire   [0:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WUSER;
wire    grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARVALID;
wire   [63:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARADDR;
wire   [0:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARID;
wire   [31:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARLEN;
wire   [2:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARSIZE;
wire   [1:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARBURST;
wire   [1:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARLOCK;
wire   [3:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARCACHE;
wire   [2:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARPROT;
wire   [3:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARQOS;
wire   [3:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARREGION;
wire   [0:0] grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARUSER;
wire    grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_RREADY;
wire    grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_BREADY;
wire    grp_conv1_fu_231_ap_start;
wire    grp_conv1_fu_231_ap_done;
wire    grp_conv1_fu_231_ap_idle;
wire    grp_conv1_fu_231_ap_ready;
wire    grp_conv1_fu_231_m_axi_input_r_AWVALID;
wire   [63:0] grp_conv1_fu_231_m_axi_input_r_AWADDR;
wire   [0:0] grp_conv1_fu_231_m_axi_input_r_AWID;
wire   [31:0] grp_conv1_fu_231_m_axi_input_r_AWLEN;
wire   [2:0] grp_conv1_fu_231_m_axi_input_r_AWSIZE;
wire   [1:0] grp_conv1_fu_231_m_axi_input_r_AWBURST;
wire   [1:0] grp_conv1_fu_231_m_axi_input_r_AWLOCK;
wire   [3:0] grp_conv1_fu_231_m_axi_input_r_AWCACHE;
wire   [2:0] grp_conv1_fu_231_m_axi_input_r_AWPROT;
wire   [3:0] grp_conv1_fu_231_m_axi_input_r_AWQOS;
wire   [3:0] grp_conv1_fu_231_m_axi_input_r_AWREGION;
wire   [0:0] grp_conv1_fu_231_m_axi_input_r_AWUSER;
wire    grp_conv1_fu_231_m_axi_input_r_WVALID;
wire   [31:0] grp_conv1_fu_231_m_axi_input_r_WDATA;
wire   [3:0] grp_conv1_fu_231_m_axi_input_r_WSTRB;
wire    grp_conv1_fu_231_m_axi_input_r_WLAST;
wire   [0:0] grp_conv1_fu_231_m_axi_input_r_WID;
wire   [0:0] grp_conv1_fu_231_m_axi_input_r_WUSER;
wire    grp_conv1_fu_231_m_axi_input_r_ARVALID;
wire   [63:0] grp_conv1_fu_231_m_axi_input_r_ARADDR;
wire   [0:0] grp_conv1_fu_231_m_axi_input_r_ARID;
wire   [31:0] grp_conv1_fu_231_m_axi_input_r_ARLEN;
wire   [2:0] grp_conv1_fu_231_m_axi_input_r_ARSIZE;
wire   [1:0] grp_conv1_fu_231_m_axi_input_r_ARBURST;
wire   [1:0] grp_conv1_fu_231_m_axi_input_r_ARLOCK;
wire   [3:0] grp_conv1_fu_231_m_axi_input_r_ARCACHE;
wire   [2:0] grp_conv1_fu_231_m_axi_input_r_ARPROT;
wire   [3:0] grp_conv1_fu_231_m_axi_input_r_ARQOS;
wire   [3:0] grp_conv1_fu_231_m_axi_input_r_ARREGION;
wire   [0:0] grp_conv1_fu_231_m_axi_input_r_ARUSER;
wire    grp_conv1_fu_231_m_axi_input_r_RREADY;
wire    grp_conv1_fu_231_m_axi_input_r_BREADY;
wire    grp_conv1_fu_231_m_axi_params_AWVALID;
wire   [63:0] grp_conv1_fu_231_m_axi_params_AWADDR;
wire   [0:0] grp_conv1_fu_231_m_axi_params_AWID;
wire   [31:0] grp_conv1_fu_231_m_axi_params_AWLEN;
wire   [2:0] grp_conv1_fu_231_m_axi_params_AWSIZE;
wire   [1:0] grp_conv1_fu_231_m_axi_params_AWBURST;
wire   [1:0] grp_conv1_fu_231_m_axi_params_AWLOCK;
wire   [3:0] grp_conv1_fu_231_m_axi_params_AWCACHE;
wire   [2:0] grp_conv1_fu_231_m_axi_params_AWPROT;
wire   [3:0] grp_conv1_fu_231_m_axi_params_AWQOS;
wire   [3:0] grp_conv1_fu_231_m_axi_params_AWREGION;
wire   [0:0] grp_conv1_fu_231_m_axi_params_AWUSER;
wire    grp_conv1_fu_231_m_axi_params_WVALID;
wire   [31:0] grp_conv1_fu_231_m_axi_params_WDATA;
wire   [3:0] grp_conv1_fu_231_m_axi_params_WSTRB;
wire    grp_conv1_fu_231_m_axi_params_WLAST;
wire   [0:0] grp_conv1_fu_231_m_axi_params_WID;
wire   [0:0] grp_conv1_fu_231_m_axi_params_WUSER;
wire    grp_conv1_fu_231_m_axi_params_ARVALID;
wire   [63:0] grp_conv1_fu_231_m_axi_params_ARADDR;
wire   [0:0] grp_conv1_fu_231_m_axi_params_ARID;
wire   [31:0] grp_conv1_fu_231_m_axi_params_ARLEN;
wire   [2:0] grp_conv1_fu_231_m_axi_params_ARSIZE;
wire   [1:0] grp_conv1_fu_231_m_axi_params_ARBURST;
wire   [1:0] grp_conv1_fu_231_m_axi_params_ARLOCK;
wire   [3:0] grp_conv1_fu_231_m_axi_params_ARCACHE;
wire   [2:0] grp_conv1_fu_231_m_axi_params_ARPROT;
wire   [3:0] grp_conv1_fu_231_m_axi_params_ARQOS;
wire   [3:0] grp_conv1_fu_231_m_axi_params_ARREGION;
wire   [0:0] grp_conv1_fu_231_m_axi_params_ARUSER;
wire    grp_conv1_fu_231_m_axi_params_RREADY;
wire    grp_conv1_fu_231_m_axi_params_BREADY;
wire   [5:0] grp_conv1_fu_231_conv1_biases_address0;
wire    grp_conv1_fu_231_conv1_biases_ce0;
wire    grp_conv1_fu_231_m_axi_output_r_AWVALID;
wire   [63:0] grp_conv1_fu_231_m_axi_output_r_AWADDR;
wire   [0:0] grp_conv1_fu_231_m_axi_output_r_AWID;
wire   [31:0] grp_conv1_fu_231_m_axi_output_r_AWLEN;
wire   [2:0] grp_conv1_fu_231_m_axi_output_r_AWSIZE;
wire   [1:0] grp_conv1_fu_231_m_axi_output_r_AWBURST;
wire   [1:0] grp_conv1_fu_231_m_axi_output_r_AWLOCK;
wire   [3:0] grp_conv1_fu_231_m_axi_output_r_AWCACHE;
wire   [2:0] grp_conv1_fu_231_m_axi_output_r_AWPROT;
wire   [3:0] grp_conv1_fu_231_m_axi_output_r_AWQOS;
wire   [3:0] grp_conv1_fu_231_m_axi_output_r_AWREGION;
wire   [0:0] grp_conv1_fu_231_m_axi_output_r_AWUSER;
wire    grp_conv1_fu_231_m_axi_output_r_WVALID;
wire   [31:0] grp_conv1_fu_231_m_axi_output_r_WDATA;
wire   [3:0] grp_conv1_fu_231_m_axi_output_r_WSTRB;
wire    grp_conv1_fu_231_m_axi_output_r_WLAST;
wire   [0:0] grp_conv1_fu_231_m_axi_output_r_WID;
wire   [0:0] grp_conv1_fu_231_m_axi_output_r_WUSER;
wire    grp_conv1_fu_231_m_axi_output_r_ARVALID;
wire   [63:0] grp_conv1_fu_231_m_axi_output_r_ARADDR;
wire   [0:0] grp_conv1_fu_231_m_axi_output_r_ARID;
wire   [31:0] grp_conv1_fu_231_m_axi_output_r_ARLEN;
wire   [2:0] grp_conv1_fu_231_m_axi_output_r_ARSIZE;
wire   [1:0] grp_conv1_fu_231_m_axi_output_r_ARBURST;
wire   [1:0] grp_conv1_fu_231_m_axi_output_r_ARLOCK;
wire   [3:0] grp_conv1_fu_231_m_axi_output_r_ARCACHE;
wire   [2:0] grp_conv1_fu_231_m_axi_output_r_ARPROT;
wire   [3:0] grp_conv1_fu_231_m_axi_output_r_ARQOS;
wire   [3:0] grp_conv1_fu_231_m_axi_output_r_ARREGION;
wire   [0:0] grp_conv1_fu_231_m_axi_output_r_ARUSER;
wire    grp_conv1_fu_231_m_axi_output_r_RREADY;
wire    grp_conv1_fu_231_m_axi_output_r_BREADY;
wire   [31:0] grp_conv1_fu_231_grp_fu_439_p_din0;
wire   [31:0] grp_conv1_fu_231_grp_fu_439_p_din1;
wire   [1:0] grp_conv1_fu_231_grp_fu_439_p_opcode;
wire    grp_conv1_fu_231_grp_fu_439_p_ce;
wire   [31:0] grp_conv1_fu_231_grp_fu_443_p_din0;
wire   [31:0] grp_conv1_fu_231_grp_fu_443_p_din1;
wire    grp_conv1_fu_231_grp_fu_443_p_ce;
wire   [31:0] grp_conv1_fu_231_grp_fu_447_p_din0;
wire   [31:0] grp_conv1_fu_231_grp_fu_447_p_din1;
wire   [4:0] grp_conv1_fu_231_grp_fu_447_p_opcode;
wire    grp_conv1_fu_231_grp_fu_447_p_ce;
wire    grp_conv2_fu_250_ap_start;
wire    grp_conv2_fu_250_ap_done;
wire    grp_conv2_fu_250_ap_idle;
wire    grp_conv2_fu_250_ap_ready;
wire    grp_conv2_fu_250_m_axi_output_r_AWVALID;
wire   [63:0] grp_conv2_fu_250_m_axi_output_r_AWADDR;
wire   [0:0] grp_conv2_fu_250_m_axi_output_r_AWID;
wire   [31:0] grp_conv2_fu_250_m_axi_output_r_AWLEN;
wire   [2:0] grp_conv2_fu_250_m_axi_output_r_AWSIZE;
wire   [1:0] grp_conv2_fu_250_m_axi_output_r_AWBURST;
wire   [1:0] grp_conv2_fu_250_m_axi_output_r_AWLOCK;
wire   [3:0] grp_conv2_fu_250_m_axi_output_r_AWCACHE;
wire   [2:0] grp_conv2_fu_250_m_axi_output_r_AWPROT;
wire   [3:0] grp_conv2_fu_250_m_axi_output_r_AWQOS;
wire   [3:0] grp_conv2_fu_250_m_axi_output_r_AWREGION;
wire   [0:0] grp_conv2_fu_250_m_axi_output_r_AWUSER;
wire    grp_conv2_fu_250_m_axi_output_r_WVALID;
wire   [31:0] grp_conv2_fu_250_m_axi_output_r_WDATA;
wire   [3:0] grp_conv2_fu_250_m_axi_output_r_WSTRB;
wire    grp_conv2_fu_250_m_axi_output_r_WLAST;
wire   [0:0] grp_conv2_fu_250_m_axi_output_r_WID;
wire   [0:0] grp_conv2_fu_250_m_axi_output_r_WUSER;
wire    grp_conv2_fu_250_m_axi_output_r_ARVALID;
wire   [63:0] grp_conv2_fu_250_m_axi_output_r_ARADDR;
wire   [0:0] grp_conv2_fu_250_m_axi_output_r_ARID;
wire   [31:0] grp_conv2_fu_250_m_axi_output_r_ARLEN;
wire   [2:0] grp_conv2_fu_250_m_axi_output_r_ARSIZE;
wire   [1:0] grp_conv2_fu_250_m_axi_output_r_ARBURST;
wire   [1:0] grp_conv2_fu_250_m_axi_output_r_ARLOCK;
wire   [3:0] grp_conv2_fu_250_m_axi_output_r_ARCACHE;
wire   [2:0] grp_conv2_fu_250_m_axi_output_r_ARPROT;
wire   [3:0] grp_conv2_fu_250_m_axi_output_r_ARQOS;
wire   [3:0] grp_conv2_fu_250_m_axi_output_r_ARREGION;
wire   [0:0] grp_conv2_fu_250_m_axi_output_r_ARUSER;
wire    grp_conv2_fu_250_m_axi_output_r_RREADY;
wire    grp_conv2_fu_250_m_axi_output_r_BREADY;
wire    grp_conv2_fu_250_m_axi_params_AWVALID;
wire   [63:0] grp_conv2_fu_250_m_axi_params_AWADDR;
wire   [0:0] grp_conv2_fu_250_m_axi_params_AWID;
wire   [31:0] grp_conv2_fu_250_m_axi_params_AWLEN;
wire   [2:0] grp_conv2_fu_250_m_axi_params_AWSIZE;
wire   [1:0] grp_conv2_fu_250_m_axi_params_AWBURST;
wire   [1:0] grp_conv2_fu_250_m_axi_params_AWLOCK;
wire   [3:0] grp_conv2_fu_250_m_axi_params_AWCACHE;
wire   [2:0] grp_conv2_fu_250_m_axi_params_AWPROT;
wire   [3:0] grp_conv2_fu_250_m_axi_params_AWQOS;
wire   [3:0] grp_conv2_fu_250_m_axi_params_AWREGION;
wire   [0:0] grp_conv2_fu_250_m_axi_params_AWUSER;
wire    grp_conv2_fu_250_m_axi_params_WVALID;
wire   [31:0] grp_conv2_fu_250_m_axi_params_WDATA;
wire   [3:0] grp_conv2_fu_250_m_axi_params_WSTRB;
wire    grp_conv2_fu_250_m_axi_params_WLAST;
wire   [0:0] grp_conv2_fu_250_m_axi_params_WID;
wire   [0:0] grp_conv2_fu_250_m_axi_params_WUSER;
wire    grp_conv2_fu_250_m_axi_params_ARVALID;
wire   [63:0] grp_conv2_fu_250_m_axi_params_ARADDR;
wire   [0:0] grp_conv2_fu_250_m_axi_params_ARID;
wire   [31:0] grp_conv2_fu_250_m_axi_params_ARLEN;
wire   [2:0] grp_conv2_fu_250_m_axi_params_ARSIZE;
wire   [1:0] grp_conv2_fu_250_m_axi_params_ARBURST;
wire   [1:0] grp_conv2_fu_250_m_axi_params_ARLOCK;
wire   [3:0] grp_conv2_fu_250_m_axi_params_ARCACHE;
wire   [2:0] grp_conv2_fu_250_m_axi_params_ARPROT;
wire   [3:0] grp_conv2_fu_250_m_axi_params_ARQOS;
wire   [3:0] grp_conv2_fu_250_m_axi_params_ARREGION;
wire   [0:0] grp_conv2_fu_250_m_axi_params_ARUSER;
wire    grp_conv2_fu_250_m_axi_params_RREADY;
wire    grp_conv2_fu_250_m_axi_params_BREADY;
wire   [4:0] grp_conv2_fu_250_conv2_biases_address0;
wire    grp_conv2_fu_250_conv2_biases_ce0;
wire   [31:0] grp_conv2_fu_250_grp_fu_439_p_din0;
wire   [31:0] grp_conv2_fu_250_grp_fu_439_p_din1;
wire   [1:0] grp_conv2_fu_250_grp_fu_439_p_opcode;
wire    grp_conv2_fu_250_grp_fu_439_p_ce;
wire   [31:0] grp_conv2_fu_250_grp_fu_443_p_din0;
wire   [31:0] grp_conv2_fu_250_grp_fu_443_p_din1;
wire    grp_conv2_fu_250_grp_fu_443_p_ce;
wire   [31:0] grp_conv2_fu_250_grp_fu_447_p_din0;
wire   [31:0] grp_conv2_fu_250_grp_fu_447_p_din1;
wire   [4:0] grp_conv2_fu_250_grp_fu_447_p_opcode;
wire    grp_conv2_fu_250_grp_fu_447_p_ce;
wire    grp_conv3_fu_283_ap_start;
wire    grp_conv3_fu_283_ap_done;
wire    grp_conv3_fu_283_ap_idle;
wire    grp_conv3_fu_283_ap_ready;
wire    grp_conv3_fu_283_m_axi_output_r_AWVALID;
wire   [63:0] grp_conv3_fu_283_m_axi_output_r_AWADDR;
wire   [0:0] grp_conv3_fu_283_m_axi_output_r_AWID;
wire   [31:0] grp_conv3_fu_283_m_axi_output_r_AWLEN;
wire   [2:0] grp_conv3_fu_283_m_axi_output_r_AWSIZE;
wire   [1:0] grp_conv3_fu_283_m_axi_output_r_AWBURST;
wire   [1:0] grp_conv3_fu_283_m_axi_output_r_AWLOCK;
wire   [3:0] grp_conv3_fu_283_m_axi_output_r_AWCACHE;
wire   [2:0] grp_conv3_fu_283_m_axi_output_r_AWPROT;
wire   [3:0] grp_conv3_fu_283_m_axi_output_r_AWQOS;
wire   [3:0] grp_conv3_fu_283_m_axi_output_r_AWREGION;
wire   [0:0] grp_conv3_fu_283_m_axi_output_r_AWUSER;
wire    grp_conv3_fu_283_m_axi_output_r_WVALID;
wire   [31:0] grp_conv3_fu_283_m_axi_output_r_WDATA;
wire   [3:0] grp_conv3_fu_283_m_axi_output_r_WSTRB;
wire    grp_conv3_fu_283_m_axi_output_r_WLAST;
wire   [0:0] grp_conv3_fu_283_m_axi_output_r_WID;
wire   [0:0] grp_conv3_fu_283_m_axi_output_r_WUSER;
wire    grp_conv3_fu_283_m_axi_output_r_ARVALID;
wire   [63:0] grp_conv3_fu_283_m_axi_output_r_ARADDR;
wire   [0:0] grp_conv3_fu_283_m_axi_output_r_ARID;
wire   [31:0] grp_conv3_fu_283_m_axi_output_r_ARLEN;
wire   [2:0] grp_conv3_fu_283_m_axi_output_r_ARSIZE;
wire   [1:0] grp_conv3_fu_283_m_axi_output_r_ARBURST;
wire   [1:0] grp_conv3_fu_283_m_axi_output_r_ARLOCK;
wire   [3:0] grp_conv3_fu_283_m_axi_output_r_ARCACHE;
wire   [2:0] grp_conv3_fu_283_m_axi_output_r_ARPROT;
wire   [3:0] grp_conv3_fu_283_m_axi_output_r_ARQOS;
wire   [3:0] grp_conv3_fu_283_m_axi_output_r_ARREGION;
wire   [0:0] grp_conv3_fu_283_m_axi_output_r_ARUSER;
wire    grp_conv3_fu_283_m_axi_output_r_RREADY;
wire    grp_conv3_fu_283_m_axi_output_r_BREADY;
wire    grp_conv3_fu_283_m_axi_params_AWVALID;
wire   [63:0] grp_conv3_fu_283_m_axi_params_AWADDR;
wire   [0:0] grp_conv3_fu_283_m_axi_params_AWID;
wire   [31:0] grp_conv3_fu_283_m_axi_params_AWLEN;
wire   [2:0] grp_conv3_fu_283_m_axi_params_AWSIZE;
wire   [1:0] grp_conv3_fu_283_m_axi_params_AWBURST;
wire   [1:0] grp_conv3_fu_283_m_axi_params_AWLOCK;
wire   [3:0] grp_conv3_fu_283_m_axi_params_AWCACHE;
wire   [2:0] grp_conv3_fu_283_m_axi_params_AWPROT;
wire   [3:0] grp_conv3_fu_283_m_axi_params_AWQOS;
wire   [3:0] grp_conv3_fu_283_m_axi_params_AWREGION;
wire   [0:0] grp_conv3_fu_283_m_axi_params_AWUSER;
wire    grp_conv3_fu_283_m_axi_params_WVALID;
wire   [31:0] grp_conv3_fu_283_m_axi_params_WDATA;
wire   [3:0] grp_conv3_fu_283_m_axi_params_WSTRB;
wire    grp_conv3_fu_283_m_axi_params_WLAST;
wire   [0:0] grp_conv3_fu_283_m_axi_params_WID;
wire   [0:0] grp_conv3_fu_283_m_axi_params_WUSER;
wire    grp_conv3_fu_283_m_axi_params_ARVALID;
wire   [63:0] grp_conv3_fu_283_m_axi_params_ARADDR;
wire   [0:0] grp_conv3_fu_283_m_axi_params_ARID;
wire   [31:0] grp_conv3_fu_283_m_axi_params_ARLEN;
wire   [2:0] grp_conv3_fu_283_m_axi_params_ARSIZE;
wire   [1:0] grp_conv3_fu_283_m_axi_params_ARBURST;
wire   [1:0] grp_conv3_fu_283_m_axi_params_ARLOCK;
wire   [3:0] grp_conv3_fu_283_m_axi_params_ARCACHE;
wire   [2:0] grp_conv3_fu_283_m_axi_params_ARPROT;
wire   [3:0] grp_conv3_fu_283_m_axi_params_ARQOS;
wire   [3:0] grp_conv3_fu_283_m_axi_params_ARREGION;
wire   [0:0] grp_conv3_fu_283_m_axi_params_ARUSER;
wire    grp_conv3_fu_283_m_axi_params_RREADY;
wire    grp_conv3_fu_283_m_axi_params_BREADY;
wire   [31:0] grp_conv3_fu_283_grp_fu_439_p_din0;
wire   [31:0] grp_conv3_fu_283_grp_fu_439_p_din1;
wire   [1:0] grp_conv3_fu_283_grp_fu_439_p_opcode;
wire    grp_conv3_fu_283_grp_fu_439_p_ce;
wire   [31:0] grp_conv3_fu_283_grp_fu_443_p_din0;
wire   [31:0] grp_conv3_fu_283_grp_fu_443_p_din1;
wire    grp_conv3_fu_283_grp_fu_443_p_ce;
wire    input_r_AWREADY;
wire    input_r_WREADY;
reg    input_r_ARVALID;
wire    input_r_ARREADY;
wire    input_r_RVALID;
reg    input_r_RREADY;
wire   [31:0] input_r_RDATA;
wire   [8:0] input_r_RFIFONUM;
wire    input_r_BVALID;
reg    output_r_AWVALID;
wire    output_r_AWREADY;
reg   [63:0] output_r_AWADDR;
reg   [31:0] output_r_AWLEN;
reg    output_r_WVALID;
wire    output_r_WREADY;
reg   [31:0] output_r_WDATA;
reg   [3:0] output_r_WSTRB;
reg    output_r_ARVALID;
wire    output_r_ARREADY;
reg   [63:0] output_r_ARADDR;
reg   [31:0] output_r_ARLEN;
wire    output_r_RVALID;
reg    output_r_RREADY;
wire   [31:0] output_r_RDATA;
wire   [8:0] output_r_RFIFONUM;
wire    output_r_BVALID;
reg    output_r_BREADY;
wire    params_AWREADY;
wire    params_WREADY;
reg    params_ARVALID;
wire    params_ARREADY;
reg   [63:0] params_ARADDR;
reg   [31:0] params_ARLEN;
wire    params_RVALID;
reg    params_RREADY;
wire   [31:0] params_RDATA;
wire   [8:0] params_RFIFONUM;
wire    params_BVALID;
reg    grp_srcnn_Pipeline_1_fu_210_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_srcnn_Pipeline_2_fu_217_ap_start_reg;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg    grp_srcnn_Pipeline_3_fu_224_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_conv1_fu_231_ap_start_reg;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
reg    grp_conv2_fu_250_ap_start_reg;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
reg    grp_conv3_fu_283_ap_start_reg;
wire    ap_CS_fsm_state29;
wire  signed [63:0] sext_ln37_fu_329_p1;
wire  signed [63:0] sext_ln38_fu_339_p1;
wire  signed [63:0] sext_ln39_fu_349_p1;
wire   [31:0] grp_fu_439_p2;
reg   [31:0] grp_fu_439_p0;
reg   [31:0] grp_fu_439_p1;
reg    grp_fu_439_ce;
wire   [31:0] grp_fu_443_p2;
reg   [31:0] grp_fu_443_p0;
reg   [31:0] grp_fu_443_p1;
reg    grp_fu_443_ce;
wire   [0:0] grp_fu_447_p2;
reg   [31:0] grp_fu_447_p0;
reg   [31:0] grp_fu_447_p1;
reg    grp_fu_447_ce;
reg   [4:0] grp_fu_447_opcode;
reg   [28:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
reg    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
reg    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
reg    ap_ST_fsm_state29_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 grp_srcnn_Pipeline_1_fu_210_ap_start_reg = 1'b0;
#0 grp_srcnn_Pipeline_2_fu_217_ap_start_reg = 1'b0;
#0 grp_srcnn_Pipeline_3_fu_224_ap_start_reg = 1'b0;
#0 grp_conv1_fu_231_ap_start_reg = 1'b0;
#0 grp_conv2_fu_250_ap_start_reg = 1'b0;
#0 grp_conv3_fu_283_ap_start_reg = 1'b0;
end

srcnn_srcnn_Pipeline_1 grp_srcnn_Pipeline_1_fu_210(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_srcnn_Pipeline_1_fu_210_ap_start),
    .ap_done(grp_srcnn_Pipeline_1_fu_210_ap_done),
    .ap_idle(grp_srcnn_Pipeline_1_fu_210_ap_idle),
    .ap_ready(grp_srcnn_Pipeline_1_fu_210_ap_ready),
    .m_axi_output_r_AWVALID(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWVALID),
    .m_axi_output_r_AWREADY(output_r_AWREADY),
    .m_axi_output_r_AWADDR(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWADDR),
    .m_axi_output_r_AWID(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWID),
    .m_axi_output_r_AWLEN(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWLEN),
    .m_axi_output_r_AWSIZE(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWSIZE),
    .m_axi_output_r_AWBURST(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWBURST),
    .m_axi_output_r_AWLOCK(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWLOCK),
    .m_axi_output_r_AWCACHE(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWCACHE),
    .m_axi_output_r_AWPROT(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWPROT),
    .m_axi_output_r_AWQOS(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWQOS),
    .m_axi_output_r_AWREGION(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWREGION),
    .m_axi_output_r_AWUSER(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWUSER),
    .m_axi_output_r_WVALID(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WVALID),
    .m_axi_output_r_WREADY(output_r_WREADY),
    .m_axi_output_r_WDATA(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WDATA),
    .m_axi_output_r_WSTRB(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WSTRB),
    .m_axi_output_r_WLAST(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WLAST),
    .m_axi_output_r_WID(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WID),
    .m_axi_output_r_WUSER(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WUSER),
    .m_axi_output_r_ARVALID(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARVALID),
    .m_axi_output_r_ARREADY(1'b0),
    .m_axi_output_r_ARADDR(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARADDR),
    .m_axi_output_r_ARID(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARID),
    .m_axi_output_r_ARLEN(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARLEN),
    .m_axi_output_r_ARSIZE(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARSIZE),
    .m_axi_output_r_ARBURST(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARBURST),
    .m_axi_output_r_ARLOCK(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARLOCK),
    .m_axi_output_r_ARCACHE(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARCACHE),
    .m_axi_output_r_ARPROT(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARPROT),
    .m_axi_output_r_ARQOS(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARQOS),
    .m_axi_output_r_ARREGION(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARREGION),
    .m_axi_output_r_ARUSER(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_ARUSER),
    .m_axi_output_r_RVALID(1'b0),
    .m_axi_output_r_RREADY(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_RREADY),
    .m_axi_output_r_RDATA(32'd0),
    .m_axi_output_r_RLAST(1'b0),
    .m_axi_output_r_RID(1'd0),
    .m_axi_output_r_RFIFONUM(9'd0),
    .m_axi_output_r_RUSER(1'd0),
    .m_axi_output_r_RRESP(2'd0),
    .m_axi_output_r_BVALID(output_r_BVALID),
    .m_axi_output_r_BREADY(grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_BREADY),
    .m_axi_output_r_BRESP(2'd0),
    .m_axi_output_r_BID(1'd0),
    .m_axi_output_r_BUSER(1'd0),
    .sext_ln37(trunc_ln_reg_401)
);

srcnn_srcnn_Pipeline_2 grp_srcnn_Pipeline_2_fu_217(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_srcnn_Pipeline_2_fu_217_ap_start),
    .ap_done(grp_srcnn_Pipeline_2_fu_217_ap_done),
    .ap_idle(grp_srcnn_Pipeline_2_fu_217_ap_idle),
    .ap_ready(grp_srcnn_Pipeline_2_fu_217_ap_ready),
    .m_axi_output_r_AWVALID(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWVALID),
    .m_axi_output_r_AWREADY(output_r_AWREADY),
    .m_axi_output_r_AWADDR(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWADDR),
    .m_axi_output_r_AWID(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWID),
    .m_axi_output_r_AWLEN(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWLEN),
    .m_axi_output_r_AWSIZE(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWSIZE),
    .m_axi_output_r_AWBURST(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWBURST),
    .m_axi_output_r_AWLOCK(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWLOCK),
    .m_axi_output_r_AWCACHE(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWCACHE),
    .m_axi_output_r_AWPROT(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWPROT),
    .m_axi_output_r_AWQOS(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWQOS),
    .m_axi_output_r_AWREGION(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWREGION),
    .m_axi_output_r_AWUSER(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWUSER),
    .m_axi_output_r_WVALID(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WVALID),
    .m_axi_output_r_WREADY(output_r_WREADY),
    .m_axi_output_r_WDATA(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WDATA),
    .m_axi_output_r_WSTRB(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WSTRB),
    .m_axi_output_r_WLAST(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WLAST),
    .m_axi_output_r_WID(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WID),
    .m_axi_output_r_WUSER(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WUSER),
    .m_axi_output_r_ARVALID(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARVALID),
    .m_axi_output_r_ARREADY(1'b0),
    .m_axi_output_r_ARADDR(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARADDR),
    .m_axi_output_r_ARID(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARID),
    .m_axi_output_r_ARLEN(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARLEN),
    .m_axi_output_r_ARSIZE(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARSIZE),
    .m_axi_output_r_ARBURST(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARBURST),
    .m_axi_output_r_ARLOCK(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARLOCK),
    .m_axi_output_r_ARCACHE(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARCACHE),
    .m_axi_output_r_ARPROT(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARPROT),
    .m_axi_output_r_ARQOS(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARQOS),
    .m_axi_output_r_ARREGION(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARREGION),
    .m_axi_output_r_ARUSER(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_ARUSER),
    .m_axi_output_r_RVALID(1'b0),
    .m_axi_output_r_RREADY(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_RREADY),
    .m_axi_output_r_RDATA(32'd0),
    .m_axi_output_r_RLAST(1'b0),
    .m_axi_output_r_RID(1'd0),
    .m_axi_output_r_RFIFONUM(9'd0),
    .m_axi_output_r_RUSER(1'd0),
    .m_axi_output_r_RRESP(2'd0),
    .m_axi_output_r_BVALID(output_r_BVALID),
    .m_axi_output_r_BREADY(grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_BREADY),
    .m_axi_output_r_BRESP(2'd0),
    .m_axi_output_r_BID(1'd0),
    .m_axi_output_r_BUSER(1'd0),
    .sext_ln38(trunc_ln1_reg_407)
);

srcnn_srcnn_Pipeline_3 grp_srcnn_Pipeline_3_fu_224(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_srcnn_Pipeline_3_fu_224_ap_start),
    .ap_done(grp_srcnn_Pipeline_3_fu_224_ap_done),
    .ap_idle(grp_srcnn_Pipeline_3_fu_224_ap_idle),
    .ap_ready(grp_srcnn_Pipeline_3_fu_224_ap_ready),
    .m_axi_output_r_AWVALID(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWVALID),
    .m_axi_output_r_AWREADY(output_r_AWREADY),
    .m_axi_output_r_AWADDR(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWADDR),
    .m_axi_output_r_AWID(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWID),
    .m_axi_output_r_AWLEN(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWLEN),
    .m_axi_output_r_AWSIZE(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWSIZE),
    .m_axi_output_r_AWBURST(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWBURST),
    .m_axi_output_r_AWLOCK(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWLOCK),
    .m_axi_output_r_AWCACHE(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWCACHE),
    .m_axi_output_r_AWPROT(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWPROT),
    .m_axi_output_r_AWQOS(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWQOS),
    .m_axi_output_r_AWREGION(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWREGION),
    .m_axi_output_r_AWUSER(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWUSER),
    .m_axi_output_r_WVALID(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WVALID),
    .m_axi_output_r_WREADY(output_r_WREADY),
    .m_axi_output_r_WDATA(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WDATA),
    .m_axi_output_r_WSTRB(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WSTRB),
    .m_axi_output_r_WLAST(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WLAST),
    .m_axi_output_r_WID(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WID),
    .m_axi_output_r_WUSER(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WUSER),
    .m_axi_output_r_ARVALID(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARVALID),
    .m_axi_output_r_ARREADY(1'b0),
    .m_axi_output_r_ARADDR(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARADDR),
    .m_axi_output_r_ARID(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARID),
    .m_axi_output_r_ARLEN(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARLEN),
    .m_axi_output_r_ARSIZE(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARSIZE),
    .m_axi_output_r_ARBURST(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARBURST),
    .m_axi_output_r_ARLOCK(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARLOCK),
    .m_axi_output_r_ARCACHE(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARCACHE),
    .m_axi_output_r_ARPROT(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARPROT),
    .m_axi_output_r_ARQOS(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARQOS),
    .m_axi_output_r_ARREGION(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARREGION),
    .m_axi_output_r_ARUSER(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_ARUSER),
    .m_axi_output_r_RVALID(1'b0),
    .m_axi_output_r_RREADY(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_RREADY),
    .m_axi_output_r_RDATA(32'd0),
    .m_axi_output_r_RLAST(1'b0),
    .m_axi_output_r_RID(1'd0),
    .m_axi_output_r_RFIFONUM(9'd0),
    .m_axi_output_r_RUSER(1'd0),
    .m_axi_output_r_RRESP(2'd0),
    .m_axi_output_r_BVALID(output_r_BVALID),
    .m_axi_output_r_BREADY(grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_BREADY),
    .m_axi_output_r_BRESP(2'd0),
    .m_axi_output_r_BID(1'd0),
    .m_axi_output_r_BUSER(1'd0),
    .sext_ln39(trunc_ln2_reg_413)
);

srcnn_conv1 grp_conv1_fu_231(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv1_fu_231_ap_start),
    .ap_done(grp_conv1_fu_231_ap_done),
    .ap_idle(grp_conv1_fu_231_ap_idle),
    .ap_ready(grp_conv1_fu_231_ap_ready),
    .m_axi_input_r_AWVALID(grp_conv1_fu_231_m_axi_input_r_AWVALID),
    .m_axi_input_r_AWREADY(1'b0),
    .m_axi_input_r_AWADDR(grp_conv1_fu_231_m_axi_input_r_AWADDR),
    .m_axi_input_r_AWID(grp_conv1_fu_231_m_axi_input_r_AWID),
    .m_axi_input_r_AWLEN(grp_conv1_fu_231_m_axi_input_r_AWLEN),
    .m_axi_input_r_AWSIZE(grp_conv1_fu_231_m_axi_input_r_AWSIZE),
    .m_axi_input_r_AWBURST(grp_conv1_fu_231_m_axi_input_r_AWBURST),
    .m_axi_input_r_AWLOCK(grp_conv1_fu_231_m_axi_input_r_AWLOCK),
    .m_axi_input_r_AWCACHE(grp_conv1_fu_231_m_axi_input_r_AWCACHE),
    .m_axi_input_r_AWPROT(grp_conv1_fu_231_m_axi_input_r_AWPROT),
    .m_axi_input_r_AWQOS(grp_conv1_fu_231_m_axi_input_r_AWQOS),
    .m_axi_input_r_AWREGION(grp_conv1_fu_231_m_axi_input_r_AWREGION),
    .m_axi_input_r_AWUSER(grp_conv1_fu_231_m_axi_input_r_AWUSER),
    .m_axi_input_r_WVALID(grp_conv1_fu_231_m_axi_input_r_WVALID),
    .m_axi_input_r_WREADY(1'b0),
    .m_axi_input_r_WDATA(grp_conv1_fu_231_m_axi_input_r_WDATA),
    .m_axi_input_r_WSTRB(grp_conv1_fu_231_m_axi_input_r_WSTRB),
    .m_axi_input_r_WLAST(grp_conv1_fu_231_m_axi_input_r_WLAST),
    .m_axi_input_r_WID(grp_conv1_fu_231_m_axi_input_r_WID),
    .m_axi_input_r_WUSER(grp_conv1_fu_231_m_axi_input_r_WUSER),
    .m_axi_input_r_ARVALID(grp_conv1_fu_231_m_axi_input_r_ARVALID),
    .m_axi_input_r_ARREADY(input_r_ARREADY),
    .m_axi_input_r_ARADDR(grp_conv1_fu_231_m_axi_input_r_ARADDR),
    .m_axi_input_r_ARID(grp_conv1_fu_231_m_axi_input_r_ARID),
    .m_axi_input_r_ARLEN(grp_conv1_fu_231_m_axi_input_r_ARLEN),
    .m_axi_input_r_ARSIZE(grp_conv1_fu_231_m_axi_input_r_ARSIZE),
    .m_axi_input_r_ARBURST(grp_conv1_fu_231_m_axi_input_r_ARBURST),
    .m_axi_input_r_ARLOCK(grp_conv1_fu_231_m_axi_input_r_ARLOCK),
    .m_axi_input_r_ARCACHE(grp_conv1_fu_231_m_axi_input_r_ARCACHE),
    .m_axi_input_r_ARPROT(grp_conv1_fu_231_m_axi_input_r_ARPROT),
    .m_axi_input_r_ARQOS(grp_conv1_fu_231_m_axi_input_r_ARQOS),
    .m_axi_input_r_ARREGION(grp_conv1_fu_231_m_axi_input_r_ARREGION),
    .m_axi_input_r_ARUSER(grp_conv1_fu_231_m_axi_input_r_ARUSER),
    .m_axi_input_r_RVALID(input_r_RVALID),
    .m_axi_input_r_RREADY(grp_conv1_fu_231_m_axi_input_r_RREADY),
    .m_axi_input_r_RDATA(input_r_RDATA),
    .m_axi_input_r_RLAST(1'b0),
    .m_axi_input_r_RID(1'd0),
    .m_axi_input_r_RFIFONUM(input_r_RFIFONUM),
    .m_axi_input_r_RUSER(1'd0),
    .m_axi_input_r_RRESP(2'd0),
    .m_axi_input_r_BVALID(1'b0),
    .m_axi_input_r_BREADY(grp_conv1_fu_231_m_axi_input_r_BREADY),
    .m_axi_input_r_BRESP(2'd0),
    .m_axi_input_r_BID(1'd0),
    .m_axi_input_r_BUSER(1'd0),
    .input_ftmap(input_ftmap_read_reg_396),
    .m_axi_params_AWVALID(grp_conv1_fu_231_m_axi_params_AWVALID),
    .m_axi_params_AWREADY(1'b0),
    .m_axi_params_AWADDR(grp_conv1_fu_231_m_axi_params_AWADDR),
    .m_axi_params_AWID(grp_conv1_fu_231_m_axi_params_AWID),
    .m_axi_params_AWLEN(grp_conv1_fu_231_m_axi_params_AWLEN),
    .m_axi_params_AWSIZE(grp_conv1_fu_231_m_axi_params_AWSIZE),
    .m_axi_params_AWBURST(grp_conv1_fu_231_m_axi_params_AWBURST),
    .m_axi_params_AWLOCK(grp_conv1_fu_231_m_axi_params_AWLOCK),
    .m_axi_params_AWCACHE(grp_conv1_fu_231_m_axi_params_AWCACHE),
    .m_axi_params_AWPROT(grp_conv1_fu_231_m_axi_params_AWPROT),
    .m_axi_params_AWQOS(grp_conv1_fu_231_m_axi_params_AWQOS),
    .m_axi_params_AWREGION(grp_conv1_fu_231_m_axi_params_AWREGION),
    .m_axi_params_AWUSER(grp_conv1_fu_231_m_axi_params_AWUSER),
    .m_axi_params_WVALID(grp_conv1_fu_231_m_axi_params_WVALID),
    .m_axi_params_WREADY(1'b0),
    .m_axi_params_WDATA(grp_conv1_fu_231_m_axi_params_WDATA),
    .m_axi_params_WSTRB(grp_conv1_fu_231_m_axi_params_WSTRB),
    .m_axi_params_WLAST(grp_conv1_fu_231_m_axi_params_WLAST),
    .m_axi_params_WID(grp_conv1_fu_231_m_axi_params_WID),
    .m_axi_params_WUSER(grp_conv1_fu_231_m_axi_params_WUSER),
    .m_axi_params_ARVALID(grp_conv1_fu_231_m_axi_params_ARVALID),
    .m_axi_params_ARREADY(params_ARREADY),
    .m_axi_params_ARADDR(grp_conv1_fu_231_m_axi_params_ARADDR),
    .m_axi_params_ARID(grp_conv1_fu_231_m_axi_params_ARID),
    .m_axi_params_ARLEN(grp_conv1_fu_231_m_axi_params_ARLEN),
    .m_axi_params_ARSIZE(grp_conv1_fu_231_m_axi_params_ARSIZE),
    .m_axi_params_ARBURST(grp_conv1_fu_231_m_axi_params_ARBURST),
    .m_axi_params_ARLOCK(grp_conv1_fu_231_m_axi_params_ARLOCK),
    .m_axi_params_ARCACHE(grp_conv1_fu_231_m_axi_params_ARCACHE),
    .m_axi_params_ARPROT(grp_conv1_fu_231_m_axi_params_ARPROT),
    .m_axi_params_ARQOS(grp_conv1_fu_231_m_axi_params_ARQOS),
    .m_axi_params_ARREGION(grp_conv1_fu_231_m_axi_params_ARREGION),
    .m_axi_params_ARUSER(grp_conv1_fu_231_m_axi_params_ARUSER),
    .m_axi_params_RVALID(params_RVALID),
    .m_axi_params_RREADY(grp_conv1_fu_231_m_axi_params_RREADY),
    .m_axi_params_RDATA(params_RDATA),
    .m_axi_params_RLAST(1'b0),
    .m_axi_params_RID(1'd0),
    .m_axi_params_RFIFONUM(params_RFIFONUM),
    .m_axi_params_RUSER(1'd0),
    .m_axi_params_RRESP(2'd0),
    .m_axi_params_BVALID(1'b0),
    .m_axi_params_BREADY(grp_conv1_fu_231_m_axi_params_BREADY),
    .m_axi_params_BRESP(2'd0),
    .m_axi_params_BID(1'd0),
    .m_axi_params_BUSER(1'd0),
    .conv1_weights(conv1_weights_read_reg_391),
    .conv1_biases_address0(grp_conv1_fu_231_conv1_biases_address0),
    .conv1_biases_ce0(grp_conv1_fu_231_conv1_biases_ce0),
    .conv1_biases_q0(conv1_biases_q0),
    .m_axi_output_r_AWVALID(grp_conv1_fu_231_m_axi_output_r_AWVALID),
    .m_axi_output_r_AWREADY(output_r_AWREADY),
    .m_axi_output_r_AWADDR(grp_conv1_fu_231_m_axi_output_r_AWADDR),
    .m_axi_output_r_AWID(grp_conv1_fu_231_m_axi_output_r_AWID),
    .m_axi_output_r_AWLEN(grp_conv1_fu_231_m_axi_output_r_AWLEN),
    .m_axi_output_r_AWSIZE(grp_conv1_fu_231_m_axi_output_r_AWSIZE),
    .m_axi_output_r_AWBURST(grp_conv1_fu_231_m_axi_output_r_AWBURST),
    .m_axi_output_r_AWLOCK(grp_conv1_fu_231_m_axi_output_r_AWLOCK),
    .m_axi_output_r_AWCACHE(grp_conv1_fu_231_m_axi_output_r_AWCACHE),
    .m_axi_output_r_AWPROT(grp_conv1_fu_231_m_axi_output_r_AWPROT),
    .m_axi_output_r_AWQOS(grp_conv1_fu_231_m_axi_output_r_AWQOS),
    .m_axi_output_r_AWREGION(grp_conv1_fu_231_m_axi_output_r_AWREGION),
    .m_axi_output_r_AWUSER(grp_conv1_fu_231_m_axi_output_r_AWUSER),
    .m_axi_output_r_WVALID(grp_conv1_fu_231_m_axi_output_r_WVALID),
    .m_axi_output_r_WREADY(output_r_WREADY),
    .m_axi_output_r_WDATA(grp_conv1_fu_231_m_axi_output_r_WDATA),
    .m_axi_output_r_WSTRB(grp_conv1_fu_231_m_axi_output_r_WSTRB),
    .m_axi_output_r_WLAST(grp_conv1_fu_231_m_axi_output_r_WLAST),
    .m_axi_output_r_WID(grp_conv1_fu_231_m_axi_output_r_WID),
    .m_axi_output_r_WUSER(grp_conv1_fu_231_m_axi_output_r_WUSER),
    .m_axi_output_r_ARVALID(grp_conv1_fu_231_m_axi_output_r_ARVALID),
    .m_axi_output_r_ARREADY(1'b0),
    .m_axi_output_r_ARADDR(grp_conv1_fu_231_m_axi_output_r_ARADDR),
    .m_axi_output_r_ARID(grp_conv1_fu_231_m_axi_output_r_ARID),
    .m_axi_output_r_ARLEN(grp_conv1_fu_231_m_axi_output_r_ARLEN),
    .m_axi_output_r_ARSIZE(grp_conv1_fu_231_m_axi_output_r_ARSIZE),
    .m_axi_output_r_ARBURST(grp_conv1_fu_231_m_axi_output_r_ARBURST),
    .m_axi_output_r_ARLOCK(grp_conv1_fu_231_m_axi_output_r_ARLOCK),
    .m_axi_output_r_ARCACHE(grp_conv1_fu_231_m_axi_output_r_ARCACHE),
    .m_axi_output_r_ARPROT(grp_conv1_fu_231_m_axi_output_r_ARPROT),
    .m_axi_output_r_ARQOS(grp_conv1_fu_231_m_axi_output_r_ARQOS),
    .m_axi_output_r_ARREGION(grp_conv1_fu_231_m_axi_output_r_ARREGION),
    .m_axi_output_r_ARUSER(grp_conv1_fu_231_m_axi_output_r_ARUSER),
    .m_axi_output_r_RVALID(1'b0),
    .m_axi_output_r_RREADY(grp_conv1_fu_231_m_axi_output_r_RREADY),
    .m_axi_output_r_RDATA(32'd0),
    .m_axi_output_r_RLAST(1'b0),
    .m_axi_output_r_RID(1'd0),
    .m_axi_output_r_RFIFONUM(9'd0),
    .m_axi_output_r_RUSER(1'd0),
    .m_axi_output_r_RRESP(2'd0),
    .m_axi_output_r_BVALID(output_r_BVALID),
    .m_axi_output_r_BREADY(grp_conv1_fu_231_m_axi_output_r_BREADY),
    .m_axi_output_r_BRESP(2'd0),
    .m_axi_output_r_BID(1'd0),
    .m_axi_output_r_BUSER(1'd0),
    .output_ftmap(conv1_output_ftmap_read_reg_385),
    .grp_fu_439_p_din0(grp_conv1_fu_231_grp_fu_439_p_din0),
    .grp_fu_439_p_din1(grp_conv1_fu_231_grp_fu_439_p_din1),
    .grp_fu_439_p_opcode(grp_conv1_fu_231_grp_fu_439_p_opcode),
    .grp_fu_439_p_dout0(grp_fu_439_p2),
    .grp_fu_439_p_ce(grp_conv1_fu_231_grp_fu_439_p_ce),
    .grp_fu_443_p_din0(grp_conv1_fu_231_grp_fu_443_p_din0),
    .grp_fu_443_p_din1(grp_conv1_fu_231_grp_fu_443_p_din1),
    .grp_fu_443_p_dout0(grp_fu_443_p2),
    .grp_fu_443_p_ce(grp_conv1_fu_231_grp_fu_443_p_ce),
    .grp_fu_447_p_din0(grp_conv1_fu_231_grp_fu_447_p_din0),
    .grp_fu_447_p_din1(grp_conv1_fu_231_grp_fu_447_p_din1),
    .grp_fu_447_p_opcode(grp_conv1_fu_231_grp_fu_447_p_opcode),
    .grp_fu_447_p_dout0(grp_fu_447_p2),
    .grp_fu_447_p_ce(grp_conv1_fu_231_grp_fu_447_p_ce)
);

srcnn_conv2 grp_conv2_fu_250(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv2_fu_250_ap_start),
    .ap_done(grp_conv2_fu_250_ap_done),
    .ap_idle(grp_conv2_fu_250_ap_idle),
    .ap_ready(grp_conv2_fu_250_ap_ready),
    .m_axi_output_r_AWVALID(grp_conv2_fu_250_m_axi_output_r_AWVALID),
    .m_axi_output_r_AWREADY(output_r_AWREADY),
    .m_axi_output_r_AWADDR(grp_conv2_fu_250_m_axi_output_r_AWADDR),
    .m_axi_output_r_AWID(grp_conv2_fu_250_m_axi_output_r_AWID),
    .m_axi_output_r_AWLEN(grp_conv2_fu_250_m_axi_output_r_AWLEN),
    .m_axi_output_r_AWSIZE(grp_conv2_fu_250_m_axi_output_r_AWSIZE),
    .m_axi_output_r_AWBURST(grp_conv2_fu_250_m_axi_output_r_AWBURST),
    .m_axi_output_r_AWLOCK(grp_conv2_fu_250_m_axi_output_r_AWLOCK),
    .m_axi_output_r_AWCACHE(grp_conv2_fu_250_m_axi_output_r_AWCACHE),
    .m_axi_output_r_AWPROT(grp_conv2_fu_250_m_axi_output_r_AWPROT),
    .m_axi_output_r_AWQOS(grp_conv2_fu_250_m_axi_output_r_AWQOS),
    .m_axi_output_r_AWREGION(grp_conv2_fu_250_m_axi_output_r_AWREGION),
    .m_axi_output_r_AWUSER(grp_conv2_fu_250_m_axi_output_r_AWUSER),
    .m_axi_output_r_WVALID(grp_conv2_fu_250_m_axi_output_r_WVALID),
    .m_axi_output_r_WREADY(output_r_WREADY),
    .m_axi_output_r_WDATA(grp_conv2_fu_250_m_axi_output_r_WDATA),
    .m_axi_output_r_WSTRB(grp_conv2_fu_250_m_axi_output_r_WSTRB),
    .m_axi_output_r_WLAST(grp_conv2_fu_250_m_axi_output_r_WLAST),
    .m_axi_output_r_WID(grp_conv2_fu_250_m_axi_output_r_WID),
    .m_axi_output_r_WUSER(grp_conv2_fu_250_m_axi_output_r_WUSER),
    .m_axi_output_r_ARVALID(grp_conv2_fu_250_m_axi_output_r_ARVALID),
    .m_axi_output_r_ARREADY(output_r_ARREADY),
    .m_axi_output_r_ARADDR(grp_conv2_fu_250_m_axi_output_r_ARADDR),
    .m_axi_output_r_ARID(grp_conv2_fu_250_m_axi_output_r_ARID),
    .m_axi_output_r_ARLEN(grp_conv2_fu_250_m_axi_output_r_ARLEN),
    .m_axi_output_r_ARSIZE(grp_conv2_fu_250_m_axi_output_r_ARSIZE),
    .m_axi_output_r_ARBURST(grp_conv2_fu_250_m_axi_output_r_ARBURST),
    .m_axi_output_r_ARLOCK(grp_conv2_fu_250_m_axi_output_r_ARLOCK),
    .m_axi_output_r_ARCACHE(grp_conv2_fu_250_m_axi_output_r_ARCACHE),
    .m_axi_output_r_ARPROT(grp_conv2_fu_250_m_axi_output_r_ARPROT),
    .m_axi_output_r_ARQOS(grp_conv2_fu_250_m_axi_output_r_ARQOS),
    .m_axi_output_r_ARREGION(grp_conv2_fu_250_m_axi_output_r_ARREGION),
    .m_axi_output_r_ARUSER(grp_conv2_fu_250_m_axi_output_r_ARUSER),
    .m_axi_output_r_RVALID(output_r_RVALID),
    .m_axi_output_r_RREADY(grp_conv2_fu_250_m_axi_output_r_RREADY),
    .m_axi_output_r_RDATA(output_r_RDATA),
    .m_axi_output_r_RLAST(1'b0),
    .m_axi_output_r_RID(1'd0),
    .m_axi_output_r_RFIFONUM(output_r_RFIFONUM),
    .m_axi_output_r_RUSER(1'd0),
    .m_axi_output_r_RRESP(2'd0),
    .m_axi_output_r_BVALID(output_r_BVALID),
    .m_axi_output_r_BREADY(grp_conv2_fu_250_m_axi_output_r_BREADY),
    .m_axi_output_r_BRESP(2'd0),
    .m_axi_output_r_BID(1'd0),
    .m_axi_output_r_BUSER(1'd0),
    .input_ftmap(conv1_output_ftmap_read_reg_385),
    .m_axi_params_AWVALID(grp_conv2_fu_250_m_axi_params_AWVALID),
    .m_axi_params_AWREADY(1'b0),
    .m_axi_params_AWADDR(grp_conv2_fu_250_m_axi_params_AWADDR),
    .m_axi_params_AWID(grp_conv2_fu_250_m_axi_params_AWID),
    .m_axi_params_AWLEN(grp_conv2_fu_250_m_axi_params_AWLEN),
    .m_axi_params_AWSIZE(grp_conv2_fu_250_m_axi_params_AWSIZE),
    .m_axi_params_AWBURST(grp_conv2_fu_250_m_axi_params_AWBURST),
    .m_axi_params_AWLOCK(grp_conv2_fu_250_m_axi_params_AWLOCK),
    .m_axi_params_AWCACHE(grp_conv2_fu_250_m_axi_params_AWCACHE),
    .m_axi_params_AWPROT(grp_conv2_fu_250_m_axi_params_AWPROT),
    .m_axi_params_AWQOS(grp_conv2_fu_250_m_axi_params_AWQOS),
    .m_axi_params_AWREGION(grp_conv2_fu_250_m_axi_params_AWREGION),
    .m_axi_params_AWUSER(grp_conv2_fu_250_m_axi_params_AWUSER),
    .m_axi_params_WVALID(grp_conv2_fu_250_m_axi_params_WVALID),
    .m_axi_params_WREADY(1'b0),
    .m_axi_params_WDATA(grp_conv2_fu_250_m_axi_params_WDATA),
    .m_axi_params_WSTRB(grp_conv2_fu_250_m_axi_params_WSTRB),
    .m_axi_params_WLAST(grp_conv2_fu_250_m_axi_params_WLAST),
    .m_axi_params_WID(grp_conv2_fu_250_m_axi_params_WID),
    .m_axi_params_WUSER(grp_conv2_fu_250_m_axi_params_WUSER),
    .m_axi_params_ARVALID(grp_conv2_fu_250_m_axi_params_ARVALID),
    .m_axi_params_ARREADY(params_ARREADY),
    .m_axi_params_ARADDR(grp_conv2_fu_250_m_axi_params_ARADDR),
    .m_axi_params_ARID(grp_conv2_fu_250_m_axi_params_ARID),
    .m_axi_params_ARLEN(grp_conv2_fu_250_m_axi_params_ARLEN),
    .m_axi_params_ARSIZE(grp_conv2_fu_250_m_axi_params_ARSIZE),
    .m_axi_params_ARBURST(grp_conv2_fu_250_m_axi_params_ARBURST),
    .m_axi_params_ARLOCK(grp_conv2_fu_250_m_axi_params_ARLOCK),
    .m_axi_params_ARCACHE(grp_conv2_fu_250_m_axi_params_ARCACHE),
    .m_axi_params_ARPROT(grp_conv2_fu_250_m_axi_params_ARPROT),
    .m_axi_params_ARQOS(grp_conv2_fu_250_m_axi_params_ARQOS),
    .m_axi_params_ARREGION(grp_conv2_fu_250_m_axi_params_ARREGION),
    .m_axi_params_ARUSER(grp_conv2_fu_250_m_axi_params_ARUSER),
    .m_axi_params_RVALID(params_RVALID),
    .m_axi_params_RREADY(grp_conv2_fu_250_m_axi_params_RREADY),
    .m_axi_params_RDATA(params_RDATA),
    .m_axi_params_RLAST(1'b0),
    .m_axi_params_RID(1'd0),
    .m_axi_params_RFIFONUM(params_RFIFONUM),
    .m_axi_params_RUSER(1'd0),
    .m_axi_params_RRESP(2'd0),
    .m_axi_params_BVALID(1'b0),
    .m_axi_params_BREADY(grp_conv2_fu_250_m_axi_params_BREADY),
    .m_axi_params_BRESP(2'd0),
    .m_axi_params_BID(1'd0),
    .m_axi_params_BUSER(1'd0),
    .conv2_weights(conv2_weights_read_reg_380),
    .conv2_biases_address0(grp_conv2_fu_250_conv2_biases_address0),
    .conv2_biases_ce0(grp_conv2_fu_250_conv2_biases_ce0),
    .conv2_biases_q0(conv2_biases_q0),
    .output_ftmap(conv2_output_ftmap_read_reg_374),
    .grp_fu_439_p_din0(grp_conv2_fu_250_grp_fu_439_p_din0),
    .grp_fu_439_p_din1(grp_conv2_fu_250_grp_fu_439_p_din1),
    .grp_fu_439_p_opcode(grp_conv2_fu_250_grp_fu_439_p_opcode),
    .grp_fu_439_p_dout0(grp_fu_439_p2),
    .grp_fu_439_p_ce(grp_conv2_fu_250_grp_fu_439_p_ce),
    .grp_fu_443_p_din0(grp_conv2_fu_250_grp_fu_443_p_din0),
    .grp_fu_443_p_din1(grp_conv2_fu_250_grp_fu_443_p_din1),
    .grp_fu_443_p_dout0(grp_fu_443_p2),
    .grp_fu_443_p_ce(grp_conv2_fu_250_grp_fu_443_p_ce),
    .grp_fu_447_p_din0(grp_conv2_fu_250_grp_fu_447_p_din0),
    .grp_fu_447_p_din1(grp_conv2_fu_250_grp_fu_447_p_din1),
    .grp_fu_447_p_opcode(grp_conv2_fu_250_grp_fu_447_p_opcode),
    .grp_fu_447_p_dout0(grp_fu_447_p2),
    .grp_fu_447_p_ce(grp_conv2_fu_250_grp_fu_447_p_ce)
);

srcnn_conv3 grp_conv3_fu_283(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv3_fu_283_ap_start),
    .ap_done(grp_conv3_fu_283_ap_done),
    .ap_idle(grp_conv3_fu_283_ap_idle),
    .ap_ready(grp_conv3_fu_283_ap_ready),
    .m_axi_output_r_AWVALID(grp_conv3_fu_283_m_axi_output_r_AWVALID),
    .m_axi_output_r_AWREADY(output_r_AWREADY),
    .m_axi_output_r_AWADDR(grp_conv3_fu_283_m_axi_output_r_AWADDR),
    .m_axi_output_r_AWID(grp_conv3_fu_283_m_axi_output_r_AWID),
    .m_axi_output_r_AWLEN(grp_conv3_fu_283_m_axi_output_r_AWLEN),
    .m_axi_output_r_AWSIZE(grp_conv3_fu_283_m_axi_output_r_AWSIZE),
    .m_axi_output_r_AWBURST(grp_conv3_fu_283_m_axi_output_r_AWBURST),
    .m_axi_output_r_AWLOCK(grp_conv3_fu_283_m_axi_output_r_AWLOCK),
    .m_axi_output_r_AWCACHE(grp_conv3_fu_283_m_axi_output_r_AWCACHE),
    .m_axi_output_r_AWPROT(grp_conv3_fu_283_m_axi_output_r_AWPROT),
    .m_axi_output_r_AWQOS(grp_conv3_fu_283_m_axi_output_r_AWQOS),
    .m_axi_output_r_AWREGION(grp_conv3_fu_283_m_axi_output_r_AWREGION),
    .m_axi_output_r_AWUSER(grp_conv3_fu_283_m_axi_output_r_AWUSER),
    .m_axi_output_r_WVALID(grp_conv3_fu_283_m_axi_output_r_WVALID),
    .m_axi_output_r_WREADY(output_r_WREADY),
    .m_axi_output_r_WDATA(grp_conv3_fu_283_m_axi_output_r_WDATA),
    .m_axi_output_r_WSTRB(grp_conv3_fu_283_m_axi_output_r_WSTRB),
    .m_axi_output_r_WLAST(grp_conv3_fu_283_m_axi_output_r_WLAST),
    .m_axi_output_r_WID(grp_conv3_fu_283_m_axi_output_r_WID),
    .m_axi_output_r_WUSER(grp_conv3_fu_283_m_axi_output_r_WUSER),
    .m_axi_output_r_ARVALID(grp_conv3_fu_283_m_axi_output_r_ARVALID),
    .m_axi_output_r_ARREADY(output_r_ARREADY),
    .m_axi_output_r_ARADDR(grp_conv3_fu_283_m_axi_output_r_ARADDR),
    .m_axi_output_r_ARID(grp_conv3_fu_283_m_axi_output_r_ARID),
    .m_axi_output_r_ARLEN(grp_conv3_fu_283_m_axi_output_r_ARLEN),
    .m_axi_output_r_ARSIZE(grp_conv3_fu_283_m_axi_output_r_ARSIZE),
    .m_axi_output_r_ARBURST(grp_conv3_fu_283_m_axi_output_r_ARBURST),
    .m_axi_output_r_ARLOCK(grp_conv3_fu_283_m_axi_output_r_ARLOCK),
    .m_axi_output_r_ARCACHE(grp_conv3_fu_283_m_axi_output_r_ARCACHE),
    .m_axi_output_r_ARPROT(grp_conv3_fu_283_m_axi_output_r_ARPROT),
    .m_axi_output_r_ARQOS(grp_conv3_fu_283_m_axi_output_r_ARQOS),
    .m_axi_output_r_ARREGION(grp_conv3_fu_283_m_axi_output_r_ARREGION),
    .m_axi_output_r_ARUSER(grp_conv3_fu_283_m_axi_output_r_ARUSER),
    .m_axi_output_r_RVALID(output_r_RVALID),
    .m_axi_output_r_RREADY(grp_conv3_fu_283_m_axi_output_r_RREADY),
    .m_axi_output_r_RDATA(output_r_RDATA),
    .m_axi_output_r_RLAST(1'b0),
    .m_axi_output_r_RID(1'd0),
    .m_axi_output_r_RFIFONUM(output_r_RFIFONUM),
    .m_axi_output_r_RUSER(1'd0),
    .m_axi_output_r_RRESP(2'd0),
    .m_axi_output_r_BVALID(output_r_BVALID),
    .m_axi_output_r_BREADY(grp_conv3_fu_283_m_axi_output_r_BREADY),
    .m_axi_output_r_BRESP(2'd0),
    .m_axi_output_r_BID(1'd0),
    .m_axi_output_r_BUSER(1'd0),
    .input_ftmap(conv2_output_ftmap_read_reg_374),
    .m_axi_params_AWVALID(grp_conv3_fu_283_m_axi_params_AWVALID),
    .m_axi_params_AWREADY(1'b0),
    .m_axi_params_AWADDR(grp_conv3_fu_283_m_axi_params_AWADDR),
    .m_axi_params_AWID(grp_conv3_fu_283_m_axi_params_AWID),
    .m_axi_params_AWLEN(grp_conv3_fu_283_m_axi_params_AWLEN),
    .m_axi_params_AWSIZE(grp_conv3_fu_283_m_axi_params_AWSIZE),
    .m_axi_params_AWBURST(grp_conv3_fu_283_m_axi_params_AWBURST),
    .m_axi_params_AWLOCK(grp_conv3_fu_283_m_axi_params_AWLOCK),
    .m_axi_params_AWCACHE(grp_conv3_fu_283_m_axi_params_AWCACHE),
    .m_axi_params_AWPROT(grp_conv3_fu_283_m_axi_params_AWPROT),
    .m_axi_params_AWQOS(grp_conv3_fu_283_m_axi_params_AWQOS),
    .m_axi_params_AWREGION(grp_conv3_fu_283_m_axi_params_AWREGION),
    .m_axi_params_AWUSER(grp_conv3_fu_283_m_axi_params_AWUSER),
    .m_axi_params_WVALID(grp_conv3_fu_283_m_axi_params_WVALID),
    .m_axi_params_WREADY(1'b0),
    .m_axi_params_WDATA(grp_conv3_fu_283_m_axi_params_WDATA),
    .m_axi_params_WSTRB(grp_conv3_fu_283_m_axi_params_WSTRB),
    .m_axi_params_WLAST(grp_conv3_fu_283_m_axi_params_WLAST),
    .m_axi_params_WID(grp_conv3_fu_283_m_axi_params_WID),
    .m_axi_params_WUSER(grp_conv3_fu_283_m_axi_params_WUSER),
    .m_axi_params_ARVALID(grp_conv3_fu_283_m_axi_params_ARVALID),
    .m_axi_params_ARREADY(params_ARREADY),
    .m_axi_params_ARADDR(grp_conv3_fu_283_m_axi_params_ARADDR),
    .m_axi_params_ARID(grp_conv3_fu_283_m_axi_params_ARID),
    .m_axi_params_ARLEN(grp_conv3_fu_283_m_axi_params_ARLEN),
    .m_axi_params_ARSIZE(grp_conv3_fu_283_m_axi_params_ARSIZE),
    .m_axi_params_ARBURST(grp_conv3_fu_283_m_axi_params_ARBURST),
    .m_axi_params_ARLOCK(grp_conv3_fu_283_m_axi_params_ARLOCK),
    .m_axi_params_ARCACHE(grp_conv3_fu_283_m_axi_params_ARCACHE),
    .m_axi_params_ARPROT(grp_conv3_fu_283_m_axi_params_ARPROT),
    .m_axi_params_ARQOS(grp_conv3_fu_283_m_axi_params_ARQOS),
    .m_axi_params_ARREGION(grp_conv3_fu_283_m_axi_params_ARREGION),
    .m_axi_params_ARUSER(grp_conv3_fu_283_m_axi_params_ARUSER),
    .m_axi_params_RVALID(params_RVALID),
    .m_axi_params_RREADY(grp_conv3_fu_283_m_axi_params_RREADY),
    .m_axi_params_RDATA(params_RDATA),
    .m_axi_params_RLAST(1'b0),
    .m_axi_params_RID(1'd0),
    .m_axi_params_RFIFONUM(params_RFIFONUM),
    .m_axi_params_RUSER(1'd0),
    .m_axi_params_RRESP(2'd0),
    .m_axi_params_BVALID(1'b0),
    .m_axi_params_BREADY(grp_conv3_fu_283_m_axi_params_BREADY),
    .m_axi_params_BRESP(2'd0),
    .m_axi_params_BID(1'd0),
    .m_axi_params_BUSER(1'd0),
    .conv3_weights(conv3_weights_read_reg_369),
    .conv3_biases_0_0_val(empty_57_reg_434),
    .output_ftmap(output_ftmap_read_reg_364),
    .grp_fu_439_p_din0(grp_conv3_fu_283_grp_fu_439_p_din0),
    .grp_fu_439_p_din1(grp_conv3_fu_283_grp_fu_439_p_din1),
    .grp_fu_439_p_opcode(grp_conv3_fu_283_grp_fu_439_p_opcode),
    .grp_fu_439_p_dout0(grp_fu_439_p2),
    .grp_fu_439_p_ce(grp_conv3_fu_283_grp_fu_439_p_ce),
    .grp_fu_443_p_din0(grp_conv3_fu_283_grp_fu_443_p_din0),
    .grp_fu_443_p_din1(grp_conv3_fu_283_grp_fu_443_p_din1),
    .grp_fu_443_p_dout0(grp_fu_443_p2),
    .grp_fu_443_p_ce(grp_conv3_fu_283_grp_fu_443_p_ce)
);

srcnn_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_ftmap(input_ftmap),
    .conv1_weights(conv1_weights),
    .conv1_output_ftmap(conv1_output_ftmap),
    .conv2_weights(conv2_weights),
    .conv2_output_ftmap(conv2_output_ftmap),
    .conv3_weights(conv3_weights),
    .output_ftmap(output_ftmap),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

srcnn_input_r_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT_R_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
input_r_m_axi_U(
    .AWVALID(m_axi_input_r_AWVALID),
    .AWREADY(m_axi_input_r_AWREADY),
    .AWADDR(m_axi_input_r_AWADDR),
    .AWID(m_axi_input_r_AWID),
    .AWLEN(m_axi_input_r_AWLEN),
    .AWSIZE(m_axi_input_r_AWSIZE),
    .AWBURST(m_axi_input_r_AWBURST),
    .AWLOCK(m_axi_input_r_AWLOCK),
    .AWCACHE(m_axi_input_r_AWCACHE),
    .AWPROT(m_axi_input_r_AWPROT),
    .AWQOS(m_axi_input_r_AWQOS),
    .AWREGION(m_axi_input_r_AWREGION),
    .AWUSER(m_axi_input_r_AWUSER),
    .WVALID(m_axi_input_r_WVALID),
    .WREADY(m_axi_input_r_WREADY),
    .WDATA(m_axi_input_r_WDATA),
    .WSTRB(m_axi_input_r_WSTRB),
    .WLAST(m_axi_input_r_WLAST),
    .WID(m_axi_input_r_WID),
    .WUSER(m_axi_input_r_WUSER),
    .ARVALID(m_axi_input_r_ARVALID),
    .ARREADY(m_axi_input_r_ARREADY),
    .ARADDR(m_axi_input_r_ARADDR),
    .ARID(m_axi_input_r_ARID),
    .ARLEN(m_axi_input_r_ARLEN),
    .ARSIZE(m_axi_input_r_ARSIZE),
    .ARBURST(m_axi_input_r_ARBURST),
    .ARLOCK(m_axi_input_r_ARLOCK),
    .ARCACHE(m_axi_input_r_ARCACHE),
    .ARPROT(m_axi_input_r_ARPROT),
    .ARQOS(m_axi_input_r_ARQOS),
    .ARREGION(m_axi_input_r_ARREGION),
    .ARUSER(m_axi_input_r_ARUSER),
    .RVALID(m_axi_input_r_RVALID),
    .RREADY(m_axi_input_r_RREADY),
    .RDATA(m_axi_input_r_RDATA),
    .RLAST(m_axi_input_r_RLAST),
    .RID(m_axi_input_r_RID),
    .RUSER(m_axi_input_r_RUSER),
    .RRESP(m_axi_input_r_RRESP),
    .BVALID(m_axi_input_r_BVALID),
    .BREADY(m_axi_input_r_BREADY),
    .BRESP(m_axi_input_r_BRESP),
    .BID(m_axi_input_r_BID),
    .BUSER(m_axi_input_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(input_r_ARVALID),
    .I_ARREADY(input_r_ARREADY),
    .I_ARADDR(grp_conv1_fu_231_m_axi_input_r_ARADDR),
    .I_ARLEN(grp_conv1_fu_231_m_axi_input_r_ARLEN),
    .I_RVALID(input_r_RVALID),
    .I_RREADY(input_r_RREADY),
    .I_RDATA(input_r_RDATA),
    .I_RFIFONUM(input_r_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(input_r_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(input_r_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(input_r_BVALID),
    .I_BREADY(1'b0)
);

srcnn_output_r_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT_R_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
output_r_m_axi_U(
    .AWVALID(m_axi_output_r_AWVALID),
    .AWREADY(m_axi_output_r_AWREADY),
    .AWADDR(m_axi_output_r_AWADDR),
    .AWID(m_axi_output_r_AWID),
    .AWLEN(m_axi_output_r_AWLEN),
    .AWSIZE(m_axi_output_r_AWSIZE),
    .AWBURST(m_axi_output_r_AWBURST),
    .AWLOCK(m_axi_output_r_AWLOCK),
    .AWCACHE(m_axi_output_r_AWCACHE),
    .AWPROT(m_axi_output_r_AWPROT),
    .AWQOS(m_axi_output_r_AWQOS),
    .AWREGION(m_axi_output_r_AWREGION),
    .AWUSER(m_axi_output_r_AWUSER),
    .WVALID(m_axi_output_r_WVALID),
    .WREADY(m_axi_output_r_WREADY),
    .WDATA(m_axi_output_r_WDATA),
    .WSTRB(m_axi_output_r_WSTRB),
    .WLAST(m_axi_output_r_WLAST),
    .WID(m_axi_output_r_WID),
    .WUSER(m_axi_output_r_WUSER),
    .ARVALID(m_axi_output_r_ARVALID),
    .ARREADY(m_axi_output_r_ARREADY),
    .ARADDR(m_axi_output_r_ARADDR),
    .ARID(m_axi_output_r_ARID),
    .ARLEN(m_axi_output_r_ARLEN),
    .ARSIZE(m_axi_output_r_ARSIZE),
    .ARBURST(m_axi_output_r_ARBURST),
    .ARLOCK(m_axi_output_r_ARLOCK),
    .ARCACHE(m_axi_output_r_ARCACHE),
    .ARPROT(m_axi_output_r_ARPROT),
    .ARQOS(m_axi_output_r_ARQOS),
    .ARREGION(m_axi_output_r_ARREGION),
    .ARUSER(m_axi_output_r_ARUSER),
    .RVALID(m_axi_output_r_RVALID),
    .RREADY(m_axi_output_r_RREADY),
    .RDATA(m_axi_output_r_RDATA),
    .RLAST(m_axi_output_r_RLAST),
    .RID(m_axi_output_r_RID),
    .RUSER(m_axi_output_r_RUSER),
    .RRESP(m_axi_output_r_RRESP),
    .BVALID(m_axi_output_r_BVALID),
    .BREADY(m_axi_output_r_BREADY),
    .BRESP(m_axi_output_r_BRESP),
    .BID(m_axi_output_r_BID),
    .BUSER(m_axi_output_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(output_r_ARVALID),
    .I_ARREADY(output_r_ARREADY),
    .I_ARADDR(output_r_ARADDR),
    .I_ARLEN(output_r_ARLEN),
    .I_RVALID(output_r_RVALID),
    .I_RREADY(output_r_RREADY),
    .I_RDATA(output_r_RDATA),
    .I_RFIFONUM(output_r_RFIFONUM),
    .I_AWVALID(output_r_AWVALID),
    .I_AWREADY(output_r_AWREADY),
    .I_AWADDR(output_r_AWADDR),
    .I_AWLEN(output_r_AWLEN),
    .I_WVALID(output_r_WVALID),
    .I_WREADY(output_r_WREADY),
    .I_WDATA(output_r_WDATA),
    .I_WSTRB(output_r_WSTRB),
    .I_BVALID(output_r_BVALID),
    .I_BREADY(output_r_BREADY)
);

srcnn_params_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_PARAMS_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_PARAMS_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_PARAMS_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_PARAMS_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_PARAMS_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_PARAMS_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_PARAMS_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_PARAMS_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_PARAMS_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_PARAMS_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_PARAMS_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 9 ),
    .USER_DW( 32 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
params_m_axi_U(
    .AWVALID(m_axi_params_AWVALID),
    .AWREADY(m_axi_params_AWREADY),
    .AWADDR(m_axi_params_AWADDR),
    .AWID(m_axi_params_AWID),
    .AWLEN(m_axi_params_AWLEN),
    .AWSIZE(m_axi_params_AWSIZE),
    .AWBURST(m_axi_params_AWBURST),
    .AWLOCK(m_axi_params_AWLOCK),
    .AWCACHE(m_axi_params_AWCACHE),
    .AWPROT(m_axi_params_AWPROT),
    .AWQOS(m_axi_params_AWQOS),
    .AWREGION(m_axi_params_AWREGION),
    .AWUSER(m_axi_params_AWUSER),
    .WVALID(m_axi_params_WVALID),
    .WREADY(m_axi_params_WREADY),
    .WDATA(m_axi_params_WDATA),
    .WSTRB(m_axi_params_WSTRB),
    .WLAST(m_axi_params_WLAST),
    .WID(m_axi_params_WID),
    .WUSER(m_axi_params_WUSER),
    .ARVALID(m_axi_params_ARVALID),
    .ARREADY(m_axi_params_ARREADY),
    .ARADDR(m_axi_params_ARADDR),
    .ARID(m_axi_params_ARID),
    .ARLEN(m_axi_params_ARLEN),
    .ARSIZE(m_axi_params_ARSIZE),
    .ARBURST(m_axi_params_ARBURST),
    .ARLOCK(m_axi_params_ARLOCK),
    .ARCACHE(m_axi_params_ARCACHE),
    .ARPROT(m_axi_params_ARPROT),
    .ARQOS(m_axi_params_ARQOS),
    .ARREGION(m_axi_params_ARREGION),
    .ARUSER(m_axi_params_ARUSER),
    .RVALID(m_axi_params_RVALID),
    .RREADY(m_axi_params_RREADY),
    .RDATA(m_axi_params_RDATA),
    .RLAST(m_axi_params_RLAST),
    .RID(m_axi_params_RID),
    .RUSER(m_axi_params_RUSER),
    .RRESP(m_axi_params_RRESP),
    .BVALID(m_axi_params_BVALID),
    .BREADY(m_axi_params_BREADY),
    .BRESP(m_axi_params_BRESP),
    .BID(m_axi_params_BID),
    .BUSER(m_axi_params_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(params_ARVALID),
    .I_ARREADY(params_ARREADY),
    .I_ARADDR(params_ARADDR),
    .I_ARLEN(params_ARLEN),
    .I_RVALID(params_RVALID),
    .I_RREADY(params_RREADY),
    .I_RDATA(params_RDATA),
    .I_RFIFONUM(params_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(params_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(params_WREADY),
    .I_WDATA(32'd0),
    .I_WSTRB(4'd0),
    .I_BVALID(params_BVALID),
    .I_BREADY(1'b0)
);

srcnn_fadd_32ns_32ns_32_4_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_4_full_dsp_1_U132(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_439_p0),
    .din1(grp_fu_439_p1),
    .ce(grp_fu_439_ce),
    .dout(grp_fu_439_p2)
);

srcnn_fmul_32ns_32ns_32_3_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_3_max_dsp_1_U133(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_443_p0),
    .din1(grp_fu_443_p1),
    .ce(grp_fu_443_ce),
    .dout(grp_fu_443_p2)
);

srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U134(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_447_p0),
    .din1(grp_fu_447_p1),
    .ce(grp_fu_447_ce),
    .opcode(grp_fu_447_opcode),
    .dout(grp_fu_447_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv1_fu_231_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_conv1_fu_231_ap_start_reg <= 1'b1;
        end else if ((grp_conv1_fu_231_ap_ready == 1'b1)) begin
            grp_conv1_fu_231_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv2_fu_250_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_conv2_fu_250_ap_start_reg <= 1'b1;
        end else if ((grp_conv2_fu_250_ap_ready == 1'b1)) begin
            grp_conv2_fu_250_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv3_fu_283_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_conv3_fu_283_ap_start_reg <= 1'b1;
        end else if ((grp_conv3_fu_283_ap_ready == 1'b1)) begin
            grp_conv3_fu_283_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_srcnn_Pipeline_1_fu_210_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_srcnn_Pipeline_1_fu_210_ap_start_reg <= 1'b1;
        end else if ((grp_srcnn_Pipeline_1_fu_210_ap_ready == 1'b1)) begin
            grp_srcnn_Pipeline_1_fu_210_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_srcnn_Pipeline_2_fu_217_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state10)) begin
            grp_srcnn_Pipeline_2_fu_217_ap_start_reg <= 1'b1;
        end else if ((grp_srcnn_Pipeline_2_fu_217_ap_ready == 1'b1)) begin
            grp_srcnn_Pipeline_2_fu_217_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_srcnn_Pipeline_3_fu_224_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_srcnn_Pipeline_3_fu_224_ap_start_reg <= 1'b1;
        end else if ((grp_srcnn_Pipeline_3_fu_224_ap_ready == 1'b1)) begin
            grp_srcnn_Pipeline_3_fu_224_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        conv1_output_ftmap_read_reg_385 <= conv1_output_ftmap;
        conv1_weights_read_reg_391 <= conv1_weights;
        conv2_output_ftmap_read_reg_374 <= conv2_output_ftmap;
        conv2_weights_read_reg_380 <= conv2_weights;
        conv3_weights_read_reg_369 <= conv3_weights;
        input_ftmap_read_reg_396 <= input_ftmap;
        output_ftmap_read_reg_364 <= output_ftmap;
        trunc_ln1_reg_407 <= {{conv2_output_ftmap[63:2]}};
        trunc_ln2_reg_413 <= {{output_ftmap[63:2]}};
        trunc_ln_reg_401 <= {{conv1_output_ftmap[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        empty_57_reg_434 <= empty_57_fu_359_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_srcnn_Pipeline_2_fu_217_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

always @ (*) begin
    if (((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0))) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

assign ap_ST_fsm_state17_blk = 1'b0;

always @ (*) begin
    if ((grp_srcnn_Pipeline_3_fu_224_ap_done == 1'b0)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

always @ (*) begin
    if ((output_r_BVALID == 1'b0)) begin
        ap_ST_fsm_state23_blk = 1'b1;
    end else begin
        ap_ST_fsm_state23_blk = 1'b0;
    end
end

assign ap_ST_fsm_state24_blk = 1'b0;

always @ (*) begin
    if ((grp_conv1_fu_231_ap_done == 1'b0)) begin
        ap_ST_fsm_state25_blk = 1'b1;
    end else begin
        ap_ST_fsm_state25_blk = 1'b0;
    end
end

assign ap_ST_fsm_state26_blk = 1'b0;

always @ (*) begin
    if ((grp_conv2_fu_250_ap_done == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

assign ap_ST_fsm_state28_blk = 1'b0;

always @ (*) begin
    if ((grp_conv3_fu_283_ap_done == 1'b0)) begin
        ap_ST_fsm_state29_blk = 1'b1;
    end else begin
        ap_ST_fsm_state29_blk = 1'b0;
    end
end

always @ (*) begin
    if ((output_r_AWREADY == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_srcnn_Pipeline_1_fu_210_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if (((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0))) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_conv3_fu_283_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_conv3_fu_283_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_439_ce = grp_conv3_fu_283_grp_fu_439_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_439_ce = grp_conv2_fu_250_grp_fu_439_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_439_ce = grp_conv1_fu_231_grp_fu_439_p_ce;
    end else begin
        grp_fu_439_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_439_p0 = grp_conv3_fu_283_grp_fu_439_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_439_p0 = grp_conv2_fu_250_grp_fu_439_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_439_p0 = grp_conv1_fu_231_grp_fu_439_p_din0;
    end else begin
        grp_fu_439_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_439_p1 = grp_conv3_fu_283_grp_fu_439_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_439_p1 = grp_conv2_fu_250_grp_fu_439_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_439_p1 = grp_conv1_fu_231_grp_fu_439_p_din1;
    end else begin
        grp_fu_439_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_443_ce = grp_conv3_fu_283_grp_fu_443_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_443_ce = grp_conv2_fu_250_grp_fu_443_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_443_ce = grp_conv1_fu_231_grp_fu_443_p_ce;
    end else begin
        grp_fu_443_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_443_p0 = grp_conv3_fu_283_grp_fu_443_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_443_p0 = grp_conv2_fu_250_grp_fu_443_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_443_p0 = grp_conv1_fu_231_grp_fu_443_p_din0;
    end else begin
        grp_fu_443_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        grp_fu_443_p1 = grp_conv3_fu_283_grp_fu_443_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_443_p1 = grp_conv2_fu_250_grp_fu_443_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_443_p1 = grp_conv1_fu_231_grp_fu_443_p_din1;
    end else begin
        grp_fu_443_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_447_ce = grp_conv2_fu_250_grp_fu_447_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_447_ce = grp_conv1_fu_231_grp_fu_447_p_ce;
    end else begin
        grp_fu_447_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_447_opcode = grp_conv2_fu_250_grp_fu_447_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_447_opcode = grp_conv1_fu_231_grp_fu_447_p_opcode;
    end else begin
        grp_fu_447_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_447_p0 = grp_conv2_fu_250_grp_fu_447_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_447_p0 = grp_conv1_fu_231_grp_fu_447_p_din0;
    end else begin
        grp_fu_447_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        grp_fu_447_p1 = grp_conv2_fu_250_grp_fu_447_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        grp_fu_447_p1 = grp_conv1_fu_231_grp_fu_447_p_din1;
    end else begin
        grp_fu_447_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        input_r_ARVALID = grp_conv1_fu_231_m_axi_input_r_ARVALID;
    end else begin
        input_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        input_r_RREADY = grp_conv1_fu_231_m_axi_input_r_RREADY;
    end else begin
        input_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_ARADDR = grp_conv3_fu_283_m_axi_output_r_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_ARADDR = grp_conv2_fu_250_m_axi_output_r_ARADDR;
    end else begin
        output_r_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_ARLEN = grp_conv3_fu_283_m_axi_output_r_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_ARLEN = grp_conv2_fu_250_m_axi_output_r_ARLEN;
    end else begin
        output_r_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_ARVALID = grp_conv3_fu_283_m_axi_output_r_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_ARVALID = grp_conv2_fu_250_m_axi_output_r_ARVALID;
    end else begin
        output_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        output_r_AWADDR = sext_ln39_fu_349_p1;
    end else if ((~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        output_r_AWADDR = sext_ln38_fu_339_p1;
    end else if (((output_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        output_r_AWADDR = sext_ln37_fu_329_p1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_AWADDR = grp_conv3_fu_283_m_axi_output_r_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_AWADDR = grp_conv2_fu_250_m_axi_output_r_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        output_r_AWADDR = grp_conv1_fu_231_m_axi_output_r_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        output_r_AWADDR = grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_r_AWADDR = grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_AWADDR = grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWADDR;
    end else begin
        output_r_AWADDR = 'bx;
    end
end

always @ (*) begin
    if ((~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
        output_r_AWLEN = 32'd65025;
    end else if ((~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
        output_r_AWLEN = 32'd2080800;
    end else if (((output_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        output_r_AWLEN = 32'd4161600;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_AWLEN = grp_conv3_fu_283_m_axi_output_r_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_AWLEN = grp_conv2_fu_250_m_axi_output_r_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        output_r_AWLEN = grp_conv1_fu_231_m_axi_output_r_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        output_r_AWLEN = grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_r_AWLEN = grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_AWLEN = grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWLEN;
    end else begin
        output_r_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9)) | ((output_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        output_r_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_AWVALID = grp_conv3_fu_283_m_axi_output_r_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_AWVALID = grp_conv2_fu_250_m_axi_output_r_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        output_r_AWVALID = grp_conv1_fu_231_m_axi_output_r_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        output_r_AWVALID = grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_r_AWVALID = grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_AWVALID = grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_AWVALID;
    end else begin
        output_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state23) & (output_r_BVALID == 1'b1)) | (~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16)) | (~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9)))) begin
        output_r_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_BREADY = grp_conv3_fu_283_m_axi_output_r_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_BREADY = grp_conv2_fu_250_m_axi_output_r_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        output_r_BREADY = grp_conv1_fu_231_m_axi_output_r_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        output_r_BREADY = grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_r_BREADY = grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_BREADY = grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_BREADY;
    end else begin
        output_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_RREADY = grp_conv3_fu_283_m_axi_output_r_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_RREADY = grp_conv2_fu_250_m_axi_output_r_RREADY;
    end else begin
        output_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_WDATA = grp_conv3_fu_283_m_axi_output_r_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_WDATA = grp_conv2_fu_250_m_axi_output_r_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        output_r_WDATA = grp_conv1_fu_231_m_axi_output_r_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        output_r_WDATA = grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_r_WDATA = grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_WDATA = grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WDATA;
    end else begin
        output_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_WSTRB = grp_conv3_fu_283_m_axi_output_r_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_WSTRB = grp_conv2_fu_250_m_axi_output_r_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        output_r_WSTRB = grp_conv1_fu_231_m_axi_output_r_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        output_r_WSTRB = grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_r_WSTRB = grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_WSTRB = grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WSTRB;
    end else begin
        output_r_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        output_r_WVALID = grp_conv3_fu_283_m_axi_output_r_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        output_r_WVALID = grp_conv2_fu_250_m_axi_output_r_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        output_r_WVALID = grp_conv1_fu_231_m_axi_output_r_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        output_r_WVALID = grp_srcnn_Pipeline_3_fu_224_m_axi_output_r_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        output_r_WVALID = grp_srcnn_Pipeline_2_fu_217_m_axi_output_r_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        output_r_WVALID = grp_srcnn_Pipeline_1_fu_210_m_axi_output_r_WVALID;
    end else begin
        output_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state2))) begin
        output_r_blk_n_AW = m_axi_output_r_AWREADY;
    end else begin
        output_r_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state9))) begin
        output_r_blk_n_B = m_axi_output_r_BVALID;
    end else begin
        output_r_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        params_ARADDR = grp_conv3_fu_283_m_axi_params_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        params_ARADDR = grp_conv2_fu_250_m_axi_params_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        params_ARADDR = grp_conv1_fu_231_m_axi_params_ARADDR;
    end else begin
        params_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        params_ARLEN = grp_conv3_fu_283_m_axi_params_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        params_ARLEN = grp_conv2_fu_250_m_axi_params_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        params_ARLEN = grp_conv1_fu_231_m_axi_params_ARLEN;
    end else begin
        params_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        params_ARVALID = grp_conv3_fu_283_m_axi_params_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        params_ARVALID = grp_conv2_fu_250_m_axi_params_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        params_ARVALID = grp_conv1_fu_231_m_axi_params_ARVALID;
    end else begin
        params_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state29))) begin
        params_RREADY = grp_conv3_fu_283_m_axi_params_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26))) begin
        params_RREADY = grp_conv2_fu_250_m_axi_params_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24))) begin
        params_RREADY = grp_conv1_fu_231_m_axi_params_RREADY;
    end else begin
        params_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((output_r_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_srcnn_Pipeline_1_fu_210_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if ((~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_srcnn_Pipeline_2_fu_217_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if ((~((output_r_AWREADY == 1'b0) | (output_r_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_srcnn_Pipeline_3_fu_224_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((1'b1 == ap_CS_fsm_state23) & (output_r_BVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_conv1_fu_231_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_conv2_fu_250_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((grp_conv3_fu_283_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign conv1_biases_address0 = grp_conv1_fu_231_conv1_biases_address0;

assign conv1_biases_ce0 = grp_conv1_fu_231_conv1_biases_ce0;

assign conv2_biases_address0 = grp_conv2_fu_250_conv2_biases_address0;

assign conv2_biases_ce0 = grp_conv2_fu_250_conv2_biases_ce0;

assign empty_57_fu_359_p1 = conv3_biases;

assign grp_conv1_fu_231_ap_start = grp_conv1_fu_231_ap_start_reg;

assign grp_conv2_fu_250_ap_start = grp_conv2_fu_250_ap_start_reg;

assign grp_conv3_fu_283_ap_start = grp_conv3_fu_283_ap_start_reg;

assign grp_srcnn_Pipeline_1_fu_210_ap_start = grp_srcnn_Pipeline_1_fu_210_ap_start_reg;

assign grp_srcnn_Pipeline_2_fu_217_ap_start = grp_srcnn_Pipeline_2_fu_217_ap_start_reg;

assign grp_srcnn_Pipeline_3_fu_224_ap_start = grp_srcnn_Pipeline_3_fu_224_ap_start_reg;

assign sext_ln37_fu_329_p1 = $signed(trunc_ln_reg_401);

assign sext_ln38_fu_339_p1 = $signed(trunc_ln1_reg_407);

assign sext_ln39_fu_349_p1 = $signed(trunc_ln2_reg_413);

endmodule //srcnn
