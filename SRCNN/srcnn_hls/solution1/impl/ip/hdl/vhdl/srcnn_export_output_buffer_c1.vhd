-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_export_output_buffer_c1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_i2_AWVALID : OUT STD_LOGIC;
    m_axi_i2_AWREADY : IN STD_LOGIC;
    m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WVALID : OUT STD_LOGIC;
    m_axi_i2_WREADY : IN STD_LOGIC;
    m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_WLAST : OUT STD_LOGIC;
    m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARVALID : OUT STD_LOGIC;
    m_axi_i2_ARREADY : IN STD_LOGIC;
    m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RVALID : IN STD_LOGIC;
    m_axi_i2_RREADY : OUT STD_LOGIC;
    m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_i2_RLAST : IN STD_LOGIC;
    m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BVALID : IN STD_LOGIC;
    m_axi_i2_BREADY : OUT STD_LOGIC;
    m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    biases : IN STD_LOGIC_VECTOR (63 downto 0);
    out_r : IN STD_LOGIC_VECTOR (5 downto 0);
    h : IN STD_LOGIC_VECTOR (7 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of srcnn_export_output_buffer_c1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (32 downto 0) := "000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (32 downto 0) := "000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (32 downto 0) := "000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (32 downto 0) := "000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (32 downto 0) := "000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (32 downto 0) := "000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (32 downto 0) := "000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (32 downto 0) := "000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (32 downto 0) := "001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (32 downto 0) := "010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv25_3F804 : STD_LOGIC_VECTOR (24 downto 0) := "0000000111111100000000100";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i2_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal i2_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal icmp_ln135_reg_759 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal gmem_addr_reg_693 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal zext_ln134_fu_307_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln134_reg_704 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln134_1_fu_311_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln134_1_reg_709 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln138_1_fu_320_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln138_1_reg_714 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln134_1_fu_333_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln134_1_reg_725 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln138_fu_362_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln138_reg_730 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln134_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln141_fu_386_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln141_reg_743 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_319_fu_392_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_319_reg_748 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln141_fu_396_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln141_reg_754 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln135_fu_400_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln135_1_fu_410_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln135_1_reg_763 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln4_reg_769 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln138_4_fu_513_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln138_4_reg_775 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln141_1_fu_518_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln141_1_reg_780 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln135_2_fu_545_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln135_2_reg_790 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln148_1_reg_799 : STD_LOGIC_VECTOR (61 downto 0);
    signal icmp_ln135_1_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln135_fu_566_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln135_reg_805 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln71_fu_595_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln71_reg_818 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal sub_ln76_fu_617_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln76_reg_823 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln71_fu_589_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln76_fu_623_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln76_reg_828 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln72_fu_627_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln72_reg_833 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal add_ln72_1_fu_637_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln72_1_reg_837 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln76_1_fu_643_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln76_1_reg_842 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln72_2_fu_660_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln72_2_reg_847 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal add_ln72_fu_671_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln72_reg_855 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln72_1_fu_665_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WLAST : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_RREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_BREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_ce : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WLAST : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARVALID : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_RREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_BREADY : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_done : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_idle : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_ready : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : STD_LOGIC;
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal bh_reg_178 : STD_LOGIC_VECTOR (4 downto 0);
    signal h_1_reg_190 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start_reg : STD_LOGIC := '0';
    signal grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state20_ignore_call0 : BOOLEAN;
    signal grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start_reg : STD_LOGIC := '0';
    signal grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal sext_ln134_fu_292_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln148_fu_521_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln148_1_fu_576_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state20 : BOOLEAN;
    signal bout_fu_118 : STD_LOGIC_VECTOR (3 downto 0);
    signal o_fu_122 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state31_on_subcall_done : BOOLEAN;
    signal shl_ln_fu_264_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln134_2_fu_272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln134_fu_276_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_fu_282_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln138_5_fu_314_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln134_3_fu_339_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_318_fu_343_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln138_fu_352_p0 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln138_fu_352_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln138_fu_352_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln138_fu_358_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_8_fu_375_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln141_1_fu_382_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln141_fu_372_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln141_2_fu_406_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln135_fu_416_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln138_1_fu_420_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_425_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln138_1_fu_437_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln138_2_fu_433_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln138_3_fu_445_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln138_fu_449_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln138_fu_455_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln138_2_fu_459_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln138_3_fu_474_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln138_2_fu_479_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln138_3_fu_491_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln138_4_fu_487_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln138_5_fu_499_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln138_1_fu_503_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln138_1_fu_509_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln135_fu_531_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln135_fu_535_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln141_3_fu_541_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_9_fu_605_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln76_1_fu_613_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln76_fu_601_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln76_2_fu_633_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln72_fu_646_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln72_fu_650_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln76_3_fu_656_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_860_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_860_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_860_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_860_ce : STD_LOGIC;
    signal grp_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_864_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_864_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_864_ce : STD_LOGIC;
    signal grp_fu_864_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal mul_ln138_fu_352_p00 : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_export_output_buffer_c1_Pipeline_RELU IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_10 : IN STD_LOGIC_VECTOR (6 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_860_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_ce : OUT STD_LOGIC;
        grp_fu_864_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_864_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_864_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_864_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_864_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_export_output_buffer_c1_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i2_AWVALID : OUT STD_LOGIC;
        m_axi_i2_AWREADY : IN STD_LOGIC;
        m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WVALID : OUT STD_LOGIC;
        m_axi_i2_WREADY : IN STD_LOGIC;
        m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_WLAST : OUT STD_LOGIC;
        m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARVALID : OUT STD_LOGIC;
        m_axi_i2_ARREADY : IN STD_LOGIC;
        m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RVALID : IN STD_LOGIC;
        m_axi_i2_RREADY : OUT STD_LOGIC;
        m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_RLAST : IN STD_LOGIC;
        m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BVALID : IN STD_LOGIC;
        m_axi_i2_BREADY : OUT STD_LOGIC;
        m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln148 : IN STD_LOGIC_VECTOR (61 downto 0);
        tmp_10 : IN STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_export_output_buffer_c1_Pipeline_RELU1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_15 : IN STD_LOGIC_VECTOR (6 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_860_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_860_p_ce : OUT STD_LOGIC;
        grp_fu_864_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_864_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_864_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_864_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_864_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_export_output_buffer_c1_Pipeline_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_i2_AWVALID : OUT STD_LOGIC;
        m_axi_i2_AWREADY : IN STD_LOGIC;
        m_axi_i2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WVALID : OUT STD_LOGIC;
        m_axi_i2_WREADY : IN STD_LOGIC;
        m_axi_i2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_WLAST : OUT STD_LOGIC;
        m_axi_i2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARVALID : OUT STD_LOGIC;
        m_axi_i2_ARREADY : IN STD_LOGIC;
        m_axi_i2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_i2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_i2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_i2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RVALID : IN STD_LOGIC;
        m_axi_i2_RREADY : OUT STD_LOGIC;
        m_axi_i2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_i2_RLAST : IN STD_LOGIC;
        m_axi_i2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_i2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BVALID : IN STD_LOGIC;
        m_axi_i2_BREADY : OUT STD_LOGIC;
        m_axi_i2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_i2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_i2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln148_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        tmp_15 : IN STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_export_output_buffer_c1_Pipeline_BW IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_11 : IN STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_export_output_buffer_c1_Pipeline_BW2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_13 : IN STD_LOGIC_VECTOR (6 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 : OUT STD_LOGIC;
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_mul_7ns_19ns_25_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (24 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_export_output_buffer_c1_Pipeline_RELU_fu_202 : component srcnn_export_output_buffer_c1_Pipeline_RELU
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_ready,
        tmp_10 => add_ln135_1_reg_763,
        empty => empty_319_reg_748,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1,
        grp_fu_860_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din0,
        grp_fu_860_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din1,
        grp_fu_860_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_opcode,
        grp_fu_860_p_dout0 => grp_fu_860_p2,
        grp_fu_860_p_ce => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_ce,
        grp_fu_864_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din0,
        grp_fu_864_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din1,
        grp_fu_864_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_opcode,
        grp_fu_864_p_dout0 => grp_fu_864_p2,
        grp_fu_864_p_ce => grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_ce);

    grp_export_output_buffer_c1_Pipeline_2_fu_212 : component srcnn_export_output_buffer_c1_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_ready,
        m_axi_i2_AWVALID => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWVALID,
        m_axi_i2_AWREADY => m_axi_i2_AWREADY,
        m_axi_i2_AWADDR => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWADDR,
        m_axi_i2_AWID => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWID,
        m_axi_i2_AWLEN => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLEN,
        m_axi_i2_AWSIZE => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWSIZE,
        m_axi_i2_AWBURST => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWBURST,
        m_axi_i2_AWLOCK => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLOCK,
        m_axi_i2_AWCACHE => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWCACHE,
        m_axi_i2_AWPROT => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWPROT,
        m_axi_i2_AWQOS => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWQOS,
        m_axi_i2_AWREGION => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWREGION,
        m_axi_i2_AWUSER => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWUSER,
        m_axi_i2_WVALID => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WVALID,
        m_axi_i2_WREADY => m_axi_i2_WREADY,
        m_axi_i2_WDATA => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WDATA,
        m_axi_i2_WSTRB => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WSTRB,
        m_axi_i2_WLAST => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WLAST,
        m_axi_i2_WID => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WID,
        m_axi_i2_WUSER => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WUSER,
        m_axi_i2_ARVALID => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARVALID,
        m_axi_i2_ARREADY => ap_const_logic_0,
        m_axi_i2_ARADDR => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARADDR,
        m_axi_i2_ARID => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARID,
        m_axi_i2_ARLEN => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARLEN,
        m_axi_i2_ARSIZE => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARSIZE,
        m_axi_i2_ARBURST => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARBURST,
        m_axi_i2_ARLOCK => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARLOCK,
        m_axi_i2_ARCACHE => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARCACHE,
        m_axi_i2_ARPROT => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARPROT,
        m_axi_i2_ARQOS => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARQOS,
        m_axi_i2_ARREGION => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARREGION,
        m_axi_i2_ARUSER => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_ARUSER,
        m_axi_i2_RVALID => ap_const_logic_0,
        m_axi_i2_RREADY => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_RREADY,
        m_axi_i2_RDATA => ap_const_lv32_0,
        m_axi_i2_RLAST => ap_const_logic_0,
        m_axi_i2_RID => ap_const_lv1_0,
        m_axi_i2_RFIFONUM => ap_const_lv13_0,
        m_axi_i2_RUSER => ap_const_lv1_0,
        m_axi_i2_RRESP => ap_const_lv2_0,
        m_axi_i2_BVALID => m_axi_i2_BVALID,
        m_axi_i2_BREADY => grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_BREADY,
        m_axi_i2_BRESP => m_axi_i2_BRESP,
        m_axi_i2_BID => m_axi_i2_BID,
        m_axi_i2_BUSER => m_axi_i2_BUSER,
        sext_ln148 => trunc_ln4_reg_769,
        tmp_10 => add_ln135_1_reg_763,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0);

    grp_export_output_buffer_c1_Pipeline_RELU1_fu_224 : component srcnn_export_output_buffer_c1_Pipeline_RELU1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_ready,
        tmp_15 => add_ln135_2_reg_790,
        empty => empty_319_reg_748,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q1,
        grp_fu_860_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din0,
        grp_fu_860_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din1,
        grp_fu_860_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_opcode,
        grp_fu_860_p_dout0 => grp_fu_860_p2,
        grp_fu_860_p_ce => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_ce,
        grp_fu_864_p_din0 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din0,
        grp_fu_864_p_din1 => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din1,
        grp_fu_864_p_opcode => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_opcode,
        grp_fu_864_p_dout0 => grp_fu_864_p2,
        grp_fu_864_p_ce => grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_ce);

    grp_export_output_buffer_c1_Pipeline_4_fu_234 : component srcnn_export_output_buffer_c1_Pipeline_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_ready,
        m_axi_i2_AWVALID => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWVALID,
        m_axi_i2_AWREADY => m_axi_i2_AWREADY,
        m_axi_i2_AWADDR => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWADDR,
        m_axi_i2_AWID => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWID,
        m_axi_i2_AWLEN => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLEN,
        m_axi_i2_AWSIZE => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWSIZE,
        m_axi_i2_AWBURST => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWBURST,
        m_axi_i2_AWLOCK => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLOCK,
        m_axi_i2_AWCACHE => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWCACHE,
        m_axi_i2_AWPROT => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWPROT,
        m_axi_i2_AWQOS => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWQOS,
        m_axi_i2_AWREGION => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWREGION,
        m_axi_i2_AWUSER => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWUSER,
        m_axi_i2_WVALID => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WVALID,
        m_axi_i2_WREADY => m_axi_i2_WREADY,
        m_axi_i2_WDATA => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WDATA,
        m_axi_i2_WSTRB => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WSTRB,
        m_axi_i2_WLAST => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WLAST,
        m_axi_i2_WID => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WID,
        m_axi_i2_WUSER => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WUSER,
        m_axi_i2_ARVALID => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARVALID,
        m_axi_i2_ARREADY => ap_const_logic_0,
        m_axi_i2_ARADDR => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARADDR,
        m_axi_i2_ARID => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARID,
        m_axi_i2_ARLEN => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARLEN,
        m_axi_i2_ARSIZE => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARSIZE,
        m_axi_i2_ARBURST => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARBURST,
        m_axi_i2_ARLOCK => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARLOCK,
        m_axi_i2_ARCACHE => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARCACHE,
        m_axi_i2_ARPROT => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARPROT,
        m_axi_i2_ARQOS => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARQOS,
        m_axi_i2_ARREGION => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARREGION,
        m_axi_i2_ARUSER => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_ARUSER,
        m_axi_i2_RVALID => ap_const_logic_0,
        m_axi_i2_RREADY => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_RREADY,
        m_axi_i2_RDATA => ap_const_lv32_0,
        m_axi_i2_RLAST => ap_const_logic_0,
        m_axi_i2_RID => ap_const_lv1_0,
        m_axi_i2_RFIFONUM => ap_const_lv13_0,
        m_axi_i2_RUSER => ap_const_lv1_0,
        m_axi_i2_RRESP => ap_const_lv2_0,
        m_axi_i2_BVALID => m_axi_i2_BVALID,
        m_axi_i2_BREADY => grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_BREADY,
        m_axi_i2_BRESP => m_axi_i2_BRESP,
        m_axi_i2_BID => m_axi_i2_BID,
        m_axi_i2_BUSER => m_axi_i2_BUSER,
        sext_ln148_1 => trunc_ln148_1_reg_799,
        tmp_15 => add_ln135_2_reg_790,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_q0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0 => conv1_float_255_255_float_1_9_9_float_float_255_255_ou_q0);

    grp_export_output_buffer_c1_Pipeline_BW_fu_246 : component srcnn_export_output_buffer_c1_Pipeline_BW
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_ready,
        tmp_11 => add_ln72_1_reg_837,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0);

    grp_export_output_buffer_c1_Pipeline_BW2_fu_255 : component srcnn_export_output_buffer_c1_Pipeline_BW2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start,
        ap_done => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_done,
        ap_idle => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_idle,
        ap_ready => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_ready,
        tmp_13 => add_ln72_2_reg_847,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0,
        conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 => grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0);

    mul_7ns_19ns_25_1_1_U129 : component srcnn_mul_7ns_19ns_25_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 19,
        dout_WIDTH => 25)
    port map (
        din0 => mul_ln138_fu_352_p0,
        din1 => mul_ln138_fu_352_p1,
        dout => mul_ln138_fu_352_p2);

    fadd_32ns_32ns_32_4_full_dsp_1_U130 : component srcnn_fadd_32ns_32ns_32_4_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_860_p0,
        din1 => grp_fu_860_p1,
        ce => grp_fu_860_ce,
        dout => grp_fu_860_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U131 : component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_864_p0,
        din1 => grp_fu_864_p1,
        ce => grp_fu_864_ce,
        opcode => grp_fu_864_opcode,
        dout => grp_fu_864_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                    grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln72_fu_627_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
                    grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0))) and (icmp_ln135_1_fu_551_p2 = ap_const_lv1_0) and (icmp_ln135_reg_759 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then 
                    grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln135_fu_400_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                    grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_ready = ap_const_logic_1)) then 
                    grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bh_reg_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (m_axi_gmem_RVALID = ap_const_logic_1))) then 
                bh_reg_178 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state28) and (m_axi_i2_BVALID = ap_const_logic_1))) then 
                bh_reg_178 <= add_ln135_reg_805;
            end if; 
        end if;
    end process;

    bout_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                bout_fu_118 <= ap_const_lv4_0;
            elsif ((not(((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20) and ((icmp_ln135_1_fu_551_p2 = ap_const_lv1_1) or (icmp_ln135_reg_759 = ap_const_lv1_0)))) then 
                bout_fu_118 <= add_ln134_1_reg_725;
            end if; 
        end if;
    end process;

    h_1_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln71_fu_589_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                h_1_reg_190 <= ap_const_lv5_0;
            elsif (((grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                h_1_reg_190 <= add_ln72_reg_855;
            end if; 
        end if;
    end process;

    o_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln134_fu_327_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                o_fu_122 <= ap_const_lv4_0;
            elsif (((ap_const_boolean_0 = ap_block_state31_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln72_1_fu_665_p2 = ap_const_lv1_1) or (icmp_ln72_reg_833 = ap_const_lv1_0)))) then 
                o_fu_122 <= add_ln71_reg_818;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                add_ln134_1_reg_725 <= add_ln134_1_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_fu_400_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                add_ln135_1_reg_763 <= add_ln135_1_fu_410_p2;
                add_ln138_4_reg_775 <= add_ln138_4_fu_513_p2;
                trunc_ln141_1_reg_780 <= trunc_ln141_1_fu_518_p1;
                trunc_ln4_reg_769 <= add_ln138_2_fu_459_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_reg_759 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                add_ln135_2_reg_790 <= add_ln135_2_fu_545_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln135_1_fu_551_p2 = ap_const_lv1_0) and (icmp_ln135_reg_759 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                add_ln135_reg_805 <= add_ln135_fu_566_p2;
                trunc_ln148_1_reg_799 <= add_ln138_4_reg_775(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln134_fu_327_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                add_ln138_reg_730 <= add_ln138_fu_362_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                add_ln71_reg_818 <= add_ln71_fu_595_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_fu_627_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                add_ln72_1_reg_837 <= add_ln72_1_fu_637_p2;
                trunc_ln76_1_reg_842 <= trunc_ln76_1_fu_643_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                add_ln72_2_reg_847 <= add_ln72_2_fu_660_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln72_1_fu_665_p2 = ap_const_lv1_0) and (icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                add_ln72_reg_855 <= add_ln72_fu_671_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                empty_319_reg_748 <= empty_319_fu_392_p1;
                sub_ln141_reg_743 <= sub_ln141_fu_386_p2;
                trunc_ln141_reg_754 <= trunc_ln141_fu_396_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                gmem_addr_reg_693 <= sext_ln134_fu_292_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln135_reg_759 <= icmp_ln135_fu_400_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                icmp_ln72_reg_833 <= icmp_ln72_fu_627_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln71_fu_589_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                sub_ln76_reg_823 <= sub_ln76_fu_617_p2;
                trunc_ln76_reg_828 <= trunc_ln76_fu_623_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                    zext_ln134_1_reg_709(5 downto 0) <= zext_ln134_1_fu_311_p1(5 downto 0);
                    zext_ln134_reg_704(7 downto 0) <= zext_ln134_fu_307_p1(7 downto 0);
                    zext_ln138_1_reg_714(7 downto 0) <= zext_ln138_1_fu_320_p1(7 downto 0);
            end if;
        end if;
    end process;
    zext_ln134_reg_704(8) <= '0';
    zext_ln134_1_reg_709(6) <= '0';
    zext_ln138_1_reg_714(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_i2_AWREADY, m_axi_i2_BVALID, m_axi_gmem_ARREADY, m_axi_gmem_RVALID, ap_CS_fsm_state13, ap_CS_fsm_state20, icmp_ln135_reg_759, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state10, icmp_ln134_fu_327_p2, icmp_ln135_fu_400_p2, ap_CS_fsm_state12, icmp_ln135_1_fu_551_p2, ap_CS_fsm_state29, icmp_ln71_fu_589_p2, icmp_ln72_reg_833, ap_CS_fsm_state31, icmp_ln72_1_fu_665_p2, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done, grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_done, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done, grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_done, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_done, ap_CS_fsm_state33, ap_CS_fsm_state15, ap_CS_fsm_state23, ap_block_state31_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (m_axi_gmem_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((icmp_ln134_fu_327_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (m_axi_gmem_RVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((icmp_ln135_fu_400_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if ((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if ((not(((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state20) and ((icmp_ln135_1_fu_551_p2 = ap_const_lv1_1) or (icmp_ln135_reg_759 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif ((not(((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0))) and (icmp_ln135_1_fu_551_p2 = ap_const_lv1_0) and (icmp_ln135_reg_759 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if ((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state24;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state28) and (m_axi_i2_BVALID = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state29 => 
                if (((icmp_ln71_fu_589_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((ap_const_boolean_0 = ap_block_state31_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state31) and ((icmp_ln72_1_fu_665_p2 = ap_const_lv1_1) or (icmp_ln72_reg_833 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                elsif (((ap_const_boolean_0 = ap_block_state31_on_subcall_done) and (icmp_ln72_1_fu_665_p2 = ap_const_lv1_0) and (icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                if (((grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state33;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln134_1_fu_333_p2 <= std_logic_vector(unsigned(bout_fu_118) + unsigned(ap_const_lv4_1));
    add_ln134_fu_276_p2 <= std_logic_vector(unsigned(zext_ln134_2_fu_272_p1) + unsigned(biases));
    add_ln135_1_fu_410_p2 <= std_logic_vector(unsigned(trunc_ln141_reg_754) + unsigned(zext_ln141_2_fu_406_p1));
    add_ln135_2_fu_545_p2 <= std_logic_vector(unsigned(trunc_ln141_1_reg_780) + unsigned(zext_ln141_3_fu_541_p1));
    add_ln135_fu_566_p2 <= std_logic_vector(unsigned(bh_reg_178) + unsigned(ap_const_lv5_2));
    add_ln138_1_fu_420_p2 <= std_logic_vector(unsigned(zext_ln135_fu_416_p1) + unsigned(zext_ln134_reg_704));
    add_ln138_2_fu_459_p2 <= std_logic_vector(signed(sext_ln138_fu_455_p1) + signed(add_ln138_reg_730));
    add_ln138_3_fu_474_p2 <= std_logic_vector(unsigned(zext_ln138_1_reg_714) + unsigned(zext_ln135_fu_416_p1));
    add_ln138_4_fu_513_p2 <= std_logic_vector(signed(sext_ln138_1_fu_509_p1) + signed(add_ln138_reg_730));
    add_ln138_5_fu_314_p2 <= std_logic_vector(unsigned(h) + unsigned(ap_const_lv8_1));
    add_ln138_fu_362_p2 <= std_logic_vector(unsigned(zext_ln138_fu_358_p1) + unsigned(output_ftmap));
    add_ln71_fu_595_p2 <= std_logic_vector(unsigned(o_fu_122) + unsigned(ap_const_lv4_1));
    add_ln72_1_fu_637_p2 <= std_logic_vector(unsigned(trunc_ln76_reg_828) + unsigned(zext_ln76_2_fu_633_p1));
    add_ln72_2_fu_660_p2 <= std_logic_vector(unsigned(trunc_ln76_1_reg_842) + unsigned(zext_ln76_3_fu_656_p1));
    add_ln72_fu_671_p2 <= std_logic_vector(unsigned(h_1_reg_190) + unsigned(ap_const_lv5_2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state13_blk_assign_proc : process(m_axi_i2_AWREADY, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done)
    begin
        if (((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state13_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state13_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_done)
    begin
        if ((grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(m_axi_i2_BVALID, icmp_ln135_reg_759)
    begin
        if (((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state21_blk_assign_proc : process(m_axi_i2_AWREADY, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done)
    begin
        if (((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done = ap_const_logic_0))) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;

    ap_ST_fsm_state23_blk_assign_proc : process(grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_done)
    begin
        if ((grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state23_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state23_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;

    ap_ST_fsm_state28_blk_assign_proc : process(m_axi_i2_BVALID)
    begin
        if ((m_axi_i2_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state28_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state28_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;

    ap_ST_fsm_state31_blk_assign_proc : process(ap_block_state31_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state31_on_subcall_done)) then 
            ap_ST_fsm_state31_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state31_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state32_blk <= ap_const_logic_0;

    ap_ST_fsm_state33_blk_assign_proc : process(grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_done)
    begin
        if ((grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state33_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state33_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state20_assign_proc : process(m_axi_i2_BVALID, icmp_ln135_reg_759)
    begin
                ap_block_state20 <= ((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0));
    end process;


    ap_block_state20_ignore_call0_assign_proc : process(m_axi_i2_BVALID, icmp_ln135_reg_759)
    begin
                ap_block_state20_ignore_call0 <= ((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0));
    end process;


    ap_block_state31_on_subcall_done_assign_proc : process(icmp_ln72_reg_833, grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_done)
    begin
                ap_block_state31_on_subcall_done <= ((grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_done = ap_const_logic_0) and (icmp_ln72_reg_833 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state29, icmp_ln71_fu_589_p2)
    begin
        if ((((icmp_ln71_fu_589_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state29, icmp_ln71_fu_589_p2)
    begin
        if (((icmp_ln71_fu_589_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0, ap_CS_fsm_state33, ap_CS_fsm_state15, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0, ap_CS_fsm_state33, ap_CS_fsm_state15, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0, ap_CS_fsm_state33, ap_CS_fsm_state15, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_address1 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0, ap_CS_fsm_state33, ap_CS_fsm_state15, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_Pipeline_4_fu_234_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_Pipeline_2_fu_212_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, icmp_ln72_reg_833, ap_CS_fsm_state31, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0, ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        elsif (((icmp_ln72_reg_833 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0;
        else 
            conv1_float_255_255_float_1_9_9_float_float_255_255_ou_we0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_318_fu_343_p2 <= std_logic_vector(unsigned(zext_ln134_3_fu_339_p1) + unsigned(zext_ln134_1_reg_709));
    empty_319_fu_392_p1 <= m_axi_gmem_RDATA;

    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start <= grp_export_output_buffer_c1_Pipeline_2_fu_212_ap_start_reg;
    grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start <= grp_export_output_buffer_c1_Pipeline_4_fu_234_ap_start_reg;
    grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start <= grp_export_output_buffer_c1_Pipeline_BW2_fu_255_ap_start_reg;
    grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start <= grp_export_output_buffer_c1_Pipeline_BW_fu_246_ap_start_reg;
    grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_start_reg;
    grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_start_reg;

    grp_fu_860_ce_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_ce, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_860_ce <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_860_ce <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_ce;
        else 
            grp_fu_860_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_860_p0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_860_p0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_860_p0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din0;
        else 
            grp_fu_860_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_860_p1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_860_p1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_860_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_860_p1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_860_p_din1;
        else 
            grp_fu_860_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_864_ce_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_ce, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_864_ce <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_864_ce <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_ce;
        else 
            grp_fu_864_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_864_opcode_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_opcode, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_864_opcode <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_864_opcode <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_opcode;
        else 
            grp_fu_864_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_864_p0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din0, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_864_p0 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_864_p0 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din0;
        else 
            grp_fu_864_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_864_p1_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din1, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            grp_fu_864_p1 <= grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_grp_fu_864_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            grp_fu_864_p1 <= grp_export_output_buffer_c1_Pipeline_RELU_fu_202_grp_fu_864_p_din1;
        else 
            grp_fu_864_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    i2_blk_n_AW_assign_proc : process(m_axi_i2_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state21)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            i2_blk_n_AW <= m_axi_i2_AWREADY;
        else 
            i2_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    i2_blk_n_B_assign_proc : process(m_axi_i2_BVALID, ap_CS_fsm_state20, icmp_ln135_reg_759, ap_CS_fsm_state28)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state28) or ((icmp_ln135_reg_759 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)))) then 
            i2_blk_n_B <= m_axi_i2_BVALID;
        else 
            i2_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln134_fu_327_p2 <= "1" when (bout_fu_118 = ap_const_lv4_8) else "0";
    icmp_ln135_1_fu_551_p2 <= "1" when (or_ln135_fu_535_p2 = ap_const_lv4_F) else "0";
    icmp_ln135_fu_400_p2 <= "1" when (unsigned(bh_reg_178) < unsigned(ap_const_lv5_F)) else "0";
    icmp_ln71_fu_589_p2 <= "1" when (o_fu_122 = ap_const_lv4_8) else "0";
    icmp_ln72_1_fu_665_p2 <= "1" when (or_ln72_fu_650_p2 = ap_const_lv4_F) else "0";
    icmp_ln72_fu_627_p2 <= "1" when (unsigned(h_1_reg_190) < unsigned(ap_const_lv5_F)) else "0";
    m_axi_gmem_ARADDR <= gmem_addr_reg_693;
    m_axi_gmem_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_ARID <= ap_const_lv1_0;
    m_axi_gmem_ARLEN <= ap_const_lv32_8;
    m_axi_gmem_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_ARUSER <= ap_const_lv1_0;

    m_axi_gmem_ARVALID_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (m_axi_gmem_ARREADY = ap_const_logic_1))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (m_axi_gmem_RVALID = ap_const_logic_1))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv32_0;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    m_axi_i2_ARADDR <= ap_const_lv64_0;
    m_axi_i2_ARBURST <= ap_const_lv2_0;
    m_axi_i2_ARCACHE <= ap_const_lv4_0;
    m_axi_i2_ARID <= ap_const_lv1_0;
    m_axi_i2_ARLEN <= ap_const_lv32_0;
    m_axi_i2_ARLOCK <= ap_const_lv2_0;
    m_axi_i2_ARPROT <= ap_const_lv3_0;
    m_axi_i2_ARQOS <= ap_const_lv4_0;
    m_axi_i2_ARREGION <= ap_const_lv4_0;
    m_axi_i2_ARSIZE <= ap_const_lv3_0;
    m_axi_i2_ARUSER <= ap_const_lv1_0;
    m_axi_i2_ARVALID <= ap_const_logic_0;

    m_axi_i2_AWADDR_assign_proc : process(m_axi_i2_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done, grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWADDR, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWADDR, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23, sext_ln148_fu_521_p1, sext_ln148_1_fu_576_p1)
    begin
        if ((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            m_axi_i2_AWADDR <= sext_ln148_1_fu_576_p1;
        elsif ((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            m_axi_i2_AWADDR <= sext_ln148_fu_521_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWADDR <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWADDR <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWADDR;
        else 
            m_axi_i2_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_i2_AWBURST_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWBURST, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWBURST, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWBURST <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWBURST <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWBURST;
        else 
            m_axi_i2_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_i2_AWCACHE_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWCACHE, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWCACHE, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWCACHE <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWCACHE <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWCACHE;
        else 
            m_axi_i2_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_i2_AWID_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWID, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWID <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWID <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWID;
        else 
            m_axi_i2_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_i2_AWLEN_assign_proc : process(m_axi_i2_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done, grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLEN, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLEN, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21)) or (not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            m_axi_i2_AWLEN <= ap_const_lv32_FF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWLEN <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWLEN <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLEN;
        else 
            m_axi_i2_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_i2_AWLOCK_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLOCK, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLOCK, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWLOCK <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWLOCK <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWLOCK;
        else 
            m_axi_i2_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_i2_AWPROT_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWPROT, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWPROT, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWPROT <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWPROT <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWPROT;
        else 
            m_axi_i2_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_i2_AWQOS_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWQOS, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWQOS, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWQOS <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWQOS <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWQOS;
        else 
            m_axi_i2_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_i2_AWREGION_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWREGION, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWREGION, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWREGION <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWREGION <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWREGION;
        else 
            m_axi_i2_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_i2_AWSIZE_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWSIZE, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWSIZE, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWSIZE <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWSIZE <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWSIZE;
        else 
            m_axi_i2_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_i2_AWUSER_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWUSER, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWUSER, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWUSER <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWUSER <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWUSER;
        else 
            m_axi_i2_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_i2_AWVALID_assign_proc : process(m_axi_i2_AWREADY, ap_CS_fsm_state13, ap_CS_fsm_state21, grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done, grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWVALID, grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWVALID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU1_fu_224_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state21)) or (not(((m_axi_i2_AWREADY = ap_const_logic_0) or (grp_export_output_buffer_c1_Pipeline_RELU_fu_202_ap_done = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            m_axi_i2_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_AWVALID <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_AWVALID <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_AWVALID;
        else 
            m_axi_i2_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_i2_BREADY_assign_proc : process(m_axi_i2_BVALID, ap_CS_fsm_state20, icmp_ln135_reg_759, ap_CS_fsm_state28, grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_BREADY, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_BREADY, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((not(((icmp_ln135_reg_759 = ap_const_lv1_1) and (m_axi_i2_BVALID = ap_const_logic_0))) and (icmp_ln135_reg_759 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state20)) or ((ap_const_logic_1 = ap_CS_fsm_state28) and (m_axi_i2_BVALID = ap_const_logic_1)))) then 
            m_axi_i2_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_BREADY <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_BREADY <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_BREADY;
        else 
            m_axi_i2_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_i2_RREADY <= ap_const_logic_0;

    m_axi_i2_WDATA_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WDATA, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WDATA, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_WDATA <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_WDATA <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WDATA;
        else 
            m_axi_i2_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_i2_WID_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WID, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_WID <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_WID <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WID;
        else 
            m_axi_i2_WID <= "X";
        end if; 
    end process;


    m_axi_i2_WLAST_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WLAST, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WLAST, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_WLAST <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_WLAST <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WLAST;
        else 
            m_axi_i2_WLAST <= 'X';
        end if; 
    end process;


    m_axi_i2_WSTRB_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WSTRB, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WSTRB, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_WSTRB <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_WSTRB <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WSTRB;
        else 
            m_axi_i2_WSTRB <= "XXXX";
        end if; 
    end process;


    m_axi_i2_WUSER_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WUSER, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WUSER, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_WUSER <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_WUSER <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WUSER;
        else 
            m_axi_i2_WUSER <= "X";
        end if; 
    end process;


    m_axi_i2_WVALID_assign_proc : process(grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WVALID, grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WVALID, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state22, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            m_axi_i2_WVALID <= grp_export_output_buffer_c1_Pipeline_4_fu_234_m_axi_i2_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            m_axi_i2_WVALID <= grp_export_output_buffer_c1_Pipeline_2_fu_212_m_axi_i2_WVALID;
        else 
            m_axi_i2_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln138_fu_352_p0 <= mul_ln138_fu_352_p00(7 - 1 downto 0);
    mul_ln138_fu_352_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_318_fu_343_p2),25));
    mul_ln138_fu_352_p1 <= ap_const_lv25_3F804(19 - 1 downto 0);
    or_ln135_fu_535_p2 <= (trunc_ln135_fu_531_p1 or ap_const_lv4_1);
    or_ln72_fu_650_p2 <= (trunc_ln72_fu_646_p1 or ap_const_lv4_1);
        sext_ln134_fu_292_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_282_p4),64));

        sext_ln138_1_fu_509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln138_1_fu_503_p2),64));

        sext_ln138_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln138_fu_449_p2),64));

        sext_ln148_1_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln148_1_reg_799),64));

        sext_ln148_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_reg_769),64));

    shl_ln138_1_fu_437_p3 <= (add_ln138_1_fu_420_p2 & ap_const_lv2_0);
    shl_ln138_2_fu_479_p3 <= (add_ln138_3_fu_474_p2 & ap_const_lv10_0);
    shl_ln138_3_fu_491_p3 <= (add_ln138_3_fu_474_p2 & ap_const_lv2_0);
    shl_ln1_fu_425_p3 <= (add_ln138_1_fu_420_p2 & ap_const_lv10_0);
    shl_ln_fu_264_p3 <= (out_r & ap_const_lv2_0);
    sub_ln138_1_fu_503_p2 <= std_logic_vector(unsigned(zext_ln138_4_fu_487_p1) - unsigned(zext_ln138_5_fu_499_p1));
    sub_ln138_fu_449_p2 <= std_logic_vector(unsigned(zext_ln138_2_fu_433_p1) - unsigned(zext_ln138_3_fu_445_p1));
    sub_ln141_fu_386_p2 <= std_logic_vector(unsigned(zext_ln141_1_fu_382_p1) - unsigned(zext_ln141_fu_372_p1));
    sub_ln76_fu_617_p2 <= std_logic_vector(unsigned(zext_ln76_1_fu_613_p1) - unsigned(zext_ln76_fu_601_p1));
    tmp_8_fu_375_p3 <= (bout_fu_118 & ap_const_lv4_0);
    tmp_9_fu_605_p3 <= (o_fu_122 & ap_const_lv4_0);
    trunc_ln135_fu_531_p1 <= bh_reg_178(4 - 1 downto 0);
    trunc_ln141_1_fu_518_p1 <= sub_ln141_reg_743(7 - 1 downto 0);
    trunc_ln141_fu_396_p1 <= sub_ln141_fu_386_p2(7 - 1 downto 0);
    trunc_ln72_fu_646_p1 <= h_1_reg_190(4 - 1 downto 0);
    trunc_ln76_1_fu_643_p1 <= sub_ln76_reg_823(7 - 1 downto 0);
    trunc_ln76_fu_623_p1 <= sub_ln76_fu_617_p2(7 - 1 downto 0);
    trunc_ln_fu_282_p4 <= add_ln134_fu_276_p2(63 downto 2);
    zext_ln134_1_fu_311_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_r),7));
    zext_ln134_2_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_264_p3),64));
    zext_ln134_3_fu_339_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_fu_118),7));
    zext_ln134_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h),9));
    zext_ln135_fu_416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_178),9));
    zext_ln138_1_fu_320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln138_5_fu_314_p2),9));
    zext_ln138_2_fu_433_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_425_p3),20));
    zext_ln138_3_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln138_1_fu_437_p3),20));
    zext_ln138_4_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln138_2_fu_479_p3),20));
    zext_ln138_5_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln138_3_fu_491_p3),20));
    zext_ln138_fu_358_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln138_fu_352_p2),64));
    zext_ln141_1_fu_382_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_375_p3),9));
    zext_ln141_2_fu_406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_178),7));
    zext_ln141_3_fu_541_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln135_fu_535_p2),7));
    zext_ln141_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_fu_118),9));
    zext_ln76_1_fu_613_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_605_p3),9));
    zext_ln76_2_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_1_reg_190),7));
    zext_ln76_3_fu_656_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln72_fu_650_p2),7));
    zext_ln76_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_fu_122),9));
end behav;
