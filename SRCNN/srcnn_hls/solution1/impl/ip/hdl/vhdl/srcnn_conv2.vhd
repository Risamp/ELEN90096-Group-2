-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity srcnn_conv2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_bundle_2_AWVALID : OUT STD_LOGIC;
    m_axi_bundle_2_AWREADY : IN STD_LOGIC;
    m_axi_bundle_2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_bundle_2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_WVALID : OUT STD_LOGIC;
    m_axi_bundle_2_WREADY : IN STD_LOGIC;
    m_axi_bundle_2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_2_WLAST : OUT STD_LOGIC;
    m_axi_bundle_2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_ARVALID : OUT STD_LOGIC;
    m_axi_bundle_2_ARREADY : IN STD_LOGIC;
    m_axi_bundle_2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_bundle_2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_RVALID : IN STD_LOGIC;
    m_axi_bundle_2_RREADY : OUT STD_LOGIC;
    m_axi_bundle_2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_2_RLAST : IN STD_LOGIC;
    m_axi_bundle_2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_bundle_2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_2_BVALID : IN STD_LOGIC;
    m_axi_bundle_2_BREADY : OUT STD_LOGIC;
    m_axi_bundle_2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_weights_AWVALID : OUT STD_LOGIC;
    m_axi_weights_AWREADY : IN STD_LOGIC;
    m_axi_weights_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_WVALID : OUT STD_LOGIC;
    m_axi_weights_WREADY : IN STD_LOGIC;
    m_axi_weights_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_WLAST : OUT STD_LOGIC;
    m_axi_weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_ARVALID : OUT STD_LOGIC;
    m_axi_weights_ARREADY : IN STD_LOGIC;
    m_axi_weights_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_RVALID : IN STD_LOGIC;
    m_axi_weights_RREADY : OUT STD_LOGIC;
    m_axi_weights_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_weights_RLAST : IN STD_LOGIC;
    m_axi_weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_BVALID : IN STD_LOGIC;
    m_axi_weights_BREADY : OUT STD_LOGIC;
    m_axi_weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_weights : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_biases_AWVALID : OUT STD_LOGIC;
    m_axi_biases_AWREADY : IN STD_LOGIC;
    m_axi_biases_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_biases_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_biases_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_biases_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_biases_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_biases_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_biases_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_biases_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_biases_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_biases_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_WVALID : OUT STD_LOGIC;
    m_axi_biases_WREADY : IN STD_LOGIC;
    m_axi_biases_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_biases_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_biases_WLAST : OUT STD_LOGIC;
    m_axi_biases_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_ARVALID : OUT STD_LOGIC;
    m_axi_biases_ARREADY : IN STD_LOGIC;
    m_axi_biases_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_biases_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_biases_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_biases_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_biases_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_biases_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_biases_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_biases_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_biases_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_biases_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_RVALID : IN STD_LOGIC;
    m_axi_biases_RREADY : OUT STD_LOGIC;
    m_axi_biases_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_biases_RLAST : IN STD_LOGIC;
    m_axi_biases_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_biases_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_biases_BVALID : IN STD_LOGIC;
    m_axi_biases_BREADY : OUT STD_LOGIC;
    m_axi_biases_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_biases_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_biases_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    conv2_biases : IN STD_LOGIC_VECTOR (63 downto 0);
    m_axi_bundle_1_AWVALID : OUT STD_LOGIC;
    m_axi_bundle_1_AWREADY : IN STD_LOGIC;
    m_axi_bundle_1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_bundle_1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_WVALID : OUT STD_LOGIC;
    m_axi_bundle_1_WREADY : IN STD_LOGIC;
    m_axi_bundle_1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_1_WLAST : OUT STD_LOGIC;
    m_axi_bundle_1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_ARVALID : OUT STD_LOGIC;
    m_axi_bundle_1_ARREADY : IN STD_LOGIC;
    m_axi_bundle_1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_bundle_1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_bundle_1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_bundle_1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_RVALID : IN STD_LOGIC;
    m_axi_bundle_1_RREADY : OUT STD_LOGIC;
    m_axi_bundle_1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_bundle_1_RLAST : IN STD_LOGIC;
    m_axi_bundle_1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
    m_axi_bundle_1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_1_BVALID : IN STD_LOGIC;
    m_axi_bundle_1_BREADY : OUT STD_LOGIC;
    m_axi_bundle_1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_bundle_1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_bundle_1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
    grp_fu_481_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_481_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_481_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_481_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_481_p_ce : OUT STD_LOGIC;
    grp_fu_497_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_497_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_497_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_497_p_ce : OUT STD_LOGIC;
    grp_fu_509_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_509_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_509_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_509_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_509_p_ce : OUT STD_LOGIC );
end;


architecture behav of srcnn_conv2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (39 downto 0) := "0000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (39 downto 0) := "0000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (39 downto 0) := "0000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (39 downto 0) := "0000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (39 downto 0) := "0000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (39 downto 0) := "0000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (39 downto 0) := "0001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (39 downto 0) := "0010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (39 downto 0) := "0100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (39 downto 0) := "1000000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_800 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv9_C0 : STD_LOGIC_VECTOR (8 downto 0) := "011000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv14_55 : STD_LOGIC_VECTOR (13 downto 0) := "00000001010101";
    constant ap_const_lv10_55 : STD_LOGIC_VECTOR (9 downto 0) := "0001010101";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv23_3F804 : STD_LOGIC_VECTOR (22 downto 0) := "00000111111100000000100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv10_AA : STD_LOGIC_VECTOR (9 downto 0) := "0010101010";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_i_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weight_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weight_buffer_ce0 : STD_LOGIC;
    signal weight_buffer_we0 : STD_LOGIC;
    signal weight_buffer_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1 : STD_LOGIC;
    signal conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1 : STD_LOGIC_VECTOR (31 downto 0);
    signal weights_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal biases_blk_n_AR : STD_LOGIC;
    signal biases_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal bundle_1_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal bundle_1_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal icmp_ln109_reg_1366 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal trunc_ln_fu_522_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal trunc_ln_reg_1246 : STD_LOGIC_VECTOR (61 downto 0);
    signal weights_addr_reg_1251 : STD_LOGIC_VECTOR (63 downto 0);
    signal biases_addr_reg_1256 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln80_fu_600_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal sub_ln80_reg_1268 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln32_fu_570_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln105_fu_607_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln105_reg_1273 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal add_ln36_1_fu_616_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln36_1_reg_1282 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal trunc_ln104_fu_632_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln104_reg_1287 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal add_ln40_1_fu_658_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln40_1_reg_1295 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal select_ln40_1_fu_684_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln40_1_reg_1300 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln40_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln41_1_fu_776_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln41_1_reg_1305 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln50_fu_857_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln50_reg_1315 : STD_LOGIC_VECTOR (13 downto 0);
    signal mul_ln45_fu_873_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln45_reg_1320 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln45_fu_879_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln45_reg_1325 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln41_3_fu_891_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln41_3_reg_1330 : STD_LOGIC_VECTOR (8 downto 0);
    signal bitcast_ln41_fu_899_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln41_reg_1335 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln108_fu_910_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln108_reg_1343 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal add_ln112_fu_939_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln112_reg_1348 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln108_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln108_fu_966_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal sext_ln108_reg_1354 : STD_LOGIC_VECTOR (6 downto 0);
    signal empty_353_fu_970_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_353_reg_1360 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln109_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal mul_ln109_fu_993_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln109_reg_1370 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln2_reg_1376 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln112_4_fu_1111_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln112_4_reg_1382 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln115_1_fu_1120_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln115_1_reg_1387 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln109_1_fu_1125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln109_1_reg_1392 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_ln109_1_fu_1144_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln109_1_reg_1401 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln122_1_reg_1407 : STD_LOGIC_VECTOR (61 downto 0);
    signal add_ln109_fu_1160_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln109_reg_1413 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln62_fu_1186_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln62_reg_1426 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal sub_ln67_fu_1204_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln67_reg_1431 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln62_fu_1180_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln36_fu_1211_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal add_ln67_fu_1217_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln67_reg_1443 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal add_ln67_1_fu_1223_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln67_1_reg_1448 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address1 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1 : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_ce : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WLAST : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARVALID : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_RREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_BREADY : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW7_fu_500_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_511_ap_start : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_ap_done : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_ap_idle : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_ap_ready : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : STD_LOGIC;
    signal grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvar_reg_282 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_reg_293 : STD_LOGIC_VECTOR (5 downto 0);
    signal indvar_flatten63_reg_305 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal o_reg_316 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten32_reg_327 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_reg_338 : STD_LOGIC_VECTOR (6 downto 0);
    signal r_reg_349 : STD_LOGIC_VECTOR (1 downto 0);
    signal bout_1_reg_360 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state26 : BOOLEAN;
    signal bh_reg_372 : STD_LOGIC_VECTOR (2 downto 0);
    signal o_1_reg_384 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln36_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_conv2_Pipeline_COL_fu_418_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv2_Pipeline_RELU_fu_437_ap_start_reg : STD_LOGIC := '0';
    signal grp_conv2_Pipeline_5_fu_449_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal grp_conv2_Pipeline_RELU6_fu_463_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state26_ignore_call0 : BOOLEAN;
    signal grp_conv2_Pipeline_7_fu_475_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_conv2_Pipeline_BW_fu_489_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal grp_conv2_Pipeline_BW7_fu_500_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_conv2_Pipeline_BW8_fu_511_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln41_fu_834_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln36_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln36_1_fu_552_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln122_fu_1131_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln122_1_fu_1166_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state3_io : BOOLEAN;
    signal h_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln32_fu_622_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln36_1_fu_542_p4 : STD_LOGIC_VECTOR (61 downto 0);
    signal shl_ln_fu_576_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal shl_ln80_1_fu_588_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln80_fu_584_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal zext_ln80_1_fu_596_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal trunc_ln43_1_fu_640_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln43_fu_636_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln41_fu_670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln40_fu_664_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_696_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln50_28_fu_704_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln50_fu_692_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln50_fu_708_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln43_2_fu_718_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lshr_ln43_mid_fu_722_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln_fu_644_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln45_fu_744_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln40_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln40_fu_676_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln40_fu_750_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln41_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln41_fu_756_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_shl1_fu_788_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln50_30_fu_796_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln50_29_fu_784_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln50_1_fu_800_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln43_4_fu_814_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln43_3_fu_810_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal lshr_ln43_mid1_fu_818_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln40_2_fu_730_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln41_2_fu_826_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln41_fu_768_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln43_fu_806_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln50_32_fu_843_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln50_fu_847_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln50_fu_857_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln40_fu_714_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln50_31_fu_839_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln50_1_fu_863_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln45_fu_873_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln41_1_fu_885_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln108_fu_916_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_352_fu_920_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln112_fu_929_p0 : STD_LOGIC_VECTOR (4 downto 0);
    signal mul_ln112_fu_929_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal mul_ln112_fu_929_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln112_fu_935_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_29_fu_948_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln115_3_fu_956_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln115_fu_944_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln115_fu_960_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln115_4_fu_980_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln115_fu_984_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln109_fu_993_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln109_fu_1004_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln112_1_fu_1008_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln2_fu_1013_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln112_1_fu_1025_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln112_1_fu_1021_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln112_2_fu_1033_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln112_fu_1037_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln112_fu_1043_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln112_2_fu_1047_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln109_fu_1000_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal or_ln112_fu_1062_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln112_3_fu_1068_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln112_3_fu_1072_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln112_2_fu_1077_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln112_3_fu_1089_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln112_4_fu_1085_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln112_5_fu_1097_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln112_1_fu_1101_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln112_1_fu_1107_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln115_5_fu_1116_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal mul_ln109_1_fu_1144_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln62_fu_1176_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_30_fu_1196_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln67_fu_1192_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1453_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1453_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1453_ce : STD_LOGIC;
    signal grp_fu_1457_ce : STD_LOGIC;
    signal grp_fu_1461_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1461_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1461_ce : STD_LOGIC;
    signal grp_fu_1461_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal mul_ln112_fu_929_p00 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component srcnn_conv2_Pipeline_LOAD_INPUT_BH_L IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_bundle_2_AWVALID : OUT STD_LOGIC;
        m_axi_bundle_2_AWREADY : IN STD_LOGIC;
        m_axi_bundle_2_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_bundle_2_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_2_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_2_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_2_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_2_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_2_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_2_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_2_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_2_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_WVALID : OUT STD_LOGIC;
        m_axi_bundle_2_WREADY : IN STD_LOGIC;
        m_axi_bundle_2_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_2_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_2_WLAST : OUT STD_LOGIC;
        m_axi_bundle_2_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_ARVALID : OUT STD_LOGIC;
        m_axi_bundle_2_ARREADY : IN STD_LOGIC;
        m_axi_bundle_2_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_bundle_2_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_2_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_2_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_2_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_2_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_2_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_2_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_2_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_2_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_RVALID : IN STD_LOGIC;
        m_axi_bundle_2_RREADY : OUT STD_LOGIC;
        m_axi_bundle_2_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_2_RLAST : IN STD_LOGIC;
        m_axi_bundle_2_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_bundle_2_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_2_BVALID : IN STD_LOGIC;
        m_axi_bundle_2_BREADY : OUT STD_LOGIC;
        m_axi_bundle_2_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_2_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_2_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        input_ftmap : IN STD_LOGIC_VECTOR (63 downto 0);
        sext_ln79 : IN STD_LOGIC_VECTOR (18 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_LOAD_WEIGHTS_L IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_weights_AWVALID : OUT STD_LOGIC;
        m_axi_weights_AWREADY : IN STD_LOGIC;
        m_axi_weights_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_weights_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_WVALID : OUT STD_LOGIC;
        m_axi_weights_WREADY : IN STD_LOGIC;
        m_axi_weights_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_WLAST : OUT STD_LOGIC;
        m_axi_weights_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_ARVALID : OUT STD_LOGIC;
        m_axi_weights_ARREADY : IN STD_LOGIC;
        m_axi_weights_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_weights_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_weights_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_weights_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_RVALID : IN STD_LOGIC;
        m_axi_weights_RREADY : OUT STD_LOGIC;
        m_axi_weights_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_weights_RLAST : IN STD_LOGIC;
        m_axi_weights_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_weights_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_BVALID : IN STD_LOGIC;
        m_axi_weights_BREADY : OUT STD_LOGIC;
        m_axi_weights_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_weights_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_weights_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln36 : IN STD_LOGIC_VECTOR (61 downto 0);
        weight_buffer_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        weight_buffer_ce0 : OUT STD_LOGIC;
        weight_buffer_we0 : OUT STD_LOGIC;
        weight_buffer_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_COL IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bitcast_ln41 : IN STD_LOGIC_VECTOR (31 downto 0);
        mul_ln50 : IN STD_LOGIC_VECTOR (13 downto 0);
        mul_ln50_1 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address1 : OUT STD_LOGIC_VECTOR (13 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1453_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_ce : OUT STD_LOGIC;
        grp_fu_1457_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1457_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1457_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1457_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv2_Pipeline_RELU IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln115 : IN STD_LOGIC_VECTOR (9 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1453_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_ce : OUT STD_LOGIC;
        grp_fu_1461_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1461_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1461_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1461_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1461_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv2_Pipeline_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_bundle_1_AWVALID : OUT STD_LOGIC;
        m_axi_bundle_1_AWREADY : IN STD_LOGIC;
        m_axi_bundle_1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_bundle_1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_WVALID : OUT STD_LOGIC;
        m_axi_bundle_1_WREADY : IN STD_LOGIC;
        m_axi_bundle_1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_WLAST : OUT STD_LOGIC;
        m_axi_bundle_1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_ARVALID : OUT STD_LOGIC;
        m_axi_bundle_1_ARREADY : IN STD_LOGIC;
        m_axi_bundle_1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_bundle_1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_RVALID : IN STD_LOGIC;
        m_axi_bundle_1_RREADY : OUT STD_LOGIC;
        m_axi_bundle_1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_RLAST : IN STD_LOGIC;
        m_axi_bundle_1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_bundle_1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_BVALID : IN STD_LOGIC;
        m_axi_bundle_1_BREADY : OUT STD_LOGIC;
        m_axi_bundle_1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln122 : IN STD_LOGIC_VECTOR (61 downto 0);
        mul_ln115 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_RELU6 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        mul_ln115_1 : IN STD_LOGIC_VECTOR (9 downto 0);
        empty : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_1453_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1453_p_ce : OUT STD_LOGIC;
        grp_fu_1461_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1461_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_1461_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_1461_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_1461_p_ce : OUT STD_LOGIC );
    end component;


    component srcnn_conv2_Pipeline_7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_bundle_1_AWVALID : OUT STD_LOGIC;
        m_axi_bundle_1_AWREADY : IN STD_LOGIC;
        m_axi_bundle_1_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_bundle_1_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_WVALID : OUT STD_LOGIC;
        m_axi_bundle_1_WREADY : IN STD_LOGIC;
        m_axi_bundle_1_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_WLAST : OUT STD_LOGIC;
        m_axi_bundle_1_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_ARVALID : OUT STD_LOGIC;
        m_axi_bundle_1_ARREADY : IN STD_LOGIC;
        m_axi_bundle_1_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_bundle_1_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_bundle_1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_bundle_1_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_RVALID : IN STD_LOGIC;
        m_axi_bundle_1_RREADY : OUT STD_LOGIC;
        m_axi_bundle_1_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_bundle_1_RLAST : IN STD_LOGIC;
        m_axi_bundle_1_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_RFIFONUM : IN STD_LOGIC_VECTOR (12 downto 0);
        m_axi_bundle_1_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_BVALID : IN STD_LOGIC;
        m_axi_bundle_1_BREADY : OUT STD_LOGIC;
        m_axi_bundle_1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_bundle_1_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_bundle_1_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln122_1 : IN STD_LOGIC_VECTOR (61 downto 0);
        mul_ln115_1 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_BW IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        sub_ln67 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_BW7 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln67 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_Pipeline_BW8 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        add_ln67_1 : IN STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 : OUT STD_LOGIC;
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_mul_11s_8ns_14_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (13 downto 0) );
    end component;


    component srcnn_mul_7s_8ns_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (6 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component srcnn_mul_5ns_19ns_23_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (4 downto 0);
        din1 : IN STD_LOGIC_VECTOR (18 downto 0);
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component srcnn_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fmul_32ns_32ns_32_3_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_weight_buffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_U : component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16320,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0,
        ce0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0,
        we0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0,
        d0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_d0,
        q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0,
        address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address1,
        ce1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1,
        q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q1);

    conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_U : component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16320,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0,
        ce0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0,
        we0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0,
        d0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_d0,
        q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0,
        address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address1,
        ce1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1,
        q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q1);

    conv2_float_255_255_float_64_1_1_float_float_255_255_i_U : component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 16320,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0,
        ce0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0,
        we0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0,
        d0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_d0,
        q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0,
        address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address1,
        ce1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1,
        q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_q1);

    weight_buffer_U : component srcnn_conv2_weight_buffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => weight_buffer_address0,
        ce0 => weight_buffer_ce0,
        we0 => weight_buffer_we0,
        d0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_d0,
        q0 => weight_buffer_q0);

    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_U : component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1020,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        ce0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        we0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        d0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0,
        address1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1,
        ce1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1,
        we1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1,
        d1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d1,
        q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1);

    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_U : component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1020,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        ce0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        we0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        d0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0,
        address1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1,
        ce1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1,
        we1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1,
        d1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d1,
        q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1);

    conv2_float_255_255_float_64_1_1_float_float_255_255_o_U : component srcnn_conv2_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 1020,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        ce0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        we0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        d0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0,
        q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0,
        address1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1,
        ce1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1,
        we1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1,
        d1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d1,
        q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1);

    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395 : component srcnn_conv2_Pipeline_LOAD_INPUT_BH_L
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start,
        ap_done => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done,
        ap_idle => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_idle,
        ap_ready => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_ready,
        m_axi_bundle_2_AWVALID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWVALID,
        m_axi_bundle_2_AWREADY => ap_const_logic_0,
        m_axi_bundle_2_AWADDR => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWADDR,
        m_axi_bundle_2_AWID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWID,
        m_axi_bundle_2_AWLEN => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWLEN,
        m_axi_bundle_2_AWSIZE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWSIZE,
        m_axi_bundle_2_AWBURST => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWBURST,
        m_axi_bundle_2_AWLOCK => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWLOCK,
        m_axi_bundle_2_AWCACHE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWCACHE,
        m_axi_bundle_2_AWPROT => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWPROT,
        m_axi_bundle_2_AWQOS => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWQOS,
        m_axi_bundle_2_AWREGION => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWREGION,
        m_axi_bundle_2_AWUSER => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_AWUSER,
        m_axi_bundle_2_WVALID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WVALID,
        m_axi_bundle_2_WREADY => ap_const_logic_0,
        m_axi_bundle_2_WDATA => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WDATA,
        m_axi_bundle_2_WSTRB => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WSTRB,
        m_axi_bundle_2_WLAST => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WLAST,
        m_axi_bundle_2_WID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WID,
        m_axi_bundle_2_WUSER => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_WUSER,
        m_axi_bundle_2_ARVALID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARVALID,
        m_axi_bundle_2_ARREADY => m_axi_bundle_2_ARREADY,
        m_axi_bundle_2_ARADDR => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARADDR,
        m_axi_bundle_2_ARID => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARID,
        m_axi_bundle_2_ARLEN => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARLEN,
        m_axi_bundle_2_ARSIZE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARSIZE,
        m_axi_bundle_2_ARBURST => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARBURST,
        m_axi_bundle_2_ARLOCK => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARLOCK,
        m_axi_bundle_2_ARCACHE => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARCACHE,
        m_axi_bundle_2_ARPROT => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARPROT,
        m_axi_bundle_2_ARQOS => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARQOS,
        m_axi_bundle_2_ARREGION => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARREGION,
        m_axi_bundle_2_ARUSER => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARUSER,
        m_axi_bundle_2_RVALID => m_axi_bundle_2_RVALID,
        m_axi_bundle_2_RREADY => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_RREADY,
        m_axi_bundle_2_RDATA => m_axi_bundle_2_RDATA,
        m_axi_bundle_2_RLAST => m_axi_bundle_2_RLAST,
        m_axi_bundle_2_RID => m_axi_bundle_2_RID,
        m_axi_bundle_2_RFIFONUM => m_axi_bundle_2_RFIFONUM,
        m_axi_bundle_2_RUSER => m_axi_bundle_2_RUSER,
        m_axi_bundle_2_RRESP => m_axi_bundle_2_RRESP,
        m_axi_bundle_2_BVALID => ap_const_logic_0,
        m_axi_bundle_2_BREADY => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_BREADY,
        m_axi_bundle_2_BRESP => ap_const_lv2_0,
        m_axi_bundle_2_BID => ap_const_lv1_0,
        m_axi_bundle_2_BUSER => ap_const_lv1_0,
        input_ftmap => input_ftmap,
        sext_ln79 => sub_ln80_reg_1268,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_d0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_d0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_d0 => grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_d0);

    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409 : component srcnn_conv2_Pipeline_LOAD_WEIGHTS_L
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start,
        ap_done => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done,
        ap_idle => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_idle,
        ap_ready => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_ready,
        m_axi_weights_AWVALID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWVALID,
        m_axi_weights_AWREADY => ap_const_logic_0,
        m_axi_weights_AWADDR => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWADDR,
        m_axi_weights_AWID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWID,
        m_axi_weights_AWLEN => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWLEN,
        m_axi_weights_AWSIZE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWSIZE,
        m_axi_weights_AWBURST => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWBURST,
        m_axi_weights_AWLOCK => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWLOCK,
        m_axi_weights_AWCACHE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWCACHE,
        m_axi_weights_AWPROT => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWPROT,
        m_axi_weights_AWQOS => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWQOS,
        m_axi_weights_AWREGION => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWREGION,
        m_axi_weights_AWUSER => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_AWUSER,
        m_axi_weights_WVALID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WVALID,
        m_axi_weights_WREADY => ap_const_logic_0,
        m_axi_weights_WDATA => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WDATA,
        m_axi_weights_WSTRB => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WSTRB,
        m_axi_weights_WLAST => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WLAST,
        m_axi_weights_WID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WID,
        m_axi_weights_WUSER => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_WUSER,
        m_axi_weights_ARVALID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARVALID,
        m_axi_weights_ARREADY => m_axi_weights_ARREADY,
        m_axi_weights_ARADDR => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARADDR,
        m_axi_weights_ARID => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARID,
        m_axi_weights_ARLEN => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLEN,
        m_axi_weights_ARSIZE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARSIZE,
        m_axi_weights_ARBURST => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARBURST,
        m_axi_weights_ARLOCK => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLOCK,
        m_axi_weights_ARCACHE => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARCACHE,
        m_axi_weights_ARPROT => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARPROT,
        m_axi_weights_ARQOS => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARQOS,
        m_axi_weights_ARREGION => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARREGION,
        m_axi_weights_ARUSER => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARUSER,
        m_axi_weights_RVALID => m_axi_weights_RVALID,
        m_axi_weights_RREADY => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_RREADY,
        m_axi_weights_RDATA => m_axi_weights_RDATA,
        m_axi_weights_RLAST => m_axi_weights_RLAST,
        m_axi_weights_RID => m_axi_weights_RID,
        m_axi_weights_RFIFONUM => m_axi_weights_RFIFONUM,
        m_axi_weights_RUSER => m_axi_weights_RUSER,
        m_axi_weights_RRESP => m_axi_weights_RRESP,
        m_axi_weights_BVALID => ap_const_logic_0,
        m_axi_weights_BREADY => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_BREADY,
        m_axi_weights_BRESP => ap_const_lv2_0,
        m_axi_weights_BID => ap_const_lv1_0,
        m_axi_weights_BUSER => ap_const_lv1_0,
        sext_ln36 => trunc_ln_reg_1246,
        weight_buffer_address0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_address0,
        weight_buffer_ce0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_ce0,
        weight_buffer_we0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_we0,
        weight_buffer_d0 => grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_d0);

    grp_conv2_Pipeline_COL_fu_418 : component srcnn_conv2_Pipeline_COL
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_COL_fu_418_ap_start,
        ap_done => grp_conv2_Pipeline_COL_fu_418_ap_done,
        ap_idle => grp_conv2_Pipeline_COL_fu_418_ap_idle,
        ap_ready => grp_conv2_Pipeline_COL_fu_418_ap_ready,
        bitcast_ln41 => bitcast_ln41_reg_1335,
        mul_ln50 => mul_ln50_reg_1315,
        mul_ln50_1 => mul_ln45_reg_1320,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_i_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_i_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d1 => grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1,
        grp_fu_1453_p_din0 => grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din0,
        grp_fu_1453_p_din1 => grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din1,
        grp_fu_1453_p_opcode => grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_opcode,
        grp_fu_1453_p_dout0 => grp_fu_481_p_dout0,
        grp_fu_1453_p_ce => grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_ce,
        grp_fu_1457_p_din0 => grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_din0,
        grp_fu_1457_p_din1 => grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_din1,
        grp_fu_1457_p_dout0 => grp_fu_497_p_dout0,
        grp_fu_1457_p_ce => grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_ce);

    grp_conv2_Pipeline_RELU_fu_437 : component srcnn_conv2_Pipeline_RELU
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_RELU_fu_437_ap_start,
        ap_done => grp_conv2_Pipeline_RELU_fu_437_ap_done,
        ap_idle => grp_conv2_Pipeline_RELU_fu_437_ap_idle,
        ap_ready => grp_conv2_Pipeline_RELU_fu_437_ap_ready,
        mul_ln115 => mul_ln109_reg_1370,
        empty => empty_353_reg_1360,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 => grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1,
        grp_fu_1453_p_din0 => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din0,
        grp_fu_1453_p_din1 => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din1,
        grp_fu_1453_p_opcode => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_opcode,
        grp_fu_1453_p_dout0 => grp_fu_481_p_dout0,
        grp_fu_1453_p_ce => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_ce,
        grp_fu_1461_p_din0 => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din0,
        grp_fu_1461_p_din1 => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din1,
        grp_fu_1461_p_opcode => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_opcode,
        grp_fu_1461_p_dout0 => grp_fu_509_p_dout0,
        grp_fu_1461_p_ce => grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_ce);

    grp_conv2_Pipeline_5_fu_449 : component srcnn_conv2_Pipeline_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_5_fu_449_ap_start,
        ap_done => grp_conv2_Pipeline_5_fu_449_ap_done,
        ap_idle => grp_conv2_Pipeline_5_fu_449_ap_idle,
        ap_ready => grp_conv2_Pipeline_5_fu_449_ap_ready,
        m_axi_bundle_1_AWVALID => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWVALID,
        m_axi_bundle_1_AWREADY => m_axi_bundle_1_AWREADY,
        m_axi_bundle_1_AWADDR => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWADDR,
        m_axi_bundle_1_AWID => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWID,
        m_axi_bundle_1_AWLEN => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLEN,
        m_axi_bundle_1_AWSIZE => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWSIZE,
        m_axi_bundle_1_AWBURST => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWBURST,
        m_axi_bundle_1_AWLOCK => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLOCK,
        m_axi_bundle_1_AWCACHE => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWCACHE,
        m_axi_bundle_1_AWPROT => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWPROT,
        m_axi_bundle_1_AWQOS => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWQOS,
        m_axi_bundle_1_AWREGION => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWREGION,
        m_axi_bundle_1_AWUSER => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWUSER,
        m_axi_bundle_1_WVALID => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WVALID,
        m_axi_bundle_1_WREADY => m_axi_bundle_1_WREADY,
        m_axi_bundle_1_WDATA => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WDATA,
        m_axi_bundle_1_WSTRB => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WSTRB,
        m_axi_bundle_1_WLAST => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WLAST,
        m_axi_bundle_1_WID => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WID,
        m_axi_bundle_1_WUSER => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WUSER,
        m_axi_bundle_1_ARVALID => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARVALID,
        m_axi_bundle_1_ARREADY => ap_const_logic_0,
        m_axi_bundle_1_ARADDR => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARADDR,
        m_axi_bundle_1_ARID => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARID,
        m_axi_bundle_1_ARLEN => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARLEN,
        m_axi_bundle_1_ARSIZE => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARSIZE,
        m_axi_bundle_1_ARBURST => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARBURST,
        m_axi_bundle_1_ARLOCK => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARLOCK,
        m_axi_bundle_1_ARCACHE => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARCACHE,
        m_axi_bundle_1_ARPROT => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARPROT,
        m_axi_bundle_1_ARQOS => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARQOS,
        m_axi_bundle_1_ARREGION => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARREGION,
        m_axi_bundle_1_ARUSER => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_ARUSER,
        m_axi_bundle_1_RVALID => ap_const_logic_0,
        m_axi_bundle_1_RREADY => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_RREADY,
        m_axi_bundle_1_RDATA => ap_const_lv32_0,
        m_axi_bundle_1_RLAST => ap_const_logic_0,
        m_axi_bundle_1_RID => ap_const_lv1_0,
        m_axi_bundle_1_RFIFONUM => ap_const_lv13_0,
        m_axi_bundle_1_RUSER => ap_const_lv1_0,
        m_axi_bundle_1_RRESP => ap_const_lv2_0,
        m_axi_bundle_1_BVALID => m_axi_bundle_1_BVALID,
        m_axi_bundle_1_BREADY => grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_BREADY,
        m_axi_bundle_1_BRESP => m_axi_bundle_1_BRESP,
        m_axi_bundle_1_BID => m_axi_bundle_1_BID,
        m_axi_bundle_1_BUSER => m_axi_bundle_1_BUSER,
        sext_ln122 => trunc_ln2_reg_1376,
        mul_ln115 => mul_ln109_reg_1370,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0);

    grp_conv2_Pipeline_RELU6_fu_463 : component srcnn_conv2_Pipeline_RELU6
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_RELU6_fu_463_ap_start,
        ap_done => grp_conv2_Pipeline_RELU6_fu_463_ap_done,
        ap_idle => grp_conv2_Pipeline_RELU6_fu_463_ap_idle,
        ap_ready => grp_conv2_Pipeline_RELU6_fu_463_ap_ready,
        mul_ln115_1 => mul_ln109_1_reg_1401,
        empty => empty_353_reg_1360,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 => grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q1,
        grp_fu_1453_p_din0 => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din0,
        grp_fu_1453_p_din1 => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din1,
        grp_fu_1453_p_opcode => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_opcode,
        grp_fu_1453_p_dout0 => grp_fu_481_p_dout0,
        grp_fu_1453_p_ce => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_ce,
        grp_fu_1461_p_din0 => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din0,
        grp_fu_1461_p_din1 => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din1,
        grp_fu_1461_p_opcode => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_opcode,
        grp_fu_1461_p_dout0 => grp_fu_509_p_dout0,
        grp_fu_1461_p_ce => grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_ce);

    grp_conv2_Pipeline_7_fu_475 : component srcnn_conv2_Pipeline_7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_7_fu_475_ap_start,
        ap_done => grp_conv2_Pipeline_7_fu_475_ap_done,
        ap_idle => grp_conv2_Pipeline_7_fu_475_ap_idle,
        ap_ready => grp_conv2_Pipeline_7_fu_475_ap_ready,
        m_axi_bundle_1_AWVALID => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWVALID,
        m_axi_bundle_1_AWREADY => m_axi_bundle_1_AWREADY,
        m_axi_bundle_1_AWADDR => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWADDR,
        m_axi_bundle_1_AWID => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWID,
        m_axi_bundle_1_AWLEN => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLEN,
        m_axi_bundle_1_AWSIZE => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWSIZE,
        m_axi_bundle_1_AWBURST => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWBURST,
        m_axi_bundle_1_AWLOCK => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLOCK,
        m_axi_bundle_1_AWCACHE => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWCACHE,
        m_axi_bundle_1_AWPROT => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWPROT,
        m_axi_bundle_1_AWQOS => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWQOS,
        m_axi_bundle_1_AWREGION => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWREGION,
        m_axi_bundle_1_AWUSER => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWUSER,
        m_axi_bundle_1_WVALID => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WVALID,
        m_axi_bundle_1_WREADY => m_axi_bundle_1_WREADY,
        m_axi_bundle_1_WDATA => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WDATA,
        m_axi_bundle_1_WSTRB => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WSTRB,
        m_axi_bundle_1_WLAST => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WLAST,
        m_axi_bundle_1_WID => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WID,
        m_axi_bundle_1_WUSER => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WUSER,
        m_axi_bundle_1_ARVALID => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARVALID,
        m_axi_bundle_1_ARREADY => ap_const_logic_0,
        m_axi_bundle_1_ARADDR => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARADDR,
        m_axi_bundle_1_ARID => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARID,
        m_axi_bundle_1_ARLEN => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARLEN,
        m_axi_bundle_1_ARSIZE => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARSIZE,
        m_axi_bundle_1_ARBURST => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARBURST,
        m_axi_bundle_1_ARLOCK => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARLOCK,
        m_axi_bundle_1_ARCACHE => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARCACHE,
        m_axi_bundle_1_ARPROT => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARPROT,
        m_axi_bundle_1_ARQOS => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARQOS,
        m_axi_bundle_1_ARREGION => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARREGION,
        m_axi_bundle_1_ARUSER => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_ARUSER,
        m_axi_bundle_1_RVALID => ap_const_logic_0,
        m_axi_bundle_1_RREADY => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_RREADY,
        m_axi_bundle_1_RDATA => ap_const_lv32_0,
        m_axi_bundle_1_RLAST => ap_const_logic_0,
        m_axi_bundle_1_RID => ap_const_lv1_0,
        m_axi_bundle_1_RFIFONUM => ap_const_lv13_0,
        m_axi_bundle_1_RUSER => ap_const_lv1_0,
        m_axi_bundle_1_RRESP => ap_const_lv2_0,
        m_axi_bundle_1_BVALID => m_axi_bundle_1_BVALID,
        m_axi_bundle_1_BREADY => grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_BREADY,
        m_axi_bundle_1_BRESP => m_axi_bundle_1_BRESP,
        m_axi_bundle_1_BID => m_axi_bundle_1_BID,
        m_axi_bundle_1_BUSER => m_axi_bundle_1_BUSER,
        sext_ln122_1 => trunc_ln122_1_reg_1407,
        mul_ln115_1 => mul_ln109_1_reg_1401,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_q0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0 => conv2_float_255_255_float_64_1_1_float_float_255_255_o_q0);

    grp_conv2_Pipeline_BW_fu_489 : component srcnn_conv2_Pipeline_BW
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_BW_fu_489_ap_start,
        ap_done => grp_conv2_Pipeline_BW_fu_489_ap_done,
        ap_idle => grp_conv2_Pipeline_BW_fu_489_ap_idle,
        ap_ready => grp_conv2_Pipeline_BW_fu_489_ap_ready,
        sub_ln67 => sub_ln67_reg_1431,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 => grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0);

    grp_conv2_Pipeline_BW7_fu_500 : component srcnn_conv2_Pipeline_BW7
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_BW7_fu_500_ap_start,
        ap_done => grp_conv2_Pipeline_BW7_fu_500_ap_done,
        ap_idle => grp_conv2_Pipeline_BW7_fu_500_ap_idle,
        ap_ready => grp_conv2_Pipeline_BW7_fu_500_ap_ready,
        add_ln67 => add_ln67_reg_1443,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 => grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0);

    grp_conv2_Pipeline_BW8_fu_511 : component srcnn_conv2_Pipeline_BW8
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_conv2_Pipeline_BW8_fu_511_ap_start,
        ap_done => grp_conv2_Pipeline_BW8_fu_511_ap_done,
        ap_idle => grp_conv2_Pipeline_BW8_fu_511_ap_idle,
        ap_ready => grp_conv2_Pipeline_BW8_fu_511_ap_ready,
        add_ln67_1 => add_ln67_1_reg_1448,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0,
        conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 => grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0);

    mul_11s_8ns_14_1_1_U358 : component srcnn_mul_11s_8ns_14_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 14)
    port map (
        din0 => add_ln50_fu_847_p2,
        din1 => mul_ln50_fu_857_p1,
        dout => mul_ln50_fu_857_p2);

    mul_7s_8ns_10_1_1_U359 : component srcnn_mul_7s_8ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        din0 => add_ln50_1_fu_863_p2,
        din1 => mul_ln45_fu_873_p1,
        dout => mul_ln45_fu_873_p2);

    mul_5ns_19ns_23_1_1_U360 : component srcnn_mul_5ns_19ns_23_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 5,
        din1_WIDTH => 19,
        dout_WIDTH => 23)
    port map (
        din0 => mul_ln112_fu_929_p0,
        din1 => mul_ln112_fu_929_p1,
        dout => mul_ln112_fu_929_p2);

    mul_7s_8ns_10_1_1_U361 : component srcnn_mul_7s_8ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        din0 => add_ln115_fu_984_p2,
        din1 => mul_ln109_fu_993_p1,
        dout => mul_ln109_fu_993_p2);

    mul_7s_8ns_10_1_1_U362 : component srcnn_mul_7s_8ns_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 7,
        din1_WIDTH => 8,
        dout_WIDTH => 10)
    port map (
        din0 => add_ln115_1_reg_1387,
        din1 => mul_ln109_1_fu_1144_p1,
        dout => mul_ln109_1_fu_1144_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_5_fu_449_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_5_fu_449_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    grp_conv2_Pipeline_5_fu_449_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_5_fu_449_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_5_fu_449_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_7_fu_475_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_7_fu_475_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    grp_conv2_Pipeline_7_fu_475_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_7_fu_475_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_7_fu_475_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_BW7_fu_500_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_BW7_fu_500_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                    grp_conv2_Pipeline_BW7_fu_500_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_BW7_fu_500_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_BW7_fu_500_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_BW8_fu_511_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_BW8_fu_511_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                    grp_conv2_Pipeline_BW8_fu_511_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_BW8_fu_511_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_BW8_fu_511_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_BW_fu_489_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_BW_fu_489_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln62_fu_1180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                    grp_conv2_Pipeline_BW_fu_489_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_BW_fu_489_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_BW_fu_489_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_COL_fu_418_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_COL_fu_418_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_conv2_Pipeline_COL_fu_418_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_COL_fu_418_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_COL_fu_418_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln32_fu_570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0))) then 
                    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_RELU6_fu_463_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_RELU6_fu_463_ap_start_reg <= ap_const_logic_0;
            else
                if ((not(((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0))) and (icmp_ln109_1_reg_1392 = ap_const_lv1_0) and (icmp_ln109_reg_1366 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then 
                    grp_conv2_Pipeline_RELU6_fu_463_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_RELU6_fu_463_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_RELU6_fu_463_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_conv2_Pipeline_RELU_fu_437_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_conv2_Pipeline_RELU_fu_437_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln109_fu_974_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    grp_conv2_Pipeline_RELU_fu_437_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_conv2_Pipeline_RELU_fu_437_ap_ready = ap_const_logic_1)) then 
                    grp_conv2_Pipeline_RELU_fu_437_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    bh_reg_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_axi_biases_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                bh_reg_372 <= ap_const_lv3_0;
            elsif (((m_axi_bundle_1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then 
                bh_reg_372 <= add_ln109_reg_1413;
            end if; 
        end if;
    end process;

    bout_1_reg_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                bout_1_reg_360 <= ap_const_lv3_0;
            elsif ((not(((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26) and ((icmp_ln109_1_reg_1392 = ap_const_lv1_1) or (icmp_ln109_reg_1366 = ap_const_lv1_0)))) then 
                bout_1_reg_360 <= add_ln108_reg_1343;
            end if; 
        end if;
    end process;

    h_fu_206_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                h_fu_206 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_1))) then 
                h_fu_206 <= add_ln32_fu_622_p2;
            end if; 
        end if;
    end process;

    i_reg_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                i_reg_338 <= ap_const_lv7_0;
            elsif (((grp_conv2_Pipeline_COL_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                i_reg_338 <= select_ln41_1_reg_1305;
            end if; 
        end if;
    end process;

    indvar_flatten32_reg_327_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                indvar_flatten32_reg_327 <= ap_const_lv9_0;
            elsif (((grp_conv2_Pipeline_COL_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                indvar_flatten32_reg_327 <= select_ln41_3_reg_1330;
            end if; 
        end if;
    end process;

    indvar_flatten63_reg_305_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                indvar_flatten63_reg_305 <= ap_const_lv10_0;
            elsif (((grp_conv2_Pipeline_COL_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                indvar_flatten63_reg_305 <= add_ln40_1_reg_1295;
            end if; 
        end if;
    end process;

    indvar_reg_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                indvar_reg_282 <= ap_const_lv4_0;
            elsif (((icmp_ln62_fu_1180_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                indvar_reg_282 <= add_ln36_1_reg_1282;
            end if; 
        end if;
    end process;

    o_1_reg_384_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                o_1_reg_384 <= ap_const_lv3_0;
            elsif (((grp_conv2_Pipeline_BW8_fu_511_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                o_1_reg_384 <= add_ln62_reg_1426;
            end if; 
        end if;
    end process;

    o_reg_316_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                o_reg_316 <= ap_const_lv3_0;
            elsif (((grp_conv2_Pipeline_COL_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                o_reg_316 <= select_ln40_1_reg_1300;
            end if; 
        end if;
    end process;

    out_reg_293_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                out_reg_293 <= ap_const_lv6_0;
            elsif (((icmp_ln62_fu_1180_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then 
                out_reg_293 <= add_ln36_fu_1211_p2;
            end if; 
        end if;
    end process;

    r_reg_349_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                r_reg_349 <= ap_const_lv2_0;
            elsif (((grp_conv2_Pipeline_COL_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                r_reg_349 <= add_ln45_reg_1325;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                add_ln108_reg_1343 <= add_ln108_fu_910_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_1_reg_1392 = ap_const_lv1_0) and (icmp_ln109_reg_1366 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                add_ln109_reg_1413 <= add_ln109_fu_1160_p2;
                trunc_ln122_1_reg_1407 <= add_ln112_4_reg_1382(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_fu_974_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                add_ln112_4_reg_1382 <= add_ln112_4_fu_1111_p2;
                add_ln115_1_reg_1387 <= add_ln115_1_fu_1120_p2;
                icmp_ln109_1_reg_1392 <= icmp_ln109_1_fu_1125_p2;
                mul_ln109_reg_1370 <= mul_ln109_fu_993_p2;
                trunc_ln2_reg_1376 <= add_ln112_2_fu_1047_p2(63 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln108_fu_904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                add_ln112_reg_1348 <= add_ln112_fu_939_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln36_1_reg_1282 <= add_ln36_1_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                add_ln40_1_reg_1295 <= add_ln40_1_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln40_fu_652_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                add_ln45_reg_1325 <= add_ln45_fu_879_p2;
                mul_ln45_reg_1320 <= mul_ln45_fu_873_p2;
                mul_ln50_reg_1315 <= mul_ln50_fu_857_p2;
                select_ln40_1_reg_1300 <= select_ln40_1_fu_684_p3;
                select_ln41_1_reg_1305 <= select_ln41_1_fu_776_p3;
                select_ln41_3_reg_1330 <= select_ln41_3_fu_891_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                add_ln62_reg_1426 <= add_ln62_fu_1186_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                add_ln67_1_reg_1448 <= add_ln67_1_fu_1223_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                add_ln67_reg_1443 <= add_ln67_fu_1217_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                biases_addr_reg_1256 <= sext_ln36_1_fu_552_p1;
                trunc_ln_reg_1246 <= conv2_weights(63 downto 2);
                weights_addr_reg_1251 <= sext_ln36_fu_532_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                bitcast_ln41_reg_1335 <= bitcast_ln41_fu_899_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                empty_353_reg_1360 <= empty_353_fu_970_p1;
                sext_ln108_reg_1354 <= sext_ln108_fu_966_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                icmp_ln109_reg_1366 <= icmp_ln109_fu_974_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln109_reg_1366 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                mul_ln109_1_reg_1401 <= mul_ln109_1_fu_1144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln62_fu_1180_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                sub_ln67_reg_1431 <= sub_ln67_fu_1204_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln32_fu_570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    sub_ln80_reg_1268(18 downto 2) <= sub_ln80_fu_600_p2(18 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                trunc_ln104_reg_1287 <= trunc_ln104_fu_632_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    zext_ln105_reg_1273(7 downto 0) <= zext_ln105_fu_607_p1(7 downto 0);
            end if;
        end if;
    end process;
    sub_ln80_reg_1268(1 downto 0) <= "00";
    zext_ln105_reg_1273(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_biases_RVALID, m_axi_bundle_1_AWREADY, m_axi_bundle_1_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state17, ap_CS_fsm_state19, ap_CS_fsm_state26, icmp_ln109_reg_1366, ap_CS_fsm_state27, ap_CS_fsm_state34, ap_CS_fsm_state2, icmp_ln32_fu_570_p2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln40_fu_652_p2, ap_CS_fsm_state16, icmp_ln108_fu_904_p2, icmp_ln109_fu_974_p2, ap_CS_fsm_state18, icmp_ln109_1_reg_1392, ap_CS_fsm_state35, icmp_ln62_fu_1180_p2, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done, grp_conv2_Pipeline_COL_fu_418_ap_done, grp_conv2_Pipeline_RELU_fu_437_ap_done, grp_conv2_Pipeline_5_fu_449_ap_done, grp_conv2_Pipeline_RELU6_fu_463_ap_done, grp_conv2_Pipeline_7_fu_475_ap_done, grp_conv2_Pipeline_BW_fu_489_ap_done, grp_conv2_Pipeline_BW7_fu_500_ap_done, grp_conv2_Pipeline_BW8_fu_511_ap_done, ap_CS_fsm_state15, ap_CS_fsm_state40, icmp_ln36_fu_610_p2, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state38, ap_block_state3_io)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln32_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln40_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((grp_conv2_Pipeline_COL_fu_418_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                if (((icmp_ln108_fu_904_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                if (((m_axi_biases_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((icmp_ln109_fu_974_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                if ((not(((grp_conv2_Pipeline_RELU_fu_437_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                if (((grp_conv2_Pipeline_5_fu_449_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                if ((not(((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state26) and ((icmp_ln109_1_reg_1392 = ap_const_lv1_1) or (icmp_ln109_reg_1366 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                elsif ((not(((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0))) and (icmp_ln109_1_reg_1392 = ap_const_lv1_0) and (icmp_ln109_reg_1366 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state27 => 
                if ((not(((grp_conv2_Pipeline_RELU6_fu_463_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_conv2_Pipeline_7_fu_475_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                if (((m_axi_bundle_1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state35 => 
                if (((icmp_ln62_fu_1180_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state36 => 
                if (((grp_conv2_Pipeline_BW_fu_489_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((grp_conv2_Pipeline_BW7_fu_500_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((grp_conv2_Pipeline_BW8_fu_511_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln108_fu_910_p2 <= std_logic_vector(unsigned(bout_1_reg_360) + unsigned(ap_const_lv3_1));
    add_ln109_fu_1160_p2 <= std_logic_vector(unsigned(bh_reg_372) + unsigned(ap_const_lv3_2));
    add_ln112_1_fu_1008_p2 <= std_logic_vector(unsigned(zext_ln109_fu_1004_p1) + unsigned(zext_ln105_reg_1273));
    add_ln112_2_fu_1047_p2 <= std_logic_vector(signed(sext_ln112_fu_1043_p1) + signed(add_ln112_reg_1348));
    add_ln112_3_fu_1072_p2 <= std_logic_vector(unsigned(zext_ln112_3_fu_1068_p1) + unsigned(zext_ln105_reg_1273));
    add_ln112_4_fu_1111_p2 <= std_logic_vector(signed(sext_ln112_1_fu_1107_p1) + signed(add_ln112_reg_1348));
    add_ln112_fu_939_p2 <= std_logic_vector(unsigned(zext_ln112_fu_935_p1) + unsigned(output_ftmap));
    add_ln115_1_fu_1120_p2 <= std_logic_vector(signed(sext_ln108_reg_1354) + signed(zext_ln115_5_fu_1116_p1));
    add_ln115_fu_984_p2 <= std_logic_vector(signed(sext_ln108_reg_1354) + signed(zext_ln115_4_fu_980_p1));
    add_ln32_fu_622_p2 <= std_logic_vector(unsigned(h_fu_206) + unsigned(ap_const_lv8_3));
    add_ln36_1_fu_616_p2 <= std_logic_vector(unsigned(indvar_reg_282) + unsigned(ap_const_lv4_1));
    add_ln36_fu_1211_p2 <= std_logic_vector(unsigned(out_reg_293) + unsigned(ap_const_lv6_4));
    add_ln40_1_fu_658_p2 <= std_logic_vector(unsigned(indvar_flatten63_reg_305) + unsigned(ap_const_lv10_1));
    add_ln40_fu_664_p2 <= std_logic_vector(unsigned(o_reg_316) + unsigned(ap_const_lv3_1));
    add_ln41_1_fu_885_p2 <= std_logic_vector(unsigned(indvar_flatten32_reg_327) + unsigned(ap_const_lv9_1));
    add_ln41_fu_756_p2 <= std_logic_vector(unsigned(select_ln40_fu_676_p3) + unsigned(ap_const_lv7_1));
    add_ln45_fu_879_p2 <= std_logic_vector(unsigned(select_ln41_fu_768_p3) + unsigned(ap_const_lv2_1));
    add_ln50_1_fu_863_p2 <= std_logic_vector(signed(sext_ln40_fu_714_p1) + signed(zext_ln50_31_fu_839_p1));
    add_ln50_fu_847_p2 <= std_logic_vector(signed(sext_ln43_fu_806_p1) + signed(zext_ln50_32_fu_843_p1));
    add_ln62_fu_1186_p2 <= std_logic_vector(unsigned(o_1_reg_384) + unsigned(ap_const_lv3_1));
    add_ln67_1_fu_1223_p2 <= std_logic_vector(unsigned(sub_ln67_reg_1431) + unsigned(ap_const_lv10_AA));
    add_ln67_fu_1217_p2 <= std_logic_vector(unsigned(sub_ln67_reg_1431) + unsigned(ap_const_lv10_55));
    and_ln40_fu_750_p2 <= (xor_ln40_fu_738_p2 and icmp_ln45_fu_744_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done)
    begin
        if ((grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_ap_done)
    begin
        if ((grp_conv2_Pipeline_COL_fu_418_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(m_axi_biases_RVALID)
    begin
        if ((m_axi_biases_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;

    ap_ST_fsm_state19_blk_assign_proc : process(m_axi_bundle_1_AWREADY, grp_conv2_Pipeline_RELU_fu_437_ap_done)
    begin
        if (((grp_conv2_Pipeline_RELU_fu_437_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state19_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state19_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;

    ap_ST_fsm_state21_blk_assign_proc : process(grp_conv2_Pipeline_5_fu_449_ap_done)
    begin
        if ((grp_conv2_Pipeline_5_fu_449_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state26_blk_assign_proc : process(m_axi_bundle_1_BVALID, icmp_ln109_reg_1366)
    begin
        if (((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0))) then 
            ap_ST_fsm_state26_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state26_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state27_blk_assign_proc : process(m_axi_bundle_1_AWREADY, grp_conv2_Pipeline_RELU6_fu_463_ap_done)
    begin
        if (((grp_conv2_Pipeline_RELU6_fu_463_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_conv2_Pipeline_7_fu_475_ap_done)
    begin
        if ((grp_conv2_Pipeline_7_fu_475_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;

    ap_ST_fsm_state34_blk_assign_proc : process(m_axi_bundle_1_BVALID)
    begin
        if ((m_axi_bundle_1_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state34_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state34_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(grp_conv2_Pipeline_BW_fu_489_ap_done)
    begin
        if ((grp_conv2_Pipeline_BW_fu_489_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state37_blk <= ap_const_logic_0;

    ap_ST_fsm_state38_blk_assign_proc : process(grp_conv2_Pipeline_BW7_fu_500_ap_done)
    begin
        if ((grp_conv2_Pipeline_BW7_fu_500_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state39_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done, ap_block_state3_io)
    begin
        if (((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state40_blk_assign_proc : process(grp_conv2_Pipeline_BW8_fu_511_ap_done)
    begin
        if ((grp_conv2_Pipeline_BW8_fu_511_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state26_assign_proc : process(m_axi_bundle_1_BVALID, icmp_ln109_reg_1366)
    begin
                ap_block_state26 <= ((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0));
    end process;


    ap_block_state26_ignore_call0_assign_proc : process(m_axi_bundle_1_BVALID, icmp_ln109_reg_1366)
    begin
                ap_block_state26_ignore_call0 <= ((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0));
    end process;


    ap_block_state3_io_assign_proc : process(m_axi_weights_ARREADY, m_axi_biases_ARREADY)
    begin
                ap_block_state3_io <= ((m_axi_biases_ARREADY = ap_const_logic_0) or (m_axi_weights_ARREADY = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln32_fu_570_p2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((icmp_ln32_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln32_fu_570_p2)
    begin
        if (((icmp_ln32_fu_570_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    biases_blk_n_AR_assign_proc : process(m_axi_biases_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            biases_blk_n_AR <= m_axi_biases_ARREADY;
        else 
            biases_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    biases_blk_n_R_assign_proc : process(m_axi_biases_RVALID, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            biases_blk_n_R <= m_axi_biases_RVALID;
        else 
            biases_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    bitcast_ln41_fu_899_p1 <= weight_buffer_q0;

    bundle_1_blk_n_AW_assign_proc : process(m_axi_bundle_1_AWREADY, ap_CS_fsm_state19, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            bundle_1_blk_n_AW <= m_axi_bundle_1_AWREADY;
        else 
            bundle_1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    bundle_1_blk_n_B_assign_proc : process(m_axi_bundle_1_BVALID, ap_CS_fsm_state26, icmp_ln109_reg_1366, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or ((icmp_ln109_reg_1366 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            bundle_1_blk_n_B <= m_axi_bundle_1_BVALID;
        else 
            bundle_1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0 <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_i_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_1_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_2_we1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_address1 <= "XXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state21, ap_CS_fsm_state29, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_7_fu_475_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_5_fu_449_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0, grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0, grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0, grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0, grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0, grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0, ap_CS_fsm_state15, ap_CS_fsm_state40, ap_CS_fsm_state36, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 <= grp_conv2_Pipeline_BW8_fu_511_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 <= grp_conv2_Pipeline_BW7_fu_500_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 <= grp_conv2_Pipeline_BW_fu_489_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 <= grp_conv2_Pipeline_RELU6_fu_463_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 <= grp_conv2_Pipeline_RELU_fu_437_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we0 <= ap_const_logic_0;
        end if; 
    end process;


    conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1 <= grp_conv2_Pipeline_COL_fu_418_conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1;
        else 
            conv2_float_255_255_float_64_1_1_float_float_255_255_o_we1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_352_fu_920_p2 <= std_logic_vector(unsigned(zext_ln108_fu_916_p1) + unsigned(trunc_ln104_reg_1287));
    empty_353_fu_970_p1 <= m_axi_biases_RDATA;
    grp_conv2_Pipeline_5_fu_449_ap_start <= grp_conv2_Pipeline_5_fu_449_ap_start_reg;
    grp_conv2_Pipeline_7_fu_475_ap_start <= grp_conv2_Pipeline_7_fu_475_ap_start_reg;
    grp_conv2_Pipeline_BW7_fu_500_ap_start <= grp_conv2_Pipeline_BW7_fu_500_ap_start_reg;
    grp_conv2_Pipeline_BW8_fu_511_ap_start <= grp_conv2_Pipeline_BW8_fu_511_ap_start_reg;
    grp_conv2_Pipeline_BW_fu_489_ap_start <= grp_conv2_Pipeline_BW_fu_489_ap_start_reg;
    grp_conv2_Pipeline_COL_fu_418_ap_start <= grp_conv2_Pipeline_COL_fu_418_ap_start_reg;
    grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_start_reg;
    grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_ap_start_reg;
    grp_conv2_Pipeline_RELU6_fu_463_ap_start <= grp_conv2_Pipeline_RELU6_fu_463_ap_start_reg;
    grp_conv2_Pipeline_RELU_fu_437_ap_start <= grp_conv2_Pipeline_RELU_fu_437_ap_start_reg;

    grp_fu_1453_ce_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_ce, grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_ce, grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_ce, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1453_ce <= grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_1453_ce <= grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_1453_ce <= grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_ce;
        else 
            grp_fu_1453_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1453_p0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din0, grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din0, grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din0, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1453_p0 <= grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_1453_p0 <= grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_1453_p0 <= grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din0;
        else 
            grp_fu_1453_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1453_p1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din1, grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din1, grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din1, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1453_p1 <= grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1453_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_1453_p1 <= grp_conv2_Pipeline_RELU_fu_437_grp_fu_1453_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_1453_p1 <= grp_conv2_Pipeline_COL_fu_418_grp_fu_1453_p_din1;
        else 
            grp_fu_1453_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1457_ce_assign_proc : process(grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_ce, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            grp_fu_1457_ce <= grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_ce;
        else 
            grp_fu_1457_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1461_ce_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_ce, grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1461_ce <= grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_1461_ce <= grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_ce;
        else 
            grp_fu_1461_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_1461_opcode_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_opcode, grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1461_opcode <= grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_1461_opcode <= grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_opcode;
        else 
            grp_fu_1461_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1461_p0_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din0, grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1461_p0 <= grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_1461_p0 <= grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din0;
        else 
            grp_fu_1461_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1461_p1_assign_proc : process(ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din1, grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            grp_fu_1461_p1 <= grp_conv2_Pipeline_RELU6_fu_463_grp_fu_1461_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            grp_fu_1461_p1 <= grp_conv2_Pipeline_RELU_fu_437_grp_fu_1461_p_din1;
        else 
            grp_fu_1461_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_481_p_ce <= grp_fu_1453_ce;
    grp_fu_481_p_din0 <= grp_fu_1453_p0;
    grp_fu_481_p_din1 <= grp_fu_1453_p1;
    grp_fu_481_p_opcode <= ap_const_lv2_0;
    grp_fu_497_p_ce <= grp_fu_1457_ce;
    grp_fu_497_p_din0 <= grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_din0;
    grp_fu_497_p_din1 <= grp_conv2_Pipeline_COL_fu_418_grp_fu_1457_p_din1;
    grp_fu_509_p_ce <= grp_fu_1461_ce;
    grp_fu_509_p_din0 <= grp_fu_1461_p0;
    grp_fu_509_p_din1 <= grp_fu_1461_p1;
    grp_fu_509_p_opcode <= grp_fu_1461_opcode;
    icmp_ln108_fu_904_p2 <= "1" when (bout_1_reg_360 = ap_const_lv3_4) else "0";
    icmp_ln109_1_fu_1125_p2 <= "1" when (or_ln112_fu_1062_p2 = ap_const_lv2_3) else "0";
    icmp_ln109_fu_974_p2 <= "1" when (unsigned(bh_reg_372) < unsigned(ap_const_lv3_3)) else "0";
    icmp_ln32_fu_570_p2 <= "1" when (h_fu_206 = ap_const_lv8_FF) else "0";
    icmp_ln36_fu_610_p2 <= "1" when (indvar_reg_282 = ap_const_lv4_8) else "0";
    icmp_ln40_fu_652_p2 <= "1" when (indvar_flatten63_reg_305 = ap_const_lv10_300) else "0";
    icmp_ln41_fu_670_p2 <= "1" when (indvar_flatten32_reg_327 = ap_const_lv9_C0) else "0";
    icmp_ln45_fu_744_p2 <= "1" when (r_reg_349 = ap_const_lv2_3) else "0";
    icmp_ln62_fu_1180_p2 <= "1" when (o_1_reg_384 = ap_const_lv3_4) else "0";
    lshr_ln43_mid1_fu_818_p3 <= (trunc_ln43_4_fu_814_p1 & trunc_ln43_3_fu_810_p1);
    lshr_ln43_mid_fu_722_p3 <= (trunc_ln43_2_fu_718_p1 & ap_const_lv6_0);
    lshr_ln_fu_644_p3 <= (trunc_ln43_1_fu_640_p1 & trunc_ln43_fu_636_p1);
    m_axi_biases_ARADDR <= biases_addr_reg_1256;
    m_axi_biases_ARBURST <= ap_const_lv2_0;
    m_axi_biases_ARCACHE <= ap_const_lv4_0;
    m_axi_biases_ARID <= ap_const_lv1_0;
    m_axi_biases_ARLEN <= ap_const_lv32_20;
    m_axi_biases_ARLOCK <= ap_const_lv2_0;
    m_axi_biases_ARPROT <= ap_const_lv3_0;
    m_axi_biases_ARQOS <= ap_const_lv4_0;
    m_axi_biases_ARREGION <= ap_const_lv4_0;
    m_axi_biases_ARSIZE <= ap_const_lv3_0;
    m_axi_biases_ARUSER <= ap_const_lv1_0;

    m_axi_biases_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done, ap_block_state3_io)
    begin
        if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_biases_ARVALID <= ap_const_logic_1;
        else 
            m_axi_biases_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_biases_AWADDR <= ap_const_lv64_0;
    m_axi_biases_AWBURST <= ap_const_lv2_0;
    m_axi_biases_AWCACHE <= ap_const_lv4_0;
    m_axi_biases_AWID <= ap_const_lv1_0;
    m_axi_biases_AWLEN <= ap_const_lv32_0;
    m_axi_biases_AWLOCK <= ap_const_lv2_0;
    m_axi_biases_AWPROT <= ap_const_lv3_0;
    m_axi_biases_AWQOS <= ap_const_lv4_0;
    m_axi_biases_AWREGION <= ap_const_lv4_0;
    m_axi_biases_AWSIZE <= ap_const_lv3_0;
    m_axi_biases_AWUSER <= ap_const_lv1_0;
    m_axi_biases_AWVALID <= ap_const_logic_0;
    m_axi_biases_BREADY <= ap_const_logic_0;

    m_axi_biases_RREADY_assign_proc : process(m_axi_biases_RVALID, ap_CS_fsm_state17)
    begin
        if (((m_axi_biases_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            m_axi_biases_RREADY <= ap_const_logic_1;
        else 
            m_axi_biases_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_biases_WDATA <= ap_const_lv32_0;
    m_axi_biases_WID <= ap_const_lv1_0;
    m_axi_biases_WLAST <= ap_const_logic_0;
    m_axi_biases_WSTRB <= ap_const_lv4_0;
    m_axi_biases_WUSER <= ap_const_lv1_0;
    m_axi_biases_WVALID <= ap_const_logic_0;
    m_axi_bundle_1_ARADDR <= ap_const_lv64_0;
    m_axi_bundle_1_ARBURST <= ap_const_lv2_0;
    m_axi_bundle_1_ARCACHE <= ap_const_lv4_0;
    m_axi_bundle_1_ARID <= ap_const_lv1_0;
    m_axi_bundle_1_ARLEN <= ap_const_lv32_0;
    m_axi_bundle_1_ARLOCK <= ap_const_lv2_0;
    m_axi_bundle_1_ARPROT <= ap_const_lv3_0;
    m_axi_bundle_1_ARQOS <= ap_const_lv4_0;
    m_axi_bundle_1_ARREGION <= ap_const_lv4_0;
    m_axi_bundle_1_ARSIZE <= ap_const_lv3_0;
    m_axi_bundle_1_ARUSER <= ap_const_lv1_0;
    m_axi_bundle_1_ARVALID <= ap_const_logic_0;

    m_axi_bundle_1_AWADDR_assign_proc : process(m_axi_bundle_1_AWREADY, ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_RELU_fu_437_ap_done, grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWADDR, grp_conv2_Pipeline_RELU6_fu_463_ap_done, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWADDR, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29, sext_ln122_fu_1131_p1, sext_ln122_1_fu_1166_p1)
    begin
        if ((not(((grp_conv2_Pipeline_RELU6_fu_463_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            m_axi_bundle_1_AWADDR <= sext_ln122_1_fu_1166_p1;
        elsif ((not(((grp_conv2_Pipeline_RELU_fu_437_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            m_axi_bundle_1_AWADDR <= sext_ln122_fu_1131_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWADDR <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWADDR <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWADDR;
        else 
            m_axi_bundle_1_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_bundle_1_AWBURST_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWBURST, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWBURST, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWBURST <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWBURST <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWBURST;
        else 
            m_axi_bundle_1_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_bundle_1_AWCACHE_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWCACHE, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWCACHE, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWCACHE <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWCACHE <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWCACHE;
        else 
            m_axi_bundle_1_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_bundle_1_AWID_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWID, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWID, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWID <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWID <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWID;
        else 
            m_axi_bundle_1_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_bundle_1_AWLEN_assign_proc : process(m_axi_bundle_1_AWREADY, ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_RELU_fu_437_ap_done, grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLEN, grp_conv2_Pipeline_RELU6_fu_463_ap_done, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLEN, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((not(((grp_conv2_Pipeline_RELU6_fu_463_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27)) or (not(((grp_conv2_Pipeline_RELU_fu_437_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            m_axi_bundle_1_AWLEN <= ap_const_lv32_FF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWLEN <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWLEN <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLEN;
        else 
            m_axi_bundle_1_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_bundle_1_AWLOCK_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLOCK, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLOCK, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWLOCK <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWLOCK <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWLOCK;
        else 
            m_axi_bundle_1_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_bundle_1_AWPROT_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWPROT, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWPROT, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWPROT <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWPROT <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWPROT;
        else 
            m_axi_bundle_1_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_bundle_1_AWQOS_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWQOS, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWQOS, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWQOS <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWQOS <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWQOS;
        else 
            m_axi_bundle_1_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_bundle_1_AWREGION_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWREGION, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWREGION, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWREGION <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWREGION <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWREGION;
        else 
            m_axi_bundle_1_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_bundle_1_AWSIZE_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWSIZE, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWSIZE, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWSIZE <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWSIZE <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWSIZE;
        else 
            m_axi_bundle_1_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_bundle_1_AWUSER_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWUSER, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWUSER, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWUSER <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWUSER <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWUSER;
        else 
            m_axi_bundle_1_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_bundle_1_AWVALID_assign_proc : process(m_axi_bundle_1_AWREADY, ap_CS_fsm_state19, ap_CS_fsm_state27, grp_conv2_Pipeline_RELU_fu_437_ap_done, grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWVALID, grp_conv2_Pipeline_RELU6_fu_463_ap_done, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWVALID, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((not(((grp_conv2_Pipeline_RELU6_fu_463_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state27)) or (not(((grp_conv2_Pipeline_RELU_fu_437_ap_done = ap_const_logic_0) or (m_axi_bundle_1_AWREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
            m_axi_bundle_1_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_AWVALID <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_AWVALID <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_AWVALID;
        else 
            m_axi_bundle_1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_bundle_1_BREADY_assign_proc : process(m_axi_bundle_1_BVALID, ap_CS_fsm_state26, icmp_ln109_reg_1366, ap_CS_fsm_state34, grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_BREADY, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_BREADY, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if ((((m_axi_bundle_1_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state34)) or (not(((icmp_ln109_reg_1366 = ap_const_lv1_1) and (m_axi_bundle_1_BVALID = ap_const_logic_0))) and (icmp_ln109_reg_1366 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state26)))) then 
            m_axi_bundle_1_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_BREADY <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_BREADY <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_BREADY;
        else 
            m_axi_bundle_1_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_bundle_1_RREADY <= ap_const_logic_0;

    m_axi_bundle_1_WDATA_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WDATA, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WDATA, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_WDATA <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_WDATA <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WDATA;
        else 
            m_axi_bundle_1_WDATA <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_bundle_1_WID_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WID, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WID, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_WID <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_WID <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WID;
        else 
            m_axi_bundle_1_WID <= "X";
        end if; 
    end process;


    m_axi_bundle_1_WLAST_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WLAST, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WLAST, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_WLAST <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WLAST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_WLAST <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WLAST;
        else 
            m_axi_bundle_1_WLAST <= 'X';
        end if; 
    end process;


    m_axi_bundle_1_WSTRB_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WSTRB, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WSTRB, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_WSTRB <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_WSTRB <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WSTRB;
        else 
            m_axi_bundle_1_WSTRB <= "XXXX";
        end if; 
    end process;


    m_axi_bundle_1_WUSER_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WUSER, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WUSER, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_WUSER <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_WUSER <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WUSER;
        else 
            m_axi_bundle_1_WUSER <= "X";
        end if; 
    end process;


    m_axi_bundle_1_WVALID_assign_proc : process(grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WVALID, grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WVALID, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state28, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            m_axi_bundle_1_WVALID <= grp_conv2_Pipeline_7_fu_475_m_axi_bundle_1_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            m_axi_bundle_1_WVALID <= grp_conv2_Pipeline_5_fu_449_m_axi_bundle_1_WVALID;
        else 
            m_axi_bundle_1_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_bundle_2_ARADDR <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARADDR;
    m_axi_bundle_2_ARBURST <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARBURST;
    m_axi_bundle_2_ARCACHE <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARCACHE;
    m_axi_bundle_2_ARID <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARID;
    m_axi_bundle_2_ARLEN <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARLEN;
    m_axi_bundle_2_ARLOCK <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARLOCK;
    m_axi_bundle_2_ARPROT <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARPROT;
    m_axi_bundle_2_ARQOS <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARQOS;
    m_axi_bundle_2_ARREGION <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARREGION;
    m_axi_bundle_2_ARSIZE <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARSIZE;
    m_axi_bundle_2_ARUSER <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARUSER;

    m_axi_bundle_2_ARVALID_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln32_fu_570_p2, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARVALID)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln32_fu_570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            m_axi_bundle_2_ARVALID <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_ARVALID;
        else 
            m_axi_bundle_2_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_bundle_2_AWADDR <= ap_const_lv64_0;
    m_axi_bundle_2_AWBURST <= ap_const_lv2_0;
    m_axi_bundle_2_AWCACHE <= ap_const_lv4_0;
    m_axi_bundle_2_AWID <= ap_const_lv1_0;
    m_axi_bundle_2_AWLEN <= ap_const_lv32_0;
    m_axi_bundle_2_AWLOCK <= ap_const_lv2_0;
    m_axi_bundle_2_AWPROT <= ap_const_lv3_0;
    m_axi_bundle_2_AWQOS <= ap_const_lv4_0;
    m_axi_bundle_2_AWREGION <= ap_const_lv4_0;
    m_axi_bundle_2_AWSIZE <= ap_const_lv3_0;
    m_axi_bundle_2_AWUSER <= ap_const_lv1_0;
    m_axi_bundle_2_AWVALID <= ap_const_logic_0;
    m_axi_bundle_2_BREADY <= ap_const_logic_0;

    m_axi_bundle_2_RREADY_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2, icmp_ln32_fu_570_p2, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_RREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((icmp_ln32_fu_570_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            m_axi_bundle_2_RREADY <= grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_m_axi_bundle_2_RREADY;
        else 
            m_axi_bundle_2_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_bundle_2_WDATA <= ap_const_lv32_0;
    m_axi_bundle_2_WID <= ap_const_lv1_0;
    m_axi_bundle_2_WLAST <= ap_const_logic_0;
    m_axi_bundle_2_WSTRB <= ap_const_lv4_0;
    m_axi_bundle_2_WUSER <= ap_const_lv1_0;
    m_axi_bundle_2_WVALID <= ap_const_logic_0;

    m_axi_weights_ARADDR_assign_proc : process(ap_CS_fsm_state3, weights_addr_reg_1251, ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARADDR, icmp_ln36_fu_610_p2, ap_block_state3_io)
    begin
        if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_weights_ARADDR <= weights_addr_reg_1251;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARADDR <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARADDR;
        else 
            m_axi_weights_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_weights_ARBURST_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARBURST, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARBURST <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARBURST;
        else 
            m_axi_weights_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_weights_ARCACHE_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARCACHE, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARCACHE <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARCACHE;
        else 
            m_axi_weights_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_weights_ARID_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARID, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARID <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARID;
        else 
            m_axi_weights_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_weights_ARLEN_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLEN, icmp_ln36_fu_610_p2, ap_block_state3_io)
    begin
        if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_weights_ARLEN <= ap_const_lv32_800;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARLEN <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLEN;
        else 
            m_axi_weights_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_weights_ARLOCK_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLOCK, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARLOCK <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARLOCK;
        else 
            m_axi_weights_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_weights_ARPROT_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARPROT, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARPROT <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARPROT;
        else 
            m_axi_weights_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_weights_ARQOS_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARQOS, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARQOS <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARQOS;
        else 
            m_axi_weights_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_weights_ARREGION_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARREGION, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARREGION <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARREGION;
        else 
            m_axi_weights_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_weights_ARSIZE_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARSIZE, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARSIZE <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARSIZE;
        else 
            m_axi_weights_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_weights_ARUSER_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARUSER, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARUSER <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARUSER;
        else 
            m_axi_weights_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_weights_ARVALID_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARVALID, icmp_ln36_fu_610_p2, ap_block_state3_io)
    begin
        if ((not(((grp_conv2_Pipeline_LOAD_INPUT_BH_L_fu_395_ap_done = ap_const_logic_0) or (ap_const_boolean_1 = ap_block_state3_io))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_weights_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_ARVALID <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_ARVALID;
        else 
            m_axi_weights_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weights_AWADDR <= ap_const_lv64_0;
    m_axi_weights_AWBURST <= ap_const_lv2_0;
    m_axi_weights_AWCACHE <= ap_const_lv4_0;
    m_axi_weights_AWID <= ap_const_lv1_0;
    m_axi_weights_AWLEN <= ap_const_lv32_0;
    m_axi_weights_AWLOCK <= ap_const_lv2_0;
    m_axi_weights_AWPROT <= ap_const_lv3_0;
    m_axi_weights_AWQOS <= ap_const_lv4_0;
    m_axi_weights_AWREGION <= ap_const_lv4_0;
    m_axi_weights_AWSIZE <= ap_const_lv3_0;
    m_axi_weights_AWUSER <= ap_const_lv1_0;
    m_axi_weights_AWVALID <= ap_const_logic_0;
    m_axi_weights_BREADY <= ap_const_logic_0;

    m_axi_weights_RREADY_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_RREADY, icmp_ln36_fu_610_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln36_fu_610_p2 = ap_const_lv1_0)))) then 
            m_axi_weights_RREADY <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_m_axi_weights_RREADY;
        else 
            m_axi_weights_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_weights_WDATA <= ap_const_lv32_0;
    m_axi_weights_WID <= ap_const_lv1_0;
    m_axi_weights_WLAST <= ap_const_logic_0;
    m_axi_weights_WSTRB <= ap_const_lv4_0;
    m_axi_weights_WUSER <= ap_const_lv1_0;
    m_axi_weights_WVALID <= ap_const_logic_0;
    mul_ln109_1_fu_1144_p1 <= ap_const_lv10_55(8 - 1 downto 0);
    mul_ln109_fu_993_p1 <= ap_const_lv10_55(8 - 1 downto 0);
    mul_ln112_fu_929_p0 <= mul_ln112_fu_929_p00(5 - 1 downto 0);
    mul_ln112_fu_929_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_352_fu_920_p2),23));
    mul_ln112_fu_929_p1 <= ap_const_lv23_3F804(19 - 1 downto 0);
    mul_ln45_fu_873_p1 <= ap_const_lv10_55(8 - 1 downto 0);
    mul_ln50_fu_857_p1 <= ap_const_lv14_55(8 - 1 downto 0);
    or_ln112_fu_1062_p2 <= (trunc_ln109_fu_1000_p1 or ap_const_lv2_1);
    or_ln41_fu_762_p2 <= (icmp_ln41_fu_670_p2 or and_ln40_fu_750_p2);
    p_shl1_fu_788_p3 <= (select_ln41_1_fu_776_p3 & ap_const_lv2_0);
    select_ln40_1_fu_684_p3 <= 
        add_ln40_fu_664_p2 when (icmp_ln41_fu_670_p2(0) = '1') else 
        o_reg_316;
    select_ln40_2_fu_730_p3 <= 
        lshr_ln43_mid_fu_722_p3 when (icmp_ln41_fu_670_p2(0) = '1') else 
        lshr_ln_fu_644_p3;
    select_ln40_fu_676_p3 <= 
        ap_const_lv7_0 when (icmp_ln41_fu_670_p2(0) = '1') else 
        i_reg_338;
    select_ln41_1_fu_776_p3 <= 
        add_ln41_fu_756_p2 when (and_ln40_fu_750_p2(0) = '1') else 
        select_ln40_fu_676_p3;
    select_ln41_2_fu_826_p3 <= 
        lshr_ln43_mid1_fu_818_p3 when (and_ln40_fu_750_p2(0) = '1') else 
        select_ln40_2_fu_730_p3;
    select_ln41_3_fu_891_p3 <= 
        ap_const_lv9_1 when (icmp_ln41_fu_670_p2(0) = '1') else 
        add_ln41_1_fu_885_p2;
    select_ln41_fu_768_p3 <= 
        ap_const_lv2_0 when (or_ln41_fu_762_p2(0) = '1') else 
        r_reg_349;
        sext_ln108_fu_966_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln115_fu_960_p2),7));

        sext_ln112_1_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln112_1_fu_1101_p2),64));

        sext_ln112_fu_1043_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln112_fu_1037_p2),64));

        sext_ln122_1_fu_1166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln122_1_reg_1407),64));

        sext_ln122_fu_1131_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln2_reg_1376),64));

        sext_ln36_1_fu_552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln36_1_fu_542_p4),64));

        sext_ln36_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_522_p4),64));

        sext_ln40_fu_714_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln50_fu_708_p2),7));

        sext_ln43_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln50_1_fu_800_p2),11));

    shl_ln112_1_fu_1025_p3 <= (add_ln112_1_fu_1008_p2 & ap_const_lv2_0);
    shl_ln112_2_fu_1077_p3 <= (add_ln112_3_fu_1072_p2 & ap_const_lv10_0);
    shl_ln112_3_fu_1089_p3 <= (add_ln112_3_fu_1072_p2 & ap_const_lv2_0);
    shl_ln2_fu_1013_p3 <= (add_ln112_1_fu_1008_p2 & ap_const_lv10_0);
    shl_ln80_1_fu_588_p3 <= (h_fu_206 & ap_const_lv2_0);
    shl_ln_fu_576_p3 <= (h_fu_206 & ap_const_lv10_0);
    sub_ln112_1_fu_1101_p2 <= std_logic_vector(unsigned(zext_ln112_4_fu_1085_p1) - unsigned(zext_ln112_5_fu_1097_p1));
    sub_ln112_fu_1037_p2 <= std_logic_vector(unsigned(zext_ln112_1_fu_1021_p1) - unsigned(zext_ln112_2_fu_1033_p1));
    sub_ln115_fu_960_p2 <= std_logic_vector(unsigned(zext_ln115_3_fu_956_p1) - unsigned(zext_ln115_fu_944_p1));
    sub_ln50_1_fu_800_p2 <= std_logic_vector(unsigned(zext_ln50_30_fu_796_p1) - unsigned(zext_ln50_29_fu_784_p1));
    sub_ln50_fu_708_p2 <= std_logic_vector(unsigned(zext_ln50_28_fu_704_p1) - unsigned(zext_ln50_fu_692_p1));
    sub_ln67_fu_1204_p2 <= std_logic_vector(unsigned(tmp_30_fu_1196_p3) - unsigned(zext_ln67_fu_1192_p1));
    sub_ln80_fu_600_p2 <= std_logic_vector(unsigned(zext_ln80_fu_584_p1) - unsigned(zext_ln80_1_fu_596_p1));
    tmp_29_fu_948_p3 <= (bout_1_reg_360 & ap_const_lv2_0);
    tmp_30_fu_1196_p3 <= (trunc_ln62_fu_1176_p1 & ap_const_lv8_0);
    tmp_s_fu_696_p3 <= (select_ln40_1_fu_684_p3 & ap_const_lv2_0);
    trunc_ln104_fu_632_p1 <= out_reg_293(5 - 1 downto 0);
    trunc_ln109_fu_1000_p1 <= bh_reg_372(2 - 1 downto 0);
    trunc_ln36_1_fu_542_p4 <= conv2_biases(63 downto 2);
    trunc_ln43_1_fu_640_p1 <= o_reg_316(2 - 1 downto 0);
    trunc_ln43_2_fu_718_p1 <= add_ln40_fu_664_p2(2 - 1 downto 0);
    trunc_ln43_3_fu_810_p1 <= add_ln41_fu_756_p2(6 - 1 downto 0);
    trunc_ln43_4_fu_814_p1 <= select_ln40_1_fu_684_p3(2 - 1 downto 0);
    trunc_ln43_fu_636_p1 <= i_reg_338(6 - 1 downto 0);
    trunc_ln62_fu_1176_p1 <= o_1_reg_384(2 - 1 downto 0);
    trunc_ln_fu_522_p4 <= conv2_weights(63 downto 2);

    weight_buffer_address0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_address0, zext_ln41_fu_834_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_buffer_address0 <= zext_ln41_fu_834_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_address0 <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_address0;
        else 
            weight_buffer_address0 <= "XXXXXXXX";
        end if; 
    end process;


    weight_buffer_ce0_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            weight_buffer_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_ce0 <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_ce0;
        else 
            weight_buffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weight_buffer_we0_assign_proc : process(ap_CS_fsm_state12, grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            weight_buffer_we0 <= grp_conv2_Pipeline_LOAD_WEIGHTS_L_fu_409_weight_buffer_we0;
        else 
            weight_buffer_we0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_blk_n_AR_assign_proc : process(m_axi_weights_ARREADY, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            weights_blk_n_AR <= m_axi_weights_ARREADY;
        else 
            weights_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    xor_ln40_fu_738_p2 <= (icmp_ln41_fu_670_p2 xor ap_const_lv1_1);
    zext_ln105_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_fu_206),9));
    zext_ln108_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_1_reg_360),5));
    zext_ln109_fu_1004_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_372),9));
    zext_ln112_1_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1013_p3),20));
    zext_ln112_2_fu_1033_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln112_1_fu_1025_p3),20));
    zext_ln112_3_fu_1068_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln112_fu_1062_p2),9));
    zext_ln112_4_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln112_2_fu_1077_p3),20));
    zext_ln112_5_fu_1097_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln112_3_fu_1089_p3),20));
    zext_ln112_fu_935_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln112_fu_929_p2),64));
    zext_ln115_3_fu_956_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_29_fu_948_p3),6));
    zext_ln115_4_fu_980_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bh_reg_372),7));
    zext_ln115_5_fu_1116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln112_fu_1062_p2),7));
    zext_ln115_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(bout_1_reg_360),6));
    zext_ln41_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln41_2_fu_826_p3),64));
    zext_ln50_28_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_696_p3),6));
    zext_ln50_29_fu_784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln41_1_fu_776_p3),10));
    zext_ln50_30_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_shl1_fu_788_p3),10));
    zext_ln50_31_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln41_fu_768_p3),7));
    zext_ln50_32_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln41_fu_768_p3),11));
    zext_ln50_fu_692_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln40_1_fu_684_p3),6));
    zext_ln67_fu_1192_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(o_1_reg_384),10));
    zext_ln80_1_fu_596_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln80_1_fu_588_p3),19));
    zext_ln80_fu_584_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_576_p3),19));
end behav;
