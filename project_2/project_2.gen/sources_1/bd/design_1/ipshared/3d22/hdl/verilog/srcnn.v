// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="srcnn_srcnn,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xck24-ubva530-2LV-c,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=290656496,HLS_SYN_TPT=none,HLS_SYN_MEM=295,HLS_SYN_DSP=0,HLS_SYN_FF=26152,HLS_SYN_LUT=45153,HLS_VERSION=2023_1}" *)

module srcnn (
        ap_clk,
        ap_rst_n,
        m_axi_bundle_1_AWVALID,
        m_axi_bundle_1_AWREADY,
        m_axi_bundle_1_AWADDR,
        m_axi_bundle_1_AWID,
        m_axi_bundle_1_AWLEN,
        m_axi_bundle_1_AWSIZE,
        m_axi_bundle_1_AWBURST,
        m_axi_bundle_1_AWLOCK,
        m_axi_bundle_1_AWCACHE,
        m_axi_bundle_1_AWPROT,
        m_axi_bundle_1_AWQOS,
        m_axi_bundle_1_AWREGION,
        m_axi_bundle_1_AWUSER,
        m_axi_bundle_1_WVALID,
        m_axi_bundle_1_WREADY,
        m_axi_bundle_1_WDATA,
        m_axi_bundle_1_WSTRB,
        m_axi_bundle_1_WLAST,
        m_axi_bundle_1_WID,
        m_axi_bundle_1_WUSER,
        m_axi_bundle_1_ARVALID,
        m_axi_bundle_1_ARREADY,
        m_axi_bundle_1_ARADDR,
        m_axi_bundle_1_ARID,
        m_axi_bundle_1_ARLEN,
        m_axi_bundle_1_ARSIZE,
        m_axi_bundle_1_ARBURST,
        m_axi_bundle_1_ARLOCK,
        m_axi_bundle_1_ARCACHE,
        m_axi_bundle_1_ARPROT,
        m_axi_bundle_1_ARQOS,
        m_axi_bundle_1_ARREGION,
        m_axi_bundle_1_ARUSER,
        m_axi_bundle_1_RVALID,
        m_axi_bundle_1_RREADY,
        m_axi_bundle_1_RDATA,
        m_axi_bundle_1_RLAST,
        m_axi_bundle_1_RID,
        m_axi_bundle_1_RUSER,
        m_axi_bundle_1_RRESP,
        m_axi_bundle_1_BVALID,
        m_axi_bundle_1_BREADY,
        m_axi_bundle_1_BRESP,
        m_axi_bundle_1_BID,
        m_axi_bundle_1_BUSER,
        m_axi_weights_AWVALID,
        m_axi_weights_AWREADY,
        m_axi_weights_AWADDR,
        m_axi_weights_AWID,
        m_axi_weights_AWLEN,
        m_axi_weights_AWSIZE,
        m_axi_weights_AWBURST,
        m_axi_weights_AWLOCK,
        m_axi_weights_AWCACHE,
        m_axi_weights_AWPROT,
        m_axi_weights_AWQOS,
        m_axi_weights_AWREGION,
        m_axi_weights_AWUSER,
        m_axi_weights_WVALID,
        m_axi_weights_WREADY,
        m_axi_weights_WDATA,
        m_axi_weights_WSTRB,
        m_axi_weights_WLAST,
        m_axi_weights_WID,
        m_axi_weights_WUSER,
        m_axi_weights_ARVALID,
        m_axi_weights_ARREADY,
        m_axi_weights_ARADDR,
        m_axi_weights_ARID,
        m_axi_weights_ARLEN,
        m_axi_weights_ARSIZE,
        m_axi_weights_ARBURST,
        m_axi_weights_ARLOCK,
        m_axi_weights_ARCACHE,
        m_axi_weights_ARPROT,
        m_axi_weights_ARQOS,
        m_axi_weights_ARREGION,
        m_axi_weights_ARUSER,
        m_axi_weights_RVALID,
        m_axi_weights_RREADY,
        m_axi_weights_RDATA,
        m_axi_weights_RLAST,
        m_axi_weights_RID,
        m_axi_weights_RUSER,
        m_axi_weights_RRESP,
        m_axi_weights_BVALID,
        m_axi_weights_BREADY,
        m_axi_weights_BRESP,
        m_axi_weights_BID,
        m_axi_weights_BUSER,
        m_axi_biases_AWVALID,
        m_axi_biases_AWREADY,
        m_axi_biases_AWADDR,
        m_axi_biases_AWID,
        m_axi_biases_AWLEN,
        m_axi_biases_AWSIZE,
        m_axi_biases_AWBURST,
        m_axi_biases_AWLOCK,
        m_axi_biases_AWCACHE,
        m_axi_biases_AWPROT,
        m_axi_biases_AWQOS,
        m_axi_biases_AWREGION,
        m_axi_biases_AWUSER,
        m_axi_biases_WVALID,
        m_axi_biases_WREADY,
        m_axi_biases_WDATA,
        m_axi_biases_WSTRB,
        m_axi_biases_WLAST,
        m_axi_biases_WID,
        m_axi_biases_WUSER,
        m_axi_biases_ARVALID,
        m_axi_biases_ARREADY,
        m_axi_biases_ARADDR,
        m_axi_biases_ARID,
        m_axi_biases_ARLEN,
        m_axi_biases_ARSIZE,
        m_axi_biases_ARBURST,
        m_axi_biases_ARLOCK,
        m_axi_biases_ARCACHE,
        m_axi_biases_ARPROT,
        m_axi_biases_ARQOS,
        m_axi_biases_ARREGION,
        m_axi_biases_ARUSER,
        m_axi_biases_RVALID,
        m_axi_biases_RREADY,
        m_axi_biases_RDATA,
        m_axi_biases_RLAST,
        m_axi_biases_RID,
        m_axi_biases_RUSER,
        m_axi_biases_RRESP,
        m_axi_biases_BVALID,
        m_axi_biases_BREADY,
        m_axi_biases_BRESP,
        m_axi_biases_BID,
        m_axi_biases_BUSER,
        m_axi_bundle_2_AWVALID,
        m_axi_bundle_2_AWREADY,
        m_axi_bundle_2_AWADDR,
        m_axi_bundle_2_AWID,
        m_axi_bundle_2_AWLEN,
        m_axi_bundle_2_AWSIZE,
        m_axi_bundle_2_AWBURST,
        m_axi_bundle_2_AWLOCK,
        m_axi_bundle_2_AWCACHE,
        m_axi_bundle_2_AWPROT,
        m_axi_bundle_2_AWQOS,
        m_axi_bundle_2_AWREGION,
        m_axi_bundle_2_AWUSER,
        m_axi_bundle_2_WVALID,
        m_axi_bundle_2_WREADY,
        m_axi_bundle_2_WDATA,
        m_axi_bundle_2_WSTRB,
        m_axi_bundle_2_WLAST,
        m_axi_bundle_2_WID,
        m_axi_bundle_2_WUSER,
        m_axi_bundle_2_ARVALID,
        m_axi_bundle_2_ARREADY,
        m_axi_bundle_2_ARADDR,
        m_axi_bundle_2_ARID,
        m_axi_bundle_2_ARLEN,
        m_axi_bundle_2_ARSIZE,
        m_axi_bundle_2_ARBURST,
        m_axi_bundle_2_ARLOCK,
        m_axi_bundle_2_ARCACHE,
        m_axi_bundle_2_ARPROT,
        m_axi_bundle_2_ARQOS,
        m_axi_bundle_2_ARREGION,
        m_axi_bundle_2_ARUSER,
        m_axi_bundle_2_RVALID,
        m_axi_bundle_2_RREADY,
        m_axi_bundle_2_RDATA,
        m_axi_bundle_2_RLAST,
        m_axi_bundle_2_RID,
        m_axi_bundle_2_RUSER,
        m_axi_bundle_2_RRESP,
        m_axi_bundle_2_BVALID,
        m_axi_bundle_2_BREADY,
        m_axi_bundle_2_BRESP,
        m_axi_bundle_2_BID,
        m_axi_bundle_2_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_BIASES_ID_WIDTH = 1;
parameter    C_M_AXI_BIASES_ADDR_WIDTH = 64;
parameter    C_M_AXI_BIASES_DATA_WIDTH = 32;
parameter    C_M_AXI_BIASES_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BIASES_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BIASES_WUSER_WIDTH = 1;
parameter    C_M_AXI_BIASES_RUSER_WIDTH = 1;
parameter    C_M_AXI_BIASES_BUSER_WIDTH = 1;
parameter    C_M_AXI_BIASES_USER_VALUE = 0;
parameter    C_M_AXI_BIASES_PROT_VALUE = 0;
parameter    C_M_AXI_BIASES_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_BUNDLE_1_ID_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_1_ADDR_WIDTH = 64;
parameter    C_M_AXI_BUNDLE_1_DATA_WIDTH = 32;
parameter    C_M_AXI_BUNDLE_1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_1_WUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_1_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_1_BUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_1_USER_VALUE = 0;
parameter    C_M_AXI_BUNDLE_1_PROT_VALUE = 0;
parameter    C_M_AXI_BUNDLE_1_CACHE_VALUE = 3;
parameter    C_M_AXI_BUNDLE_2_ID_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_2_ADDR_WIDTH = 64;
parameter    C_M_AXI_BUNDLE_2_DATA_WIDTH = 32;
parameter    C_M_AXI_BUNDLE_2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_2_WUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_2_RUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_2_BUSER_WIDTH = 1;
parameter    C_M_AXI_BUNDLE_2_USER_VALUE = 0;
parameter    C_M_AXI_BUNDLE_2_PROT_VALUE = 0;
parameter    C_M_AXI_BUNDLE_2_CACHE_VALUE = 3;
parameter    C_M_AXI_WEIGHTS_ID_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_ADDR_WIDTH = 64;
parameter    C_M_AXI_WEIGHTS_DATA_WIDTH = 32;
parameter    C_M_AXI_WEIGHTS_AWUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_WUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_RUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_BUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHTS_USER_VALUE = 0;
parameter    C_M_AXI_WEIGHTS_PROT_VALUE = 0;
parameter    C_M_AXI_WEIGHTS_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BIASES_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BUNDLE_1_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BUNDLE_2_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WEIGHTS_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_bundle_1_AWVALID;
input   m_axi_bundle_1_AWREADY;
output  [C_M_AXI_BUNDLE_1_ADDR_WIDTH - 1:0] m_axi_bundle_1_AWADDR;
output  [C_M_AXI_BUNDLE_1_ID_WIDTH - 1:0] m_axi_bundle_1_AWID;
output  [7:0] m_axi_bundle_1_AWLEN;
output  [2:0] m_axi_bundle_1_AWSIZE;
output  [1:0] m_axi_bundle_1_AWBURST;
output  [1:0] m_axi_bundle_1_AWLOCK;
output  [3:0] m_axi_bundle_1_AWCACHE;
output  [2:0] m_axi_bundle_1_AWPROT;
output  [3:0] m_axi_bundle_1_AWQOS;
output  [3:0] m_axi_bundle_1_AWREGION;
output  [C_M_AXI_BUNDLE_1_AWUSER_WIDTH - 1:0] m_axi_bundle_1_AWUSER;
output   m_axi_bundle_1_WVALID;
input   m_axi_bundle_1_WREADY;
output  [C_M_AXI_BUNDLE_1_DATA_WIDTH - 1:0] m_axi_bundle_1_WDATA;
output  [C_M_AXI_BUNDLE_1_WSTRB_WIDTH - 1:0] m_axi_bundle_1_WSTRB;
output   m_axi_bundle_1_WLAST;
output  [C_M_AXI_BUNDLE_1_ID_WIDTH - 1:0] m_axi_bundle_1_WID;
output  [C_M_AXI_BUNDLE_1_WUSER_WIDTH - 1:0] m_axi_bundle_1_WUSER;
output   m_axi_bundle_1_ARVALID;
input   m_axi_bundle_1_ARREADY;
output  [C_M_AXI_BUNDLE_1_ADDR_WIDTH - 1:0] m_axi_bundle_1_ARADDR;
output  [C_M_AXI_BUNDLE_1_ID_WIDTH - 1:0] m_axi_bundle_1_ARID;
output  [7:0] m_axi_bundle_1_ARLEN;
output  [2:0] m_axi_bundle_1_ARSIZE;
output  [1:0] m_axi_bundle_1_ARBURST;
output  [1:0] m_axi_bundle_1_ARLOCK;
output  [3:0] m_axi_bundle_1_ARCACHE;
output  [2:0] m_axi_bundle_1_ARPROT;
output  [3:0] m_axi_bundle_1_ARQOS;
output  [3:0] m_axi_bundle_1_ARREGION;
output  [C_M_AXI_BUNDLE_1_ARUSER_WIDTH - 1:0] m_axi_bundle_1_ARUSER;
input   m_axi_bundle_1_RVALID;
output   m_axi_bundle_1_RREADY;
input  [C_M_AXI_BUNDLE_1_DATA_WIDTH - 1:0] m_axi_bundle_1_RDATA;
input   m_axi_bundle_1_RLAST;
input  [C_M_AXI_BUNDLE_1_ID_WIDTH - 1:0] m_axi_bundle_1_RID;
input  [C_M_AXI_BUNDLE_1_RUSER_WIDTH - 1:0] m_axi_bundle_1_RUSER;
input  [1:0] m_axi_bundle_1_RRESP;
input   m_axi_bundle_1_BVALID;
output   m_axi_bundle_1_BREADY;
input  [1:0] m_axi_bundle_1_BRESP;
input  [C_M_AXI_BUNDLE_1_ID_WIDTH - 1:0] m_axi_bundle_1_BID;
input  [C_M_AXI_BUNDLE_1_BUSER_WIDTH - 1:0] m_axi_bundle_1_BUSER;
output   m_axi_weights_AWVALID;
input   m_axi_weights_AWREADY;
output  [C_M_AXI_WEIGHTS_ADDR_WIDTH - 1:0] m_axi_weights_AWADDR;
output  [C_M_AXI_WEIGHTS_ID_WIDTH - 1:0] m_axi_weights_AWID;
output  [7:0] m_axi_weights_AWLEN;
output  [2:0] m_axi_weights_AWSIZE;
output  [1:0] m_axi_weights_AWBURST;
output  [1:0] m_axi_weights_AWLOCK;
output  [3:0] m_axi_weights_AWCACHE;
output  [2:0] m_axi_weights_AWPROT;
output  [3:0] m_axi_weights_AWQOS;
output  [3:0] m_axi_weights_AWREGION;
output  [C_M_AXI_WEIGHTS_AWUSER_WIDTH - 1:0] m_axi_weights_AWUSER;
output   m_axi_weights_WVALID;
input   m_axi_weights_WREADY;
output  [C_M_AXI_WEIGHTS_DATA_WIDTH - 1:0] m_axi_weights_WDATA;
output  [C_M_AXI_WEIGHTS_WSTRB_WIDTH - 1:0] m_axi_weights_WSTRB;
output   m_axi_weights_WLAST;
output  [C_M_AXI_WEIGHTS_ID_WIDTH - 1:0] m_axi_weights_WID;
output  [C_M_AXI_WEIGHTS_WUSER_WIDTH - 1:0] m_axi_weights_WUSER;
output   m_axi_weights_ARVALID;
input   m_axi_weights_ARREADY;
output  [C_M_AXI_WEIGHTS_ADDR_WIDTH - 1:0] m_axi_weights_ARADDR;
output  [C_M_AXI_WEIGHTS_ID_WIDTH - 1:0] m_axi_weights_ARID;
output  [7:0] m_axi_weights_ARLEN;
output  [2:0] m_axi_weights_ARSIZE;
output  [1:0] m_axi_weights_ARBURST;
output  [1:0] m_axi_weights_ARLOCK;
output  [3:0] m_axi_weights_ARCACHE;
output  [2:0] m_axi_weights_ARPROT;
output  [3:0] m_axi_weights_ARQOS;
output  [3:0] m_axi_weights_ARREGION;
output  [C_M_AXI_WEIGHTS_ARUSER_WIDTH - 1:0] m_axi_weights_ARUSER;
input   m_axi_weights_RVALID;
output   m_axi_weights_RREADY;
input  [C_M_AXI_WEIGHTS_DATA_WIDTH - 1:0] m_axi_weights_RDATA;
input   m_axi_weights_RLAST;
input  [C_M_AXI_WEIGHTS_ID_WIDTH - 1:0] m_axi_weights_RID;
input  [C_M_AXI_WEIGHTS_RUSER_WIDTH - 1:0] m_axi_weights_RUSER;
input  [1:0] m_axi_weights_RRESP;
input   m_axi_weights_BVALID;
output   m_axi_weights_BREADY;
input  [1:0] m_axi_weights_BRESP;
input  [C_M_AXI_WEIGHTS_ID_WIDTH - 1:0] m_axi_weights_BID;
input  [C_M_AXI_WEIGHTS_BUSER_WIDTH - 1:0] m_axi_weights_BUSER;
output   m_axi_biases_AWVALID;
input   m_axi_biases_AWREADY;
output  [C_M_AXI_BIASES_ADDR_WIDTH - 1:0] m_axi_biases_AWADDR;
output  [C_M_AXI_BIASES_ID_WIDTH - 1:0] m_axi_biases_AWID;
output  [7:0] m_axi_biases_AWLEN;
output  [2:0] m_axi_biases_AWSIZE;
output  [1:0] m_axi_biases_AWBURST;
output  [1:0] m_axi_biases_AWLOCK;
output  [3:0] m_axi_biases_AWCACHE;
output  [2:0] m_axi_biases_AWPROT;
output  [3:0] m_axi_biases_AWQOS;
output  [3:0] m_axi_biases_AWREGION;
output  [C_M_AXI_BIASES_AWUSER_WIDTH - 1:0] m_axi_biases_AWUSER;
output   m_axi_biases_WVALID;
input   m_axi_biases_WREADY;
output  [C_M_AXI_BIASES_DATA_WIDTH - 1:0] m_axi_biases_WDATA;
output  [C_M_AXI_BIASES_WSTRB_WIDTH - 1:0] m_axi_biases_WSTRB;
output   m_axi_biases_WLAST;
output  [C_M_AXI_BIASES_ID_WIDTH - 1:0] m_axi_biases_WID;
output  [C_M_AXI_BIASES_WUSER_WIDTH - 1:0] m_axi_biases_WUSER;
output   m_axi_biases_ARVALID;
input   m_axi_biases_ARREADY;
output  [C_M_AXI_BIASES_ADDR_WIDTH - 1:0] m_axi_biases_ARADDR;
output  [C_M_AXI_BIASES_ID_WIDTH - 1:0] m_axi_biases_ARID;
output  [7:0] m_axi_biases_ARLEN;
output  [2:0] m_axi_biases_ARSIZE;
output  [1:0] m_axi_biases_ARBURST;
output  [1:0] m_axi_biases_ARLOCK;
output  [3:0] m_axi_biases_ARCACHE;
output  [2:0] m_axi_biases_ARPROT;
output  [3:0] m_axi_biases_ARQOS;
output  [3:0] m_axi_biases_ARREGION;
output  [C_M_AXI_BIASES_ARUSER_WIDTH - 1:0] m_axi_biases_ARUSER;
input   m_axi_biases_RVALID;
output   m_axi_biases_RREADY;
input  [C_M_AXI_BIASES_DATA_WIDTH - 1:0] m_axi_biases_RDATA;
input   m_axi_biases_RLAST;
input  [C_M_AXI_BIASES_ID_WIDTH - 1:0] m_axi_biases_RID;
input  [C_M_AXI_BIASES_RUSER_WIDTH - 1:0] m_axi_biases_RUSER;
input  [1:0] m_axi_biases_RRESP;
input   m_axi_biases_BVALID;
output   m_axi_biases_BREADY;
input  [1:0] m_axi_biases_BRESP;
input  [C_M_AXI_BIASES_ID_WIDTH - 1:0] m_axi_biases_BID;
input  [C_M_AXI_BIASES_BUSER_WIDTH - 1:0] m_axi_biases_BUSER;
output   m_axi_bundle_2_AWVALID;
input   m_axi_bundle_2_AWREADY;
output  [C_M_AXI_BUNDLE_2_ADDR_WIDTH - 1:0] m_axi_bundle_2_AWADDR;
output  [C_M_AXI_BUNDLE_2_ID_WIDTH - 1:0] m_axi_bundle_2_AWID;
output  [7:0] m_axi_bundle_2_AWLEN;
output  [2:0] m_axi_bundle_2_AWSIZE;
output  [1:0] m_axi_bundle_2_AWBURST;
output  [1:0] m_axi_bundle_2_AWLOCK;
output  [3:0] m_axi_bundle_2_AWCACHE;
output  [2:0] m_axi_bundle_2_AWPROT;
output  [3:0] m_axi_bundle_2_AWQOS;
output  [3:0] m_axi_bundle_2_AWREGION;
output  [C_M_AXI_BUNDLE_2_AWUSER_WIDTH - 1:0] m_axi_bundle_2_AWUSER;
output   m_axi_bundle_2_WVALID;
input   m_axi_bundle_2_WREADY;
output  [C_M_AXI_BUNDLE_2_DATA_WIDTH - 1:0] m_axi_bundle_2_WDATA;
output  [C_M_AXI_BUNDLE_2_WSTRB_WIDTH - 1:0] m_axi_bundle_2_WSTRB;
output   m_axi_bundle_2_WLAST;
output  [C_M_AXI_BUNDLE_2_ID_WIDTH - 1:0] m_axi_bundle_2_WID;
output  [C_M_AXI_BUNDLE_2_WUSER_WIDTH - 1:0] m_axi_bundle_2_WUSER;
output   m_axi_bundle_2_ARVALID;
input   m_axi_bundle_2_ARREADY;
output  [C_M_AXI_BUNDLE_2_ADDR_WIDTH - 1:0] m_axi_bundle_2_ARADDR;
output  [C_M_AXI_BUNDLE_2_ID_WIDTH - 1:0] m_axi_bundle_2_ARID;
output  [7:0] m_axi_bundle_2_ARLEN;
output  [2:0] m_axi_bundle_2_ARSIZE;
output  [1:0] m_axi_bundle_2_ARBURST;
output  [1:0] m_axi_bundle_2_ARLOCK;
output  [3:0] m_axi_bundle_2_ARCACHE;
output  [2:0] m_axi_bundle_2_ARPROT;
output  [3:0] m_axi_bundle_2_ARQOS;
output  [3:0] m_axi_bundle_2_ARREGION;
output  [C_M_AXI_BUNDLE_2_ARUSER_WIDTH - 1:0] m_axi_bundle_2_ARUSER;
input   m_axi_bundle_2_RVALID;
output   m_axi_bundle_2_RREADY;
input  [C_M_AXI_BUNDLE_2_DATA_WIDTH - 1:0] m_axi_bundle_2_RDATA;
input   m_axi_bundle_2_RLAST;
input  [C_M_AXI_BUNDLE_2_ID_WIDTH - 1:0] m_axi_bundle_2_RID;
input  [C_M_AXI_BUNDLE_2_RUSER_WIDTH - 1:0] m_axi_bundle_2_RUSER;
input  [1:0] m_axi_bundle_2_RRESP;
input   m_axi_bundle_2_BVALID;
output   m_axi_bundle_2_BREADY;
input  [1:0] m_axi_bundle_2_BRESP;
input  [C_M_AXI_BUNDLE_2_ID_WIDTH - 1:0] m_axi_bundle_2_BID;
input  [C_M_AXI_BUNDLE_2_BUSER_WIDTH - 1:0] m_axi_bundle_2_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] input_ftmap;
wire   [63:0] conv1_weights;
wire   [63:0] conv1_biases;
wire   [63:0] conv1_output_ftmap;
wire   [63:0] conv2_weights;
wire   [63:0] conv2_biases;
wire   [63:0] conv2_output_ftmap;
wire   [63:0] conv3_weights;
wire   [63:0] conv3_biases;
wire   [63:0] output_ftmap;
reg    biases_blk_n_AR;
wire    ap_CS_fsm_state5;
reg    biases_blk_n_R;
wire    ap_CS_fsm_state13;
reg   [63:0] output_ftmap_read_reg_467;
reg   [63:0] conv3_weights_read_reg_472;
reg   [63:0] conv2_output_ftmap_read_reg_477;
reg   [63:0] conv2_biases_read_reg_483;
reg   [63:0] conv2_weights_read_reg_488;
reg   [63:0] conv1_output_ftmap_read_reg_493;
reg   [63:0] conv1_biases_read_reg_499;
reg   [63:0] conv1_weights_read_reg_504;
reg   [63:0] input_ftmap_read_reg_509;
reg   [63:0] biases_addr_reg_514;
reg   [7:0] biases_addr_read_reg_520;
wire    grp_conv1_fu_292_ap_start;
wire    grp_conv1_fu_292_ap_done;
wire    grp_conv1_fu_292_ap_idle;
wire    grp_conv1_fu_292_ap_ready;
wire    grp_conv1_fu_292_m_axi_bundle_1_AWVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_bundle_1_AWADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_1_AWID;
wire   [31:0] grp_conv1_fu_292_m_axi_bundle_1_AWLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_1_AWSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_1_AWBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_1_AWLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_1_AWCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_1_AWPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_1_AWQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_1_AWREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_1_AWUSER;
wire    grp_conv1_fu_292_m_axi_bundle_1_WVALID;
wire   [15:0] grp_conv1_fu_292_m_axi_bundle_1_WDATA;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_1_WSTRB;
wire    grp_conv1_fu_292_m_axi_bundle_1_WLAST;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_1_WID;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_1_WUSER;
wire    grp_conv1_fu_292_m_axi_bundle_1_ARVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_bundle_1_ARADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_1_ARID;
wire   [31:0] grp_conv1_fu_292_m_axi_bundle_1_ARLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_1_ARSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_1_ARBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_1_ARLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_1_ARCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_1_ARPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_1_ARQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_1_ARREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_1_ARUSER;
wire    grp_conv1_fu_292_m_axi_bundle_1_RREADY;
wire    grp_conv1_fu_292_m_axi_bundle_1_BREADY;
wire    grp_conv1_fu_292_m_axi_weights_AWVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_weights_AWADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_weights_AWID;
wire   [31:0] grp_conv1_fu_292_m_axi_weights_AWLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_weights_AWSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_weights_AWBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_weights_AWLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_weights_AWCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_weights_AWPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_weights_AWQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_weights_AWREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_weights_AWUSER;
wire    grp_conv1_fu_292_m_axi_weights_WVALID;
wire   [15:0] grp_conv1_fu_292_m_axi_weights_WDATA;
wire   [1:0] grp_conv1_fu_292_m_axi_weights_WSTRB;
wire    grp_conv1_fu_292_m_axi_weights_WLAST;
wire   [0:0] grp_conv1_fu_292_m_axi_weights_WID;
wire   [0:0] grp_conv1_fu_292_m_axi_weights_WUSER;
wire    grp_conv1_fu_292_m_axi_weights_ARVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_weights_ARADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_weights_ARID;
wire   [31:0] grp_conv1_fu_292_m_axi_weights_ARLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_weights_ARSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_weights_ARBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_weights_ARLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_weights_ARCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_weights_ARPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_weights_ARQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_weights_ARREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_weights_ARUSER;
wire    grp_conv1_fu_292_m_axi_weights_RREADY;
wire    grp_conv1_fu_292_m_axi_weights_BREADY;
wire    grp_conv1_fu_292_m_axi_biases_AWVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_biases_AWADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_biases_AWID;
wire   [31:0] grp_conv1_fu_292_m_axi_biases_AWLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_biases_AWSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_biases_AWBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_biases_AWLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_biases_AWCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_biases_AWPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_biases_AWQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_biases_AWREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_biases_AWUSER;
wire    grp_conv1_fu_292_m_axi_biases_WVALID;
wire   [7:0] grp_conv1_fu_292_m_axi_biases_WDATA;
wire   [0:0] grp_conv1_fu_292_m_axi_biases_WSTRB;
wire    grp_conv1_fu_292_m_axi_biases_WLAST;
wire   [0:0] grp_conv1_fu_292_m_axi_biases_WID;
wire   [0:0] grp_conv1_fu_292_m_axi_biases_WUSER;
wire    grp_conv1_fu_292_m_axi_biases_ARVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_biases_ARADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_biases_ARID;
wire   [31:0] grp_conv1_fu_292_m_axi_biases_ARLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_biases_ARSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_biases_ARBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_biases_ARLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_biases_ARCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_biases_ARPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_biases_ARQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_biases_ARREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_biases_ARUSER;
wire    grp_conv1_fu_292_m_axi_biases_RREADY;
wire    grp_conv1_fu_292_m_axi_biases_BREADY;
wire    grp_conv1_fu_292_m_axi_bundle_2_AWVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_bundle_2_AWADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_2_AWID;
wire   [31:0] grp_conv1_fu_292_m_axi_bundle_2_AWLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_2_AWSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_2_AWBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_2_AWLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_2_AWCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_2_AWPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_2_AWQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_2_AWREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_2_AWUSER;
wire    grp_conv1_fu_292_m_axi_bundle_2_WVALID;
wire   [15:0] grp_conv1_fu_292_m_axi_bundle_2_WDATA;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_2_WSTRB;
wire    grp_conv1_fu_292_m_axi_bundle_2_WLAST;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_2_WID;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_2_WUSER;
wire    grp_conv1_fu_292_m_axi_bundle_2_ARVALID;
wire   [63:0] grp_conv1_fu_292_m_axi_bundle_2_ARADDR;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_2_ARID;
wire   [31:0] grp_conv1_fu_292_m_axi_bundle_2_ARLEN;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_2_ARSIZE;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_2_ARBURST;
wire   [1:0] grp_conv1_fu_292_m_axi_bundle_2_ARLOCK;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_2_ARCACHE;
wire   [2:0] grp_conv1_fu_292_m_axi_bundle_2_ARPROT;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_2_ARQOS;
wire   [3:0] grp_conv1_fu_292_m_axi_bundle_2_ARREGION;
wire   [0:0] grp_conv1_fu_292_m_axi_bundle_2_ARUSER;
wire    grp_conv1_fu_292_m_axi_bundle_2_RREADY;
wire    grp_conv1_fu_292_m_axi_bundle_2_BREADY;
wire    grp_conv2_fu_328_ap_start;
wire    grp_conv2_fu_328_ap_done;
wire    grp_conv2_fu_328_ap_idle;
wire    grp_conv2_fu_328_ap_ready;
wire    grp_conv2_fu_328_m_axi_bundle_2_AWVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_bundle_2_AWADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_2_AWID;
wire   [31:0] grp_conv2_fu_328_m_axi_bundle_2_AWLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_2_AWSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_2_AWBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_2_AWLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_2_AWCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_2_AWPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_2_AWQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_2_AWREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_2_AWUSER;
wire    grp_conv2_fu_328_m_axi_bundle_2_WVALID;
wire   [15:0] grp_conv2_fu_328_m_axi_bundle_2_WDATA;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_2_WSTRB;
wire    grp_conv2_fu_328_m_axi_bundle_2_WLAST;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_2_WID;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_2_WUSER;
wire    grp_conv2_fu_328_m_axi_bundle_2_ARVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_bundle_2_ARADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_2_ARID;
wire   [31:0] grp_conv2_fu_328_m_axi_bundle_2_ARLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_2_ARSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_2_ARBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_2_ARLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_2_ARCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_2_ARPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_2_ARQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_2_ARREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_2_ARUSER;
wire    grp_conv2_fu_328_m_axi_bundle_2_RREADY;
wire    grp_conv2_fu_328_m_axi_bundle_2_BREADY;
wire    grp_conv2_fu_328_m_axi_weights_AWVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_weights_AWADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_weights_AWID;
wire   [31:0] grp_conv2_fu_328_m_axi_weights_AWLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_weights_AWSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_weights_AWBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_weights_AWLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_weights_AWCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_weights_AWPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_weights_AWQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_weights_AWREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_weights_AWUSER;
wire    grp_conv2_fu_328_m_axi_weights_WVALID;
wire   [15:0] grp_conv2_fu_328_m_axi_weights_WDATA;
wire   [1:0] grp_conv2_fu_328_m_axi_weights_WSTRB;
wire    grp_conv2_fu_328_m_axi_weights_WLAST;
wire   [0:0] grp_conv2_fu_328_m_axi_weights_WID;
wire   [0:0] grp_conv2_fu_328_m_axi_weights_WUSER;
wire    grp_conv2_fu_328_m_axi_weights_ARVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_weights_ARADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_weights_ARID;
wire   [31:0] grp_conv2_fu_328_m_axi_weights_ARLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_weights_ARSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_weights_ARBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_weights_ARLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_weights_ARCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_weights_ARPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_weights_ARQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_weights_ARREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_weights_ARUSER;
wire    grp_conv2_fu_328_m_axi_weights_RREADY;
wire    grp_conv2_fu_328_m_axi_weights_BREADY;
wire    grp_conv2_fu_328_m_axi_biases_AWVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_biases_AWADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_biases_AWID;
wire   [31:0] grp_conv2_fu_328_m_axi_biases_AWLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_biases_AWSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_biases_AWBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_biases_AWLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_biases_AWCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_biases_AWPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_biases_AWQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_biases_AWREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_biases_AWUSER;
wire    grp_conv2_fu_328_m_axi_biases_WVALID;
wire   [7:0] grp_conv2_fu_328_m_axi_biases_WDATA;
wire   [0:0] grp_conv2_fu_328_m_axi_biases_WSTRB;
wire    grp_conv2_fu_328_m_axi_biases_WLAST;
wire   [0:0] grp_conv2_fu_328_m_axi_biases_WID;
wire   [0:0] grp_conv2_fu_328_m_axi_biases_WUSER;
wire    grp_conv2_fu_328_m_axi_biases_ARVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_biases_ARADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_biases_ARID;
wire   [31:0] grp_conv2_fu_328_m_axi_biases_ARLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_biases_ARSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_biases_ARBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_biases_ARLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_biases_ARCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_biases_ARPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_biases_ARQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_biases_ARREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_biases_ARUSER;
wire    grp_conv2_fu_328_m_axi_biases_RREADY;
wire    grp_conv2_fu_328_m_axi_biases_BREADY;
wire    grp_conv2_fu_328_m_axi_bundle_1_AWVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_bundle_1_AWADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_1_AWID;
wire   [31:0] grp_conv2_fu_328_m_axi_bundle_1_AWLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_1_AWSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_1_AWBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_1_AWLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_1_AWCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_1_AWPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_1_AWQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_1_AWREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_1_AWUSER;
wire    grp_conv2_fu_328_m_axi_bundle_1_WVALID;
wire   [15:0] grp_conv2_fu_328_m_axi_bundle_1_WDATA;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_1_WSTRB;
wire    grp_conv2_fu_328_m_axi_bundle_1_WLAST;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_1_WID;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_1_WUSER;
wire    grp_conv2_fu_328_m_axi_bundle_1_ARVALID;
wire   [63:0] grp_conv2_fu_328_m_axi_bundle_1_ARADDR;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_1_ARID;
wire   [31:0] grp_conv2_fu_328_m_axi_bundle_1_ARLEN;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_1_ARSIZE;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_1_ARBURST;
wire   [1:0] grp_conv2_fu_328_m_axi_bundle_1_ARLOCK;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_1_ARCACHE;
wire   [2:0] grp_conv2_fu_328_m_axi_bundle_1_ARPROT;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_1_ARQOS;
wire   [3:0] grp_conv2_fu_328_m_axi_bundle_1_ARREGION;
wire   [0:0] grp_conv2_fu_328_m_axi_bundle_1_ARUSER;
wire    grp_conv2_fu_328_m_axi_bundle_1_RREADY;
wire    grp_conv2_fu_328_m_axi_bundle_1_BREADY;
wire    grp_conv3_fu_436_ap_start;
wire    grp_conv3_fu_436_ap_done;
wire    grp_conv3_fu_436_ap_idle;
wire    grp_conv3_fu_436_ap_ready;
wire    grp_conv3_fu_436_m_axi_bundle_1_AWVALID;
wire   [63:0] grp_conv3_fu_436_m_axi_bundle_1_AWADDR;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_1_AWID;
wire   [31:0] grp_conv3_fu_436_m_axi_bundle_1_AWLEN;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_1_AWSIZE;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_1_AWBURST;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_1_AWLOCK;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_1_AWCACHE;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_1_AWPROT;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_1_AWQOS;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_1_AWREGION;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_1_AWUSER;
wire    grp_conv3_fu_436_m_axi_bundle_1_WVALID;
wire   [15:0] grp_conv3_fu_436_m_axi_bundle_1_WDATA;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_1_WSTRB;
wire    grp_conv3_fu_436_m_axi_bundle_1_WLAST;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_1_WID;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_1_WUSER;
wire    grp_conv3_fu_436_m_axi_bundle_1_ARVALID;
wire   [63:0] grp_conv3_fu_436_m_axi_bundle_1_ARADDR;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_1_ARID;
wire   [31:0] grp_conv3_fu_436_m_axi_bundle_1_ARLEN;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_1_ARSIZE;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_1_ARBURST;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_1_ARLOCK;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_1_ARCACHE;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_1_ARPROT;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_1_ARQOS;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_1_ARREGION;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_1_ARUSER;
wire    grp_conv3_fu_436_m_axi_bundle_1_RREADY;
wire    grp_conv3_fu_436_m_axi_bundle_1_BREADY;
wire    grp_conv3_fu_436_m_axi_weights_AWVALID;
wire   [63:0] grp_conv3_fu_436_m_axi_weights_AWADDR;
wire   [0:0] grp_conv3_fu_436_m_axi_weights_AWID;
wire   [31:0] grp_conv3_fu_436_m_axi_weights_AWLEN;
wire   [2:0] grp_conv3_fu_436_m_axi_weights_AWSIZE;
wire   [1:0] grp_conv3_fu_436_m_axi_weights_AWBURST;
wire   [1:0] grp_conv3_fu_436_m_axi_weights_AWLOCK;
wire   [3:0] grp_conv3_fu_436_m_axi_weights_AWCACHE;
wire   [2:0] grp_conv3_fu_436_m_axi_weights_AWPROT;
wire   [3:0] grp_conv3_fu_436_m_axi_weights_AWQOS;
wire   [3:0] grp_conv3_fu_436_m_axi_weights_AWREGION;
wire   [0:0] grp_conv3_fu_436_m_axi_weights_AWUSER;
wire    grp_conv3_fu_436_m_axi_weights_WVALID;
wire   [15:0] grp_conv3_fu_436_m_axi_weights_WDATA;
wire   [1:0] grp_conv3_fu_436_m_axi_weights_WSTRB;
wire    grp_conv3_fu_436_m_axi_weights_WLAST;
wire   [0:0] grp_conv3_fu_436_m_axi_weights_WID;
wire   [0:0] grp_conv3_fu_436_m_axi_weights_WUSER;
wire    grp_conv3_fu_436_m_axi_weights_ARVALID;
wire   [63:0] grp_conv3_fu_436_m_axi_weights_ARADDR;
wire   [0:0] grp_conv3_fu_436_m_axi_weights_ARID;
wire   [31:0] grp_conv3_fu_436_m_axi_weights_ARLEN;
wire   [2:0] grp_conv3_fu_436_m_axi_weights_ARSIZE;
wire   [1:0] grp_conv3_fu_436_m_axi_weights_ARBURST;
wire   [1:0] grp_conv3_fu_436_m_axi_weights_ARLOCK;
wire   [3:0] grp_conv3_fu_436_m_axi_weights_ARCACHE;
wire   [2:0] grp_conv3_fu_436_m_axi_weights_ARPROT;
wire   [3:0] grp_conv3_fu_436_m_axi_weights_ARQOS;
wire   [3:0] grp_conv3_fu_436_m_axi_weights_ARREGION;
wire   [0:0] grp_conv3_fu_436_m_axi_weights_ARUSER;
wire    grp_conv3_fu_436_m_axi_weights_RREADY;
wire    grp_conv3_fu_436_m_axi_weights_BREADY;
wire    grp_conv3_fu_436_m_axi_bundle_2_AWVALID;
wire   [63:0] grp_conv3_fu_436_m_axi_bundle_2_AWADDR;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_2_AWID;
wire   [31:0] grp_conv3_fu_436_m_axi_bundle_2_AWLEN;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_2_AWSIZE;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_2_AWBURST;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_2_AWLOCK;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_2_AWCACHE;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_2_AWPROT;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_2_AWQOS;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_2_AWREGION;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_2_AWUSER;
wire    grp_conv3_fu_436_m_axi_bundle_2_WVALID;
wire   [15:0] grp_conv3_fu_436_m_axi_bundle_2_WDATA;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_2_WSTRB;
wire    grp_conv3_fu_436_m_axi_bundle_2_WLAST;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_2_WID;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_2_WUSER;
wire    grp_conv3_fu_436_m_axi_bundle_2_ARVALID;
wire   [63:0] grp_conv3_fu_436_m_axi_bundle_2_ARADDR;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_2_ARID;
wire   [31:0] grp_conv3_fu_436_m_axi_bundle_2_ARLEN;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_2_ARSIZE;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_2_ARBURST;
wire   [1:0] grp_conv3_fu_436_m_axi_bundle_2_ARLOCK;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_2_ARCACHE;
wire   [2:0] grp_conv3_fu_436_m_axi_bundle_2_ARPROT;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_2_ARQOS;
wire   [3:0] grp_conv3_fu_436_m_axi_bundle_2_ARREGION;
wire   [0:0] grp_conv3_fu_436_m_axi_bundle_2_ARUSER;
wire    grp_conv3_fu_436_m_axi_bundle_2_RREADY;
wire    grp_conv3_fu_436_m_axi_bundle_2_BREADY;
wire    biases_AWREADY;
wire    biases_WREADY;
reg    biases_ARVALID;
wire    biases_ARREADY;
reg   [63:0] biases_ARADDR;
reg   [31:0] biases_ARLEN;
wire    biases_RVALID;
reg    biases_RREADY;
wire   [7:0] biases_RDATA;
wire   [10:0] biases_RFIFONUM;
wire    biases_BVALID;
reg    bundle_1_AWVALID;
wire    bundle_1_AWREADY;
reg    bundle_1_WVALID;
wire    bundle_1_WREADY;
reg    bundle_1_ARVALID;
wire    bundle_1_ARREADY;
reg   [63:0] bundle_1_ARADDR;
reg   [31:0] bundle_1_ARLEN;
wire    bundle_1_RVALID;
reg    bundle_1_RREADY;
wire   [15:0] bundle_1_RDATA;
wire   [13:0] bundle_1_RFIFONUM;
wire    bundle_1_BVALID;
reg    bundle_1_BREADY;
reg    bundle_2_AWVALID;
wire    bundle_2_AWREADY;
reg   [63:0] bundle_2_AWADDR;
reg   [31:0] bundle_2_AWLEN;
reg    bundle_2_WVALID;
wire    bundle_2_WREADY;
reg   [15:0] bundle_2_WDATA;
reg   [1:0] bundle_2_WSTRB;
reg    bundle_2_ARVALID;
wire    bundle_2_ARREADY;
wire    bundle_2_RVALID;
reg    bundle_2_RREADY;
wire   [15:0] bundle_2_RDATA;
wire   [13:0] bundle_2_RFIFONUM;
wire    bundle_2_BVALID;
reg    bundle_2_BREADY;
wire    weights_AWREADY;
wire    weights_WREADY;
reg    weights_ARVALID;
wire    weights_ARREADY;
reg   [63:0] weights_ARADDR;
reg   [31:0] weights_ARLEN;
wire    weights_RVALID;
reg    weights_RREADY;
wire   [15:0] weights_RDATA;
wire   [13:0] weights_RFIFONUM;
wire    weights_BVALID;
reg    grp_conv1_fu_292_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_conv2_fu_328_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_conv3_fu_436_ap_start_reg;
wire    ap_CS_fsm_state14;
reg   [13:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
reg    ap_ST_fsm_state14_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 grp_conv1_fu_292_ap_start_reg = 1'b0;
#0 grp_conv2_fu_328_ap_start_reg = 1'b0;
#0 grp_conv3_fu_436_ap_start_reg = 1'b0;
end

srcnn_conv1 grp_conv1_fu_292(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv1_fu_292_ap_start),
    .ap_done(grp_conv1_fu_292_ap_done),
    .ap_idle(grp_conv1_fu_292_ap_idle),
    .ap_ready(grp_conv1_fu_292_ap_ready),
    .m_axi_bundle_1_AWVALID(grp_conv1_fu_292_m_axi_bundle_1_AWVALID),
    .m_axi_bundle_1_AWREADY(1'b0),
    .m_axi_bundle_1_AWADDR(grp_conv1_fu_292_m_axi_bundle_1_AWADDR),
    .m_axi_bundle_1_AWID(grp_conv1_fu_292_m_axi_bundle_1_AWID),
    .m_axi_bundle_1_AWLEN(grp_conv1_fu_292_m_axi_bundle_1_AWLEN),
    .m_axi_bundle_1_AWSIZE(grp_conv1_fu_292_m_axi_bundle_1_AWSIZE),
    .m_axi_bundle_1_AWBURST(grp_conv1_fu_292_m_axi_bundle_1_AWBURST),
    .m_axi_bundle_1_AWLOCK(grp_conv1_fu_292_m_axi_bundle_1_AWLOCK),
    .m_axi_bundle_1_AWCACHE(grp_conv1_fu_292_m_axi_bundle_1_AWCACHE),
    .m_axi_bundle_1_AWPROT(grp_conv1_fu_292_m_axi_bundle_1_AWPROT),
    .m_axi_bundle_1_AWQOS(grp_conv1_fu_292_m_axi_bundle_1_AWQOS),
    .m_axi_bundle_1_AWREGION(grp_conv1_fu_292_m_axi_bundle_1_AWREGION),
    .m_axi_bundle_1_AWUSER(grp_conv1_fu_292_m_axi_bundle_1_AWUSER),
    .m_axi_bundle_1_WVALID(grp_conv1_fu_292_m_axi_bundle_1_WVALID),
    .m_axi_bundle_1_WREADY(1'b0),
    .m_axi_bundle_1_WDATA(grp_conv1_fu_292_m_axi_bundle_1_WDATA),
    .m_axi_bundle_1_WSTRB(grp_conv1_fu_292_m_axi_bundle_1_WSTRB),
    .m_axi_bundle_1_WLAST(grp_conv1_fu_292_m_axi_bundle_1_WLAST),
    .m_axi_bundle_1_WID(grp_conv1_fu_292_m_axi_bundle_1_WID),
    .m_axi_bundle_1_WUSER(grp_conv1_fu_292_m_axi_bundle_1_WUSER),
    .m_axi_bundle_1_ARVALID(grp_conv1_fu_292_m_axi_bundle_1_ARVALID),
    .m_axi_bundle_1_ARREADY(bundle_1_ARREADY),
    .m_axi_bundle_1_ARADDR(grp_conv1_fu_292_m_axi_bundle_1_ARADDR),
    .m_axi_bundle_1_ARID(grp_conv1_fu_292_m_axi_bundle_1_ARID),
    .m_axi_bundle_1_ARLEN(grp_conv1_fu_292_m_axi_bundle_1_ARLEN),
    .m_axi_bundle_1_ARSIZE(grp_conv1_fu_292_m_axi_bundle_1_ARSIZE),
    .m_axi_bundle_1_ARBURST(grp_conv1_fu_292_m_axi_bundle_1_ARBURST),
    .m_axi_bundle_1_ARLOCK(grp_conv1_fu_292_m_axi_bundle_1_ARLOCK),
    .m_axi_bundle_1_ARCACHE(grp_conv1_fu_292_m_axi_bundle_1_ARCACHE),
    .m_axi_bundle_1_ARPROT(grp_conv1_fu_292_m_axi_bundle_1_ARPROT),
    .m_axi_bundle_1_ARQOS(grp_conv1_fu_292_m_axi_bundle_1_ARQOS),
    .m_axi_bundle_1_ARREGION(grp_conv1_fu_292_m_axi_bundle_1_ARREGION),
    .m_axi_bundle_1_ARUSER(grp_conv1_fu_292_m_axi_bundle_1_ARUSER),
    .m_axi_bundle_1_RVALID(bundle_1_RVALID),
    .m_axi_bundle_1_RREADY(grp_conv1_fu_292_m_axi_bundle_1_RREADY),
    .m_axi_bundle_1_RDATA(bundle_1_RDATA),
    .m_axi_bundle_1_RLAST(1'b0),
    .m_axi_bundle_1_RID(1'd0),
    .m_axi_bundle_1_RFIFONUM(bundle_1_RFIFONUM),
    .m_axi_bundle_1_RUSER(1'd0),
    .m_axi_bundle_1_RRESP(2'd0),
    .m_axi_bundle_1_BVALID(1'b0),
    .m_axi_bundle_1_BREADY(grp_conv1_fu_292_m_axi_bundle_1_BREADY),
    .m_axi_bundle_1_BRESP(2'd0),
    .m_axi_bundle_1_BID(1'd0),
    .m_axi_bundle_1_BUSER(1'd0),
    .input_ftmap(input_ftmap_read_reg_509),
    .m_axi_weights_AWVALID(grp_conv1_fu_292_m_axi_weights_AWVALID),
    .m_axi_weights_AWREADY(1'b0),
    .m_axi_weights_AWADDR(grp_conv1_fu_292_m_axi_weights_AWADDR),
    .m_axi_weights_AWID(grp_conv1_fu_292_m_axi_weights_AWID),
    .m_axi_weights_AWLEN(grp_conv1_fu_292_m_axi_weights_AWLEN),
    .m_axi_weights_AWSIZE(grp_conv1_fu_292_m_axi_weights_AWSIZE),
    .m_axi_weights_AWBURST(grp_conv1_fu_292_m_axi_weights_AWBURST),
    .m_axi_weights_AWLOCK(grp_conv1_fu_292_m_axi_weights_AWLOCK),
    .m_axi_weights_AWCACHE(grp_conv1_fu_292_m_axi_weights_AWCACHE),
    .m_axi_weights_AWPROT(grp_conv1_fu_292_m_axi_weights_AWPROT),
    .m_axi_weights_AWQOS(grp_conv1_fu_292_m_axi_weights_AWQOS),
    .m_axi_weights_AWREGION(grp_conv1_fu_292_m_axi_weights_AWREGION),
    .m_axi_weights_AWUSER(grp_conv1_fu_292_m_axi_weights_AWUSER),
    .m_axi_weights_WVALID(grp_conv1_fu_292_m_axi_weights_WVALID),
    .m_axi_weights_WREADY(1'b0),
    .m_axi_weights_WDATA(grp_conv1_fu_292_m_axi_weights_WDATA),
    .m_axi_weights_WSTRB(grp_conv1_fu_292_m_axi_weights_WSTRB),
    .m_axi_weights_WLAST(grp_conv1_fu_292_m_axi_weights_WLAST),
    .m_axi_weights_WID(grp_conv1_fu_292_m_axi_weights_WID),
    .m_axi_weights_WUSER(grp_conv1_fu_292_m_axi_weights_WUSER),
    .m_axi_weights_ARVALID(grp_conv1_fu_292_m_axi_weights_ARVALID),
    .m_axi_weights_ARREADY(weights_ARREADY),
    .m_axi_weights_ARADDR(grp_conv1_fu_292_m_axi_weights_ARADDR),
    .m_axi_weights_ARID(grp_conv1_fu_292_m_axi_weights_ARID),
    .m_axi_weights_ARLEN(grp_conv1_fu_292_m_axi_weights_ARLEN),
    .m_axi_weights_ARSIZE(grp_conv1_fu_292_m_axi_weights_ARSIZE),
    .m_axi_weights_ARBURST(grp_conv1_fu_292_m_axi_weights_ARBURST),
    .m_axi_weights_ARLOCK(grp_conv1_fu_292_m_axi_weights_ARLOCK),
    .m_axi_weights_ARCACHE(grp_conv1_fu_292_m_axi_weights_ARCACHE),
    .m_axi_weights_ARPROT(grp_conv1_fu_292_m_axi_weights_ARPROT),
    .m_axi_weights_ARQOS(grp_conv1_fu_292_m_axi_weights_ARQOS),
    .m_axi_weights_ARREGION(grp_conv1_fu_292_m_axi_weights_ARREGION),
    .m_axi_weights_ARUSER(grp_conv1_fu_292_m_axi_weights_ARUSER),
    .m_axi_weights_RVALID(weights_RVALID),
    .m_axi_weights_RREADY(grp_conv1_fu_292_m_axi_weights_RREADY),
    .m_axi_weights_RDATA(weights_RDATA),
    .m_axi_weights_RLAST(1'b0),
    .m_axi_weights_RID(1'd0),
    .m_axi_weights_RFIFONUM(weights_RFIFONUM),
    .m_axi_weights_RUSER(1'd0),
    .m_axi_weights_RRESP(2'd0),
    .m_axi_weights_BVALID(1'b0),
    .m_axi_weights_BREADY(grp_conv1_fu_292_m_axi_weights_BREADY),
    .m_axi_weights_BRESP(2'd0),
    .m_axi_weights_BID(1'd0),
    .m_axi_weights_BUSER(1'd0),
    .conv1_weights(conv1_weights_read_reg_504),
    .m_axi_biases_AWVALID(grp_conv1_fu_292_m_axi_biases_AWVALID),
    .m_axi_biases_AWREADY(1'b0),
    .m_axi_biases_AWADDR(grp_conv1_fu_292_m_axi_biases_AWADDR),
    .m_axi_biases_AWID(grp_conv1_fu_292_m_axi_biases_AWID),
    .m_axi_biases_AWLEN(grp_conv1_fu_292_m_axi_biases_AWLEN),
    .m_axi_biases_AWSIZE(grp_conv1_fu_292_m_axi_biases_AWSIZE),
    .m_axi_biases_AWBURST(grp_conv1_fu_292_m_axi_biases_AWBURST),
    .m_axi_biases_AWLOCK(grp_conv1_fu_292_m_axi_biases_AWLOCK),
    .m_axi_biases_AWCACHE(grp_conv1_fu_292_m_axi_biases_AWCACHE),
    .m_axi_biases_AWPROT(grp_conv1_fu_292_m_axi_biases_AWPROT),
    .m_axi_biases_AWQOS(grp_conv1_fu_292_m_axi_biases_AWQOS),
    .m_axi_biases_AWREGION(grp_conv1_fu_292_m_axi_biases_AWREGION),
    .m_axi_biases_AWUSER(grp_conv1_fu_292_m_axi_biases_AWUSER),
    .m_axi_biases_WVALID(grp_conv1_fu_292_m_axi_biases_WVALID),
    .m_axi_biases_WREADY(1'b0),
    .m_axi_biases_WDATA(grp_conv1_fu_292_m_axi_biases_WDATA),
    .m_axi_biases_WSTRB(grp_conv1_fu_292_m_axi_biases_WSTRB),
    .m_axi_biases_WLAST(grp_conv1_fu_292_m_axi_biases_WLAST),
    .m_axi_biases_WID(grp_conv1_fu_292_m_axi_biases_WID),
    .m_axi_biases_WUSER(grp_conv1_fu_292_m_axi_biases_WUSER),
    .m_axi_biases_ARVALID(grp_conv1_fu_292_m_axi_biases_ARVALID),
    .m_axi_biases_ARREADY(biases_ARREADY),
    .m_axi_biases_ARADDR(grp_conv1_fu_292_m_axi_biases_ARADDR),
    .m_axi_biases_ARID(grp_conv1_fu_292_m_axi_biases_ARID),
    .m_axi_biases_ARLEN(grp_conv1_fu_292_m_axi_biases_ARLEN),
    .m_axi_biases_ARSIZE(grp_conv1_fu_292_m_axi_biases_ARSIZE),
    .m_axi_biases_ARBURST(grp_conv1_fu_292_m_axi_biases_ARBURST),
    .m_axi_biases_ARLOCK(grp_conv1_fu_292_m_axi_biases_ARLOCK),
    .m_axi_biases_ARCACHE(grp_conv1_fu_292_m_axi_biases_ARCACHE),
    .m_axi_biases_ARPROT(grp_conv1_fu_292_m_axi_biases_ARPROT),
    .m_axi_biases_ARQOS(grp_conv1_fu_292_m_axi_biases_ARQOS),
    .m_axi_biases_ARREGION(grp_conv1_fu_292_m_axi_biases_ARREGION),
    .m_axi_biases_ARUSER(grp_conv1_fu_292_m_axi_biases_ARUSER),
    .m_axi_biases_RVALID(biases_RVALID),
    .m_axi_biases_RREADY(grp_conv1_fu_292_m_axi_biases_RREADY),
    .m_axi_biases_RDATA(biases_RDATA),
    .m_axi_biases_RLAST(1'b0),
    .m_axi_biases_RID(1'd0),
    .m_axi_biases_RFIFONUM(biases_RFIFONUM),
    .m_axi_biases_RUSER(1'd0),
    .m_axi_biases_RRESP(2'd0),
    .m_axi_biases_BVALID(1'b0),
    .m_axi_biases_BREADY(grp_conv1_fu_292_m_axi_biases_BREADY),
    .m_axi_biases_BRESP(2'd0),
    .m_axi_biases_BID(1'd0),
    .m_axi_biases_BUSER(1'd0),
    .conv1_biases(conv1_biases_read_reg_499),
    .m_axi_bundle_2_AWVALID(grp_conv1_fu_292_m_axi_bundle_2_AWVALID),
    .m_axi_bundle_2_AWREADY(bundle_2_AWREADY),
    .m_axi_bundle_2_AWADDR(grp_conv1_fu_292_m_axi_bundle_2_AWADDR),
    .m_axi_bundle_2_AWID(grp_conv1_fu_292_m_axi_bundle_2_AWID),
    .m_axi_bundle_2_AWLEN(grp_conv1_fu_292_m_axi_bundle_2_AWLEN),
    .m_axi_bundle_2_AWSIZE(grp_conv1_fu_292_m_axi_bundle_2_AWSIZE),
    .m_axi_bundle_2_AWBURST(grp_conv1_fu_292_m_axi_bundle_2_AWBURST),
    .m_axi_bundle_2_AWLOCK(grp_conv1_fu_292_m_axi_bundle_2_AWLOCK),
    .m_axi_bundle_2_AWCACHE(grp_conv1_fu_292_m_axi_bundle_2_AWCACHE),
    .m_axi_bundle_2_AWPROT(grp_conv1_fu_292_m_axi_bundle_2_AWPROT),
    .m_axi_bundle_2_AWQOS(grp_conv1_fu_292_m_axi_bundle_2_AWQOS),
    .m_axi_bundle_2_AWREGION(grp_conv1_fu_292_m_axi_bundle_2_AWREGION),
    .m_axi_bundle_2_AWUSER(grp_conv1_fu_292_m_axi_bundle_2_AWUSER),
    .m_axi_bundle_2_WVALID(grp_conv1_fu_292_m_axi_bundle_2_WVALID),
    .m_axi_bundle_2_WREADY(bundle_2_WREADY),
    .m_axi_bundle_2_WDATA(grp_conv1_fu_292_m_axi_bundle_2_WDATA),
    .m_axi_bundle_2_WSTRB(grp_conv1_fu_292_m_axi_bundle_2_WSTRB),
    .m_axi_bundle_2_WLAST(grp_conv1_fu_292_m_axi_bundle_2_WLAST),
    .m_axi_bundle_2_WID(grp_conv1_fu_292_m_axi_bundle_2_WID),
    .m_axi_bundle_2_WUSER(grp_conv1_fu_292_m_axi_bundle_2_WUSER),
    .m_axi_bundle_2_ARVALID(grp_conv1_fu_292_m_axi_bundle_2_ARVALID),
    .m_axi_bundle_2_ARREADY(1'b0),
    .m_axi_bundle_2_ARADDR(grp_conv1_fu_292_m_axi_bundle_2_ARADDR),
    .m_axi_bundle_2_ARID(grp_conv1_fu_292_m_axi_bundle_2_ARID),
    .m_axi_bundle_2_ARLEN(grp_conv1_fu_292_m_axi_bundle_2_ARLEN),
    .m_axi_bundle_2_ARSIZE(grp_conv1_fu_292_m_axi_bundle_2_ARSIZE),
    .m_axi_bundle_2_ARBURST(grp_conv1_fu_292_m_axi_bundle_2_ARBURST),
    .m_axi_bundle_2_ARLOCK(grp_conv1_fu_292_m_axi_bundle_2_ARLOCK),
    .m_axi_bundle_2_ARCACHE(grp_conv1_fu_292_m_axi_bundle_2_ARCACHE),
    .m_axi_bundle_2_ARPROT(grp_conv1_fu_292_m_axi_bundle_2_ARPROT),
    .m_axi_bundle_2_ARQOS(grp_conv1_fu_292_m_axi_bundle_2_ARQOS),
    .m_axi_bundle_2_ARREGION(grp_conv1_fu_292_m_axi_bundle_2_ARREGION),
    .m_axi_bundle_2_ARUSER(grp_conv1_fu_292_m_axi_bundle_2_ARUSER),
    .m_axi_bundle_2_RVALID(1'b0),
    .m_axi_bundle_2_RREADY(grp_conv1_fu_292_m_axi_bundle_2_RREADY),
    .m_axi_bundle_2_RDATA(16'd0),
    .m_axi_bundle_2_RLAST(1'b0),
    .m_axi_bundle_2_RID(1'd0),
    .m_axi_bundle_2_RFIFONUM(14'd0),
    .m_axi_bundle_2_RUSER(1'd0),
    .m_axi_bundle_2_RRESP(2'd0),
    .m_axi_bundle_2_BVALID(bundle_2_BVALID),
    .m_axi_bundle_2_BREADY(grp_conv1_fu_292_m_axi_bundle_2_BREADY),
    .m_axi_bundle_2_BRESP(2'd0),
    .m_axi_bundle_2_BID(1'd0),
    .m_axi_bundle_2_BUSER(1'd0),
    .output_ftmap(conv1_output_ftmap_read_reg_493)
);

srcnn_conv2 grp_conv2_fu_328(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv2_fu_328_ap_start),
    .ap_done(grp_conv2_fu_328_ap_done),
    .ap_idle(grp_conv2_fu_328_ap_idle),
    .ap_ready(grp_conv2_fu_328_ap_ready),
    .m_axi_bundle_2_AWVALID(grp_conv2_fu_328_m_axi_bundle_2_AWVALID),
    .m_axi_bundle_2_AWREADY(1'b0),
    .m_axi_bundle_2_AWADDR(grp_conv2_fu_328_m_axi_bundle_2_AWADDR),
    .m_axi_bundle_2_AWID(grp_conv2_fu_328_m_axi_bundle_2_AWID),
    .m_axi_bundle_2_AWLEN(grp_conv2_fu_328_m_axi_bundle_2_AWLEN),
    .m_axi_bundle_2_AWSIZE(grp_conv2_fu_328_m_axi_bundle_2_AWSIZE),
    .m_axi_bundle_2_AWBURST(grp_conv2_fu_328_m_axi_bundle_2_AWBURST),
    .m_axi_bundle_2_AWLOCK(grp_conv2_fu_328_m_axi_bundle_2_AWLOCK),
    .m_axi_bundle_2_AWCACHE(grp_conv2_fu_328_m_axi_bundle_2_AWCACHE),
    .m_axi_bundle_2_AWPROT(grp_conv2_fu_328_m_axi_bundle_2_AWPROT),
    .m_axi_bundle_2_AWQOS(grp_conv2_fu_328_m_axi_bundle_2_AWQOS),
    .m_axi_bundle_2_AWREGION(grp_conv2_fu_328_m_axi_bundle_2_AWREGION),
    .m_axi_bundle_2_AWUSER(grp_conv2_fu_328_m_axi_bundle_2_AWUSER),
    .m_axi_bundle_2_WVALID(grp_conv2_fu_328_m_axi_bundle_2_WVALID),
    .m_axi_bundle_2_WREADY(1'b0),
    .m_axi_bundle_2_WDATA(grp_conv2_fu_328_m_axi_bundle_2_WDATA),
    .m_axi_bundle_2_WSTRB(grp_conv2_fu_328_m_axi_bundle_2_WSTRB),
    .m_axi_bundle_2_WLAST(grp_conv2_fu_328_m_axi_bundle_2_WLAST),
    .m_axi_bundle_2_WID(grp_conv2_fu_328_m_axi_bundle_2_WID),
    .m_axi_bundle_2_WUSER(grp_conv2_fu_328_m_axi_bundle_2_WUSER),
    .m_axi_bundle_2_ARVALID(grp_conv2_fu_328_m_axi_bundle_2_ARVALID),
    .m_axi_bundle_2_ARREADY(bundle_2_ARREADY),
    .m_axi_bundle_2_ARADDR(grp_conv2_fu_328_m_axi_bundle_2_ARADDR),
    .m_axi_bundle_2_ARID(grp_conv2_fu_328_m_axi_bundle_2_ARID),
    .m_axi_bundle_2_ARLEN(grp_conv2_fu_328_m_axi_bundle_2_ARLEN),
    .m_axi_bundle_2_ARSIZE(grp_conv2_fu_328_m_axi_bundle_2_ARSIZE),
    .m_axi_bundle_2_ARBURST(grp_conv2_fu_328_m_axi_bundle_2_ARBURST),
    .m_axi_bundle_2_ARLOCK(grp_conv2_fu_328_m_axi_bundle_2_ARLOCK),
    .m_axi_bundle_2_ARCACHE(grp_conv2_fu_328_m_axi_bundle_2_ARCACHE),
    .m_axi_bundle_2_ARPROT(grp_conv2_fu_328_m_axi_bundle_2_ARPROT),
    .m_axi_bundle_2_ARQOS(grp_conv2_fu_328_m_axi_bundle_2_ARQOS),
    .m_axi_bundle_2_ARREGION(grp_conv2_fu_328_m_axi_bundle_2_ARREGION),
    .m_axi_bundle_2_ARUSER(grp_conv2_fu_328_m_axi_bundle_2_ARUSER),
    .m_axi_bundle_2_RVALID(bundle_2_RVALID),
    .m_axi_bundle_2_RREADY(grp_conv2_fu_328_m_axi_bundle_2_RREADY),
    .m_axi_bundle_2_RDATA(bundle_2_RDATA),
    .m_axi_bundle_2_RLAST(1'b0),
    .m_axi_bundle_2_RID(1'd0),
    .m_axi_bundle_2_RFIFONUM(bundle_2_RFIFONUM),
    .m_axi_bundle_2_RUSER(1'd0),
    .m_axi_bundle_2_RRESP(2'd0),
    .m_axi_bundle_2_BVALID(1'b0),
    .m_axi_bundle_2_BREADY(grp_conv2_fu_328_m_axi_bundle_2_BREADY),
    .m_axi_bundle_2_BRESP(2'd0),
    .m_axi_bundle_2_BID(1'd0),
    .m_axi_bundle_2_BUSER(1'd0),
    .input_ftmap(conv1_output_ftmap_read_reg_493),
    .m_axi_weights_AWVALID(grp_conv2_fu_328_m_axi_weights_AWVALID),
    .m_axi_weights_AWREADY(1'b0),
    .m_axi_weights_AWADDR(grp_conv2_fu_328_m_axi_weights_AWADDR),
    .m_axi_weights_AWID(grp_conv2_fu_328_m_axi_weights_AWID),
    .m_axi_weights_AWLEN(grp_conv2_fu_328_m_axi_weights_AWLEN),
    .m_axi_weights_AWSIZE(grp_conv2_fu_328_m_axi_weights_AWSIZE),
    .m_axi_weights_AWBURST(grp_conv2_fu_328_m_axi_weights_AWBURST),
    .m_axi_weights_AWLOCK(grp_conv2_fu_328_m_axi_weights_AWLOCK),
    .m_axi_weights_AWCACHE(grp_conv2_fu_328_m_axi_weights_AWCACHE),
    .m_axi_weights_AWPROT(grp_conv2_fu_328_m_axi_weights_AWPROT),
    .m_axi_weights_AWQOS(grp_conv2_fu_328_m_axi_weights_AWQOS),
    .m_axi_weights_AWREGION(grp_conv2_fu_328_m_axi_weights_AWREGION),
    .m_axi_weights_AWUSER(grp_conv2_fu_328_m_axi_weights_AWUSER),
    .m_axi_weights_WVALID(grp_conv2_fu_328_m_axi_weights_WVALID),
    .m_axi_weights_WREADY(1'b0),
    .m_axi_weights_WDATA(grp_conv2_fu_328_m_axi_weights_WDATA),
    .m_axi_weights_WSTRB(grp_conv2_fu_328_m_axi_weights_WSTRB),
    .m_axi_weights_WLAST(grp_conv2_fu_328_m_axi_weights_WLAST),
    .m_axi_weights_WID(grp_conv2_fu_328_m_axi_weights_WID),
    .m_axi_weights_WUSER(grp_conv2_fu_328_m_axi_weights_WUSER),
    .m_axi_weights_ARVALID(grp_conv2_fu_328_m_axi_weights_ARVALID),
    .m_axi_weights_ARREADY(weights_ARREADY),
    .m_axi_weights_ARADDR(grp_conv2_fu_328_m_axi_weights_ARADDR),
    .m_axi_weights_ARID(grp_conv2_fu_328_m_axi_weights_ARID),
    .m_axi_weights_ARLEN(grp_conv2_fu_328_m_axi_weights_ARLEN),
    .m_axi_weights_ARSIZE(grp_conv2_fu_328_m_axi_weights_ARSIZE),
    .m_axi_weights_ARBURST(grp_conv2_fu_328_m_axi_weights_ARBURST),
    .m_axi_weights_ARLOCK(grp_conv2_fu_328_m_axi_weights_ARLOCK),
    .m_axi_weights_ARCACHE(grp_conv2_fu_328_m_axi_weights_ARCACHE),
    .m_axi_weights_ARPROT(grp_conv2_fu_328_m_axi_weights_ARPROT),
    .m_axi_weights_ARQOS(grp_conv2_fu_328_m_axi_weights_ARQOS),
    .m_axi_weights_ARREGION(grp_conv2_fu_328_m_axi_weights_ARREGION),
    .m_axi_weights_ARUSER(grp_conv2_fu_328_m_axi_weights_ARUSER),
    .m_axi_weights_RVALID(weights_RVALID),
    .m_axi_weights_RREADY(grp_conv2_fu_328_m_axi_weights_RREADY),
    .m_axi_weights_RDATA(weights_RDATA),
    .m_axi_weights_RLAST(1'b0),
    .m_axi_weights_RID(1'd0),
    .m_axi_weights_RFIFONUM(weights_RFIFONUM),
    .m_axi_weights_RUSER(1'd0),
    .m_axi_weights_RRESP(2'd0),
    .m_axi_weights_BVALID(1'b0),
    .m_axi_weights_BREADY(grp_conv2_fu_328_m_axi_weights_BREADY),
    .m_axi_weights_BRESP(2'd0),
    .m_axi_weights_BID(1'd0),
    .m_axi_weights_BUSER(1'd0),
    .conv2_weights(conv2_weights_read_reg_488),
    .m_axi_biases_AWVALID(grp_conv2_fu_328_m_axi_biases_AWVALID),
    .m_axi_biases_AWREADY(1'b0),
    .m_axi_biases_AWADDR(grp_conv2_fu_328_m_axi_biases_AWADDR),
    .m_axi_biases_AWID(grp_conv2_fu_328_m_axi_biases_AWID),
    .m_axi_biases_AWLEN(grp_conv2_fu_328_m_axi_biases_AWLEN),
    .m_axi_biases_AWSIZE(grp_conv2_fu_328_m_axi_biases_AWSIZE),
    .m_axi_biases_AWBURST(grp_conv2_fu_328_m_axi_biases_AWBURST),
    .m_axi_biases_AWLOCK(grp_conv2_fu_328_m_axi_biases_AWLOCK),
    .m_axi_biases_AWCACHE(grp_conv2_fu_328_m_axi_biases_AWCACHE),
    .m_axi_biases_AWPROT(grp_conv2_fu_328_m_axi_biases_AWPROT),
    .m_axi_biases_AWQOS(grp_conv2_fu_328_m_axi_biases_AWQOS),
    .m_axi_biases_AWREGION(grp_conv2_fu_328_m_axi_biases_AWREGION),
    .m_axi_biases_AWUSER(grp_conv2_fu_328_m_axi_biases_AWUSER),
    .m_axi_biases_WVALID(grp_conv2_fu_328_m_axi_biases_WVALID),
    .m_axi_biases_WREADY(1'b0),
    .m_axi_biases_WDATA(grp_conv2_fu_328_m_axi_biases_WDATA),
    .m_axi_biases_WSTRB(grp_conv2_fu_328_m_axi_biases_WSTRB),
    .m_axi_biases_WLAST(grp_conv2_fu_328_m_axi_biases_WLAST),
    .m_axi_biases_WID(grp_conv2_fu_328_m_axi_biases_WID),
    .m_axi_biases_WUSER(grp_conv2_fu_328_m_axi_biases_WUSER),
    .m_axi_biases_ARVALID(grp_conv2_fu_328_m_axi_biases_ARVALID),
    .m_axi_biases_ARREADY(biases_ARREADY),
    .m_axi_biases_ARADDR(grp_conv2_fu_328_m_axi_biases_ARADDR),
    .m_axi_biases_ARID(grp_conv2_fu_328_m_axi_biases_ARID),
    .m_axi_biases_ARLEN(grp_conv2_fu_328_m_axi_biases_ARLEN),
    .m_axi_biases_ARSIZE(grp_conv2_fu_328_m_axi_biases_ARSIZE),
    .m_axi_biases_ARBURST(grp_conv2_fu_328_m_axi_biases_ARBURST),
    .m_axi_biases_ARLOCK(grp_conv2_fu_328_m_axi_biases_ARLOCK),
    .m_axi_biases_ARCACHE(grp_conv2_fu_328_m_axi_biases_ARCACHE),
    .m_axi_biases_ARPROT(grp_conv2_fu_328_m_axi_biases_ARPROT),
    .m_axi_biases_ARQOS(grp_conv2_fu_328_m_axi_biases_ARQOS),
    .m_axi_biases_ARREGION(grp_conv2_fu_328_m_axi_biases_ARREGION),
    .m_axi_biases_ARUSER(grp_conv2_fu_328_m_axi_biases_ARUSER),
    .m_axi_biases_RVALID(biases_RVALID),
    .m_axi_biases_RREADY(grp_conv2_fu_328_m_axi_biases_RREADY),
    .m_axi_biases_RDATA(biases_RDATA),
    .m_axi_biases_RLAST(1'b0),
    .m_axi_biases_RID(1'd0),
    .m_axi_biases_RFIFONUM(biases_RFIFONUM),
    .m_axi_biases_RUSER(1'd0),
    .m_axi_biases_RRESP(2'd0),
    .m_axi_biases_BVALID(1'b0),
    .m_axi_biases_BREADY(grp_conv2_fu_328_m_axi_biases_BREADY),
    .m_axi_biases_BRESP(2'd0),
    .m_axi_biases_BID(1'd0),
    .m_axi_biases_BUSER(1'd0),
    .conv2_biases(conv2_biases_read_reg_483),
    .m_axi_bundle_1_AWVALID(grp_conv2_fu_328_m_axi_bundle_1_AWVALID),
    .m_axi_bundle_1_AWREADY(bundle_1_AWREADY),
    .m_axi_bundle_1_AWADDR(grp_conv2_fu_328_m_axi_bundle_1_AWADDR),
    .m_axi_bundle_1_AWID(grp_conv2_fu_328_m_axi_bundle_1_AWID),
    .m_axi_bundle_1_AWLEN(grp_conv2_fu_328_m_axi_bundle_1_AWLEN),
    .m_axi_bundle_1_AWSIZE(grp_conv2_fu_328_m_axi_bundle_1_AWSIZE),
    .m_axi_bundle_1_AWBURST(grp_conv2_fu_328_m_axi_bundle_1_AWBURST),
    .m_axi_bundle_1_AWLOCK(grp_conv2_fu_328_m_axi_bundle_1_AWLOCK),
    .m_axi_bundle_1_AWCACHE(grp_conv2_fu_328_m_axi_bundle_1_AWCACHE),
    .m_axi_bundle_1_AWPROT(grp_conv2_fu_328_m_axi_bundle_1_AWPROT),
    .m_axi_bundle_1_AWQOS(grp_conv2_fu_328_m_axi_bundle_1_AWQOS),
    .m_axi_bundle_1_AWREGION(grp_conv2_fu_328_m_axi_bundle_1_AWREGION),
    .m_axi_bundle_1_AWUSER(grp_conv2_fu_328_m_axi_bundle_1_AWUSER),
    .m_axi_bundle_1_WVALID(grp_conv2_fu_328_m_axi_bundle_1_WVALID),
    .m_axi_bundle_1_WREADY(bundle_1_WREADY),
    .m_axi_bundle_1_WDATA(grp_conv2_fu_328_m_axi_bundle_1_WDATA),
    .m_axi_bundle_1_WSTRB(grp_conv2_fu_328_m_axi_bundle_1_WSTRB),
    .m_axi_bundle_1_WLAST(grp_conv2_fu_328_m_axi_bundle_1_WLAST),
    .m_axi_bundle_1_WID(grp_conv2_fu_328_m_axi_bundle_1_WID),
    .m_axi_bundle_1_WUSER(grp_conv2_fu_328_m_axi_bundle_1_WUSER),
    .m_axi_bundle_1_ARVALID(grp_conv2_fu_328_m_axi_bundle_1_ARVALID),
    .m_axi_bundle_1_ARREADY(1'b0),
    .m_axi_bundle_1_ARADDR(grp_conv2_fu_328_m_axi_bundle_1_ARADDR),
    .m_axi_bundle_1_ARID(grp_conv2_fu_328_m_axi_bundle_1_ARID),
    .m_axi_bundle_1_ARLEN(grp_conv2_fu_328_m_axi_bundle_1_ARLEN),
    .m_axi_bundle_1_ARSIZE(grp_conv2_fu_328_m_axi_bundle_1_ARSIZE),
    .m_axi_bundle_1_ARBURST(grp_conv2_fu_328_m_axi_bundle_1_ARBURST),
    .m_axi_bundle_1_ARLOCK(grp_conv2_fu_328_m_axi_bundle_1_ARLOCK),
    .m_axi_bundle_1_ARCACHE(grp_conv2_fu_328_m_axi_bundle_1_ARCACHE),
    .m_axi_bundle_1_ARPROT(grp_conv2_fu_328_m_axi_bundle_1_ARPROT),
    .m_axi_bundle_1_ARQOS(grp_conv2_fu_328_m_axi_bundle_1_ARQOS),
    .m_axi_bundle_1_ARREGION(grp_conv2_fu_328_m_axi_bundle_1_ARREGION),
    .m_axi_bundle_1_ARUSER(grp_conv2_fu_328_m_axi_bundle_1_ARUSER),
    .m_axi_bundle_1_RVALID(1'b0),
    .m_axi_bundle_1_RREADY(grp_conv2_fu_328_m_axi_bundle_1_RREADY),
    .m_axi_bundle_1_RDATA(16'd0),
    .m_axi_bundle_1_RLAST(1'b0),
    .m_axi_bundle_1_RID(1'd0),
    .m_axi_bundle_1_RFIFONUM(14'd0),
    .m_axi_bundle_1_RUSER(1'd0),
    .m_axi_bundle_1_RRESP(2'd0),
    .m_axi_bundle_1_BVALID(bundle_1_BVALID),
    .m_axi_bundle_1_BREADY(grp_conv2_fu_328_m_axi_bundle_1_BREADY),
    .m_axi_bundle_1_BRESP(2'd0),
    .m_axi_bundle_1_BID(1'd0),
    .m_axi_bundle_1_BUSER(1'd0),
    .output_ftmap(conv2_output_ftmap_read_reg_477)
);

srcnn_conv3 grp_conv3_fu_436(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv3_fu_436_ap_start),
    .ap_done(grp_conv3_fu_436_ap_done),
    .ap_idle(grp_conv3_fu_436_ap_idle),
    .ap_ready(grp_conv3_fu_436_ap_ready),
    .m_axi_bundle_1_AWVALID(grp_conv3_fu_436_m_axi_bundle_1_AWVALID),
    .m_axi_bundle_1_AWREADY(1'b0),
    .m_axi_bundle_1_AWADDR(grp_conv3_fu_436_m_axi_bundle_1_AWADDR),
    .m_axi_bundle_1_AWID(grp_conv3_fu_436_m_axi_bundle_1_AWID),
    .m_axi_bundle_1_AWLEN(grp_conv3_fu_436_m_axi_bundle_1_AWLEN),
    .m_axi_bundle_1_AWSIZE(grp_conv3_fu_436_m_axi_bundle_1_AWSIZE),
    .m_axi_bundle_1_AWBURST(grp_conv3_fu_436_m_axi_bundle_1_AWBURST),
    .m_axi_bundle_1_AWLOCK(grp_conv3_fu_436_m_axi_bundle_1_AWLOCK),
    .m_axi_bundle_1_AWCACHE(grp_conv3_fu_436_m_axi_bundle_1_AWCACHE),
    .m_axi_bundle_1_AWPROT(grp_conv3_fu_436_m_axi_bundle_1_AWPROT),
    .m_axi_bundle_1_AWQOS(grp_conv3_fu_436_m_axi_bundle_1_AWQOS),
    .m_axi_bundle_1_AWREGION(grp_conv3_fu_436_m_axi_bundle_1_AWREGION),
    .m_axi_bundle_1_AWUSER(grp_conv3_fu_436_m_axi_bundle_1_AWUSER),
    .m_axi_bundle_1_WVALID(grp_conv3_fu_436_m_axi_bundle_1_WVALID),
    .m_axi_bundle_1_WREADY(1'b0),
    .m_axi_bundle_1_WDATA(grp_conv3_fu_436_m_axi_bundle_1_WDATA),
    .m_axi_bundle_1_WSTRB(grp_conv3_fu_436_m_axi_bundle_1_WSTRB),
    .m_axi_bundle_1_WLAST(grp_conv3_fu_436_m_axi_bundle_1_WLAST),
    .m_axi_bundle_1_WID(grp_conv3_fu_436_m_axi_bundle_1_WID),
    .m_axi_bundle_1_WUSER(grp_conv3_fu_436_m_axi_bundle_1_WUSER),
    .m_axi_bundle_1_ARVALID(grp_conv3_fu_436_m_axi_bundle_1_ARVALID),
    .m_axi_bundle_1_ARREADY(bundle_1_ARREADY),
    .m_axi_bundle_1_ARADDR(grp_conv3_fu_436_m_axi_bundle_1_ARADDR),
    .m_axi_bundle_1_ARID(grp_conv3_fu_436_m_axi_bundle_1_ARID),
    .m_axi_bundle_1_ARLEN(grp_conv3_fu_436_m_axi_bundle_1_ARLEN),
    .m_axi_bundle_1_ARSIZE(grp_conv3_fu_436_m_axi_bundle_1_ARSIZE),
    .m_axi_bundle_1_ARBURST(grp_conv3_fu_436_m_axi_bundle_1_ARBURST),
    .m_axi_bundle_1_ARLOCK(grp_conv3_fu_436_m_axi_bundle_1_ARLOCK),
    .m_axi_bundle_1_ARCACHE(grp_conv3_fu_436_m_axi_bundle_1_ARCACHE),
    .m_axi_bundle_1_ARPROT(grp_conv3_fu_436_m_axi_bundle_1_ARPROT),
    .m_axi_bundle_1_ARQOS(grp_conv3_fu_436_m_axi_bundle_1_ARQOS),
    .m_axi_bundle_1_ARREGION(grp_conv3_fu_436_m_axi_bundle_1_ARREGION),
    .m_axi_bundle_1_ARUSER(grp_conv3_fu_436_m_axi_bundle_1_ARUSER),
    .m_axi_bundle_1_RVALID(bundle_1_RVALID),
    .m_axi_bundle_1_RREADY(grp_conv3_fu_436_m_axi_bundle_1_RREADY),
    .m_axi_bundle_1_RDATA(bundle_1_RDATA),
    .m_axi_bundle_1_RLAST(1'b0),
    .m_axi_bundle_1_RID(1'd0),
    .m_axi_bundle_1_RFIFONUM(bundle_1_RFIFONUM),
    .m_axi_bundle_1_RUSER(1'd0),
    .m_axi_bundle_1_RRESP(2'd0),
    .m_axi_bundle_1_BVALID(1'b0),
    .m_axi_bundle_1_BREADY(grp_conv3_fu_436_m_axi_bundle_1_BREADY),
    .m_axi_bundle_1_BRESP(2'd0),
    .m_axi_bundle_1_BID(1'd0),
    .m_axi_bundle_1_BUSER(1'd0),
    .input_ftmap(conv2_output_ftmap_read_reg_477),
    .m_axi_weights_AWVALID(grp_conv3_fu_436_m_axi_weights_AWVALID),
    .m_axi_weights_AWREADY(1'b0),
    .m_axi_weights_AWADDR(grp_conv3_fu_436_m_axi_weights_AWADDR),
    .m_axi_weights_AWID(grp_conv3_fu_436_m_axi_weights_AWID),
    .m_axi_weights_AWLEN(grp_conv3_fu_436_m_axi_weights_AWLEN),
    .m_axi_weights_AWSIZE(grp_conv3_fu_436_m_axi_weights_AWSIZE),
    .m_axi_weights_AWBURST(grp_conv3_fu_436_m_axi_weights_AWBURST),
    .m_axi_weights_AWLOCK(grp_conv3_fu_436_m_axi_weights_AWLOCK),
    .m_axi_weights_AWCACHE(grp_conv3_fu_436_m_axi_weights_AWCACHE),
    .m_axi_weights_AWPROT(grp_conv3_fu_436_m_axi_weights_AWPROT),
    .m_axi_weights_AWQOS(grp_conv3_fu_436_m_axi_weights_AWQOS),
    .m_axi_weights_AWREGION(grp_conv3_fu_436_m_axi_weights_AWREGION),
    .m_axi_weights_AWUSER(grp_conv3_fu_436_m_axi_weights_AWUSER),
    .m_axi_weights_WVALID(grp_conv3_fu_436_m_axi_weights_WVALID),
    .m_axi_weights_WREADY(1'b0),
    .m_axi_weights_WDATA(grp_conv3_fu_436_m_axi_weights_WDATA),
    .m_axi_weights_WSTRB(grp_conv3_fu_436_m_axi_weights_WSTRB),
    .m_axi_weights_WLAST(grp_conv3_fu_436_m_axi_weights_WLAST),
    .m_axi_weights_WID(grp_conv3_fu_436_m_axi_weights_WID),
    .m_axi_weights_WUSER(grp_conv3_fu_436_m_axi_weights_WUSER),
    .m_axi_weights_ARVALID(grp_conv3_fu_436_m_axi_weights_ARVALID),
    .m_axi_weights_ARREADY(weights_ARREADY),
    .m_axi_weights_ARADDR(grp_conv3_fu_436_m_axi_weights_ARADDR),
    .m_axi_weights_ARID(grp_conv3_fu_436_m_axi_weights_ARID),
    .m_axi_weights_ARLEN(grp_conv3_fu_436_m_axi_weights_ARLEN),
    .m_axi_weights_ARSIZE(grp_conv3_fu_436_m_axi_weights_ARSIZE),
    .m_axi_weights_ARBURST(grp_conv3_fu_436_m_axi_weights_ARBURST),
    .m_axi_weights_ARLOCK(grp_conv3_fu_436_m_axi_weights_ARLOCK),
    .m_axi_weights_ARCACHE(grp_conv3_fu_436_m_axi_weights_ARCACHE),
    .m_axi_weights_ARPROT(grp_conv3_fu_436_m_axi_weights_ARPROT),
    .m_axi_weights_ARQOS(grp_conv3_fu_436_m_axi_weights_ARQOS),
    .m_axi_weights_ARREGION(grp_conv3_fu_436_m_axi_weights_ARREGION),
    .m_axi_weights_ARUSER(grp_conv3_fu_436_m_axi_weights_ARUSER),
    .m_axi_weights_RVALID(weights_RVALID),
    .m_axi_weights_RREADY(grp_conv3_fu_436_m_axi_weights_RREADY),
    .m_axi_weights_RDATA(weights_RDATA),
    .m_axi_weights_RLAST(1'b0),
    .m_axi_weights_RID(1'd0),
    .m_axi_weights_RFIFONUM(weights_RFIFONUM),
    .m_axi_weights_RUSER(1'd0),
    .m_axi_weights_RRESP(2'd0),
    .m_axi_weights_BVALID(1'b0),
    .m_axi_weights_BREADY(grp_conv3_fu_436_m_axi_weights_BREADY),
    .m_axi_weights_BRESP(2'd0),
    .m_axi_weights_BID(1'd0),
    .m_axi_weights_BUSER(1'd0),
    .conv3_weights(conv3_weights_read_reg_472),
    .conv3_biases_0_0_val(biases_addr_read_reg_520),
    .m_axi_bundle_2_AWVALID(grp_conv3_fu_436_m_axi_bundle_2_AWVALID),
    .m_axi_bundle_2_AWREADY(bundle_2_AWREADY),
    .m_axi_bundle_2_AWADDR(grp_conv3_fu_436_m_axi_bundle_2_AWADDR),
    .m_axi_bundle_2_AWID(grp_conv3_fu_436_m_axi_bundle_2_AWID),
    .m_axi_bundle_2_AWLEN(grp_conv3_fu_436_m_axi_bundle_2_AWLEN),
    .m_axi_bundle_2_AWSIZE(grp_conv3_fu_436_m_axi_bundle_2_AWSIZE),
    .m_axi_bundle_2_AWBURST(grp_conv3_fu_436_m_axi_bundle_2_AWBURST),
    .m_axi_bundle_2_AWLOCK(grp_conv3_fu_436_m_axi_bundle_2_AWLOCK),
    .m_axi_bundle_2_AWCACHE(grp_conv3_fu_436_m_axi_bundle_2_AWCACHE),
    .m_axi_bundle_2_AWPROT(grp_conv3_fu_436_m_axi_bundle_2_AWPROT),
    .m_axi_bundle_2_AWQOS(grp_conv3_fu_436_m_axi_bundle_2_AWQOS),
    .m_axi_bundle_2_AWREGION(grp_conv3_fu_436_m_axi_bundle_2_AWREGION),
    .m_axi_bundle_2_AWUSER(grp_conv3_fu_436_m_axi_bundle_2_AWUSER),
    .m_axi_bundle_2_WVALID(grp_conv3_fu_436_m_axi_bundle_2_WVALID),
    .m_axi_bundle_2_WREADY(bundle_2_WREADY),
    .m_axi_bundle_2_WDATA(grp_conv3_fu_436_m_axi_bundle_2_WDATA),
    .m_axi_bundle_2_WSTRB(grp_conv3_fu_436_m_axi_bundle_2_WSTRB),
    .m_axi_bundle_2_WLAST(grp_conv3_fu_436_m_axi_bundle_2_WLAST),
    .m_axi_bundle_2_WID(grp_conv3_fu_436_m_axi_bundle_2_WID),
    .m_axi_bundle_2_WUSER(grp_conv3_fu_436_m_axi_bundle_2_WUSER),
    .m_axi_bundle_2_ARVALID(grp_conv3_fu_436_m_axi_bundle_2_ARVALID),
    .m_axi_bundle_2_ARREADY(1'b0),
    .m_axi_bundle_2_ARADDR(grp_conv3_fu_436_m_axi_bundle_2_ARADDR),
    .m_axi_bundle_2_ARID(grp_conv3_fu_436_m_axi_bundle_2_ARID),
    .m_axi_bundle_2_ARLEN(grp_conv3_fu_436_m_axi_bundle_2_ARLEN),
    .m_axi_bundle_2_ARSIZE(grp_conv3_fu_436_m_axi_bundle_2_ARSIZE),
    .m_axi_bundle_2_ARBURST(grp_conv3_fu_436_m_axi_bundle_2_ARBURST),
    .m_axi_bundle_2_ARLOCK(grp_conv3_fu_436_m_axi_bundle_2_ARLOCK),
    .m_axi_bundle_2_ARCACHE(grp_conv3_fu_436_m_axi_bundle_2_ARCACHE),
    .m_axi_bundle_2_ARPROT(grp_conv3_fu_436_m_axi_bundle_2_ARPROT),
    .m_axi_bundle_2_ARQOS(grp_conv3_fu_436_m_axi_bundle_2_ARQOS),
    .m_axi_bundle_2_ARREGION(grp_conv3_fu_436_m_axi_bundle_2_ARREGION),
    .m_axi_bundle_2_ARUSER(grp_conv3_fu_436_m_axi_bundle_2_ARUSER),
    .m_axi_bundle_2_RVALID(1'b0),
    .m_axi_bundle_2_RREADY(grp_conv3_fu_436_m_axi_bundle_2_RREADY),
    .m_axi_bundle_2_RDATA(16'd0),
    .m_axi_bundle_2_RLAST(1'b0),
    .m_axi_bundle_2_RID(1'd0),
    .m_axi_bundle_2_RFIFONUM(14'd0),
    .m_axi_bundle_2_RUSER(1'd0),
    .m_axi_bundle_2_RRESP(2'd0),
    .m_axi_bundle_2_BVALID(bundle_2_BVALID),
    .m_axi_bundle_2_BREADY(grp_conv3_fu_436_m_axi_bundle_2_BREADY),
    .m_axi_bundle_2_BRESP(2'd0),
    .m_axi_bundle_2_BID(1'd0),
    .m_axi_bundle_2_BUSER(1'd0),
    .output_ftmap(output_ftmap_read_reg_467)
);

srcnn_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input_ftmap(input_ftmap),
    .conv1_weights(conv1_weights),
    .conv1_biases(conv1_biases),
    .conv1_output_ftmap(conv1_output_ftmap),
    .conv2_weights(conv2_weights),
    .conv2_biases(conv2_biases),
    .conv2_output_ftmap(conv2_output_ftmap),
    .conv3_weights(conv3_weights),
    .conv3_biases(conv3_biases),
    .output_ftmap(output_ftmap),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

srcnn_biases_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BIASES_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BIASES_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BIASES_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BIASES_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BIASES_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BIASES_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BIASES_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BIASES_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_BIASES_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BIASES_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BIASES_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 11 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
biases_m_axi_U(
    .AWVALID(m_axi_biases_AWVALID),
    .AWREADY(m_axi_biases_AWREADY),
    .AWADDR(m_axi_biases_AWADDR),
    .AWID(m_axi_biases_AWID),
    .AWLEN(m_axi_biases_AWLEN),
    .AWSIZE(m_axi_biases_AWSIZE),
    .AWBURST(m_axi_biases_AWBURST),
    .AWLOCK(m_axi_biases_AWLOCK),
    .AWCACHE(m_axi_biases_AWCACHE),
    .AWPROT(m_axi_biases_AWPROT),
    .AWQOS(m_axi_biases_AWQOS),
    .AWREGION(m_axi_biases_AWREGION),
    .AWUSER(m_axi_biases_AWUSER),
    .WVALID(m_axi_biases_WVALID),
    .WREADY(m_axi_biases_WREADY),
    .WDATA(m_axi_biases_WDATA),
    .WSTRB(m_axi_biases_WSTRB),
    .WLAST(m_axi_biases_WLAST),
    .WID(m_axi_biases_WID),
    .WUSER(m_axi_biases_WUSER),
    .ARVALID(m_axi_biases_ARVALID),
    .ARREADY(m_axi_biases_ARREADY),
    .ARADDR(m_axi_biases_ARADDR),
    .ARID(m_axi_biases_ARID),
    .ARLEN(m_axi_biases_ARLEN),
    .ARSIZE(m_axi_biases_ARSIZE),
    .ARBURST(m_axi_biases_ARBURST),
    .ARLOCK(m_axi_biases_ARLOCK),
    .ARCACHE(m_axi_biases_ARCACHE),
    .ARPROT(m_axi_biases_ARPROT),
    .ARQOS(m_axi_biases_ARQOS),
    .ARREGION(m_axi_biases_ARREGION),
    .ARUSER(m_axi_biases_ARUSER),
    .RVALID(m_axi_biases_RVALID),
    .RREADY(m_axi_biases_RREADY),
    .RDATA(m_axi_biases_RDATA),
    .RLAST(m_axi_biases_RLAST),
    .RID(m_axi_biases_RID),
    .RUSER(m_axi_biases_RUSER),
    .RRESP(m_axi_biases_RRESP),
    .BVALID(m_axi_biases_BVALID),
    .BREADY(m_axi_biases_BREADY),
    .BRESP(m_axi_biases_BRESP),
    .BID(m_axi_biases_BID),
    .BUSER(m_axi_biases_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(biases_ARVALID),
    .I_ARREADY(biases_ARREADY),
    .I_ARADDR(biases_ARADDR),
    .I_ARLEN(biases_ARLEN),
    .I_RVALID(biases_RVALID),
    .I_RREADY(biases_RREADY),
    .I_RDATA(biases_RDATA),
    .I_RFIFONUM(biases_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(biases_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(biases_WREADY),
    .I_WDATA(8'd0),
    .I_WSTRB(1'd0),
    .I_BVALID(biases_BVALID),
    .I_BREADY(1'b0)
);

srcnn_bundle_1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 256 ),
    .MAX_WRITE_BURST_LENGTH( 256 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BUNDLE_1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BUNDLE_1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BUNDLE_1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BUNDLE_1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BUNDLE_1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BUNDLE_1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BUNDLE_1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BUNDLE_1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_BUNDLE_1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BUNDLE_1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BUNDLE_1_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 14 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
bundle_1_m_axi_U(
    .AWVALID(m_axi_bundle_1_AWVALID),
    .AWREADY(m_axi_bundle_1_AWREADY),
    .AWADDR(m_axi_bundle_1_AWADDR),
    .AWID(m_axi_bundle_1_AWID),
    .AWLEN(m_axi_bundle_1_AWLEN),
    .AWSIZE(m_axi_bundle_1_AWSIZE),
    .AWBURST(m_axi_bundle_1_AWBURST),
    .AWLOCK(m_axi_bundle_1_AWLOCK),
    .AWCACHE(m_axi_bundle_1_AWCACHE),
    .AWPROT(m_axi_bundle_1_AWPROT),
    .AWQOS(m_axi_bundle_1_AWQOS),
    .AWREGION(m_axi_bundle_1_AWREGION),
    .AWUSER(m_axi_bundle_1_AWUSER),
    .WVALID(m_axi_bundle_1_WVALID),
    .WREADY(m_axi_bundle_1_WREADY),
    .WDATA(m_axi_bundle_1_WDATA),
    .WSTRB(m_axi_bundle_1_WSTRB),
    .WLAST(m_axi_bundle_1_WLAST),
    .WID(m_axi_bundle_1_WID),
    .WUSER(m_axi_bundle_1_WUSER),
    .ARVALID(m_axi_bundle_1_ARVALID),
    .ARREADY(m_axi_bundle_1_ARREADY),
    .ARADDR(m_axi_bundle_1_ARADDR),
    .ARID(m_axi_bundle_1_ARID),
    .ARLEN(m_axi_bundle_1_ARLEN),
    .ARSIZE(m_axi_bundle_1_ARSIZE),
    .ARBURST(m_axi_bundle_1_ARBURST),
    .ARLOCK(m_axi_bundle_1_ARLOCK),
    .ARCACHE(m_axi_bundle_1_ARCACHE),
    .ARPROT(m_axi_bundle_1_ARPROT),
    .ARQOS(m_axi_bundle_1_ARQOS),
    .ARREGION(m_axi_bundle_1_ARREGION),
    .ARUSER(m_axi_bundle_1_ARUSER),
    .RVALID(m_axi_bundle_1_RVALID),
    .RREADY(m_axi_bundle_1_RREADY),
    .RDATA(m_axi_bundle_1_RDATA),
    .RLAST(m_axi_bundle_1_RLAST),
    .RID(m_axi_bundle_1_RID),
    .RUSER(m_axi_bundle_1_RUSER),
    .RRESP(m_axi_bundle_1_RRESP),
    .BVALID(m_axi_bundle_1_BVALID),
    .BREADY(m_axi_bundle_1_BREADY),
    .BRESP(m_axi_bundle_1_BRESP),
    .BID(m_axi_bundle_1_BID),
    .BUSER(m_axi_bundle_1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(bundle_1_ARVALID),
    .I_ARREADY(bundle_1_ARREADY),
    .I_ARADDR(bundle_1_ARADDR),
    .I_ARLEN(bundle_1_ARLEN),
    .I_RVALID(bundle_1_RVALID),
    .I_RREADY(bundle_1_RREADY),
    .I_RDATA(bundle_1_RDATA),
    .I_RFIFONUM(bundle_1_RFIFONUM),
    .I_AWVALID(bundle_1_AWVALID),
    .I_AWREADY(bundle_1_AWREADY),
    .I_AWADDR(grp_conv2_fu_328_m_axi_bundle_1_AWADDR),
    .I_AWLEN(grp_conv2_fu_328_m_axi_bundle_1_AWLEN),
    .I_WVALID(bundle_1_WVALID),
    .I_WREADY(bundle_1_WREADY),
    .I_WDATA(grp_conv2_fu_328_m_axi_bundle_1_WDATA),
    .I_WSTRB(grp_conv2_fu_328_m_axi_bundle_1_WSTRB),
    .I_BVALID(bundle_1_BVALID),
    .I_BREADY(bundle_1_BREADY)
);

srcnn_bundle_2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 256 ),
    .MAX_WRITE_BURST_LENGTH( 256 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BUNDLE_2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BUNDLE_2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BUNDLE_2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BUNDLE_2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BUNDLE_2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BUNDLE_2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BUNDLE_2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BUNDLE_2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_BUNDLE_2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BUNDLE_2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BUNDLE_2_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 14 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
bundle_2_m_axi_U(
    .AWVALID(m_axi_bundle_2_AWVALID),
    .AWREADY(m_axi_bundle_2_AWREADY),
    .AWADDR(m_axi_bundle_2_AWADDR),
    .AWID(m_axi_bundle_2_AWID),
    .AWLEN(m_axi_bundle_2_AWLEN),
    .AWSIZE(m_axi_bundle_2_AWSIZE),
    .AWBURST(m_axi_bundle_2_AWBURST),
    .AWLOCK(m_axi_bundle_2_AWLOCK),
    .AWCACHE(m_axi_bundle_2_AWCACHE),
    .AWPROT(m_axi_bundle_2_AWPROT),
    .AWQOS(m_axi_bundle_2_AWQOS),
    .AWREGION(m_axi_bundle_2_AWREGION),
    .AWUSER(m_axi_bundle_2_AWUSER),
    .WVALID(m_axi_bundle_2_WVALID),
    .WREADY(m_axi_bundle_2_WREADY),
    .WDATA(m_axi_bundle_2_WDATA),
    .WSTRB(m_axi_bundle_2_WSTRB),
    .WLAST(m_axi_bundle_2_WLAST),
    .WID(m_axi_bundle_2_WID),
    .WUSER(m_axi_bundle_2_WUSER),
    .ARVALID(m_axi_bundle_2_ARVALID),
    .ARREADY(m_axi_bundle_2_ARREADY),
    .ARADDR(m_axi_bundle_2_ARADDR),
    .ARID(m_axi_bundle_2_ARID),
    .ARLEN(m_axi_bundle_2_ARLEN),
    .ARSIZE(m_axi_bundle_2_ARSIZE),
    .ARBURST(m_axi_bundle_2_ARBURST),
    .ARLOCK(m_axi_bundle_2_ARLOCK),
    .ARCACHE(m_axi_bundle_2_ARCACHE),
    .ARPROT(m_axi_bundle_2_ARPROT),
    .ARQOS(m_axi_bundle_2_ARQOS),
    .ARREGION(m_axi_bundle_2_ARREGION),
    .ARUSER(m_axi_bundle_2_ARUSER),
    .RVALID(m_axi_bundle_2_RVALID),
    .RREADY(m_axi_bundle_2_RREADY),
    .RDATA(m_axi_bundle_2_RDATA),
    .RLAST(m_axi_bundle_2_RLAST),
    .RID(m_axi_bundle_2_RID),
    .RUSER(m_axi_bundle_2_RUSER),
    .RRESP(m_axi_bundle_2_RRESP),
    .BVALID(m_axi_bundle_2_BVALID),
    .BREADY(m_axi_bundle_2_BREADY),
    .BRESP(m_axi_bundle_2_BRESP),
    .BID(m_axi_bundle_2_BID),
    .BUSER(m_axi_bundle_2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(bundle_2_ARVALID),
    .I_ARREADY(bundle_2_ARREADY),
    .I_ARADDR(grp_conv2_fu_328_m_axi_bundle_2_ARADDR),
    .I_ARLEN(grp_conv2_fu_328_m_axi_bundle_2_ARLEN),
    .I_RVALID(bundle_2_RVALID),
    .I_RREADY(bundle_2_RREADY),
    .I_RDATA(bundle_2_RDATA),
    .I_RFIFONUM(bundle_2_RFIFONUM),
    .I_AWVALID(bundle_2_AWVALID),
    .I_AWREADY(bundle_2_AWREADY),
    .I_AWADDR(bundle_2_AWADDR),
    .I_AWLEN(bundle_2_AWLEN),
    .I_WVALID(bundle_2_WVALID),
    .I_WREADY(bundle_2_WREADY),
    .I_WDATA(bundle_2_WDATA),
    .I_WSTRB(bundle_2_WSTRB),
    .I_BVALID(bundle_2_BVALID),
    .I_BREADY(bundle_2_BREADY)
);

srcnn_weights_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 5 ),
    .MAX_READ_BURST_LENGTH( 256 ),
    .MAX_WRITE_BURST_LENGTH( 256 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_WEIGHTS_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_WEIGHTS_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_WEIGHTS_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_WEIGHTS_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_WEIGHTS_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_WEIGHTS_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_WEIGHTS_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_WEIGHTS_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_WEIGHTS_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_WEIGHTS_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_WEIGHTS_CACHE_VALUE ),
    .USER_RFIFONUM_WIDTH( 14 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
weights_m_axi_U(
    .AWVALID(m_axi_weights_AWVALID),
    .AWREADY(m_axi_weights_AWREADY),
    .AWADDR(m_axi_weights_AWADDR),
    .AWID(m_axi_weights_AWID),
    .AWLEN(m_axi_weights_AWLEN),
    .AWSIZE(m_axi_weights_AWSIZE),
    .AWBURST(m_axi_weights_AWBURST),
    .AWLOCK(m_axi_weights_AWLOCK),
    .AWCACHE(m_axi_weights_AWCACHE),
    .AWPROT(m_axi_weights_AWPROT),
    .AWQOS(m_axi_weights_AWQOS),
    .AWREGION(m_axi_weights_AWREGION),
    .AWUSER(m_axi_weights_AWUSER),
    .WVALID(m_axi_weights_WVALID),
    .WREADY(m_axi_weights_WREADY),
    .WDATA(m_axi_weights_WDATA),
    .WSTRB(m_axi_weights_WSTRB),
    .WLAST(m_axi_weights_WLAST),
    .WID(m_axi_weights_WID),
    .WUSER(m_axi_weights_WUSER),
    .ARVALID(m_axi_weights_ARVALID),
    .ARREADY(m_axi_weights_ARREADY),
    .ARADDR(m_axi_weights_ARADDR),
    .ARID(m_axi_weights_ARID),
    .ARLEN(m_axi_weights_ARLEN),
    .ARSIZE(m_axi_weights_ARSIZE),
    .ARBURST(m_axi_weights_ARBURST),
    .ARLOCK(m_axi_weights_ARLOCK),
    .ARCACHE(m_axi_weights_ARCACHE),
    .ARPROT(m_axi_weights_ARPROT),
    .ARQOS(m_axi_weights_ARQOS),
    .ARREGION(m_axi_weights_ARREGION),
    .ARUSER(m_axi_weights_ARUSER),
    .RVALID(m_axi_weights_RVALID),
    .RREADY(m_axi_weights_RREADY),
    .RDATA(m_axi_weights_RDATA),
    .RLAST(m_axi_weights_RLAST),
    .RID(m_axi_weights_RID),
    .RUSER(m_axi_weights_RUSER),
    .RRESP(m_axi_weights_RRESP),
    .BVALID(m_axi_weights_BVALID),
    .BREADY(m_axi_weights_BREADY),
    .BRESP(m_axi_weights_BRESP),
    .BID(m_axi_weights_BID),
    .BUSER(m_axi_weights_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(weights_ARVALID),
    .I_ARREADY(weights_ARREADY),
    .I_ARADDR(weights_ARADDR),
    .I_ARLEN(weights_ARLEN),
    .I_RVALID(weights_RVALID),
    .I_RREADY(weights_RREADY),
    .I_RDATA(weights_RDATA),
    .I_RFIFONUM(weights_RFIFONUM),
    .I_AWVALID(1'b0),
    .I_AWREADY(weights_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWLEN(32'd0),
    .I_WVALID(1'b0),
    .I_WREADY(weights_WREADY),
    .I_WDATA(16'd0),
    .I_WSTRB(2'd0),
    .I_BVALID(weights_BVALID),
    .I_BREADY(1'b0)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv1_fu_292_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_conv1_fu_292_ap_start_reg <= 1'b1;
        end else if ((grp_conv1_fu_292_ap_ready == 1'b1)) begin
            grp_conv1_fu_292_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv2_fu_328_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_conv2_fu_328_ap_start_reg <= 1'b1;
        end else if ((grp_conv2_fu_328_ap_ready == 1'b1)) begin
            grp_conv2_fu_328_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv3_fu_436_ap_start_reg <= 1'b0;
    end else begin
        if (((biases_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_conv3_fu_436_ap_start_reg <= 1'b1;
        end else if ((grp_conv3_fu_436_ap_ready == 1'b1)) begin
            grp_conv3_fu_436_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        biases_addr_read_reg_520 <= biases_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        biases_addr_reg_514 <= conv3_biases;
        conv1_biases_read_reg_499 <= conv1_biases;
        conv1_output_ftmap_read_reg_493 <= conv1_output_ftmap;
        conv1_weights_read_reg_504 <= conv1_weights;
        conv2_biases_read_reg_483 <= conv2_biases;
        conv2_output_ftmap_read_reg_477 <= conv2_output_ftmap;
        conv2_weights_read_reg_488 <= conv2_weights;
        conv3_weights_read_reg_472 <= conv3_weights;
        input_ftmap_read_reg_509 <= input_ftmap;
        output_ftmap_read_reg_467 <= output_ftmap;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((biases_RVALID == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_conv3_fu_436_ap_done == 1'b0)) begin
        ap_ST_fsm_state14_blk = 1'b1;
    end else begin
        ap_ST_fsm_state14_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_conv1_fu_292_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_conv2_fu_328_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

always @ (*) begin
    if ((biases_ARREADY == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((grp_conv3_fu_436_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_conv3_fu_436_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((biases_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        biases_ARADDR = biases_addr_reg_514;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        biases_ARADDR = grp_conv2_fu_328_m_axi_biases_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        biases_ARADDR = grp_conv1_fu_292_m_axi_biases_ARADDR;
    end else begin
        biases_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((biases_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        biases_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        biases_ARLEN = grp_conv2_fu_328_m_axi_biases_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        biases_ARLEN = grp_conv1_fu_292_m_axi_biases_ARLEN;
    end else begin
        biases_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((biases_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        biases_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        biases_ARVALID = grp_conv2_fu_328_m_axi_biases_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        biases_ARVALID = grp_conv1_fu_292_m_axi_biases_ARVALID;
    end else begin
        biases_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((biases_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        biases_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        biases_RREADY = grp_conv2_fu_328_m_axi_biases_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        biases_RREADY = grp_conv1_fu_292_m_axi_biases_RREADY;
    end else begin
        biases_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        biases_blk_n_AR = m_axi_biases_ARREADY;
    end else begin
        biases_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        biases_blk_n_R = m_axi_biases_RVALID;
    end else begin
        biases_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_1_ARADDR = grp_conv3_fu_436_m_axi_bundle_1_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_1_ARADDR = grp_conv1_fu_292_m_axi_bundle_1_ARADDR;
    end else begin
        bundle_1_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_1_ARLEN = grp_conv3_fu_436_m_axi_bundle_1_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_1_ARLEN = grp_conv1_fu_292_m_axi_bundle_1_ARLEN;
    end else begin
        bundle_1_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_1_ARVALID = grp_conv3_fu_436_m_axi_bundle_1_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_1_ARVALID = grp_conv1_fu_292_m_axi_bundle_1_ARVALID;
    end else begin
        bundle_1_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        bundle_1_AWVALID = grp_conv2_fu_328_m_axi_bundle_1_AWVALID;
    end else begin
        bundle_1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        bundle_1_BREADY = grp_conv2_fu_328_m_axi_bundle_1_BREADY;
    end else begin
        bundle_1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_1_RREADY = grp_conv3_fu_436_m_axi_bundle_1_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_1_RREADY = grp_conv1_fu_292_m_axi_bundle_1_RREADY;
    end else begin
        bundle_1_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        bundle_1_WVALID = grp_conv2_fu_328_m_axi_bundle_1_WVALID;
    end else begin
        bundle_1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        bundle_2_ARVALID = grp_conv2_fu_328_m_axi_bundle_2_ARVALID;
    end else begin
        bundle_2_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_2_AWADDR = grp_conv3_fu_436_m_axi_bundle_2_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_2_AWADDR = grp_conv1_fu_292_m_axi_bundle_2_AWADDR;
    end else begin
        bundle_2_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_2_AWLEN = grp_conv3_fu_436_m_axi_bundle_2_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_2_AWLEN = grp_conv1_fu_292_m_axi_bundle_2_AWLEN;
    end else begin
        bundle_2_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_2_AWVALID = grp_conv3_fu_436_m_axi_bundle_2_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_2_AWVALID = grp_conv1_fu_292_m_axi_bundle_2_AWVALID;
    end else begin
        bundle_2_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_2_BREADY = grp_conv3_fu_436_m_axi_bundle_2_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_2_BREADY = grp_conv1_fu_292_m_axi_bundle_2_BREADY;
    end else begin
        bundle_2_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        bundle_2_RREADY = grp_conv2_fu_328_m_axi_bundle_2_RREADY;
    end else begin
        bundle_2_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_2_WDATA = grp_conv3_fu_436_m_axi_bundle_2_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_2_WDATA = grp_conv1_fu_292_m_axi_bundle_2_WDATA;
    end else begin
        bundle_2_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_2_WSTRB = grp_conv3_fu_436_m_axi_bundle_2_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_2_WSTRB = grp_conv1_fu_292_m_axi_bundle_2_WSTRB;
    end else begin
        bundle_2_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        bundle_2_WVALID = grp_conv3_fu_436_m_axi_bundle_2_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        bundle_2_WVALID = grp_conv1_fu_292_m_axi_bundle_2_WVALID;
    end else begin
        bundle_2_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        weights_ARADDR = grp_conv3_fu_436_m_axi_weights_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        weights_ARADDR = grp_conv2_fu_328_m_axi_weights_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        weights_ARADDR = grp_conv1_fu_292_m_axi_weights_ARADDR;
    end else begin
        weights_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        weights_ARLEN = grp_conv3_fu_436_m_axi_weights_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        weights_ARLEN = grp_conv2_fu_328_m_axi_weights_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        weights_ARLEN = grp_conv1_fu_292_m_axi_weights_ARLEN;
    end else begin
        weights_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        weights_ARVALID = grp_conv3_fu_436_m_axi_weights_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        weights_ARVALID = grp_conv2_fu_328_m_axi_weights_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        weights_ARVALID = grp_conv1_fu_292_m_axi_weights_ARVALID;
    end else begin
        weights_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state14))) begin
        weights_RREADY = grp_conv3_fu_436_m_axi_weights_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        weights_RREADY = grp_conv2_fu_328_m_axi_weights_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state1) | (1'b1 == ap_CS_fsm_state2))) begin
        weights_RREADY = grp_conv1_fu_292_m_axi_weights_RREADY;
    end else begin
        weights_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_conv1_fu_292_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_conv2_fu_328_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((biases_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((biases_RVALID == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_conv3_fu_436_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_conv1_fu_292_ap_start = grp_conv1_fu_292_ap_start_reg;

assign grp_conv2_fu_328_ap_start = grp_conv2_fu_328_ap_start_reg;

assign grp_conv3_fu_436_ap_start = grp_conv3_fu_436_ap_start_reg;

endmodule //srcnn
